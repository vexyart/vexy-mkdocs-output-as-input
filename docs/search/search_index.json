{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"MkDocs Output as Input Plugin","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#vexy-mkdocs-output-as-input","title":"vexy-mkdocs-output-as-input","text":"<p>A MkDocs plugin that captures HTML output and creates \"cousin\" Markdown files with original frontmatter and extracted HTML content.</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#features","title":"Features","text":"<p>This plugin enables powerful post-processing workflows by:</p> <ol> <li>\u2705 Preserving your original Markdown structure and frontmatter</li> <li>\u2705 Capturing the fully-rendered HTML output from MkDocs</li> <li>\u2705 Creating new Markdown files that combine original metadata with processed HTML</li> <li>\u2705 Enabling further processing by other static site generators</li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#installation","title":"Installation","text":"<p>Install from PyPI:</p> <pre><code>uv pip install --system --upgrade vexy-mkdocs-output-as-input\n</code></pre> <p>Or install from source:</p> <pre><code>pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#quick-start","title":"Quick Start","text":"<p>Add the plugin to your <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - search  # Other plugins\n  - output-as-input\n</code></pre> <p>Build your site:</p> <pre><code>mkdocs build\n</code></pre> <p>Find your processed files in the <code>stage/</code> directory (relative to your MkDocs project root).</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#configuration","title":"Configuration","text":"<p>All configuration options with their defaults:</p> <pre><code>plugins:\n  - output-as-input:\n      stage_dir: stage          # Output directory name (default: 'stage')\n      html_element: main        # HTML element to extract (default: 'main')\n      target_tag: article       # Tag to use in output (default: 'article')\n      verbose: false            # Enable verbose logging (default: false)\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#options-explained","title":"Options Explained","text":"Option Type Default Description <code>stage_dir</code> string <code>\"stage\"</code> Directory name for output files (relative to project root) <code>html_element</code> string <code>\"main\"</code> CSS selector for the HTML element to extract <code>target_tag</code> string <code>\"article\"</code> HTML tag to use in the output (replaces extracted element's tag) <code>verbose</code> boolean <code>false</code> Enable detailed logging for debugging","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#how-it-works","title":"How It Works","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#input-process-output","title":"Input \u2192 Process \u2192 Output","text":"<ol> <li> <p>Input: Your source Markdown with frontmatter    <pre><code>---\ntitle: My Page\nauthor: Jane Doe\n---\n\n# My Page\n\nThis is my content with **markdown**.\n</code></pre></p> </li> <li> <p>MkDocs Processing: Renders to HTML as usual    <pre><code>&lt;main class=\"md-content\"&gt;\n  &lt;h1&gt;My Page&lt;/h1&gt;\n  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;\n&lt;/main&gt;\n</code></pre></p> </li> <li> <p>Output: Cousin file with preserved frontmatter + extracted HTML    <pre><code>---\ntitle: My Page\nauthor: Jane Doe\n---\n\n&lt;article class=\"md-content\"&gt;\n  &lt;h1&gt;My Page&lt;/h1&gt;\n  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;\n&lt;/article&gt;\n</code></pre></p> </li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#use-cases","title":"Use Cases","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#multi-stage-documentation-pipeline","title":"\ud83d\udd04 Multi-Stage Documentation Pipeline","text":"<p>Process documentation through MkDocs first, then feed to another SSG:</p> <pre><code># mkdocs.yml\nplugins:\n  - output-as-input:\n      stage_dir: hugo/content\n\n# Then run:\n# mkdocs build &amp;&amp; hugo build\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#content-extraction","title":"\ud83d\udcdd Content Extraction","text":"<p>Extract just the article content without theme wrapper:</p> <pre><code>plugins:\n  - output-as-input:\n      html_element: article\n      target_tag: div\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#custom-post-processing","title":"\ud83c\udfa8 Custom Post-Processing","text":"<p>Preserve MkDocs rendering while preparing for custom templates:</p> <pre><code>plugins:\n  - output-as-input:\n      stage_dir: _includes\n      html_element: main\n      target_tag: section\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#examples","title":"Examples","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#basic-example","title":"Basic Example","text":"<pre><code># mkdocs.yml\nsite_name: My Documentation\nplugins:\n  - output-as-input\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#advanced-example","title":"Advanced Example","text":"<pre><code># mkdocs.yml\nsite_name: My Documentation\ntheme:\n  name: material\n\nplugins:\n  - search\n  - output-as-input:\n      stage_dir: processed\n      html_element: article.md-content__inner\n      target_tag: main\n      verbose: true\n\n# Process specific content area from Material theme\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#integration-example","title":"Integration Example","text":"<p>Using with other tools in a documentation pipeline:</p> <pre><code>#!/bin/bash\n# build.sh\n\n# Stage 1: Build with MkDocs + plugins\nmkdocs build\n\n# Stage 2: Process staged output\npython post_process.py stage/\n\n# Stage 3: Build final site\nhugo --contentDir=stage/\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#development","title":"Development","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#setup-development-environment","title":"Setup Development Environment","text":"<pre><code># Clone the repository\ngit clone https://github.com/vexyart/vexy-mkdocs-output-as-input\ncd vexy-mkdocs-output-as-input\n\n# Create virtual environment\npython -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n\n# Install in development mode\npip install -e .[dev]\n\n# Install pre-commit hooks\npre-commit install\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#running-tests","title":"Running Tests","text":"<pre><code># Run all tests\npytest\n\n# Run with coverage\npytest --cov=mkdocs_output_as_input --cov-report=html\n\n# Run specific test\npytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#code-quality","title":"Code Quality","text":"<pre><code># Format code\nblack src tests\n\n# Lint code\nruff check src tests\n\n# Type check\nmypy src\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.</p> <ol> <li>Fork the repository</li> <li>Create your feature branch (<code>git checkout -b feature/AmazingFeature</code>)</li> <li>Commit your changes (<code>git commit -m 'Add some AmazingFeature'</code>)</li> <li>Push to the branch (<code>git push origin feature/AmazingFeature</code>)</li> <li>Open a Pull Request</li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#support","title":"Support","text":"<ul> <li>\ud83d\udce7 Email: you@example.com</li> <li>\ud83d\udc1b Issues: GitHub Issues</li> <li>\ud83d\udcac Discussions: GitHub Discussions</li> </ul>","tags":["mkdocs","plugin","documentation","pipeline"]}]}