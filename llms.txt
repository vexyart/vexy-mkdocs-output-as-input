Project Structure:
📁 vexy-mkdocs-output-as-input
├── 📁 .github
│   └── 📁 workflows
│       ├── 📄 ci.yml
│       └── 📄 release.yml
├── 📁 docs
│   ├── 📁 assets
│   │   ├── 📁 images
│   │   ├── 📁 javascripts
│   │   │   ├── 📁 lunr
│   │   │   │   ├── 📁 min
│   │   │   │   │   └── ... (depth limit reached)
│   │   │   │   ├── 📄 tinyseg.js
│   │   │   │   └── 📄 wordcut.js
│   │   │   ├── 📁 workers
│   │   │   │   └── 📄 search.ad38c271.min.js
│   │   │   └── 📄 bundle.5c86578b.min.js
│   │   └── 📁 stylesheets
│   │       ├── 📄 main.8cce3a28.min.css
│   │       └── 📄 palette.ab4e12ef.min.css
│   ├── 📁 search
│   │   └── 📄 search_index.json
│   ├── 📄 404.html
│   ├── 📄 index.html
│   ├── 📄 README.md
│   └── 📄 sitemap.xml
├── 📁 src
│   └── 📁 mkdocs_output_as_input
│       ├── 📄 __init__.py
│       ├── 📄 cli.py
│       └── 📄 plugin.py
├── 📁 stage
│   └── 📄 README.md
├── 📁 tests
│   ├── 📄 test_cli.py
│   └── 📄 test_plugin.py
├── 📄 .gitignore
├── 📄 AGENTS.md
├── 📄 build_docs.py
├── 📄 CHANGELOG.md
├── 📄 CLAUDE.md
├── 📄 GEMINI.md
├── 📄 LICENSE
├── 📄 llms.txt
├── 📄 mkdocs.yml
├── 📄 pyproject.toml
├── 📄 README.md
└── 📄 TODO.md


<documents>
<document index="1">
<source>.github/workflows/ci.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run pre-commit
        if: matrix.python-version == '3.11'
        run: pre-commit run --all-files

      - name: Run tests
        run: |
          pytest -v --cov=mkdocs_output_as_input --cov-report=xml --cov-report=term

      - name: Upload coverage
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run ruff
        run: ruff check --output-format=github .

      - name: Run ruff format
        run: ruff format --check --diff .

      - name: Run mypy
        run: mypy src
</document_content>
</document>

<document index="2">
<source>.github/workflows/release.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write  # Required for PyPI trusted publishing

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mkdocs-output-as-input
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # Trusted publishing configured in PyPI project settings

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Extract changelog section
        id: changelog
        run: |
          version=${GITHUB_REF#refs/tags/v}
          awk "/## \[$version\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.changelog.outputs.version }}
          body_path: release_notes.md
          files: dist/*
          draft: false
          prerelease: false
</document_content>
</document>

<document index="3">
<source>.gitignore</source>
<document_content>
# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
venv/
ENV/
env/
.venv
.env

# pyenv
.python-version

# pipenv
Pipfile.lock

# Poetry
poetry.lock

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# pytest
.pytest_cache/
.coverage
htmlcov/
.tox/
coverage.xml
*.cover
.hypothesis/

# Jupyter Notebook
.ipynb_checkpoints

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# MkDocs
site/
.cache/

# setuptools-scm
src/mkdocs_output_as_input/_version.py
</document_content>
</document>

<document index="4">
<source>AGENTS.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="5">
<source>CHANGELOG.md</source>
<document_content>
# Changelog

All notable changes to vexy-mkdocs-output-as-input will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [Unreleased]

### Added
- Complete documentation pages for getting started, configuration, examples, and API reference
- Additional test cases for edge cases, improving coverage to 91%+
- Proper error handling for missing directories (docs_dir, site_dir)
- Configuration option `include_frontmatter` to control whether YAML frontmatter is included in output files (default: true)
- Configuration option `preserve_links` to convert absolute links to relative paths (default: false)
- Configuration options `minify` and `prettify` for HTML output formatting (mutually exclusive)
- Support for multiple HTML selectors - extract multiple elements in one pass
- Support for CSS selectors in addition to tag names (e.g., `.content`, `#main`)
- CLI tool `mkdocs-output-as-input` for standalone HTML processing
- CLI options for preserving relative links, minifying, and prettifying HTML output
- CLI support for multiple selectors using `--html-element` flag multiple times
- Comprehensive test suite for CLI functionality

### Changed
- Replaced Black formatter with Ruff format in CI workflow
- Enhanced type hints with proper type ignore comments for MkDocs compatibility
- Improved error handling and logging throughout the plugin
- Refactored `build_docs.py` to use proper two-stage MkDocs pipeline:
  1. Source → Intermediate (with plugin capturing HTML)
  2. Intermediate → Final (standard MkDocs build with full Material theme)

### Fixed
- Fixed broken plugin implementation - all methods now properly implemented
- Fixed broken test suite - all tests now passing with proper fixtures
- Fixed mypy type checking errors with appropriate type annotations
- Pre-commit configuration updated to remove conflicting Black formatter
- Documentation build now generates proper MkDocs Material site (not manual HTML)
- Removed duplicate README.md from docs directory

## [0.2.0] - 2025-01-14

### Changed
- **BREAKING**: Migrated to src-layout package structure
- **BREAKING**: Minimum Python version is now 3.9
- Switched from Loguru to standard library logging for better integration
- Modernized packaging with PEP 621 compliant pyproject.toml
- Improved type hints throughout the codebase

### Added
- Comprehensive test suite with >90% coverage
- Pre-commit hooks for code quality
- GitHub Actions CI/CD workflows
- Support for Python 3.9, 3.10, 3.11, and 3.12
- Automated release process with trusted PyPI publishing
- Development documentation in README

### Fixed
- Better error handling for missing files
- Graceful handling of invalid YAML frontmatter
- Improved logging messages for debugging

## [0.1.0] - 2025-01-10

### Added
- Initial release of vexy-mkdocs-output-as-input plugin
- Core functionality to capture HTML output and create cousin Markdown files
- Configurable stage directory for output files
- Configurable HTML element extraction (default: `<main>`)
- Configurable target tag transformation (default: `<article>`)
- Preservation of original YAML frontmatter
- Verbose logging mode for debugging
- Basic documentation and examples

[Unreleased]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.2.0...HEAD
[0.2.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.1.0...v0.2.0
[0.1.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/releases/tag/v0.1.0
</document_content>
</document>

<document index="6">
<source>CLAUDE.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="7">
<source>GEMINI.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="8">
<source>LICENSE</source>
<document_content>
MIT License

Copyright (c) 2025 MkDocs Output as Input Contributors

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</document_content>
</document>

<document index="9">
<source>README.md</source>
<document_content>
# vexy-mkdocs-output-as-input

[![PyPI version](https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)
[![CI](https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg)](https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg)](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Python versions](https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)

A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.

## Features

This plugin enables powerful post-processing workflows by:

1. ✅ Preserving your original Markdown structure and frontmatter
2. ✅ Capturing the fully-rendered HTML output from MkDocs
3. ✅ Creating new Markdown files that combine original metadata with processed HTML
4. ✅ Enabling further processing by other static site generators

## Installation

Install from PyPI:

```bash
uv pip install --system --upgrade vexy-mkdocs-output-as-input
```

Or install from source:

```bash
pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input
```

This also installs a CLI tool: `mkdocs-output-as-input`

## Quick Start

Add the plugin to your `mkdocs.yml`:

```yaml
plugins:
  - search  # Other plugins
  - output-as-input
```

Build your site:

```bash
mkdocs build
```

Find your processed files in the `stage/` directory (relative to your MkDocs project root).

## Configuration

All configuration options with their defaults:

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory name (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      include_frontmatter: true # Include YAML frontmatter (default: true)
      preserve_links: false     # Convert absolute to relative links (default: false)
      verbose: false            # Enable verbose logging (default: false)
```

### Advanced Examples

Extract multiple elements:
```yaml
plugins:
  - output-as-input:
      html_element: [main, aside]  # Extract both main content and sidebar
```

Extract using CSS selectors:
```yaml
plugins:
  - output-as-input:
      html_element: .content  # Extract element with class="content"
```

### Options Explained

| Option | Type | Default | Description |
|--------|------|---------|-------------|
| `stage_dir` | string | `"stage"` | Directory name for output files (relative to project root) |
| `html_element` | string or list | `"main"` | CSS selector(s) for HTML elements to extract |
| `target_tag` | string | `"article"` | HTML tag to use in the output (replaces extracted element's tag) |
| `include_frontmatter` | boolean | `true` | Include YAML frontmatter in output files |
| `preserve_links` | boolean | `false` | Convert absolute links to relative (e.g., `/path` → `./path`) |
| `minify` | boolean | `false` | Minify HTML output (remove whitespace) |
| `prettify` | boolean | `false` | Prettify HTML output (add indentation) |
| `verbose` | boolean | `false` | Enable detailed logging for debugging |

## How It Works

### Input → Process → Output

1. **Input**: Your source Markdown with frontmatter
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   # My Page
   
   This is my content with **markdown**.
   ```

2. **MkDocs Processing**: Renders to HTML as usual
   ```html
   <main class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </main>
   ```

3. **Output**: Cousin file with preserved frontmatter + extracted HTML
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   <article class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </article>
   ```

## Use Cases

### 🔄 Multi-Stage Documentation Pipeline

Process documentation through MkDocs first, then feed to another SSG:

```yaml
# mkdocs.yml
plugins:
  - output-as-input:
      stage_dir: hugo/content

# Then run:
# mkdocs build && hugo build
```

### 📝 Content Extraction

Extract just the article content without theme wrapper:

```yaml
plugins:
  - output-as-input:
      html_element: article
      target_tag: div
```

### 🎨 Custom Post-Processing

Preserve MkDocs rendering while preparing for custom templates:

```yaml
plugins:
  - output-as-input:
      stage_dir: _includes
      html_element: main
      target_tag: section
```

## Examples

### Basic Example

```yaml
# mkdocs.yml
site_name: My Documentation
plugins:
  - output-as-input
```

### Advanced Example

```yaml
# mkdocs.yml
site_name: My Documentation
theme:
  name: material

plugins:
  - search
  - output-as-input:
      stage_dir: processed
      html_element: article.md-content__inner
      target_tag: main
      verbose: true

# Process specific content area from Material theme
```

### Integration Example

Using with other tools in a documentation pipeline:

```bash
#!/bin/bash
# build.sh

# Stage 1: Build with MkDocs + plugins
mkdocs build

# Stage 2: Process staged output
python post_process.py stage/

# Stage 3: Build final site
hugo --contentDir=stage/
```

## Development

### Setup Development Environment

```bash
# Clone the repository
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input

# Create virtual environment
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install in development mode
pip install -e .[dev]

# Install pre-commit hooks
pre-commit install
```

### Running Tests

```bash
# Run all tests
pytest

# Run with coverage
pytest --cov=mkdocs_output_as_input --cov-report=html

# Run specific test
pytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
```

### Code Quality

```bash
# Format code
black src tests

# Lint code
ruff check src tests

# Type check
mypy src
```

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Support

- 📧 Email: you@example.com
- 🐛 Issues: [GitHub Issues](https://github.com/vexyart/vexy-mkdocs-output-as-input/issues)
- 💬 Discussions: [GitHub Discussions](https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions)
</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/build_docs.py
# Language: python

import os
import shutil
import subprocess
import tempfile
from pathlib import Path
import yaml

def run_command((cmd, cwd=None)):
    """Run a command and print output."""

def create_stage_mkdocs_config((temp_dir)):
    """Create mkdocs.yml for stage 1 (source → intermediate)."""

def create_final_mkdocs_config(()):
    """Create mkdocs.yml for final build (intermediate → final site)."""

def step1_create_intermediate(()):
    """Step 1: Build README.md → stage/README.md with plugin."""

def step2_build_final_docs(()):
    """Step 2: Build stage/README.md → docs/ with standard MkDocs."""

def main(()):
    """Run the documentation build pipeline."""


<document index="10">
<source>docs/404.html</source>
<document_content>

<!doctype html>
<html lang="en" class="no-js">
  <head>
    
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width,initial-scale=1">
      
        <meta name="description" content="A plugin that captures HTML output and creates cousin Markdown files">
      
      
      
      
      
      
        
      
      
      <link rel="icon" href="/vexy-mkdocs-output-as-input/assets/images/favicon.png">
      <meta name="generator" content="mkdocs-1.6.1, mkdocs-material-9.6.15+insiders-4.53.16">
    
    
      
        <title>MkDocs Output as Input Plugin</title>
      
    
    
      <link rel="stylesheet" href="/vexy-mkdocs-output-as-input/assets/stylesheets/main.8cce3a28.min.css">
      
        
        <link rel="stylesheet" href="/vexy-mkdocs-output-as-input/assets/stylesheets/palette.ab4e12ef.min.css">
      
      


    
    
      
    
    
      
        
        
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,700,700i%7CRoboto+Mono:400,400i,700,700i&display=fallback">
        <style>:root{--md-text-font:"Roboto";--md-code-font:"Roboto Mono"}</style>
      
    
    
    <script>__md_scope=new URL("/vexy-mkdocs-output-as-input/",location),__md_hash=e=>[...e].reduce(((e,_)=>(e<<5)-e+_.charCodeAt(0)),0),__md_get=(e,_=localStorage,t=__md_scope)=>JSON.parse(_.getItem(t.pathname+"."+e)),__md_set=(e,_,t=localStorage,a=__md_scope)=>{try{t.setItem(a.pathname+"."+e,JSON.stringify(_))}catch(e){}}</script>
    
      

    
    
  </head>
  
  
    
    
      
    
    
    
    
    <body dir="ltr" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo">
  
    
    <input class="md-toggle" data-md-toggle="drawer" type="checkbox" id="__drawer" autocomplete="off">
    <input class="md-toggle" data-md-toggle="search" type="checkbox" id="__search" autocomplete="off">
    <label class="md-overlay" for="__drawer"></label>
    <div data-md-component="skip">
      
    </div>
    <div data-md-component="announce">
      
    </div>
    
    
      

  

<header class="md-header md-header--shadow" data-md-component="header">
  <nav class="md-header__inner md-grid" aria-label="Header">
    <a href="/vexy-mkdocs-output-as-input/." title="MkDocs Output as Input Plugin" class="md-header__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    <label class="md-header__button md-icon" for="__drawer">
      
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 6h18v2H3zm0 5h18v2H3zm0 5h18v2H3z"/></svg>
    </label>
    <div class="md-header__title" data-md-component="header-title">
      <div class="md-header__ellipsis">
        <div class="md-header__topic">
          <span class="md-ellipsis">
            MkDocs Output as Input Plugin
          </span>
        </div>
        <div class="md-header__topic" data-md-component="header-topic">
          <span class="md-ellipsis">
            
              
            
          </span>
        </div>
      </div>
    </div>
    
      
        <form class="md-header__option" data-md-component="palette">
  
    
    
    
    <input class="md-option" data-md-color-media="" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo"  aria-hidden="true"  type="radio" name="__palette" id="__palette_0">
    
  
</form>
      
    
    
      <script>var palette=__md_get("__palette");if(palette&&palette.color){if("(prefers-color-scheme)"===palette.color.media){var media=matchMedia("(prefers-color-scheme: light)"),input=document.querySelector(media.matches?"[data-md-color-media='(prefers-color-scheme: light)']":"[data-md-color-media='(prefers-color-scheme: dark)']");palette.color.media=input.getAttribute("data-md-color-media"),palette.color.scheme=input.getAttribute("data-md-color-scheme"),palette.color.primary=input.getAttribute("data-md-color-primary"),palette.color.accent=input.getAttribute("data-md-color-accent")}for(var[key,value]of Object.entries(palette.color))document.body.setAttribute("data-md-color-"+key,value)}</script>
    
    
    
      
      
        <label class="md-header__button md-icon" for="__search">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        </label>
        <div class="md-search" data-md-component="search" role="dialog">
  <label class="md-search__overlay" for="__search"></label>
  <div class="md-search__inner" role="search">
    <form class="md-search__form" name="search">
      <input type="text" class="md-search__input" name="query" aria-label="Search" placeholder="Search" autocapitalize="off" autocorrect="off" autocomplete="off" spellcheck="false" data-md-component="search-query" required>
      <label class="md-search__icon md-icon" for="__search">
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20 11v2H8l5.5 5.5-1.42 1.42L4.16 12l7.92-7.92L13.5 5.5 8 11z"/></svg>
      </label>
      <nav class="md-search__options" aria-label="Search">
        
        <button type="reset" class="md-search__icon md-icon" title="Clear" aria-label="Clear" tabindex="-1">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>
        </button>
      </nav>
      
    </form>
    <div class="md-search__output">
      <div class="md-search__scrollwrap" tabindex="0" data-md-scrollfix>
        <div class="md-search-result" data-md-component="search-result">
          <div class="md-search-result__meta">
            Initializing search
          </div>
          <ol class="md-search-result__list" role="presentation"></ol>
        </div>
      </div>
    </div>
  </div>
</div>
      
    
    
  </nav>
  
</header>
    
    <div class="md-container" data-md-component="container">
      
      
        
          
        
      
      <main class="md-main" data-md-component="main">
        <div class="md-main__inner md-grid">
          
            
              
              <div class="md-sidebar md-sidebar--primary" data-md-component="sidebar" data-md-type="navigation" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    



<nav class="md-nav md-nav--primary" aria-label="Navigation" data-md-level="0">
  <label class="md-nav__title" for="__drawer">
    <a href="/vexy-mkdocs-output-as-input/." title="MkDocs Output as Input Plugin" class="md-nav__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    MkDocs Output as Input Plugin
  </label>
  
  <ul class="md-nav__list" data-md-scrollfix>
    
      
      
  
  
  
  
    <li class="md-nav__item">
      <a href="/vexy-mkdocs-output-as-input/." class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    
  
    Home
  

    
  </span>
  
  

      </a>
    </li>
  

    
  </ul>
</nav>
                  </div>
                </div>
              </div>
            
            
              
              <div class="md-sidebar md-sidebar--secondary" data-md-component="sidebar" data-md-type="toc" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    

<nav class="md-nav md-nav--secondary" aria-label="Table of contents">
  
  
  
  
</nav>
                  </div>
                </div>
              </div>
            
          
          
            <div class="md-content" data-md-component="content">
              
              <article class="md-content__inner md-typeset">
                
  <h1>404 - Not found</h1>

              </article>
            </div>
          
          
<script>var target=document.getElementById(location.hash.slice(1));target&&target.name&&(target.checked=target.name.startsWith("__tabbed_"))</script>
        </div>
        
      </main>
      
        <footer class="md-footer">
  
  <div class="md-footer-meta md-typeset">
    <div class="md-footer-meta__inner md-grid">
      <div class="md-copyright">
  
  
    Made with
    <a href="https://squidfunk.github.io/mkdocs-material/" target="_blank" rel="noopener">
      Material for MkDocs Insiders
    </a>
  
</div>
      
    </div>
  </div>
</footer>
      
    </div>
    <div class="md-dialog" data-md-component="dialog">
      <div class="md-dialog__inner md-typeset"></div>
    </div>
    
    
    
      
      
      <script id="__config" type="application/json">{"annotate": null, "base": "/vexy-mkdocs-output-as-input/", "features": ["navigation.instant", "navigation.tracking", "content.code.copy"], "search": "/vexy-mkdocs-output-as-input/assets/javascripts/workers/search.ad38c271.min.js", "tags": null, "translations": {"clipboard.copied": "Copied to clipboard", "clipboard.copy": "Copy to clipboard", "search.result.more.one": "1 more on this page", "search.result.more.other": "# more on this page", "search.result.none": "No matching documents", "search.result.one": "1 matching document", "search.result.other": "# matching documents", "search.result.placeholder": "Type to start searching", "search.result.term.missing": "Missing", "select.version": "Select version"}, "version": null}</script>
    
    
      <script src="/vexy-mkdocs-output-as-input/assets/javascripts/bundle.5c86578b.min.js"></script>
      
    
  </body>
</html>
</document_content>
</document>

<document index="11">
<source>docs/README.md</source>
<document_content>
# Documentation

This directory contains the generated documentation for the vexy-mkdocs-output-as-input plugin.

View the documentation at: https://vexyart.github.io/vexy-mkdocs-output-as-input/

## Build Process

The documentation is built using the plugin itself:

1. **Source**: `README.md` (root of repository)
2. **Intermediate**: `stage/README.md` (preserved in git)
3. **Final**: `docs/index.html` (this directory)

To rebuild the documentation, run: `python build_docs.py`

</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/bundle.5c86578b.min.js
# Language: javascript

function e((r))

function a((k))

function c((k))

function p((k))

function l((k))

function f((k))

function u((k))

function d((k))

function v((k))

function S((k))

function X(())

function re(())

function ee((k))

function Ka((e))

function u((q))

function S((q))

function k((q))

function R((q))

function se((q,C))

function ce((q,C))

function he((q,C,_))

function Se((q,C))

function Ue((q,C))

function Qi((q))

function Yi((q,C))

function Bi((q))

function Gi(())

function Qt((q))

function Mr((q,C))

function _((D,N))

function s((a,c))

function a((l,f,u,d,v))

function c((l,f,u,d,v))

function p((l,f,u,d))

function c((u,d,v))

function p((u,d,v))

function l((u,d,v))

function f((u,d,v))

function n((i))

function n(())

function p(())

function r((o))

function ie((e,t))

function r(())

function Eo((e,t,r,o))

function n((i))

function a((l))

function c((l))

function p((l))

function Gt((e,t))

function a((p))

function c((p))

function Oe((e))

function K((e,t))

function B((e,t,r))

function dt((e))

function wo((e,t,r))

function s((d))

function a((d,v))

function c((d,v))

function p((d))

function l((d))

function f((d))

function u((d,v))

function To((e))

function o((i))

function n((i,s,a,c))

function I((e))

function yt((e))

function Ze((e,t))

function e((t))

function Xt((e))

function So((e))

function Zt((e))

function ge(())

function Lo((e))

function Mo((e))

function Pr((e,t,r))

function Et((e))

function _o((e))

function t((r))

function Rr((e,t))

function e((t))

function t((r,o,n))

function er((e))

function aa((e))

function Ir((e,t))

function be((e))

function Ao(())

function Fr((e))

function e((t))

function Co((e))

function ca((e))

function pa((e))

function la((e))

function E((e))

function w((e,t,r,o,n))

function t((r,o,n,i,s,a))

function t(())

function t((r,o))

function t((r))

function t((r,o,n))

function t((r,o))

function t((r,o))

function e((t,r))

function t((r,o))

function t((r,o))

function t(())

function t((r,o))

function t(())

function tr((e))

function Vr((e))

function pt((e))

function Fe((e))

function rr((e,t))

function or((e))

function nr((e))

function ir((e))

function ar((e))

function fa(())

function cr((e))

function pr((e))

function lr((e))

function U((e))

function ua((e))

function da((e))

function ha((e))

function ba((e))

function jo((e))

function va((e))

function ga((e,t))

function _e((e,t,r,o,n))

function xe((e,t))

function et((e,t))

function Uo((e,t))

function Wo((e,t))

function Do((e,t))

function Vo((e,t))

function mr((e,t))

function No((e,t))

function zo((e,t))

function fe((e,t))

function $(())

function Nr((e,t))

function qo((e))

function m((e,t))

function xa((e,t))

function lt((e))

function Ko((e))

function Oa((e))

function Qo((e,t))

function z(())

function zr((e,t,r))

function Yo((e,t,r))

function Bo((e,t,r,o,n,i,s,a))

function J((e,t,r))

function Mt((e))

function Go(())

function Ke(())

function H((e))

function h((e,t,r,o))

function Jo((e,t))

function Aa((e))

function Ca((e))

function ka((e))

function ur((e,t,r))

function He((e,t,r))

function L(())

function dr((e))

function g((e,t))

function rt(())

function Xo((e))

function $e((e,t))

function ot((e,t))

function ve((e))

function Zo((e,t,r,o,n))

function qr(())

function Pe(())

function jt((e))

function Ae((e,t))

function c(())

function Qe((e))

function Ee((e))

function oe(())

function en((e))

function Kr((e,t))

function nt((e,t))

function Qr((e,t))

function Y((e,t))

function $a((e,t))

function ne((e,t))

function tn((e))

function Pa(())

function ae(())

function hr((e,t))

function A((e))

function Re((e,t))

function Yr((e))

function rn(())

function Ve(())

function vt((e))

function Ut((e,t))

function le((e))

function Br((e,t))

function Z((e,t,r))

function Ie((e))

function Gr((e))

function Q(())

function b((e,t))

function W((e))

function Jr((e,t))

function O((e,t,r))

function on((e,t))

function gt((e,t,r))

function te(())

function nn(())

function Xr(())

function an(())

function M((e,t=document))

function j((e,t=document))

function ue((e,t=document))

function Ne(())

function Ye((e))

function it((e,t))

function sn((e,t))

function x((e,t,...r))

function br((e))

function _t((e))

function de((e))

function Le((e))

function At((e))

function vr((e))

function pn((e))

function Be((e))

function ln((e))

function mn((e))

function gr((e))

function Ge((e))

function mt((e))

function un((e,t=16))

function dn((e))

function at((e,t))

function Je((e))

function ja((e,t))

function Ua(())

function hn(())

function we(())

function st((e,t=!1))

function bn(())

function vn(())

function gn((e))

function Zr((e))

function yn((e))

function Wt((e))

function xn(())

function eo((e,t))

function to((e,t))

function ze((e,t))

function xr((e,t))

function En((e,t))

function wn(())

function Tn(())

function Sn(())

function On(())

function Ln(())

function Er((e,{viewport$:t,header$:r}))

function Wa((e))

function Da((e))

function Mn((e,t=new Worker(e)))

function Te(())

function V((e))

function Me((e,t))

function Ce((e,t=document))

function me((e,t=document))

function Na((e))

function _n((e))

function za((e,{target$:t}))

function An((e,t))

function Dt((e,t))

function wr((...e))

function Cn((...e))

function kn((e,t))

function Hn((e))

function $n(())

function Pn(())

function oo((e,t))

function Fn((e))

function jn((e))

function no((e))

function Un((e))

function Qa((e))

function Wn((e,t))

function Ba((e,t=250))

function Vt((e,t,r=250))

function Xe((e,{viewport$:t},r=document.body))

function Ga((e,t))

function Dn((e,t,{target$:r}))

function Ja((e))

function Xa((e))

function Vn((e,t))

function Tr((e,t,{target$:r,print$:o}))

function Nn((e))

function zn((e,t))

function Qn((e))

function es((e))

function Yn((e,t))

function ts((e,{target$:t,print$:r}))

function Bn((e,t))

function rs((e))

function os((e,t))

function Jn((e,t))

function as(())

function Zn((e))

function ti((e))

function ss((e))

function ri((e,{viewport$:t,target$:r}))

function oi((e,t))

function cs((e,{alert$:t}))

function ni((e,t))

function ls((e,t))

function ii((e))

function ms(({viewport$:e}))

function ai((e,t))

function si((e,{header$:t,main$:r}))

function fs((e,{viewport$:t,header$:r}))

function ci((e,t))

function pi((e,{viewport$:t,header$:r}))

function us((e))

function li((e))

function mi((e,{progress$:t}))

function fi((e,t))

function ds((e,t))

function kt((e))

function ui(({document$:e}))

function hs((e))

function di(({alert$:e}))

function hi((e,t))

function bi((e))

function vi((e))

function bs((e))

function gi(({sitemap$:e,location$:t,viewport$:r,progress$:o}))

function xi((e))

function zt((e))

function Sr((e))

function Ei((e,t))

function wi((e))

function po((e,t))

function ys((e,t))

function xs((e,t))

function Es((e))

function Ti(({document$:e}))

function ws((e,{worker$:t}))

function Si((e,{worker$:t}))

function Oi((e,{worker$:t,query$:r}))

function Ts((e,{query$:t}))

function Li((e,t))

function Mi((e,{worker$:t,keyboard$:r}))

function _i((e,{index$:t,keyboard$:r}))

function Ai((e,{index$:t,location$:r}))

function Ss((e,{viewport$:t,main$:r}))

function lo((e,o))

function Ci((e,t))

function ki((e,t))

function Hi((e))

function Ls((e))

function $i((e))

function Ms((e,{viewport$:t,header$:r}))

function Pi((e,t))

function _s((e,{viewport$:t,header$:r}))

function Ri((e,{viewport$:t,header$:r,main$:o,target$:n}))

function As((e,{viewport$:t,main$:r,target$:o}))

function Ii((e,{viewport$:t,header$:r,main$:o,target$:n}))

function Fi(({document$:e,viewport$:t}))

function ji(({document$:e,tablet$:t}))

function Cs(())

function Ui(({document$:e}))

function Wi(({viewport$:e,tablet$:t}))

function ks(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ar.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.da.min.js
# Language: javascript

function e(())

function n(())

function t(())

function s(())

function o(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.de.min.js
# Language: javascript

function e((e,r,n))

function i(())

function s(())

function t(())

function o(())

function c(())

function u(())

function a(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.du.min.js
# Language: javascript

function e(())

function n((e))

function o(())

function t(())

function s(())

function u(())

function c(())

function a(())

function l(())

function m(())

function d(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.el.min.js
# Language: javascript

function e((e))

function t((e))

function r((e))

function n((n))


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.es.min.js
# Language: javascript

function e(())

function n(())

function i(())

function a(())

function t(())

function o(())

function u(())

function w(())

function c(())

function m(())

function l((e,s))

function d((e))

function b(())

function f(())

function _(())

function h(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.fi.min.js
# Language: javascript

function i(())

function n(())

function t(())

function s(())

function o(())

function l(())

function a(())

function u(())

function c(())

function m(())

function w(())

function _(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.fr.min.js
# Language: javascript

function e((e,r,s))

function i((e,r,s))

function n(())

function t(())

function u(())

function o(())

function c(())

function a(())

function l(())

function w(())

function f(())

function m(())

function _(())

function b(())

function d(())

function k(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.he.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.hi.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.hu.min.js
# Language: javascript

function e(())

function i(())

function a(())

function t(())

function s(())

function c(())

function o(())

function w(())

function l(())

function u(())

function m(())

function k(())

function f(())

function b(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.hy.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.it.min.js
# Language: javascript

function e((e,r,n))

function i(())

function o((e))

function t(())

function s(())

function a(())

function u(())

function c(())

function w(())

function l(())

function m(())

function f(())

function v(())

function b(())

function d(())

function _(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ja.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.jp.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.kn.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ko.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.multi.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.nl.min.js
# Language: javascript

function r(())

function n((r))

function o(())

function t(())

function s(())

function u(())

function c(())

function a(())

function l(())

function m(())

function f(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.no.min.js
# Language: javascript

function e(())

function i(())

function t(())

function o(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.pt.min.js
# Language: javascript

function e(())

function n(())

function i(())

function o(())

function t(())

function a(())

function u(())

function w(())

function m(())

function c(())

function l(())

function f(())

function d(())

function v((e,r))

function p(())

function _(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ro.min.js
# Language: javascript

function e((e,i))

function n(())

function t(())

function a(())

function o(())

function u(())

function c(())

function s(())

function w(())

function m(())

function l(())

function f(())

function p(())

function d(())

function b(())

function v(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ru.min.js
# Language: javascript

function e(())

function t(())

function w(())

function i(())

function u((e,n))

function o(())

function s((e,n))

function c(())

function m(())

function f(())

function l(())

function a(())

function p(())

function d(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.sa.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.stemmer.support.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.sv.min.js
# Language: javascript

function e(())

function t(())

function i(())

function s(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ta.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.te.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.th.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.tr.min.js
# Language: javascript

function r((r,i,e))

function n(())

function t((r,i))

function u((r))

function o(())

function s(())

function c(())

function l(())

function a(())

function m(())

function d(())

function f(())

function b(())

function w(())

function _(())

function k(())

function p(())

function g(())

function y(())

function z(())

function v(())

function h(())

function q(())

function C(())

function P(())

function F(())

function S(())

function W(())

function L(())

function x(())

function A(())

function E(())

function j(())

function T(())

function Z(())

function B(())

function D(())

function G(())

function H(())

function I(())

function J(())

function K(())

function M((r))

function N((r))

function O(())

function Q(())

function R(())

function U(())

function V(())

function X((r,i,e))

function Y(())

function $(())

function rr((r,i,e))

function ir(())

function er(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.vi.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.zh.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/tinyseg.js
# Language: javascript

function TinySegmenter(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/wordcut.js
# Language: javascript

function s((o,u))

function isMatch((pat, offset, ch))

function replacer((key, value))

function truncate((s, n))

function getMessage((self))

function fail((actual, expected, message, operator, stackStartFunction))

function ok((value, message))

function _deepEqual((actual, expected))

function isArguments((object))

function objEquiv((a, b))

function expectedException((actual, expected))

function _throws((shouldThrow, block, expected, message))

function balanced((a, b, str))

function maybeMatch((reg, str))

function range((a, b, str))

function numeric((str))

function escapeBraces((str))

function unescapeBraces((str))

function parseCommaParts((str))

function expandTop((str))

function identity((e))

function embrace((str))

function isPadded((el))

function lte((i, y))

function gte((i, y))

function expand((str, isTop))

function EventEmitter(())

function g(())

function isFunction((arg))

function isNumber((arg))

function isObject((arg))

function isUndefined((arg))

function ownProp((obj, field))

function alphasorti((a, b))

function alphasort((a, b))

function setupIgnores((self, options))

function ignoreMap((pattern))

function setopts((self, pattern, options))

function deprecationWarning((options))

function finish((self))

function mark((self, p))

function makeAbs((self, f))

function isIgnored((self, path))

function childrenIgnored((self, path))

function glob((pattern, options, cb))

function Glob((pattern, options, cb))

function done(())

function next(())

function lstatcb_((er, lstat))

function readdirCb((self, abs, cb))

function lstatcb_((er, lstat))

function globSync((pattern, options))

function GlobSync((pattern, options))

function inflight((key, cb))

function makeres((key))

function slice((args))

function charSet((s))

function filter((pattern, options))

function ext((a, b))

function minimatch((p, pattern, options))

function Minimatch((pattern, options))

function make(())

function parseNegate(())

function braceExpand((pattern, options))

function parse((pattern, isSub))

function clearStateChar(())

function makeRe(())

function match((f, partial))

function globUnescape((s))

function regExpEscape((s))

function once((fn))

function onceStrict((fn))

function normalizeArray((parts, allowAboveRoot))

function trim((arr))

function filter((xs, f))

function posix((path))

function win32((path))

function defaultSetTimout(())

function defaultClearTimeout(())

function runTimeout((fun))

function runClearTimeout((marker))

function cleanUpNextTick(())

function drainQueue(())

function Item((fun, array))

function noop(())

function createReduce((dir))

function iterator((obj, iteratee, memo, keys, index, length))

function createPredicateIndexFinder((dir))

function createIndexFinder((dir, predicateFind, sortedIndex))

function collectNonEnumProps((obj, keys))

function deprecated(())

function inspect((obj, opts))

function stylizeWithColor((str, styleType))

function stylizeNoColor((str, styleType))

function arrayToHash((array))

function formatValue((ctx, value, recurseTimes))

function formatPrimitive((ctx, value))

function formatError((value))

function formatArray((ctx, value, recurseTimes, visibleKeys, keys))

function formatProperty((ctx, value, recurseTimes, visibleKeys, key, array))

function reduceToSingleString((output, base, braces))

function isArray((ar))

function isBoolean((arg))

function isNull((arg))

function isNullOrUndefined((arg))

function isNumber((arg))

function isString((arg))

function isSymbol((arg))

function isUndefined((arg))

function isRegExp((re))

function isObject((arg))

function isDate((d))

function isError((e))

function isFunction((arg))

function isPrimitive((arg))

function objectToString((o))

function pad((n))

function timestamp(())

function hasOwnProperty((obj, prop))

function wrappy((fn, cb))

function wrapper(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/workers/search.ad38c271.min.js
# Language: javascript

function ne((t,e=document))

function ke((t,e=document))

function ie((t))

function H((t,e,r))

function se((t,e))

function oe((t,e,r,n=!1))

function q((t,e,r,n=!1))

function ae((t))

function ue((t,e=r=>r))

function ce((t))

function le((t))

function he((t,e))

function fe((t,e))

function Oe((t))

function Re((t,e))

function Ie((t))

function Fe((t))


<document index="12">
<source>docs/assets/stylesheets/main.8cce3a28.min.css</source>
<document_content>
@charset "UTF-8";html{-webkit-text-size-adjust:none;-moz-text-size-adjust:none;text-size-adjust:none;box-sizing:border-box}*,:after,:before{box-sizing:inherit}@media (prefers-reduced-motion){*,:after,:before{transition:none!important}}body{margin:0}a,button,input,label{-webkit-tap-highlight-color:transparent}a{color:inherit;text-decoration:none}hr{border:0;box-sizing:initial;display:block;height:.05rem;overflow:visible;padding:0}small{font-size:80%}sub,sup{line-height:1em}img{border-style:none}table{border-collapse:initial;border-spacing:0}td,th{font-weight:400;vertical-align:top}button{background:#0000;border:0;font-family:inherit;font-size:inherit;margin:0;padding:0}input{border:0;outline:none}:root{--md-primary-fg-color:#4051b5;--md-primary-fg-color--light:#5d6cc0;--md-primary-fg-color--dark:#303fa1;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3;--md-accent-fg-color:#526cfe;--md-accent-fg-color--transparent:#526cfe1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-scheme=default]{color-scheme:light}[data-md-color-scheme=default] img[src$="#gh-dark-mode-only"],[data-md-color-scheme=default] img[src$="#only-dark"]{display:none}:root,[data-md-color-scheme=default]{--md-hue:225deg;--md-default-fg-color:#000000de;--md-default-fg-color--light:#0000008a;--md-default-fg-color--lighter:#00000052;--md-default-fg-color--lightest:#00000012;--md-default-bg-color:#fff;--md-default-bg-color--light:#ffffffb3;--md-default-bg-color--lighter:#ffffff4d;--md-default-bg-color--lightest:#ffffff1f;--md-code-fg-color:#36464e;--md-code-bg-color:#f5f5f5;--md-code-bg-color--light:#f5f5f5b3;--md-code-bg-color--lighter:#f5f5f54d;--md-code-hl-color:#4287ff;--md-code-hl-color--light:#4287ff1a;--md-code-hl-number-color:#d52a2a;--md-code-hl-special-color:#db1457;--md-code-hl-function-color:#a846b9;--md-code-hl-constant-color:#6e59d9;--md-code-hl-keyword-color:#3f6ec6;--md-code-hl-string-color:#1c7d4d;--md-code-hl-name-color:var(--md-code-fg-color);--md-code-hl-operator-color:var(--md-default-fg-color--light);--md-code-hl-punctuation-color:var(--md-default-fg-color--light);--md-code-hl-comment-color:var(--md-default-fg-color--light);--md-code-hl-generic-color:var(--md-default-fg-color--light);--md-code-hl-variable-color:var(--md-default-fg-color--light);--md-typeset-color:var(--md-default-fg-color);--md-typeset-a-color:var(--md-primary-fg-color);--md-typeset-del-color:#f5503d26;--md-typeset-ins-color:#0bd57026;--md-typeset-kbd-color:#fafafa;--md-typeset-kbd-accent-color:#fff;--md-typeset-kbd-border-color:#b8b8b8;--md-typeset-mark-color:#ffff0080;--md-typeset-table-color:#0000001f;--md-typeset-table-color--light:rgba(0,0,0,.035);--md-admonition-fg-color:var(--md-default-fg-color);--md-admonition-bg-color:var(--md-default-bg-color);--md-warning-fg-color:#000000de;--md-warning-bg-color:#ff9;--md-footer-fg-color:#fff;--md-footer-fg-color--light:#ffffffb3;--md-footer-fg-color--lighter:#ffffff73;--md-footer-bg-color:#000000de;--md-footer-bg-color--dark:#00000052;--md-shadow-z1:0 0.2rem 0.5rem #0000000d,0 0 0.05rem #0000001a;--md-shadow-z2:0 0.2rem 0.5rem #0000001a,0 0 0.05rem #00000040;--md-shadow-z3:0 0.2rem 0.5rem #0003,0 0 0.05rem #00000059}.md-icon svg{fill:currentcolor;display:block;height:1.2rem;width:1.2rem}body{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;--md-text-font-family:var(--md-text-font,_),-apple-system,BlinkMacSystemFont,Helvetica,Arial,sans-serif;--md-code-font-family:var(--md-code-font,_),SFMono-Regular,Consolas,Menlo,monospace}aside,body,input{font-feature-settings:"kern","liga";color:var(--md-typeset-color);font-family:var(--md-text-font-family)}code,kbd,pre{font-feature-settings:"kern";font-family:var(--md-code-font-family)}:root{--md-typeset-table-sort-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m18 21-4-4h3V7h-3l4-4 4 4h-3v10h3M2 19v-2h10v2M2 13v-2h7v2M2 7V5h4v2z"/></svg>');--md-typeset-table-sort-icon--asc:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 17h3l-4 4-4-4h3V3h2M2 17h10v2H2M6 5v2H2V5m0 6h7v2H2z"/></svg>');--md-typeset-table-sort-icon--desc:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 7h3l-4-4-4 4h3v14h2M2 17h10v2H2M6 5v2H2V5m0 6h7v2H2z"/></svg>')}.md-typeset{-webkit-print-color-adjust:exact;color-adjust:exact;font-size:.8rem;line-height:1.6;overflow-wrap:break-word}@media print{.md-typeset{font-size:.68rem}}.md-typeset blockquote,.md-typeset dl,.md-typeset figure,.md-typeset ol,.md-typeset pre,.md-typeset ul{margin-bottom:1em;margin-top:1em}.md-typeset h1{color:var(--md-default-fg-color--light);font-size:2em;line-height:1.3;margin:0 0 1.25em}.md-typeset h1,.md-typeset h2{font-weight:300;letter-spacing:-.01em}.md-typeset h2{font-size:1.5625em;line-height:1.4;margin:1.6em 0 .64em}.md-typeset h3{font-size:1.25em;font-weight:400;letter-spacing:-.01em;line-height:1.5;margin:1.6em 0 .8em}.md-typeset h2+h3{margin-top:.8em}.md-typeset h4{font-weight:700;letter-spacing:-.01em;margin:1em 0}.md-typeset h5,.md-typeset h6{color:var(--md-default-fg-color--light);font-size:.8em;font-weight:700;letter-spacing:-.01em;margin:1.25em 0}.md-typeset h5{text-transform:uppercase}.md-typeset h5 code{text-transform:none}.md-typeset hr{border-bottom:.05rem solid var(--md-default-fg-color--lightest);display:flow-root;margin:1.5em 0}.md-typeset a{color:var(--md-typeset-a-color);word-break:break-word}.md-typeset a,.md-typeset a:before{transition:color 125ms}.md-typeset a:focus,.md-typeset a:hover{color:var(--md-accent-fg-color)}.md-typeset a:focus code,.md-typeset a:hover code{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-typeset a code{color:var(--md-typeset-a-color)}.md-typeset a.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-typeset code,.md-typeset kbd,.md-typeset pre{color:var(--md-code-fg-color);direction:ltr;font-variant-ligatures:none;transition:background-color 125ms}@media print{.md-typeset code,.md-typeset kbd,.md-typeset pre{white-space:pre-wrap}}.md-typeset code{background-color:var(--md-code-bg-color);border-radius:.1rem;-webkit-box-decoration-break:clone;box-decoration-break:clone;font-size:.85em;padding:0 .2941176471em;transition:color 125ms,background-color 125ms;word-break:break-word}.md-typeset code:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}.md-typeset pre{display:flow-root;line-height:1.4;position:relative}.md-typeset pre>code{-webkit-box-decoration-break:slice;box-decoration-break:slice;box-shadow:none;display:block;margin:0;outline-color:var(--md-accent-fg-color);overflow:auto;padding:.7720588235em 1.1764705882em;scrollbar-color:var(--md-default-fg-color--lighter) #0000;scrollbar-width:thin;touch-action:auto;word-break:normal}.md-typeset pre>code:hover{scrollbar-color:var(--md-accent-fg-color) #0000}.md-typeset pre>code::-webkit-scrollbar{height:.2rem;width:.2rem}.md-typeset pre>code::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-typeset pre>code::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}.md-typeset kbd{background-color:var(--md-typeset-kbd-color);border-radius:.1rem;box-shadow:0 .1rem 0 .05rem var(--md-typeset-kbd-border-color),0 .1rem 0 var(--md-typeset-kbd-border-color),0 -.1rem .2rem var(--md-typeset-kbd-accent-color) inset;color:var(--md-default-fg-color);display:inline-block;font-size:.75em;padding:0 .6666666667em;vertical-align:text-top;word-break:break-word}.md-typeset mark{background-color:var(--md-typeset-mark-color);-webkit-box-decoration-break:clone;box-decoration-break:clone;color:inherit;word-break:break-word}.md-typeset abbr{cursor:help;text-decoration:none}.md-typeset [data-preview],.md-typeset abbr{border-bottom:.05rem dotted var(--md-default-fg-color--light)}.md-typeset small{opacity:.75}[dir=ltr] .md-typeset sub,[dir=ltr] .md-typeset sup{margin-left:.078125em}[dir=rtl] .md-typeset sub,[dir=rtl] .md-typeset sup{margin-right:.078125em}[dir=ltr] .md-typeset blockquote{padding-left:.6rem}[dir=rtl] .md-typeset blockquote{padding-right:.6rem}[dir=ltr] .md-typeset blockquote{border-left:.2rem solid var(--md-default-fg-color--lighter)}[dir=rtl] .md-typeset blockquote{border-right:.2rem solid var(--md-default-fg-color--lighter)}.md-typeset blockquote{color:var(--md-default-fg-color--light);margin-left:0;margin-right:0}.md-typeset ul{list-style-type:disc}.md-typeset ul[type]{list-style-type:revert-layer}[dir=ltr] .md-typeset ol,[dir=ltr] .md-typeset ul{margin-left:.625em}[dir=rtl] .md-typeset ol,[dir=rtl] .md-typeset ul{margin-right:.625em}.md-typeset ol,.md-typeset ul{padding:0}.md-typeset ol:not([hidden]),.md-typeset ul:not([hidden]){display:flow-root}.md-typeset ol ol,.md-typeset ul ol{list-style-type:lower-alpha}.md-typeset ol ol ol,.md-typeset ul ol ol{list-style-type:lower-roman}.md-typeset ol ol ol ol,.md-typeset ul ol ol ol{list-style-type:upper-alpha}.md-typeset ol ol ol ol ol,.md-typeset ul ol ol ol ol{list-style-type:upper-roman}.md-typeset ol[type],.md-typeset ul[type]{list-style-type:revert-layer}[dir=ltr] .md-typeset ol li,[dir=ltr] .md-typeset ul li{margin-left:1.25em}[dir=rtl] .md-typeset ol li,[dir=rtl] .md-typeset ul li{margin-right:1.25em}.md-typeset ol li,.md-typeset ul li{margin-bottom:.5em}.md-typeset ol li blockquote,.md-typeset ol li p,.md-typeset ul li blockquote,.md-typeset ul li p{margin:.5em 0}.md-typeset ol li:last-child,.md-typeset ul li:last-child{margin-bottom:0}[dir=ltr] .md-typeset ol li ol,[dir=ltr] .md-typeset ol li ul,[dir=ltr] .md-typeset ul li ol,[dir=ltr] .md-typeset ul li ul{margin-left:.625em}[dir=rtl] .md-typeset ol li ol,[dir=rtl] .md-typeset ol li ul,[dir=rtl] .md-typeset ul li ol,[dir=rtl] .md-typeset ul li ul{margin-right:.625em}.md-typeset ol li ol,.md-typeset ol li ul,.md-typeset ul li ol,.md-typeset ul li ul{margin-bottom:.5em;margin-top:.5em}[dir=ltr] .md-typeset dd{margin-left:1.875em}[dir=rtl] .md-typeset dd{margin-right:1.875em}.md-typeset dd{margin-bottom:1.5em;margin-top:1em}.md-typeset img,.md-typeset svg,.md-typeset video{height:auto;max-width:100%}.md-typeset img[align=left]{margin:1em 1em 1em 0}.md-typeset img[align=right]{margin:1em 0 1em 1em}.md-typeset img[align]:only-child{margin-top:0}.md-typeset figure{display:flow-root;margin:1em auto;max-width:100%;text-align:center;width:-moz-fit-content;width:fit-content}.md-typeset figure img{display:block;margin:0 auto}.md-typeset figcaption{font-style:italic;margin:1em auto;max-width:24rem}.md-typeset iframe{max-width:100%}.md-typeset table:not([class]){background-color:var(--md-default-bg-color);border:.05rem solid var(--md-typeset-table-color);border-radius:.1rem;display:inline-block;font-size:.64rem;max-width:100%;overflow:auto;touch-action:auto}@media print{.md-typeset table:not([class]){display:table}}.md-typeset table:not([class])+*{margin-top:1.5em}.md-typeset table:not([class]) td>:first-child,.md-typeset table:not([class]) th>:first-child{margin-top:0}.md-typeset table:not([class]) td>:last-child,.md-typeset table:not([class]) th>:last-child{margin-bottom:0}.md-typeset table:not([class]) td:not([align]),.md-typeset table:not([class]) th:not([align]){text-align:left}[dir=rtl] .md-typeset table:not([class]) td:not([align]),[dir=rtl] .md-typeset table:not([class]) th:not([align]){text-align:right}.md-typeset table:not([class]) th{font-weight:700;min-width:5rem;padding:.9375em 1.25em;vertical-align:top}.md-typeset table:not([class]) td{border-top:.05rem solid var(--md-typeset-table-color);padding:.9375em 1.25em;vertical-align:top}.md-typeset table:not([class]) tbody tr{transition:background-color 125ms}.md-typeset table:not([class]) tbody tr:hover{background-color:var(--md-typeset-table-color--light);box-shadow:0 .05rem 0 var(--md-default-bg-color) inset}.md-typeset table:not([class]) a{word-break:normal}.md-typeset table th[role=columnheader]{cursor:pointer}[dir=ltr] .md-typeset table th[role=columnheader]:after{margin-left:.5em}[dir=rtl] .md-typeset table th[role=columnheader]:after{margin-right:.5em}.md-typeset table th[role=columnheader]:after{content:"";display:inline-block;height:1.2em;-webkit-mask-image:var(--md-typeset-table-sort-icon);mask-image:var(--md-typeset-table-sort-icon);-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:background-color 125ms;vertical-align:text-bottom;width:1.2em}.md-typeset table th[role=columnheader]:hover:after{background-color:var(--md-default-fg-color--lighter)}.md-typeset table th[role=columnheader][aria-sort=ascending]:after{background-color:var(--md-default-fg-color--light);-webkit-mask-image:var(--md-typeset-table-sort-icon--asc);mask-image:var(--md-typeset-table-sort-icon--asc)}.md-typeset table th[role=columnheader][aria-sort=descending]:after{background-color:var(--md-default-fg-color--light);-webkit-mask-image:var(--md-typeset-table-sort-icon--desc);mask-image:var(--md-typeset-table-sort-icon--desc)}.md-typeset__scrollwrap{margin:1em -.8rem;overflow-x:auto;touch-action:auto}.md-typeset__table{display:inline-block;margin-bottom:.5em;padding:0 .8rem}@media print{.md-typeset__table{display:block}}html .md-typeset__table table{display:table;margin:0;overflow:hidden;width:100%}@media screen and (max-width:44.984375em){.md-content__inner>pre{margin:1em -.8rem}.md-content__inner>pre code{border-radius:0}}.md-typeset .md-author{border-radius:100%;display:block;flex-shrink:0;height:1.6rem;overflow:hidden;position:relative;transition:color 125ms,transform 125ms;width:1.6rem}.md-typeset .md-author img{display:block}.md-typeset .md-author--more{background:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--lighter);font-size:.6rem;font-weight:700;line-height:1.6rem;text-align:center}.md-typeset .md-author--long{height:2.4rem;width:2.4rem}.md-typeset a.md-author{transform:scale(1)}.md-typeset a.md-author img{border-radius:100%;filter:grayscale(100%) opacity(75%);transition:filter 125ms}.md-typeset a.md-author:focus,.md-typeset a.md-author:hover{transform:scale(1.1);z-index:1}.md-typeset a.md-author:focus img,.md-typeset a.md-author:hover img{filter:grayscale(0)}.md-banner{background-color:var(--md-footer-bg-color);color:var(--md-footer-fg-color);overflow:auto}@media print{.md-banner{display:none}}.md-banner--warning{background-color:var(--md-warning-bg-color);color:var(--md-warning-fg-color)}.md-banner__inner{font-size:.7rem;margin:.6rem auto;padding:0 .8rem}[dir=ltr] .md-banner__button{float:right}[dir=rtl] .md-banner__button{float:left}.md-banner__button{color:inherit;cursor:pointer;transition:opacity .25s}.no-js .md-banner__button{display:none}.md-banner__button:hover{opacity:.7}html{font-size:125%;height:100%;overflow-x:hidden}@media screen and (min-width:100em){html{font-size:137.5%}}@media screen and (min-width:125em){html{font-size:150%}}body{background-color:var(--md-default-bg-color);display:flex;flex-direction:column;font-size:.5rem;min-height:100%;position:relative;width:100%}@media print{body{display:block}}@media screen and (max-width:59.984375em){body[data-md-scrolllock]{position:fixed}}.md-grid{margin-left:auto;margin-right:auto;max-width:61rem}.md-container{display:flex;flex-direction:column;flex-grow:1}@media print{.md-container{display:block}}.md-main{flex-grow:1}.md-main__inner{display:flex;height:100%;margin-top:1.5rem}.md-ellipsis{overflow:hidden;text-overflow:ellipsis}.md-toggle{display:none}.md-option{height:0;opacity:0;position:absolute;width:0}.md-option:checked+label:not([hidden]){display:block}.md-option.focus-visible+label{outline-color:var(--md-accent-fg-color);outline-style:auto}.md-skip{background-color:var(--md-default-fg-color);border-radius:.1rem;color:var(--md-default-bg-color);font-size:.64rem;margin:.5rem;opacity:0;outline-color:var(--md-accent-fg-color);padding:.3rem .5rem;position:fixed;transform:translateY(.4rem);z-index:-1}.md-skip:focus{opacity:1;transform:translateY(0);transition:transform .25s cubic-bezier(.4,0,.2,1),opacity 175ms 75ms;z-index:10}@page{margin:25mm}:root{--md-clipboard-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 21H8V7h11m0-2H8a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2m-3-4H4a2 2 0 0 0-2 2v14h2V3h12z"/></svg>')}.md-clipboard{border-radius:.1rem;color:var(--md-default-fg-color--lightest);cursor:pointer;height:1.5em;outline-color:var(--md-accent-fg-color);outline-offset:.1rem;transition:color .25s;width:1.5em;z-index:1}@media print{.md-clipboard{display:none}}.md-clipboard:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}:hover>.md-clipboard{color:var(--md-default-fg-color--light)}.md-clipboard:focus,.md-clipboard:hover{color:var(--md-accent-fg-color)}.md-clipboard:after{background-color:currentcolor;content:"";display:block;height:1.125em;margin:0 auto;-webkit-mask-image:var(--md-clipboard-icon);mask-image:var(--md-clipboard-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:1.125em}.md-clipboard--inline{cursor:pointer}.md-clipboard--inline code{transition:color .25s,background-color .25s}.md-clipboard--inline:focus code,.md-clipboard--inline:hover code{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}:root{--md-code-select-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 19h-4v2h4c1.1 0 2-.9 2-2v-4h-2m0-12h-4v2h4v4h2V5c0-1.1-.9-2-2-2M5 5h4V3H5c-1.1 0-2 .9-2 2v4h2m0 6H3v4c0 1.1.9 2 2 2h4v-2H5zm2-4h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2zM7 7h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2zm-8 8h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2z"/></svg>');--md-code-copy-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 21H8V7h11m0-2H8a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2m-3-4H4a2 2 0 0 0-2 2v14h2V3h12z"/></svg>')}.md-typeset .md-code__content{display:grid}.md-code__nav{background-color:var(--md-code-bg-color--lighter);border-radius:.1rem;display:flex;gap:.2rem;padding:.2rem;position:absolute;right:.25em;top:.25em;transition:background-color .25s;z-index:1}:hover>.md-code__nav{background-color:var(--md-code-bg-color--light)}.md-code__button{color:var(--md-default-fg-color--lightest);cursor:pointer;display:block;height:1.5em;outline-color:var(--md-accent-fg-color);outline-offset:.1rem;transition:color .25s;width:1.5em}:hover>*>.md-code__button{color:var(--md-default-fg-color--light)}.md-code__button.focus-visible,.md-code__button:hover{color:var(--md-accent-fg-color)}.md-code__button--active{color:var(--md-default-fg-color)!important}.md-code__button:after{background-color:currentcolor;content:"";display:block;height:1.125em;margin:0 auto;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:1.125em}.md-code__button[data-md-type=select]:after{-webkit-mask-image:var(--md-code-select-icon);mask-image:var(--md-code-select-icon)}.md-code__button[data-md-type=copy]:after{-webkit-mask-image:var(--md-code-copy-icon);mask-image:var(--md-code-copy-icon)}@keyframes consent{0%{opacity:0;transform:translateY(100%)}to{opacity:1;transform:translateY(0)}}@keyframes overlay{0%{opacity:0}to{opacity:1}}.md-consent__overlay{animation:overlay .25s both;-webkit-backdrop-filter:blur(.1rem);backdrop-filter:blur(.1rem);background-color:#0000008a;height:100%;opacity:1;position:fixed;top:0;width:100%;z-index:5}.md-consent__inner{animation:consent .5s cubic-bezier(.1,.7,.1,1) both;background-color:var(--md-default-bg-color);border:0;border-radius:.1rem;bottom:0;box-shadow:0 0 .2rem #0000001a,0 .2rem .4rem #0003;max-height:100%;overflow:auto;padding:0;position:fixed;width:100%;z-index:5}.md-consent__form{padding:.8rem}.md-consent__settings{display:none;margin:1em 0}input:checked+.md-consent__settings{display:block}.md-consent__controls{margin-bottom:.8rem}.md-typeset .md-consent__controls .md-button{display:inline}@media screen and (max-width:44.984375em){.md-typeset .md-consent__controls .md-button{display:block;margin-top:.4rem;text-align:center;width:100%}}.md-consent label{cursor:pointer}.md-content{flex-grow:1;min-width:0}.md-content__inner{margin:0 .8rem 1.2rem;padding-top:.6rem}@media screen and (min-width:76.25em){[dir=ltr] .md-sidebar--primary:not([hidden])~.md-content>.md-content__inner{margin-left:1.2rem}[dir=ltr] .md-sidebar--secondary:not([hidden])~.md-content>.md-content__inner,[dir=rtl] .md-sidebar--primary:not([hidden])~.md-content>.md-content__inner{margin-right:1.2rem}[dir=rtl] .md-sidebar--secondary:not([hidden])~.md-content>.md-content__inner{margin-left:1.2rem}}.md-content__inner:before{content:"";display:block;height:.4rem}.md-content__inner>:last-child{margin-bottom:0}[dir=ltr] .md-content__button{float:right}[dir=rtl] .md-content__button{float:left}[dir=ltr] .md-content__button{margin-left:.4rem}[dir=rtl] .md-content__button{margin-right:.4rem}.md-content__button{margin:.4rem 0;padding:0}@media print{.md-content__button{display:none}}.md-typeset .md-content__button{color:var(--md-default-fg-color--lighter)}.md-content__button svg{display:inline;vertical-align:top}[dir=rtl] .md-content__button svg{transform:scaleX(-1)}[dir=ltr] .md-dialog{right:.8rem}[dir=rtl] .md-dialog{left:.8rem}.md-dialog{background-color:var(--md-default-fg-color);border-radius:.1rem;bottom:.8rem;box-shadow:var(--md-shadow-z3);min-width:11.1rem;opacity:0;padding:.4rem .6rem;pointer-events:none;position:fixed;transform:translateY(100%);transition:transform 0ms .4s,opacity .4s;z-index:4}@media print{.md-dialog{display:none}}.md-dialog--active{opacity:1;pointer-events:auto;transform:translateY(0);transition:transform .4s cubic-bezier(.075,.85,.175,1),opacity .4s}.md-dialog__inner{color:var(--md-default-bg-color);font-size:.7rem}.md-feedback{margin:2em 0 1em;text-align:center}.md-feedback fieldset{border:none;margin:0;padding:0}.md-feedback__title{font-weight:700;margin:1em auto}.md-feedback__inner{position:relative}.md-feedback__list{display:flex;flex-wrap:wrap;place-content:baseline center;position:relative}.md-feedback__list:hover .md-icon:not(:disabled){color:var(--md-default-fg-color--lighter)}:disabled .md-feedback__list{min-height:1.8rem}.md-feedback__icon{color:var(--md-default-fg-color--light);cursor:pointer;flex-shrink:0;margin:0 .1rem;transition:color 125ms}.md-feedback__icon:not(:disabled).md-icon:hover{color:var(--md-accent-fg-color)}.md-feedback__icon:disabled{color:var(--md-default-fg-color--lightest);pointer-events:none}.md-feedback__note{opacity:0;position:relative;transform:translateY(.4rem);transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s}.md-feedback__note>*{margin:0 auto;max-width:16rem}:disabled .md-feedback__note{opacity:1;transform:translateY(0)}@media print{.md-feedback{display:none}}.md-footer{background-color:var(--md-footer-bg-color);color:var(--md-footer-fg-color)}@media print{.md-footer{display:none}}.md-footer__inner{justify-content:space-between;overflow:auto;padding:.2rem}.md-footer__inner:not([hidden]){display:flex}.md-footer__link{align-items:end;display:flex;flex-grow:0.01;margin-bottom:.4rem;margin-top:1rem;max-width:100%;outline-color:var(--md-accent-fg-color);overflow:hidden;transition:opacity .25s}.md-footer__link:focus,.md-footer__link:hover{opacity:.7}[dir=rtl] .md-footer__link svg{transform:scaleX(-1)}@media screen and (max-width:44.984375em){.md-footer__link--prev{flex-shrink:0}.md-footer__link--prev .md-footer__title{display:none}}[dir=ltr] .md-footer__link--next{margin-left:auto}[dir=rtl] .md-footer__link--next{margin-right:auto}.md-footer__link--next{text-align:right}[dir=rtl] .md-footer__link--next{text-align:left}.md-footer__title{flex-grow:1;font-size:.9rem;margin-bottom:.7rem;max-width:calc(100% - 2.4rem);padding:0 1rem;white-space:nowrap}.md-footer__button{margin:.2rem;padding:.4rem}.md-footer__direction{font-size:.64rem;opacity:.7}.md-footer-meta{background-color:var(--md-footer-bg-color--dark)}.md-footer-meta__inner{display:flex;flex-wrap:wrap;justify-content:space-between;padding:.2rem}html .md-footer-meta.md-typeset a{color:var(--md-footer-fg-color--light)}html .md-footer-meta.md-typeset a:focus,html .md-footer-meta.md-typeset a:hover{color:var(--md-footer-fg-color)}.md-copyright{color:var(--md-footer-fg-color--lighter);font-size:.64rem;margin:auto .6rem;padding:.4rem 0;width:100%}@media screen and (min-width:45em){.md-copyright{width:auto}}.md-copyright__highlight{color:var(--md-footer-fg-color--light)}.md-social{display:inline-flex;gap:.2rem;margin:0 .4rem;padding:.2rem 0 .6rem}@media screen and (min-width:45em){.md-social{padding:.6rem 0}}.md-social__link{display:inline-block;height:1.6rem;text-align:center;width:1.6rem}.md-social__link:before{line-height:1.9}.md-social__link svg{fill:currentcolor;max-height:.8rem;vertical-align:-25%}.md-typeset .md-button{border:.1rem solid;border-radius:.1rem;color:var(--md-primary-fg-color);cursor:pointer;display:inline-block;font-weight:700;padding:.625em 2em;transition:color 125ms,background-color 125ms,border-color 125ms}.md-typeset .md-button--primary{background-color:var(--md-primary-fg-color);border-color:var(--md-primary-fg-color);color:var(--md-primary-bg-color)}.md-typeset .md-button:focus,.md-typeset .md-button:hover{background-color:var(--md-accent-fg-color);border-color:var(--md-accent-fg-color);color:var(--md-accent-bg-color)}[dir=ltr] .md-typeset .md-input{border-top-left-radius:.1rem}[dir=ltr] .md-typeset .md-input,[dir=rtl] .md-typeset .md-input{border-top-right-radius:.1rem}[dir=rtl] .md-typeset .md-input{border-top-left-radius:.1rem}.md-typeset .md-input{border-bottom:.1rem solid var(--md-default-fg-color--lighter);box-shadow:var(--md-shadow-z1);font-size:.8rem;height:1.8rem;padding:0 .6rem;transition:border .25s,box-shadow .25s}.md-typeset .md-input:focus,.md-typeset .md-input:hover{border-bottom-color:var(--md-accent-fg-color);box-shadow:var(--md-shadow-z2)}.md-typeset .md-input--stretch{width:100%}.md-header{background-color:var(--md-primary-fg-color);box-shadow:0 0 .2rem #0000,0 .2rem .4rem #0000;color:var(--md-primary-bg-color);display:block;left:0;position:sticky;right:0;top:0;z-index:4}@media print{.md-header{display:none}}.md-header[hidden]{transform:translateY(-100%);transition:transform .25s cubic-bezier(.8,0,.6,1),box-shadow .25s}.md-header--shadow{box-shadow:0 0 .2rem #0000001a,0 .2rem .4rem #0003;transition:transform .25s cubic-bezier(.1,.7,.1,1),box-shadow .25s}.md-header__inner{align-items:center;display:flex;padding:0 .2rem}.md-header__button{color:currentcolor;cursor:pointer;margin:.2rem;outline-color:var(--md-accent-fg-color);padding:.4rem;position:relative;transition:opacity .25s;vertical-align:middle;z-index:1}.md-header__button:hover{opacity:.7}.md-header__button:not([hidden]){display:inline-block}.md-header__button:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}.md-header__button.md-logo{margin:.2rem;padding:.4rem}@media screen and (max-width:76.234375em){.md-header__button.md-logo{display:none}}.md-header__button.md-logo img,.md-header__button.md-logo svg{fill:currentcolor;display:block;height:1.2rem;width:auto}@media screen and (min-width:60em){.md-header__button[for=__search]{display:none}}.no-js .md-header__button[for=__search]{display:none}[dir=rtl] .md-header__button[for=__search] svg{transform:scaleX(-1)}@media screen and (min-width:76.25em){.md-header__button[for=__drawer]{display:none}}.md-header__topic{display:flex;max-width:100%;position:absolute;transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s;white-space:nowrap}.md-header__topic+.md-header__topic{opacity:0;pointer-events:none;transform:translateX(1.25rem);transition:transform .4s cubic-bezier(1,.7,.1,.1),opacity .15s;z-index:-1}[dir=rtl] .md-header__topic+.md-header__topic{transform:translateX(-1.25rem)}.md-header__topic:first-child{font-weight:700}[dir=ltr] .md-header__title{margin-left:1rem;margin-right:.4rem}[dir=rtl] .md-header__title{margin-left:.4rem;margin-right:1rem}.md-header__title{flex-grow:1;font-size:.9rem;height:2.4rem;line-height:2.4rem}.md-header__title--active .md-header__topic{opacity:0;pointer-events:none;transform:translateX(-1.25rem);transition:transform .4s cubic-bezier(1,.7,.1,.1),opacity .15s;z-index:-1}[dir=rtl] .md-header__title--active .md-header__topic{transform:translateX(1.25rem)}.md-header__title--active .md-header__topic+.md-header__topic{opacity:1;pointer-events:auto;transform:translateX(0);transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s;z-index:0}.md-header__title>.md-header__ellipsis{height:100%;position:relative;width:100%}.md-header__option{display:flex;flex-shrink:0;max-width:100%;transition:max-width 0ms .25s,opacity .25s .25s;white-space:nowrap}[data-md-toggle=search]:checked~.md-header .md-header__option{max-width:0;opacity:0;transition:max-width 0ms,opacity 0ms}.md-header__option>input{bottom:0}.md-header__source{display:none}@media screen and (min-width:60em){[dir=ltr] .md-header__source{margin-left:1rem}[dir=rtl] .md-header__source{margin-right:1rem}.md-header__source{display:block;max-width:11.7rem;width:11.7rem}}@media screen and (min-width:76.25em){[dir=ltr] .md-header__source{margin-left:1.4rem}[dir=rtl] .md-header__source{margin-right:1.4rem}}.md-meta{color:var(--md-default-fg-color--light);font-size:.7rem;line-height:1.3}.md-meta__list{display:inline-flex;flex-wrap:wrap;list-style:none;margin:0;padding:0}.md-meta__item:not(:last-child):after{content:"·";margin-left:.2rem;margin-right:.2rem}.md-meta__link{color:var(--md-typeset-a-color)}.md-meta__link:focus,.md-meta__link:hover{color:var(--md-accent-fg-color)}.md-draft{background-color:#ff1744;border-radius:.125em;color:#fff;display:inline-block;font-weight:700;padding-left:.5714285714em;padding-right:.5714285714em}:root{--md-nav-icon--prev:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20 11v2H8l5.5 5.5-1.42 1.42L4.16 12l7.92-7.92L13.5 5.5 8 11z"/></svg>');--md-nav-icon--next:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>');--md-toc-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 9h14V7H3zm0 4h14v-2H3zm0 4h14v-2H3zm16 0h2v-2h-2zm0-10v2h2V7zm0 6h2v-2h-2z"/></svg>')}.md-nav{font-size:.7rem;line-height:1.3}.md-nav__title{color:var(--md-default-fg-color--light);display:block;font-weight:700;overflow:hidden;padding:0 .6rem;text-overflow:ellipsis}.md-nav__title .md-nav__button{display:none}.md-nav__title .md-nav__button img{height:100%;width:auto}.md-nav__title .md-nav__button.md-logo img,.md-nav__title .md-nav__button.md-logo svg{fill:currentcolor;display:block;height:2.4rem;max-width:100%;object-fit:contain;width:auto}.md-nav__list{list-style:none;margin:0;padding:0}.md-nav__link{align-items:flex-start;display:flex;gap:.4rem;margin-top:.625em;scroll-snap-align:start;transition:color 125ms}.md-nav__link--passed,.md-nav__link--passed code{color:var(--md-default-fg-color--light)}.md-nav__item .md-nav__link--active,.md-nav__item .md-nav__link--active code{color:var(--md-typeset-a-color)}.md-nav__link .md-ellipsis{position:relative}.md-nav__link .md-ellipsis code{word-break:normal}[dir=ltr] .md-nav__link .md-icon:last-child{margin-left:auto}[dir=rtl] .md-nav__link .md-icon:last-child{margin-right:auto}.md-nav__link .md-typeset{font-size:.7rem;line-height:1.3}.md-nav__link svg{fill:currentcolor;flex-shrink:0;height:1.3em;position:relative}.md-nav__link[for]:focus,.md-nav__link[for]:hover,.md-nav__link[href]:focus,.md-nav__link[href]:hover{color:var(--md-accent-fg-color);cursor:pointer}.md-nav__link[for]:focus code,.md-nav__link[for]:hover code,.md-nav__link[href]:focus code,.md-nav__link[href]:hover code{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-nav__link.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-nav--primary .md-nav__link[for=__toc]{display:none}.md-nav--primary .md-nav__link[for=__toc] .md-icon:after{background-color:currentcolor;display:block;height:100%;-webkit-mask-image:var(--md-toc-icon);mask-image:var(--md-toc-icon);width:100%}.md-nav--primary .md-nav__link[for=__toc]~.md-nav{display:none}.md-nav__container>.md-nav__link{margin-top:0}.md-nav__container>.md-nav__link:first-child{flex-grow:1;min-width:0}.md-nav__icon{flex-shrink:0}.md-nav__source{display:none}@media screen and (max-width:76.234375em){.md-nav--primary,.md-nav--primary .md-nav{background-color:var(--md-default-bg-color);display:flex;flex-direction:column;height:100%;left:0;position:absolute;right:0;top:0;z-index:1}.md-nav--primary .md-nav__item,.md-nav--primary .md-nav__title{font-size:.8rem;line-height:1.5}.md-nav--primary .md-nav__title{background-color:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--light);cursor:pointer;height:5.6rem;line-height:2.4rem;padding:3rem .8rem .2rem;position:relative;white-space:nowrap}[dir=ltr] .md-nav--primary .md-nav__title .md-nav__icon{left:.4rem}[dir=rtl] .md-nav--primary .md-nav__title .md-nav__icon{right:.4rem}.md-nav--primary .md-nav__title .md-nav__icon{display:block;height:1.2rem;margin:.2rem;position:absolute;top:.4rem;width:1.2rem}.md-nav--primary .md-nav__title .md-nav__icon:after{background-color:currentcolor;content:"";display:block;height:100%;-webkit-mask-image:var(--md-nav-icon--prev);mask-image:var(--md-nav-icon--prev);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:100%}.md-nav--primary .md-nav__title~.md-nav__list{background-color:var(--md-default-bg-color);box-shadow:0 .05rem 0 var(--md-default-fg-color--lightest) inset;overflow-y:auto;scroll-snap-type:y mandatory;touch-action:pan-y}.md-nav--primary .md-nav__title~.md-nav__list>:first-child{border-top:0}.md-nav--primary .md-nav__title[for=__drawer]{background-color:var(--md-primary-fg-color);color:var(--md-primary-bg-color);font-weight:700}.md-nav--primary .md-nav__title .md-logo{display:block;left:.2rem;margin:.2rem;padding:.4rem;position:absolute;right:.2rem;top:.2rem}.md-nav--primary .md-nav__list{flex:1}.md-nav--primary .md-nav__item{border-top:.05rem solid var(--md-default-fg-color--lightest)}.md-nav--primary .md-nav__item--active>.md-nav__link{color:var(--md-typeset-a-color)}.md-nav--primary .md-nav__item--active>.md-nav__link:focus,.md-nav--primary .md-nav__item--active>.md-nav__link:hover{color:var(--md-accent-fg-color)}.md-nav--primary .md-nav__link{margin-top:0;padding:.6rem .8rem}.md-nav--primary .md-nav__link svg{margin-top:.1em}.md-nav--primary .md-nav__link>.md-nav__link{padding:0}[dir=ltr] .md-nav--primary .md-nav__link .md-nav__icon{margin-right:-.2rem}[dir=rtl] .md-nav--primary .md-nav__link .md-nav__icon{margin-left:-.2rem}.md-nav--primary .md-nav__link .md-nav__icon{font-size:1.2rem;height:1.2rem;width:1.2rem}.md-nav--primary .md-nav__link .md-nav__icon:after{background-color:currentcolor;content:"";display:block;height:100%;-webkit-mask-image:var(--md-nav-icon--next);mask-image:var(--md-nav-icon--next);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:100%}[dir=rtl] .md-nav--primary .md-nav__icon:after{transform:scale(-1)}.md-nav--primary .md-nav--secondary .md-nav{background-color:initial;position:static}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav__link{padding-left:1.4rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav__link{padding-right:1.4rem}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav__link{padding-left:2rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav__link{padding-right:2rem}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav__link{padding-left:2.6rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav__link{padding-right:2.6rem}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav .md-nav__link{padding-left:3.2rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav .md-nav__link{padding-right:3.2rem}.md-nav--secondary{background-color:initial}.md-nav__toggle~.md-nav{display:flex;opacity:0;transform:translateX(100%);transition:transform .25s cubic-bezier(.8,0,.6,1),opacity 125ms 50ms}[dir=rtl] .md-nav__toggle~.md-nav{transform:translateX(-100%)}.md-nav__toggle:checked~.md-nav{opacity:1;transform:translateX(0);transition:transform .25s cubic-bezier(.4,0,.2,1),opacity 125ms 125ms}.md-nav__toggle:checked~.md-nav>.md-nav__list{-webkit-backface-visibility:hidden;backface-visibility:hidden}}@media screen and (max-width:59.984375em){.md-nav--primary .md-nav__link[for=__toc]{display:flex}.md-nav--primary .md-nav__link[for=__toc] .md-icon:after{content:""}.md-nav--primary .md-nav__link[for=__toc]+.md-nav__link{display:none}.md-nav--primary .md-nav__link[for=__toc]~.md-nav{display:flex}.md-nav__source{background-color:var(--md-primary-fg-color--dark);color:var(--md-primary-bg-color);display:block;padding:0 .2rem}}@media screen and (min-width:60em) and (max-width:76.234375em){.md-nav--integrated .md-nav__link[for=__toc]{display:flex}.md-nav--integrated .md-nav__link[for=__toc] .md-icon:after{content:""}.md-nav--integrated .md-nav__link[for=__toc]+.md-nav__link{display:none}.md-nav--integrated .md-nav__link[for=__toc]~.md-nav{display:flex}}@media screen and (min-width:60em){.md-nav{margin-bottom:-.4rem}.md-nav--secondary .md-nav__title{background:var(--md-default-bg-color);box-shadow:0 0 .4rem .4rem var(--md-default-bg-color);position:sticky;top:0;z-index:1}.md-nav--secondary .md-nav__title[for=__toc]{scroll-snap-align:start}.md-nav--secondary .md-nav__title .md-nav__icon{display:none}[dir=ltr] .md-nav--secondary .md-nav__list{padding-left:.6rem}[dir=rtl] .md-nav--secondary .md-nav__list{padding-right:.6rem}.md-nav--secondary .md-nav__list{padding-bottom:.4rem}[dir=ltr] .md-nav--secondary .md-nav__item>.md-nav__link{margin-right:.4rem}[dir=rtl] .md-nav--secondary .md-nav__item>.md-nav__link{margin-left:.4rem}}@media screen and (min-width:76.25em){.md-nav{margin-bottom:-.4rem;transition:max-height .25s cubic-bezier(.86,0,.07,1)}.md-nav--primary .md-nav__title{background:var(--md-default-bg-color);box-shadow:0 0 .4rem .4rem var(--md-default-bg-color);position:sticky;top:0;z-index:1}.md-nav--primary .md-nav__title[for=__drawer]{scroll-snap-align:start}.md-nav--primary .md-nav__title .md-nav__icon{display:none}[dir=ltr] .md-nav--primary .md-nav__list{padding-left:.6rem}[dir=rtl] .md-nav--primary .md-nav__list{padding-right:.6rem}.md-nav--primary .md-nav__list{padding-bottom:.4rem}[dir=ltr] .md-nav--primary .md-nav__item>.md-nav__link{margin-right:.4rem}[dir=rtl] .md-nav--primary .md-nav__item>.md-nav__link{margin-left:.4rem}.md-nav__toggle~.md-nav{display:grid;grid-template-rows:minmax(.4rem,0fr);opacity:0;transition:grid-template-rows .25s cubic-bezier(.86,0,.07,1),opacity .25s,visibility 0ms .25s;visibility:collapse}.md-nav__toggle~.md-nav>.md-nav__list{overflow:hidden}.md-nav__toggle.md-toggle--indeterminate~.md-nav,.md-nav__toggle:checked~.md-nav{grid-template-rows:minmax(.4rem,1fr);opacity:1;transition:grid-template-rows .25s cubic-bezier(.86,0,.07,1),opacity .15s .1s,visibility 0ms;visibility:visible}.md-nav__toggle.md-toggle--indeterminate~.md-nav{transition:none}.md-nav__item--nested>.md-nav>.md-nav__title{display:none}.md-nav__item--section{display:block;margin:1.25em 0}.md-nav__item--section:last-child{margin-bottom:0}.md-nav__item--section>.md-nav__link{font-weight:700}.md-nav__item--section>.md-nav__link[for]{color:var(--md-default-fg-color--light)}.md-nav__item--section>.md-nav__link:not(.md-nav__container){pointer-events:none}.md-nav__item--section>.md-nav__link .md-icon,.md-nav__item--section>.md-nav__link>[for]{display:none}[dir=ltr] .md-nav__item--section>.md-nav{margin-left:-.6rem}[dir=rtl] .md-nav__item--section>.md-nav{margin-right:-.6rem}.md-nav__item--section>.md-nav{display:block;opacity:1;visibility:visible}.md-nav__item--section>.md-nav>.md-nav__list>.md-nav__item{padding:0}.md-nav__icon{border-radius:100%;height:.9rem;transition:background-color .25s;width:.9rem}.md-nav__icon:hover{background-color:var(--md-accent-fg-color--transparent)}.md-nav__icon:after{background-color:currentcolor;border-radius:100%;content:"";display:inline-block;height:100%;-webkit-mask-image:var(--md-nav-icon--next);mask-image:var(--md-nav-icon--next);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:transform .25s;vertical-align:-.1rem;width:100%}[dir=rtl] .md-nav__icon:after{transform:rotate(180deg)}.md-nav__item--nested .md-nav__toggle:checked~.md-nav__link .md-nav__icon:after,.md-nav__item--nested .md-toggle--indeterminate~.md-nav__link .md-nav__icon:after{transform:rotate(90deg)}.md-nav--lifted>.md-nav__list>.md-nav__item,.md-nav--lifted>.md-nav__title{display:none}.md-nav--lifted>.md-nav__list>.md-nav__item--active{display:block}.md-nav--lifted>.md-nav__list>.md-nav__item--active>.md-nav__link{background:var(--md-default-bg-color);box-shadow:0 0 .4rem .4rem var(--md-default-bg-color);margin-top:0;position:sticky;top:0;z-index:1}.md-nav--lifted>.md-nav__list>.md-nav__item--active>.md-nav__link:not(.md-nav__container){pointer-events:none}.md-nav--lifted>.md-nav__list>.md-nav__item--active.md-nav__item--section{margin:0}[dir=ltr] .md-nav--lifted>.md-nav__list>.md-nav__item>.md-nav:not(.md-nav--secondary){margin-left:-.6rem}[dir=rtl] .md-nav--lifted>.md-nav__list>.md-nav__item>.md-nav:not(.md-nav--secondary){margin-right:-.6rem}.md-nav--lifted>.md-nav__list>.md-nav__item>[for]{color:var(--md-default-fg-color--light)}.md-nav--lifted .md-nav[data-md-level="1"]{grid-template-rows:minmax(.4rem,1fr);opacity:1;visibility:visible}[dir=ltr] .md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary{border-left:.05rem solid var(--md-primary-fg-color)}[dir=rtl] .md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary{border-right:.05rem solid var(--md-primary-fg-color)}.md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary{display:block;margin-bottom:1.25em;opacity:1;visibility:visible}.md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary>.md-nav__list{overflow:visible;padding-bottom:0}.md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary>.md-nav__title{display:none}}.md-pagination{font-size:.8rem;font-weight:700;gap:.4rem}.md-pagination,.md-pagination>*{align-items:center;display:flex;justify-content:center}.md-pagination>*{border-radius:.2rem;height:1.8rem;min-width:1.8rem;text-align:center}.md-pagination__current{background-color:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--light)}.md-pagination__link{transition:color 125ms,background-color 125ms}.md-pagination__link:focus,.md-pagination__link:hover{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-pagination__link:focus svg,.md-pagination__link:hover svg{color:var(--md-accent-fg-color)}.md-pagination__link.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-pagination__link svg{fill:currentcolor;color:var(--md-default-fg-color--lighter);display:block;max-height:100%;width:1.2rem}:root{--md-path-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>')}.md-path{font-size:.7rem;margin:0 .8rem;overflow:auto;padding-top:1.2rem}.md-path:not([hidden]){display:block}@media screen and (min-width:76.25em){.md-path{margin:0 1.2rem}}.md-path__list{align-items:center;display:flex;gap:.2rem;list-style:none;margin:0;padding:0}.md-path__item:not(:first-child){display:inline-flex;gap:.2rem;white-space:nowrap}.md-path__item:not(:first-child):before{background-color:var(--md-default-fg-color--lighter);content:"";display:inline;height:.8rem;-webkit-mask-image:var(--md-path-icon);mask-image:var(--md-path-icon);width:.8rem}.md-path__link{align-items:center;color:var(--md-default-fg-color--light);display:flex}.md-path__link:focus,.md-path__link:hover{color:var(--md-accent-fg-color)}:root{--md-post-pin-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16 12V4h1V2H7v2h1v8l-2 2v2h5.2v6h1.6v-6H18v-2z"/></svg>')}.md-post__back{border-bottom:.05rem solid var(--md-default-fg-color--lightest);margin-bottom:1.2rem;padding-bottom:1.2rem}@media screen and (max-width:76.234375em){.md-post__back{display:none}}[dir=rtl] .md-post__back svg{transform:scaleX(-1)}.md-post__authors{display:flex;flex-direction:column;gap:.6rem;margin:0 .6rem 1.2rem}.md-post .md-post__meta a{transition:color 125ms}.md-post .md-post__meta a:focus,.md-post .md-post__meta a:hover{color:var(--md-accent-fg-color)}.md-post__title{color:var(--md-default-fg-color--light);font-weight:700}.md-post--excerpt{margin-bottom:3.2rem}.md-post--excerpt .md-post__header{align-items:center;display:flex;gap:.6rem;min-height:1.6rem}.md-post--excerpt .md-post__authors{align-items:center;display:inline-flex;flex-direction:row;gap:.2rem;margin:0;min-height:2.4rem}[dir=ltr] .md-post--excerpt .md-post__meta .md-meta__list{margin-right:.4rem}[dir=rtl] .md-post--excerpt .md-post__meta .md-meta__list{margin-left:.4rem}.md-post--excerpt .md-post__content>:first-child{--md-scroll-margin:6rem;margin-top:0}.md-post>.md-nav--secondary{margin:1em 0}.md-pin{background:var(--md-default-fg-color--lightest);border-radius:1rem;margin-top:-.05rem;padding:.2rem}.md-pin:after{background-color:currentcolor;content:"";display:block;height:.6rem;margin:0 auto;-webkit-mask-image:var(--md-post-pin-icon);mask-image:var(--md-post-pin-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:.6rem}.md-profile{align-items:center;display:flex;font-size:.7rem;gap:.6rem;line-height:1.4;width:100%}.md-profile__description{flex-grow:1}.md-content--post{display:flex}@media screen and (max-width:76.234375em){.md-content--post{flex-flow:column-reverse}}.md-content--post>.md-content__inner{flex-grow:1;min-width:0}@media screen and (min-width:76.25em){[dir=ltr] .md-content--post>.md-content__inner{margin-left:1.2rem}[dir=rtl] .md-content--post>.md-content__inner{margin-right:1.2rem}}@media screen and (max-width:76.234375em){.md-sidebar.md-sidebar--post{padding:0;position:static;width:100%}.md-sidebar.md-sidebar--post .md-sidebar__scrollwrap{overflow:visible}.md-sidebar.md-sidebar--post .md-sidebar__inner{padding:0}.md-sidebar.md-sidebar--post .md-post__meta{margin-left:.6rem;margin-right:.6rem}.md-sidebar.md-sidebar--post .md-nav__item{border:none;display:inline}.md-sidebar.md-sidebar--post .md-nav__list{display:inline-flex;flex-wrap:wrap;gap:.6rem;padding-bottom:.6rem;padding-top:.6rem}.md-sidebar.md-sidebar--post .md-nav__link{padding:0}.md-sidebar.md-sidebar--post .md-nav{height:auto;margin-bottom:0;position:static}}:root{--md-progress-value:0;--md-progress-delay:400ms}.md-progress{background:var(--md-primary-bg-color);height:.075rem;opacity:min(clamp(0,var(--md-progress-value),1),clamp(0,100 - var(--md-progress-value),1));position:fixed;top:0;transform:scaleX(calc(var(--md-progress-value)*1%));transform-origin:left;transition:transform .5s cubic-bezier(.19,1,.22,1),opacity .25s var(--md-progress-delay);width:100%;z-index:4}:root{--md-search-result-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h7c-.41-.25-.8-.56-1.14-.9-.33-.33-.61-.7-.86-1.1H6V4h7v5h5v1.18c.71.16 1.39.43 2 .82V8zm6.31 16.9c1.33-2.11.69-4.9-1.4-6.22-2.11-1.33-4.91-.68-6.22 1.4-1.34 2.11-.69 4.89 1.4 6.22 1.46.93 3.32.93 4.79.02L22 23.39 23.39 22zm-3.81.1a2.5 2.5 0 0 1-2.5-2.5 2.5 2.5 0 0 1 2.5-2.5 2.5 2.5 0 0 1 2.5 2.5 2.5 2.5 0 0 1-2.5 2.5"/></svg>')}.md-search{position:relative}@media screen and (min-width:60em){.md-search{padding:.2rem 0}}.no-js .md-search{display:none}.md-search__overlay{opacity:0;z-index:1}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__overlay{left:-2.2rem}[dir=rtl] .md-search__overlay{right:-2.2rem}.md-search__overlay{background-color:var(--md-default-bg-color);border-radius:1rem;height:2rem;overflow:hidden;pointer-events:none;position:absolute;top:-1rem;transform-origin:center;transition:transform .3s .1s,opacity .2s .2s;width:2rem}[data-md-toggle=search]:checked~.md-header .md-search__overlay{opacity:1;transition:transform .4s,opacity .1s}}@media screen and (min-width:60em){[dir=ltr] .md-search__overlay{left:0}[dir=rtl] .md-search__overlay{right:0}.md-search__overlay{background-color:#0000008a;cursor:pointer;height:0;position:fixed;top:0;transition:width 0ms .25s,height 0ms .25s,opacity .25s;width:0}[data-md-toggle=search]:checked~.md-header .md-search__overlay{height:200vh;opacity:1;transition:width 0ms,height 0ms,opacity .25s;width:100%}}@media screen and (max-width:29.984375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{transform:scale(45)}}@media screen and (min-width:30em) and (max-width:44.984375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{transform:scale(60)}}@media screen and (min-width:45em) and (max-width:59.984375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{transform:scale(75)}}.md-search__inner{-webkit-backface-visibility:hidden;backface-visibility:hidden}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__inner{left:0}[dir=rtl] .md-search__inner{right:0}.md-search__inner{height:0;opacity:0;overflow:hidden;position:fixed;top:0;transform:translateX(5%);transition:width 0ms .3s,height 0ms .3s,transform .15s cubic-bezier(.4,0,.2,1) .15s,opacity .15s .15s;width:0;z-index:2}[dir=rtl] .md-search__inner{transform:translateX(-5%)}[data-md-toggle=search]:checked~.md-header .md-search__inner{height:100%;opacity:1;transform:translateX(0);transition:width 0ms 0ms,height 0ms 0ms,transform .15s cubic-bezier(.1,.7,.1,1) .15s,opacity .15s .15s;width:100%}}@media screen and (min-width:60em){[dir=ltr] .md-search__inner{float:right}[dir=rtl] .md-search__inner{float:left}.md-search__inner{padding:.1rem 0;position:relative;transition:width .25s cubic-bezier(.1,.7,.1,1);width:11.7rem}}@media screen and (min-width:60em) and (max-width:76.234375em){[data-md-toggle=search]:checked~.md-header .md-search__inner{width:23.4rem}}@media screen and (min-width:76.25em){[data-md-toggle=search]:checked~.md-header .md-search__inner{width:34.4rem}}.md-search__form{background-color:var(--md-default-bg-color);box-shadow:0 0 .6rem #0000;height:2.4rem;position:relative;transition:color .25s,background-color .25s;z-index:2}@media screen and (min-width:60em){.md-search__form{background-color:#00000042;border-radius:.1rem;height:1.8rem}.md-search__form:hover{background-color:#ffffff1f}}[data-md-toggle=search]:checked~.md-header .md-search__form{background-color:var(--md-default-bg-color);border-radius:.1rem .1rem 0 0;box-shadow:0 0 .6rem #00000012;color:var(--md-default-fg-color)}[dir=ltr] .md-search__input{padding-left:3.6rem;padding-right:2.2rem}[dir=rtl] .md-search__input{padding-left:2.2rem;padding-right:3.6rem}.md-search__input{background:#0000;font-size:.9rem;height:100%;position:relative;text-overflow:ellipsis;width:100%;z-index:2}.md-search__input::placeholder{transition:color .25s}.md-search__input::placeholder,.md-search__input~.md-search__icon{color:var(--md-default-fg-color--light)}.md-search__input::-ms-clear{display:none}@media screen and (max-width:59.984375em){.md-search__input{font-size:.9rem;height:2.4rem;width:100%}}@media screen and (min-width:60em){[dir=ltr] .md-search__input{padding-left:2.2rem}[dir=rtl] .md-search__input{padding-right:2.2rem}.md-search__input{color:inherit;font-size:.8rem}.md-search__input::placeholder{color:var(--md-primary-bg-color--light)}.md-search__input+.md-search__icon{color:var(--md-primary-bg-color)}[data-md-toggle=search]:checked~.md-header .md-search__input{text-overflow:clip}[data-md-toggle=search]:checked~.md-header .md-search__input+.md-search__icon{color:var(--md-default-fg-color--light)}[data-md-toggle=search]:checked~.md-header .md-search__input::placeholder{color:#0000}}.md-search__icon{cursor:pointer;display:inline-block;height:1.2rem;transition:color .25s,opacity .25s;width:1.2rem}.md-search__icon:hover{opacity:.7}[dir=ltr] .md-search__icon[for=__search]{left:.5rem}[dir=rtl] .md-search__icon[for=__search]{right:.5rem}.md-search__icon[for=__search]{position:absolute;top:.3rem;z-index:2}[dir=rtl] .md-search__icon[for=__search] svg{transform:scaleX(-1)}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__icon[for=__search]{left:.8rem}[dir=rtl] .md-search__icon[for=__search]{right:.8rem}.md-search__icon[for=__search]{top:.6rem}.md-search__icon[for=__search] svg:first-child{display:none}}@media screen and (min-width:60em){.md-search__icon[for=__search]{pointer-events:none}.md-search__icon[for=__search] svg:last-child{display:none}}[dir=ltr] .md-search__options{right:.5rem}[dir=rtl] .md-search__options{left:.5rem}.md-search__options{pointer-events:none;position:absolute;top:.3rem;z-index:2}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__options{right:.8rem}[dir=rtl] .md-search__options{left:.8rem}.md-search__options{top:.6rem}}[dir=ltr] .md-search__options>.md-icon{margin-left:.2rem}[dir=rtl] .md-search__options>.md-icon{margin-right:.2rem}.md-search__options>.md-icon{color:var(--md-default-fg-color--light);opacity:0;transform:scale(.75);transition:transform .15s cubic-bezier(.1,.7,.1,1),opacity .15s}.md-search__options>.md-icon:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}[data-md-toggle=search]:checked~.md-header .md-search__input:valid~.md-search__options>.md-icon{opacity:1;pointer-events:auto;transform:scale(1)}[data-md-toggle=search]:checked~.md-header .md-search__input:valid~.md-search__options>.md-icon:hover{opacity:.7}[dir=ltr] .md-search__suggest{padding-left:3.6rem;padding-right:2.2rem}[dir=rtl] .md-search__suggest{padding-left:2.2rem;padding-right:3.6rem}.md-search__suggest{align-items:center;color:var(--md-default-fg-color--lighter);display:flex;font-size:.9rem;height:100%;opacity:0;position:absolute;top:0;transition:opacity 50ms;white-space:nowrap;width:100%}@media screen and (min-width:60em){[dir=ltr] .md-search__suggest{padding-left:2.2rem}[dir=rtl] .md-search__suggest{padding-right:2.2rem}.md-search__suggest{font-size:.8rem}}[data-md-toggle=search]:checked~.md-header .md-search__suggest{opacity:1;transition:opacity .3s .1s}[dir=ltr] .md-search__output{border-bottom-left-radius:.1rem}[dir=ltr] .md-search__output,[dir=rtl] .md-search__output{border-bottom-right-radius:.1rem}[dir=rtl] .md-search__output{border-bottom-left-radius:.1rem}.md-search__output{overflow:hidden;position:absolute;width:100%;z-index:1}@media screen and (max-width:59.984375em){.md-search__output{bottom:0;top:2.4rem}}@media screen and (min-width:60em){.md-search__output{opacity:0;top:1.9rem;transition:opacity .4s}[data-md-toggle=search]:checked~.md-header .md-search__output{box-shadow:var(--md-shadow-z3);opacity:1}}.md-search__scrollwrap{-webkit-backface-visibility:hidden;backface-visibility:hidden;background-color:var(--md-default-bg-color);height:100%;overflow-y:auto;touch-action:pan-y}@media (-webkit-max-device-pixel-ratio:1),(max-resolution:1dppx){.md-search__scrollwrap{transform:translateZ(0)}}@media screen and (min-width:60em) and (max-width:76.234375em){.md-search__scrollwrap{width:23.4rem}}@media screen and (min-width:76.25em){.md-search__scrollwrap{width:34.4rem}}@media screen and (min-width:60em){.md-search__scrollwrap{max-height:0;scrollbar-color:var(--md-default-fg-color--lighter) #0000;scrollbar-width:thin}[data-md-toggle=search]:checked~.md-header .md-search__scrollwrap{max-height:75vh}.md-search__scrollwrap:hover{scrollbar-color:var(--md-accent-fg-color) #0000}.md-search__scrollwrap::-webkit-scrollbar{height:.2rem;width:.2rem}.md-search__scrollwrap::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-search__scrollwrap::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}}.md-search-result{color:var(--md-default-fg-color);word-break:break-word}.md-search-result__meta{background-color:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--light);font-size:.64rem;line-height:1.8rem;padding:0 .8rem;scroll-snap-align:start}@media screen and (min-width:60em){[dir=ltr] .md-search-result__meta{padding-left:2.2rem}[dir=rtl] .md-search-result__meta{padding-right:2.2rem}}.md-search-result__list{list-style:none;margin:0;padding:0;-webkit-user-select:none;user-select:none}.md-search-result__item{box-shadow:0 -.05rem var(--md-default-fg-color--lightest)}.md-search-result__item:first-child{box-shadow:none}.md-search-result__link{display:block;outline:none;scroll-snap-align:start;transition:background-color .25s}.md-search-result__link:focus,.md-search-result__link:hover{background-color:var(--md-accent-fg-color--transparent)}.md-search-result__link:last-child p:last-child{margin-bottom:.6rem}.md-search-result__more>summary{cursor:pointer;display:block;outline:none;position:sticky;scroll-snap-align:start;top:0;z-index:1}.md-search-result__more>summary::marker{display:none}.md-search-result__more>summary::-webkit-details-marker{display:none}.md-search-result__more>summary>div{color:var(--md-typeset-a-color);font-size:.64rem;padding:.75em .8rem;transition:color .25s,background-color .25s}@media screen and (min-width:60em){[dir=ltr] .md-search-result__more>summary>div{padding-left:2.2rem}[dir=rtl] .md-search-result__more>summary>div{padding-right:2.2rem}}.md-search-result__more>summary:focus>div,.md-search-result__more>summary:hover>div{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-search-result__more[open]>summary{background-color:var(--md-default-bg-color)}.md-search-result__article{overflow:hidden;padding:0 .8rem;position:relative}@media screen and (min-width:60em){[dir=ltr] .md-search-result__article{padding-left:2.2rem}[dir=rtl] .md-search-result__article{padding-right:2.2rem}}[dir=ltr] .md-search-result__icon{left:0}[dir=rtl] .md-search-result__icon{right:0}.md-search-result__icon{color:var(--md-default-fg-color--light);height:1.2rem;margin:.5rem;position:absolute;width:1.2rem}@media screen and (max-width:59.984375em){.md-search-result__icon{display:none}}.md-search-result__icon:after{background-color:currentcolor;content:"";display:inline-block;height:100%;-webkit-mask-image:var(--md-search-result-icon);mask-image:var(--md-search-result-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:100%}[dir=rtl] .md-search-result__icon:after{transform:scaleX(-1)}.md-search-result .md-typeset{color:var(--md-default-fg-color--light);font-size:.64rem;line-height:1.6}.md-search-result .md-typeset h1{color:var(--md-default-fg-color);font-size:.8rem;font-weight:400;line-height:1.4;margin:.55rem 0}.md-search-result .md-typeset h1 mark{text-decoration:none}.md-search-result .md-typeset h2{color:var(--md-default-fg-color);font-size:.64rem;font-weight:700;line-height:1.6;margin:.5em 0}.md-search-result .md-typeset h2 mark{text-decoration:none}.md-search-result__terms{color:var(--md-default-fg-color);display:block;font-size:.64rem;font-style:italic;margin:.5em 0}.md-search-result mark{background-color:initial;color:var(--md-accent-fg-color);text-decoration:underline}.md-select{position:relative;z-index:1}.md-select__inner{background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color);left:50%;margin-top:.2rem;max-height:0;opacity:0;position:absolute;top:calc(100% - .2rem);transform:translate3d(-50%,.3rem,0);transition:transform .25s 375ms,opacity .25s .25s,max-height 0ms .5s}.md-select:focus-within .md-select__inner,.md-select:hover .md-select__inner{max-height:10rem;opacity:1;transform:translate3d(-50%,0,0);transition:transform .25s cubic-bezier(.1,.7,.1,1),opacity .25s,max-height 0ms}.md-select__inner:after{border-bottom:.2rem solid #0000;border-bottom-color:var(--md-default-bg-color);border-left:.2rem solid #0000;border-right:.2rem solid #0000;border-top:0;content:"";height:0;left:50%;margin-left:-.2rem;margin-top:-.2rem;position:absolute;top:0;width:0}.md-select__list{border-radius:.1rem;font-size:.8rem;list-style-type:none;margin:0;max-height:inherit;overflow:auto;padding:0}.md-select__item{line-height:1.8rem}[dir=ltr] .md-select__link{padding-left:.6rem;padding-right:1.2rem}[dir=rtl] .md-select__link{padding-left:1.2rem;padding-right:.6rem}.md-select__link{cursor:pointer;display:block;outline:none;scroll-snap-align:start;transition:background-color .25s,color .25s;width:100%}.md-select__link:focus,.md-select__link:hover{color:var(--md-accent-fg-color)}.md-select__link:focus{background-color:var(--md-default-fg-color--lightest)}.md-sidebar{align-self:flex-start;flex-shrink:0;padding:1.2rem 0;position:sticky;top:2.4rem;width:12.1rem}@media print{.md-sidebar{display:none}}@media screen and (max-width:76.234375em){[dir=ltr] .md-sidebar--primary{left:-12.1rem}[dir=rtl] .md-sidebar--primary{right:-12.1rem}.md-sidebar--primary{background-color:var(--md-default-bg-color);display:block;height:100%;position:fixed;top:0;transform:translateX(0);transition:transform .25s cubic-bezier(.4,0,.2,1),box-shadow .25s;width:12.1rem;z-index:5}[data-md-toggle=drawer]:checked~.md-container .md-sidebar--primary{box-shadow:var(--md-shadow-z3);transform:translateX(12.1rem)}[dir=rtl] [data-md-toggle=drawer]:checked~.md-container .md-sidebar--primary{transform:translateX(-12.1rem)}.md-sidebar--primary .md-sidebar__scrollwrap{bottom:0;left:0;margin:0;overflow:hidden;position:absolute;right:0;scroll-snap-type:none;top:0}}@media screen and (min-width:76.25em){.md-sidebar{height:0}.no-js .md-sidebar{height:auto}.md-header--lifted~.md-container .md-sidebar{top:4.8rem}}.md-sidebar--secondary{display:none;order:2}@media screen and (min-width:60em){.md-sidebar--secondary{height:0}.no-js .md-sidebar--secondary{height:auto}.md-sidebar--secondary:not([hidden]){display:block}.md-sidebar--secondary .md-sidebar__scrollwrap{touch-action:pan-y}}.md-sidebar__scrollwrap{-webkit-backface-visibility:hidden;backface-visibility:hidden;margin:0 .2rem;overflow-y:auto;scrollbar-color:var(--md-default-fg-color--lighter) #0000}@media screen and (min-width:60em){.md-sidebar__scrollwrap{scrollbar-gutter:stable;scrollbar-width:thin}}.md-sidebar__scrollwrap::-webkit-scrollbar{height:.2rem;width:.2rem}.md-sidebar__scrollwrap:focus-within,.md-sidebar__scrollwrap:hover{scrollbar-color:var(--md-accent-fg-color) #0000}.md-sidebar__scrollwrap:focus-within::-webkit-scrollbar-thumb,.md-sidebar__scrollwrap:hover::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-sidebar__scrollwrap:focus-within::-webkit-scrollbar-thumb:hover,.md-sidebar__scrollwrap:hover::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}@supports selector(::-webkit-scrollbar){.md-sidebar__scrollwrap{scrollbar-gutter:auto}[dir=ltr] .md-sidebar__inner{padding-right:calc(100% - 11.5rem)}[dir=rtl] .md-sidebar__inner{padding-left:calc(100% - 11.5rem)}}@media screen and (max-width:76.234375em){.md-overlay{background-color:#0000008a;height:0;opacity:0;position:fixed;top:0;transition:width 0ms .25s,height 0ms .25s,opacity .25s;width:0;z-index:5}[data-md-toggle=drawer]:checked~.md-overlay{height:100%;opacity:1;transition:width 0ms,height 0ms,opacity .25s;width:100%}}@keyframes facts{0%{height:0}to{height:.65rem}}@keyframes fact{0%{opacity:0;transform:translateY(100%)}50%{opacity:0}to{opacity:1;transform:translateY(0)}}:root{--md-source-forks-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0M5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0m6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5m-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0"/></svg>');--md-source-repositories-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M2 2.5A2.5 2.5 0 0 1 4.5 0h8.75a.75.75 0 0 1 .75.75v12.5a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h1.75v-2h-8a1 1 0 0 0-.714 1.7.75.75 0 1 1-1.072 1.05A2.5 2.5 0 0 1 2 11.5Zm10.5-1h-8a1 1 0 0 0-1 1v6.708A2.5 2.5 0 0 1 4.5 9h8ZM5 12.25a.25.25 0 0 1 .25-.25h3.5a.25.25 0 0 1 .25.25v3.25a.25.25 0 0 1-.4.2l-1.45-1.087a.25.25 0 0 0-.3 0L5.4 15.7a.25.25 0 0 1-.4-.2Z"/></svg>');--md-source-stars-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25m0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41z"/></svg>');--md-source-version-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.75 1.75 0 0 1 1 7.775m1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2"/></svg>')}.md-source{-webkit-backface-visibility:hidden;backface-visibility:hidden;display:block;font-size:.65rem;line-height:1.2;outline-color:var(--md-accent-fg-color);transition:opacity .25s;white-space:nowrap}.md-source:hover{opacity:.7}.md-source__icon{display:inline-block;height:2.4rem;vertical-align:middle;width:2rem}[dir=ltr] .md-source__icon svg{margin-left:.6rem}[dir=rtl] .md-source__icon svg{margin-right:.6rem}.md-source__icon svg{margin-top:.6rem}[dir=ltr] .md-source__icon+.md-source__repository{padding-left:2rem}[dir=rtl] .md-source__icon+.md-source__repository{padding-right:2rem}[dir=ltr] .md-source__icon+.md-source__repository{margin-left:-2rem}[dir=rtl] .md-source__icon+.md-source__repository{margin-right:-2rem}[dir=ltr] .md-source__repository{margin-left:.6rem}[dir=rtl] .md-source__repository{margin-right:.6rem}.md-source__repository{display:inline-block;max-width:calc(100% - 1.2rem);overflow:hidden;text-overflow:ellipsis;vertical-align:middle}.md-source__facts{display:flex;font-size:.55rem;gap:.4rem;list-style-type:none;margin:.1rem 0 0;opacity:.75;overflow:hidden;padding:0;width:100%}.md-source__repository--active .md-source__facts{animation:facts .25s ease-in}.md-source__fact{overflow:hidden;text-overflow:ellipsis}.md-source__repository--active .md-source__fact{animation:fact .4s ease-out}[dir=ltr] .md-source__fact:before{margin-right:.1rem}[dir=rtl] .md-source__fact:before{margin-left:.1rem}.md-source__fact:before{background-color:currentcolor;content:"";display:inline-block;height:.6rem;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;vertical-align:text-top;width:.6rem}.md-source__fact:nth-child(1n+2){flex-shrink:0}.md-source__fact--version:before{-webkit-mask-image:var(--md-source-version-icon);mask-image:var(--md-source-version-icon)}.md-source__fact--stars:before{-webkit-mask-image:var(--md-source-stars-icon);mask-image:var(--md-source-stars-icon)}.md-source__fact--forks:before{-webkit-mask-image:var(--md-source-forks-icon);mask-image:var(--md-source-forks-icon)}.md-source__fact--repositories:before{-webkit-mask-image:var(--md-source-repositories-icon);mask-image:var(--md-source-repositories-icon)}.md-source-file{margin:1em 0}[dir=ltr] .md-source-file__fact{margin-right:.6rem}[dir=rtl] .md-source-file__fact{margin-left:.6rem}.md-source-file__fact{align-items:center;color:var(--md-default-fg-color--light);display:inline-flex;font-size:.68rem;gap:.3rem}.md-source-file__fact .md-icon{flex-shrink:0;margin-bottom:.05rem}[dir=ltr] .md-source-file__fact .md-author{float:left}[dir=rtl] .md-source-file__fact .md-author{float:right}.md-source-file__fact .md-author{margin-right:.2rem}.md-source-file__fact svg{width:.9rem}:root{--md-status:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11 9h2V7h-2m1 13c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8m0-18A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2m-1 15h2v-6h-2z"/></svg>');--md-status--new:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m23 12-2.44-2.78.34-3.68-3.61-.82-1.89-3.18L12 3 8.6 1.54 6.71 4.72l-3.61.81.34 3.68L1 12l2.44 2.78-.34 3.69 3.61.82 1.89 3.18L12 21l3.4 1.46 1.89-3.18 3.61-.82-.34-3.68zm-10 5h-2v-2h2zm0-4h-2V7h2z"/></svg>');--md-status--deprecated:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9 3v1H4v2h1v13a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V6h1V4h-5V3zm0 5h2v9H9zm4 0h2v9h-2z"/></svg>');--md-status--encrypted:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5zm0 6c1.4 0 2.8 1.1 2.8 2.5V11c.6 0 1.2.6 1.2 1.3v3.5c0 .6-.6 1.2-1.3 1.2H9.2c-.6 0-1.2-.6-1.2-1.3v-3.5c0-.6.6-1.2 1.2-1.2V9.5C9.2 8.1 10.6 7 12 7m0 1.2c-.8 0-1.5.5-1.5 1.3V11h3V9.5c0-.8-.7-1.3-1.5-1.3"/></svg>')}.md-status:after{background-color:var(--md-default-fg-color--light);content:"";display:inline-block;height:1.125em;-webkit-mask-image:var(--md-status);mask-image:var(--md-status);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;vertical-align:text-bottom;width:1.125em}.md-status:hover:after{background-color:currentcolor}.md-status--new:after{-webkit-mask-image:var(--md-status--new);mask-image:var(--md-status--new)}.md-status--deprecated:after{-webkit-mask-image:var(--md-status--deprecated);mask-image:var(--md-status--deprecated)}.md-status--encrypted:after{-webkit-mask-image:var(--md-status--encrypted);mask-image:var(--md-status--encrypted)}.md-tabs{background-color:var(--md-primary-fg-color);color:var(--md-primary-bg-color);display:block;line-height:1.3;overflow:auto;width:100%;z-index:3}@media print{.md-tabs{display:none}}@media screen and (max-width:76.234375em){.md-tabs{display:none}}.md-tabs[hidden]{pointer-events:none}[dir=ltr] .md-tabs__list{margin-left:.2rem}[dir=rtl] .md-tabs__list{margin-right:.2rem}.md-tabs__list{contain:content;display:flex;list-style:none;margin:0;overflow:auto;padding:0;scrollbar-width:none;white-space:nowrap}.md-tabs__list::-webkit-scrollbar{display:none}.md-tabs__item{height:2.4rem;padding-left:.6rem;padding-right:.6rem}.md-tabs__item--active .md-tabs__link{color:inherit;opacity:1}.md-tabs__link{-webkit-backface-visibility:hidden;backface-visibility:hidden;display:flex;font-size:.7rem;margin-top:.8rem;opacity:.7;outline-color:var(--md-accent-fg-color);outline-offset:.2rem;transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .25s}.md-tabs__link:focus,.md-tabs__link:hover{color:inherit;opacity:1}[dir=ltr] .md-tabs__link svg{margin-right:.4rem}[dir=rtl] .md-tabs__link svg{margin-left:.4rem}.md-tabs__link svg{fill:currentcolor;height:1.3em}.md-tabs__item:nth-child(2) .md-tabs__link{transition-delay:20ms}.md-tabs__item:nth-child(3) .md-tabs__link{transition-delay:40ms}.md-tabs__item:nth-child(4) .md-tabs__link{transition-delay:60ms}.md-tabs__item:nth-child(5) .md-tabs__link{transition-delay:80ms}.md-tabs__item:nth-child(6) .md-tabs__link{transition-delay:.1s}.md-tabs__item:nth-child(7) .md-tabs__link{transition-delay:.12s}.md-tabs__item:nth-child(8) .md-tabs__link{transition-delay:.14s}.md-tabs__item:nth-child(9) .md-tabs__link{transition-delay:.16s}.md-tabs__item:nth-child(10) .md-tabs__link{transition-delay:.18s}.md-tabs__item:nth-child(11) .md-tabs__link{transition-delay:.2s}.md-tabs__item:nth-child(12) .md-tabs__link{transition-delay:.22s}.md-tabs__item:nth-child(13) .md-tabs__link{transition-delay:.24s}.md-tabs__item:nth-child(14) .md-tabs__link{transition-delay:.26s}.md-tabs__item:nth-child(15) .md-tabs__link{transition-delay:.28s}.md-tabs__item:nth-child(16) .md-tabs__link{transition-delay:.3s}.md-tabs[hidden] .md-tabs__link{opacity:0;transform:translateY(50%);transition:transform 0ms .1s,opacity .1s}:root{--md-tag-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m5.41 21 .71-4h-4l.35-2h4l1.06-6h-4l.35-2h4l.71-4h2l-.71 4h6l.71-4h2l-.71 4h4l-.35 2h-4l-1.06 6h4l-.35 2h-4l-.71 4h-2l.71-4h-6l-.71 4zM9.53 9l-1.06 6h6l1.06-6z"/></svg>')}.md-typeset .md-tags:not([hidden]){display:inline-flex;flex-wrap:wrap;gap:.5em;margin-bottom:.75em;margin-top:-.125em}.md-typeset .md-tag{align-items:center;background:var(--md-default-fg-color--lightest);border-radius:2.4rem;display:inline-flex;font-size:.64rem;font-size:min(.8em,.64rem);font-weight:700;gap:.5em;letter-spacing:normal;line-height:1.6;padding:.3125em .78125em}.md-typeset .md-tag[href]{-webkit-tap-highlight-color:transparent;color:inherit;outline:none;transition:color 125ms,background-color 125ms}.md-typeset .md-tag[href]:focus,.md-typeset .md-tag[href]:hover{background-color:var(--md-accent-fg-color);color:var(--md-accent-bg-color)}[id]>.md-typeset .md-tag{vertical-align:text-top}.md-typeset .md-tag-shadow{opacity:.5}.md-typeset .md-tag-icon:before{background-color:var(--md-default-fg-color--lighter);content:"";display:inline-block;height:1.2em;-webkit-mask-image:var(--md-tag-icon);mask-image:var(--md-tag-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:background-color 125ms;vertical-align:text-bottom;width:1.2em}.md-typeset .md-tag-icon[href]:focus:before,.md-typeset .md-tag-icon[href]:hover:before{background-color:var(--md-accent-bg-color)}@keyframes pulse{0%{transform:scale(.95)}75%{transform:scale(1)}to{transform:scale(.95)}}:root{--md-annotation-bg-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 2A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2"/></svg>');--md-annotation-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M17 13h-4v4h-2v-4H7v-2h4V7h2v4h4m-5-9A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2"/></svg>')}.md-tooltip{-webkit-backface-visibility:hidden;backface-visibility:hidden;background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color);font-family:var(--md-text-font-family);left:clamp(var(--md-tooltip-0,0rem) + .8rem,var(--md-tooltip-x),100vw + var(--md-tooltip-0,0rem) + .8rem - var(--md-tooltip-width) - 2 * .8rem);max-width:calc(100vw - 1.6rem);opacity:0;position:absolute;top:var(--md-tooltip-y);transform:translateY(-.4rem);transition:transform 0ms .25s,opacity .25s,z-index .25s;width:var(--md-tooltip-width);z-index:0}.md-tooltip--active{opacity:1;transform:translateY(0);transition:transform .25s cubic-bezier(.1,.7,.1,1),opacity .25s,z-index 0ms;z-index:2}.md-tooltip--inline{font-weight:700;-webkit-user-select:none;user-select:none;width:auto}.md-tooltip--inline:not(.md-tooltip--active){transform:translateY(.2rem) scale(.9)}.md-tooltip--inline .md-tooltip__inner{font-size:.5rem;padding:.2rem .4rem}[hidden]+.md-tooltip--inline{display:none}.focus-visible>.md-tooltip,.md-tooltip:target{outline:var(--md-accent-fg-color) auto}.md-tooltip__inner{font-size:.64rem;padding:.8rem}.md-tooltip__inner.md-typeset>:first-child{margin-top:0}.md-tooltip__inner.md-typeset>:last-child{margin-bottom:0}.md-annotation{font-style:normal;font-weight:400;outline:none;text-align:initial;vertical-align:text-bottom;white-space:normal}[dir=rtl] .md-annotation{direction:rtl}code .md-annotation{font-family:var(--md-code-font-family);font-size:inherit}.md-annotation:not([hidden]){display:inline-block;line-height:1.25}.md-annotation__index{border-radius:.01px;cursor:pointer;display:inline-block;margin-left:.4ch;margin-right:.4ch;outline:none;overflow:hidden;position:relative;-webkit-user-select:none;user-select:none;vertical-align:text-top;z-index:0}.md-annotation .md-annotation__index{transition:z-index .25s}@media screen{.md-annotation__index{width:2.2ch}[data-md-visible]>.md-annotation__index{animation:pulse 2s infinite}.md-annotation__index:before{background:var(--md-default-bg-color);-webkit-mask-image:var(--md-annotation-bg-icon);mask-image:var(--md-annotation-bg-icon)}.md-annotation__index:after,.md-annotation__index:before{content:"";height:2.2ch;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:-.1ch;width:2.2ch;z-index:-1}.md-annotation__index:after{background-color:var(--md-default-fg-color--lighter);-webkit-mask-image:var(--md-annotation-icon);mask-image:var(--md-annotation-icon);transform:scale(1.0001);transition:background-color .25s,transform .25s}.md-tooltip--active+.md-annotation__index:after{transform:rotate(45deg)}.md-tooltip--active+.md-annotation__index:after,:hover>.md-annotation__index:after{background-color:var(--md-accent-fg-color)}}.md-tooltip--active+.md-annotation__index{animation-play-state:paused;transition-duration:0ms;z-index:2}.md-annotation__index [data-md-annotation-id]{display:inline-block}@media print{.md-annotation__index [data-md-annotation-id]{background:var(--md-default-fg-color--lighter);border-radius:2ch;color:var(--md-default-bg-color);font-weight:700;padding:0 .6ch;white-space:nowrap}.md-annotation__index [data-md-annotation-id]:after{content:attr(data-md-annotation-id)}}.md-typeset .md-annotation-list{counter-reset:annotation;list-style:none!important}.md-typeset .md-annotation-list li{position:relative}[dir=ltr] .md-typeset .md-annotation-list li:before{left:-2.125em}[dir=rtl] .md-typeset .md-annotation-list li:before{right:-2.125em}.md-typeset .md-annotation-list li:before{background:var(--md-default-fg-color--lighter);border-radius:2ch;color:var(--md-default-bg-color);content:counter(annotation);counter-increment:annotation;font-size:.8875em;font-weight:700;height:2ch;line-height:1.25;min-width:2ch;padding:0 .6ch;position:absolute;text-align:center;top:.25em}:root{--md-tooltip-width:20rem;--md-tooltip-tail:0.3rem}.md-tooltip2{-webkit-backface-visibility:hidden;backface-visibility:hidden;color:var(--md-default-fg-color);font-family:var(--md-text-font-family);opacity:0;pointer-events:none;position:absolute;top:calc(var(--md-tooltip-host-y) + var(--md-tooltip-y));transform:translateY(-.4rem);transform-origin:calc(var(--md-tooltip-host-x) + var(--md-tooltip-x)) 0;transition:transform 0ms .25s,opacity .25s,z-index .25s;width:100%;z-index:0}.md-tooltip2:before{border-left:var(--md-tooltip-tail) solid #0000;border-right:var(--md-tooltip-tail) solid #0000;content:"";display:block;left:clamp(1.5 * .8rem,var(--md-tooltip-host-x) + var(--md-tooltip-x) - var(--md-tooltip-tail),100vw - 2 * var(--md-tooltip-tail) - 1.5 * .8rem);position:absolute;z-index:1}.md-tooltip2--top:before{border-top:var(--md-tooltip-tail) solid var(--md-default-bg-color);bottom:calc(var(--md-tooltip-tail)*-1 + .025rem);filter:drop-shadow(0 1px 0 hsla(0,0%,0%,.05))}.md-tooltip2--bottom:before{border-bottom:var(--md-tooltip-tail) solid var(--md-default-bg-color);filter:drop-shadow(0 -1px 0 hsla(0,0%,0%,.05));top:calc(var(--md-tooltip-tail)*-1 + .025rem)}.md-tooltip2--active{opacity:1;transform:translateY(0);transition:transform .4s cubic-bezier(0,1,.5,1),opacity .25s,z-index 0ms;z-index:2}.md-tooltip2__inner{scrollbar-gutter:stable;background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);left:clamp(.8rem,var(--md-tooltip-host-x) - .8rem,100vw - var(--md-tooltip-width) - .8rem);max-height:40vh;max-width:calc(100vw - 1.6rem);position:relative;scrollbar-width:thin}.md-tooltip2__inner::-webkit-scrollbar{height:.2rem;width:.2rem}.md-tooltip2__inner::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-tooltip2__inner::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}[role=dialog]>.md-tooltip2__inner{font-size:.64rem;overflow:auto;padding:0 .8rem;pointer-events:auto;width:var(--md-tooltip-width)}[role=dialog]>.md-tooltip2__inner:after,[role=dialog]>.md-tooltip2__inner:before{content:"";display:block;height:.8rem;position:sticky;width:100%;z-index:10}[role=dialog]>.md-tooltip2__inner:before{background:linear-gradient(var(--md-default-bg-color),#0000 75%);top:0}[role=dialog]>.md-tooltip2__inner:after{background:linear-gradient(#0000,var(--md-default-bg-color) 75%);bottom:0}[role=tooltip]>.md-tooltip2__inner{font-size:.5rem;font-weight:700;left:clamp(.8rem,var(--md-tooltip-host-x) + var(--md-tooltip-x) - var(--md-tooltip-width)/2,100vw - var(--md-tooltip-width) - .8rem);max-width:min(100vw - 2 * .8rem,400px);padding:.2rem .4rem;-webkit-user-select:none;user-select:none;width:-moz-fit-content;width:fit-content}.md-tooltip2__inner.md-typeset>:first-child{margin-top:0}.md-tooltip2__inner.md-typeset>:last-child{margin-bottom:0}[dir=ltr] .md-top{margin-left:50%}[dir=rtl] .md-top{margin-right:50%}.md-top{background-color:var(--md-default-bg-color);border-radius:1.6rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color--light);cursor:pointer;display:block;font-size:.7rem;outline:none;padding:.4rem .8rem;position:fixed;top:3.2rem;transform:translate(-50%);transition:color 125ms,background-color 125ms,transform 125ms cubic-bezier(.4,0,.2,1),opacity 125ms;z-index:2}@media print{.md-top{display:none}}[dir=rtl] .md-top{transform:translate(50%)}.md-top[hidden]{opacity:0;pointer-events:none;transform:translate(-50%,.2rem);transition-duration:0ms}[dir=rtl] .md-top[hidden]{transform:translate(50%,.2rem)}.md-top:focus,.md-top:hover{background-color:var(--md-accent-fg-color);color:var(--md-accent-bg-color)}.md-top svg{display:inline-block;vertical-align:-.5em}@keyframes hoverfix{0%{pointer-events:none}}:root{--md-version-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!--! Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2024 Fonticons, Inc.--><path d="M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9S301 191.9 288 191.9L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z"/></svg>')}.md-version{flex-shrink:0;font-size:.8rem;height:2.4rem}[dir=ltr] .md-version__current{margin-left:1.4rem;margin-right:.4rem}[dir=rtl] .md-version__current{margin-left:.4rem;margin-right:1.4rem}.md-version__current{color:inherit;cursor:pointer;outline:none;position:relative;top:.05rem}[dir=ltr] .md-version__current:after{margin-left:.4rem}[dir=rtl] .md-version__current:after{margin-right:.4rem}.md-version__current:after{background-color:currentcolor;content:"";display:inline-block;height:.6rem;-webkit-mask-image:var(--md-version-icon);mask-image:var(--md-version-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:.4rem}.md-version__alias{margin-left:.3rem;opacity:.7}.md-version__list{background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color);list-style-type:none;margin:.2rem .8rem;max-height:0;opacity:0;overflow:auto;padding:0;position:absolute;scroll-snap-type:y mandatory;top:.15rem;transition:max-height 0ms .5s,opacity .25s .25s;z-index:3}.md-version:focus-within .md-version__list,.md-version:hover .md-version__list{max-height:10rem;opacity:1;transition:max-height 0ms,opacity .25s}@media (hover:none),(pointer:coarse){.md-version:hover .md-version__list{animation:hoverfix .25s forwards}.md-version:focus-within .md-version__list{animation:none}}.md-version__item{line-height:1.8rem}[dir=ltr] .md-version__link{padding-left:.6rem;padding-right:1.2rem}[dir=rtl] .md-version__link{padding-left:1.2rem;padding-right:.6rem}.md-version__link{cursor:pointer;display:block;outline:none;scroll-snap-align:start;transition:color .25s,background-color .25s;white-space:nowrap;width:100%}.md-version__link:focus,.md-version__link:hover{color:var(--md-accent-fg-color)}.md-version__link:focus{background-color:var(--md-default-fg-color--lightest)}:root{--md-admonition-icon--note:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m3.1 5.07c.14 0 .28.05.4.16l1.27 1.27c.23.22.23.57 0 .78l-1 1-2.05-2.05 1-1c.1-.11.24-.16.38-.16m-1.97 1.74 2.06 2.06-6.06 6.06H7.07v-2.06z"/></svg>');--md-admonition-icon--abstract:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M17 9H7V7h10m0 6H7v-2h10m-3 6H7v-2h7M12 3a1 1 0 0 1 1 1 1 1 0 0 1-1 1 1 1 0 0 1-1-1 1 1 0 0 1 1-1m7 0h-4.18C14.4 1.84 13.3 1 12 1s-2.4.84-2.82 2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2"/></svg>');--md-admonition-icon--info:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13 9h-2V7h2m0 10h-2v-6h2m-1-9A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2"/></svg>');--md-admonition-icon--tip:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M17.66 11.2c-.23-.3-.51-.56-.77-.82-.67-.6-1.43-1.03-2.07-1.66C13.33 7.26 13 4.85 13.95 3c-.95.23-1.78.75-2.49 1.32-2.59 2.08-3.61 5.75-2.39 8.9.04.1.08.2.08.33 0 .22-.15.42-.35.5-.23.1-.47.04-.66-.12a.6.6 0 0 1-.14-.17c-1.13-1.43-1.31-3.48-.55-5.12C5.78 10 4.87 12.3 5 14.47c.06.5.12 1 .29 1.5.14.6.41 1.2.71 1.73 1.08 1.73 2.95 2.97 4.96 3.22 2.14.27 4.43-.12 6.07-1.6 1.83-1.66 2.47-4.32 1.53-6.6l-.13-.26c-.21-.46-.77-1.26-.77-1.26m-3.16 6.3c-.28.24-.74.5-1.1.6-1.12.4-2.24-.16-2.9-.82 1.19-.28 1.9-1.16 2.11-2.05.17-.8-.15-1.46-.28-2.23-.12-.74-.1-1.37.17-2.06.19.38.39.76.63 1.06.77 1 1.98 1.44 2.24 2.8.04.14.06.28.06.43.03.82-.33 1.72-.93 2.27"/></svg>');--md-admonition-icon--success:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M21 7 9 19l-5.5-5.5 1.41-1.41L9 16.17 19.59 5.59z"/></svg>');--md-admonition-icon--question:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m15.07 11.25-.9.92C13.45 12.89 13 13.5 13 15h-2v-.5c0-1.11.45-2.11 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41a2 2 0 0 0-2-2 2 2 0 0 0-2 2H8a4 4 0 0 1 4-4 4 4 0 0 1 4 4 3.2 3.2 0 0 1-.93 2.25M13 19h-2v-2h2M12 2A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10c0-5.53-4.5-10-10-10"/></svg>');--md-admonition-icon--warning:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13 14h-2V9h2m0 9h-2v-2h2M1 21h22L12 2z"/></svg>');--md-admonition-icon--failure:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>');--md-admonition-icon--danger:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m11.5 20 4.86-9.73H13V4l-5 9.73h3.5zM12 2c2.75 0 5.1 1 7.05 2.95S22 9.25 22 12s-1 5.1-2.95 7.05S14.75 22 12 22s-5.1-1-7.05-2.95S2 14.75 2 12s1-5.1 2.95-7.05S9.25 2 12 2"/></svg>');--md-admonition-icon--bug:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11 13h2v1h-2zm10-8v6c0 5.5-3.8 10.7-9 12-5.2-1.3-9-6.5-9-12V5l9-4zm-4 5h-2.2c-.2-.6-.6-1.1-1.1-1.5l1.2-1.2-.7-.7L12.8 8H12c-.2 0-.5 0-.7.1L9.9 6.6l-.8.8 1.2 1.2c-.5.3-.9.8-1.1 1.4H7v1h2v1H7v1h2v1H7v1h2.2c.4 1.2 1.5 2 2.8 2s2.4-.8 2.8-2H17v-1h-2v-1h2v-1h-2v-1h2zm-6 2h2v-1h-2z"/></svg>');--md-admonition-icon--example:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M7 2v2h1v14a4 4 0 0 0 4 4 4 4 0 0 0 4-4V4h1V2zm4 14c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1m2-4c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1m1-5h-4V4h4z"/></svg>');--md-admonition-icon--quote:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14 17h3l2-4V7h-6v6h3M6 17h3l2-4V7H5v6h3z"/></svg>')}.md-typeset .admonition,.md-typeset details{background-color:var(--md-admonition-bg-color);border:.075rem solid #448aff;border-radius:.2rem;box-shadow:var(--md-shadow-z1);color:var(--md-admonition-fg-color);display:flow-root;font-size:.64rem;margin:1.5625em 0;padding:0 .6rem;page-break-inside:avoid;transition:box-shadow 125ms}@media print{.md-typeset .admonition,.md-typeset details{box-shadow:none}}.md-typeset .admonition:focus-within,.md-typeset details:focus-within{box-shadow:0 0 0 .2rem #448aff1a}.md-typeset .admonition>*,.md-typeset details>*{box-sizing:border-box}.md-typeset .admonition .admonition,.md-typeset .admonition details,.md-typeset details .admonition,.md-typeset details details{margin-bottom:1em;margin-top:1em}.md-typeset .admonition .md-typeset__scrollwrap,.md-typeset details .md-typeset__scrollwrap{margin:1em -.6rem}.md-typeset .admonition .md-typeset__table,.md-typeset details .md-typeset__table{padding:0 .6rem}.md-typeset .admonition>.tabbed-set:only-child,.md-typeset details>.tabbed-set:only-child{margin-top:0}html .md-typeset .admonition>:last-child,html .md-typeset details>:last-child{margin-bottom:.6rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary{padding-left:2rem;padding-right:.6rem}[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{padding-left:.6rem;padding-right:2rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary{border-left-width:.2rem}[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{border-right-width:.2rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary{border-top-left-radius:.1rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary,[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{border-top-right-radius:.1rem}[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{border-top-left-radius:.1rem}.md-typeset .admonition-title,.md-typeset summary{background-color:#448aff1a;border:none;font-weight:700;margin:0 -.6rem;padding-bottom:.4rem;padding-top:.4rem;position:relative}html .md-typeset .admonition-title:last-child,html .md-typeset summary:last-child{margin-bottom:0}[dir=ltr] .md-typeset .admonition-title:before,[dir=ltr] .md-typeset summary:before{left:.6rem}[dir=rtl] .md-typeset .admonition-title:before,[dir=rtl] .md-typeset summary:before{right:.6rem}.md-typeset .admonition-title:before,.md-typeset summary:before{background-color:#448aff;content:"";height:1rem;-webkit-mask-image:var(--md-admonition-icon--note);mask-image:var(--md-admonition-icon--note);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:.625em;width:1rem}.md-typeset .admonition-title code,.md-typeset summary code{box-shadow:0 0 0 .05rem var(--md-default-fg-color--lightest)}.md-typeset .admonition.note,.md-typeset details.note{border-color:#448aff}.md-typeset .admonition.note:focus-within,.md-typeset details.note:focus-within{box-shadow:0 0 0 .2rem #448aff1a}.md-typeset .note>.admonition-title,.md-typeset .note>summary{background-color:#448aff1a}.md-typeset .note>.admonition-title:before,.md-typeset .note>summary:before{background-color:#448aff;-webkit-mask-image:var(--md-admonition-icon--note);mask-image:var(--md-admonition-icon--note)}.md-typeset .note>.admonition-title:after,.md-typeset .note>summary:after{color:#448aff}.md-typeset .admonition.abstract,.md-typeset details.abstract{border-color:#00b0ff}.md-typeset .admonition.abstract:focus-within,.md-typeset details.abstract:focus-within{box-shadow:0 0 0 .2rem #00b0ff1a}.md-typeset .abstract>.admonition-title,.md-typeset .abstract>summary{background-color:#00b0ff1a}.md-typeset .abstract>.admonition-title:before,.md-typeset .abstract>summary:before{background-color:#00b0ff;-webkit-mask-image:var(--md-admonition-icon--abstract);mask-image:var(--md-admonition-icon--abstract)}.md-typeset .abstract>.admonition-title:after,.md-typeset .abstract>summary:after{color:#00b0ff}.md-typeset .admonition.info,.md-typeset details.info{border-color:#00b8d4}.md-typeset .admonition.info:focus-within,.md-typeset details.info:focus-within{box-shadow:0 0 0 .2rem #00b8d41a}.md-typeset .info>.admonition-title,.md-typeset .info>summary{background-color:#00b8d41a}.md-typeset .info>.admonition-title:before,.md-typeset .info>summary:before{background-color:#00b8d4;-webkit-mask-image:var(--md-admonition-icon--info);mask-image:var(--md-admonition-icon--info)}.md-typeset .info>.admonition-title:after,.md-typeset .info>summary:after{color:#00b8d4}.md-typeset .admonition.tip,.md-typeset details.tip{border-color:#00bfa5}.md-typeset .admonition.tip:focus-within,.md-typeset details.tip:focus-within{box-shadow:0 0 0 .2rem #00bfa51a}.md-typeset .tip>.admonition-title,.md-typeset .tip>summary{background-color:#00bfa51a}.md-typeset .tip>.admonition-title:before,.md-typeset .tip>summary:before{background-color:#00bfa5;-webkit-mask-image:var(--md-admonition-icon--tip);mask-image:var(--md-admonition-icon--tip)}.md-typeset .tip>.admonition-title:after,.md-typeset .tip>summary:after{color:#00bfa5}.md-typeset .admonition.success,.md-typeset details.success{border-color:#00c853}.md-typeset .admonition.success:focus-within,.md-typeset details.success:focus-within{box-shadow:0 0 0 .2rem #00c8531a}.md-typeset .success>.admonition-title,.md-typeset .success>summary{background-color:#00c8531a}.md-typeset .success>.admonition-title:before,.md-typeset .success>summary:before{background-color:#00c853;-webkit-mask-image:var(--md-admonition-icon--success);mask-image:var(--md-admonition-icon--success)}.md-typeset .success>.admonition-title:after,.md-typeset .success>summary:after{color:#00c853}.md-typeset .admonition.question,.md-typeset details.question{border-color:#64dd17}.md-typeset .admonition.question:focus-within,.md-typeset details.question:focus-within{box-shadow:0 0 0 .2rem #64dd171a}.md-typeset .question>.admonition-title,.md-typeset .question>summary{background-color:#64dd171a}.md-typeset .question>.admonition-title:before,.md-typeset .question>summary:before{background-color:#64dd17;-webkit-mask-image:var(--md-admonition-icon--question);mask-image:var(--md-admonition-icon--question)}.md-typeset .question>.admonition-title:after,.md-typeset .question>summary:after{color:#64dd17}.md-typeset .admonition.warning,.md-typeset details.warning{border-color:#ff9100}.md-typeset .admonition.warning:focus-within,.md-typeset details.warning:focus-within{box-shadow:0 0 0 .2rem #ff91001a}.md-typeset .warning>.admonition-title,.md-typeset .warning>summary{background-color:#ff91001a}.md-typeset .warning>.admonition-title:before,.md-typeset .warning>summary:before{background-color:#ff9100;-webkit-mask-image:var(--md-admonition-icon--warning);mask-image:var(--md-admonition-icon--warning)}.md-typeset .warning>.admonition-title:after,.md-typeset .warning>summary:after{color:#ff9100}.md-typeset .admonition.failure,.md-typeset details.failure{border-color:#ff5252}.md-typeset .admonition.failure:focus-within,.md-typeset details.failure:focus-within{box-shadow:0 0 0 .2rem #ff52521a}.md-typeset .failure>.admonition-title,.md-typeset .failure>summary{background-color:#ff52521a}.md-typeset .failure>.admonition-title:before,.md-typeset .failure>summary:before{background-color:#ff5252;-webkit-mask-image:var(--md-admonition-icon--failure);mask-image:var(--md-admonition-icon--failure)}.md-typeset .failure>.admonition-title:after,.md-typeset .failure>summary:after{color:#ff5252}.md-typeset .admonition.danger,.md-typeset details.danger{border-color:#ff1744}.md-typeset .admonition.danger:focus-within,.md-typeset details.danger:focus-within{box-shadow:0 0 0 .2rem #ff17441a}.md-typeset .danger>.admonition-title,.md-typeset .danger>summary{background-color:#ff17441a}.md-typeset .danger>.admonition-title:before,.md-typeset .danger>summary:before{background-color:#ff1744;-webkit-mask-image:var(--md-admonition-icon--danger);mask-image:var(--md-admonition-icon--danger)}.md-typeset .danger>.admonition-title:after,.md-typeset .danger>summary:after{color:#ff1744}.md-typeset .admonition.bug,.md-typeset details.bug{border-color:#f50057}.md-typeset .admonition.bug:focus-within,.md-typeset details.bug:focus-within{box-shadow:0 0 0 .2rem #f500571a}.md-typeset .bug>.admonition-title,.md-typeset .bug>summary{background-color:#f500571a}.md-typeset .bug>.admonition-title:before,.md-typeset .bug>summary:before{background-color:#f50057;-webkit-mask-image:var(--md-admonition-icon--bug);mask-image:var(--md-admonition-icon--bug)}.md-typeset .bug>.admonition-title:after,.md-typeset .bug>summary:after{color:#f50057}.md-typeset .admonition.example,.md-typeset details.example{border-color:#7c4dff}.md-typeset .admonition.example:focus-within,.md-typeset details.example:focus-within{box-shadow:0 0 0 .2rem #7c4dff1a}.md-typeset .example>.admonition-title,.md-typeset .example>summary{background-color:#7c4dff1a}.md-typeset .example>.admonition-title:before,.md-typeset .example>summary:before{background-color:#7c4dff;-webkit-mask-image:var(--md-admonition-icon--example);mask-image:var(--md-admonition-icon--example)}.md-typeset .example>.admonition-title:after,.md-typeset .example>summary:after{color:#7c4dff}.md-typeset .admonition.quote,.md-typeset details.quote{border-color:#9e9e9e}.md-typeset .admonition.quote:focus-within,.md-typeset details.quote:focus-within{box-shadow:0 0 0 .2rem #9e9e9e1a}.md-typeset .quote>.admonition-title,.md-typeset .quote>summary{background-color:#9e9e9e1a}.md-typeset .quote>.admonition-title:before,.md-typeset .quote>summary:before{background-color:#9e9e9e;-webkit-mask-image:var(--md-admonition-icon--quote);mask-image:var(--md-admonition-icon--quote)}.md-typeset .quote>.admonition-title:after,.md-typeset .quote>summary:after{color:#9e9e9e}:root{--md-footnotes-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.42L5.83 13H21V7z"/></svg>')}.md-typeset .footnote{color:var(--md-default-fg-color--light);font-size:.64rem}[dir=ltr] .md-typeset .footnote>ol{margin-left:0}[dir=rtl] .md-typeset .footnote>ol{margin-right:0}.md-typeset .footnote>ol>li{transition:color 125ms}.md-typeset .footnote>ol>li:target{color:var(--md-default-fg-color)}.md-typeset .footnote>ol>li:focus-within .footnote-backref{opacity:1;transform:translateX(0);transition:none}.md-typeset .footnote>ol>li:hover .footnote-backref,.md-typeset .footnote>ol>li:target .footnote-backref{opacity:1;transform:translateX(0)}.md-typeset .footnote>ol>li>:first-child{margin-top:0}.md-typeset .footnote-ref{font-size:.75em;font-weight:700}html .md-typeset .footnote-ref{outline-offset:.1rem}.md-typeset [id^="fnref:"]:target>.footnote-ref{outline:auto}.md-typeset .footnote-backref{color:var(--md-typeset-a-color);display:inline-block;font-size:0;opacity:0;transform:translateX(.25rem);transition:color .25s,transform .25s .25s,opacity 125ms .25s;vertical-align:text-bottom}@media print{.md-typeset .footnote-backref{color:var(--md-typeset-a-color);opacity:1;transform:translateX(0)}}[dir=rtl] .md-typeset .footnote-backref{transform:translateX(-.25rem)}.md-typeset .footnote-backref:hover{color:var(--md-accent-fg-color)}.md-typeset .footnote-backref:before{background-color:currentcolor;content:"";display:inline-block;height:.8rem;-webkit-mask-image:var(--md-footnotes-icon);mask-image:var(--md-footnotes-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:.8rem}[dir=rtl] .md-typeset .footnote-backref:before{transform:scaleX(-1)}[dir=ltr] .md-typeset .headerlink{margin-left:.5rem}[dir=rtl] .md-typeset .headerlink{margin-right:.5rem}.md-typeset .headerlink{color:var(--md-default-fg-color--lighter);display:inline-block;opacity:0;transition:color .25s,opacity 125ms}@media print{.md-typeset .headerlink{display:none}}.md-typeset .headerlink:focus,.md-typeset :hover>.headerlink,.md-typeset :target>.headerlink{opacity:1;transition:color .25s,opacity 125ms}.md-typeset .headerlink:focus,.md-typeset .headerlink:hover,.md-typeset :target>.headerlink{color:var(--md-accent-fg-color)}.md-typeset :target{--md-scroll-margin:3.6rem;--md-scroll-offset:0rem;scroll-margin-top:calc(var(--md-scroll-margin) - var(--md-scroll-offset))}@media screen and (min-width:76.25em){.md-header--lifted~.md-container .md-typeset :target{--md-scroll-margin:6rem}}.md-typeset h1:target,.md-typeset h2:target,.md-typeset h3:target{--md-scroll-offset:0.2rem}.md-typeset h4:target{--md-scroll-offset:0.15rem}.md-typeset div.arithmatex{overflow:auto}@media screen and (max-width:44.984375em){.md-typeset div.arithmatex{margin:0 -.8rem}.md-typeset div.arithmatex>*{width:min-content}}.md-typeset div.arithmatex>*{margin-left:auto!important;margin-right:auto!important;padding:0 .8rem;touch-action:auto}.md-typeset div.arithmatex>* mjx-container{margin:0!important}.md-typeset div.arithmatex mjx-assistive-mml{height:0}.md-typeset del.critic{background-color:var(--md-typeset-del-color)}.md-typeset del.critic,.md-typeset ins.critic{-webkit-box-decoration-break:clone;box-decoration-break:clone}.md-typeset ins.critic{background-color:var(--md-typeset-ins-color)}.md-typeset .critic.comment{-webkit-box-decoration-break:clone;box-decoration-break:clone;color:var(--md-code-hl-comment-color)}.md-typeset .critic.comment:before{content:"/* "}.md-typeset .critic.comment:after{content:" */"}.md-typeset .critic.block{box-shadow:none;display:block;margin:1em 0;overflow:auto;padding-left:.8rem;padding-right:.8rem}.md-typeset .critic.block>:first-child{margin-top:.5em}.md-typeset .critic.block>:last-child{margin-bottom:.5em}:root{--md-details-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>')}.md-typeset details{display:flow-root;overflow:visible;padding-top:0}.md-typeset details[open]>summary:after{transform:rotate(90deg)}.md-typeset details:not([open]){box-shadow:none;padding-bottom:0}.md-typeset details:not([open])>summary{border-radius:.1rem}[dir=ltr] .md-typeset summary{padding-right:1.8rem}[dir=rtl] .md-typeset summary{padding-left:1.8rem}[dir=ltr] .md-typeset summary{border-top-left-radius:.1rem}[dir=ltr] .md-typeset summary,[dir=rtl] .md-typeset summary{border-top-right-radius:.1rem}[dir=rtl] .md-typeset summary{border-top-left-radius:.1rem}.md-typeset summary{cursor:pointer;display:block;min-height:1rem;overflow:hidden}.md-typeset summary.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-typeset summary:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}[dir=ltr] .md-typeset summary:after{right:.4rem}[dir=rtl] .md-typeset summary:after{left:.4rem}.md-typeset summary:after{background-color:currentcolor;content:"";height:1rem;-webkit-mask-image:var(--md-details-icon);mask-image:var(--md-details-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:.625em;transform:rotate(0deg);transition:transform .25s;width:1rem}[dir=rtl] .md-typeset summary:after{transform:rotate(180deg)}.md-typeset summary::marker{display:none}.md-typeset summary::-webkit-details-marker{display:none}.md-typeset .emojione,.md-typeset .gemoji,.md-typeset .twemoji{--md-icon-size:1.125em;display:inline-flex;height:var(--md-icon-size);vertical-align:text-top}.md-typeset .emojione svg,.md-typeset .gemoji svg,.md-typeset .twemoji svg{fill:currentcolor;max-height:100%;width:var(--md-icon-size)}.md-typeset .lg,.md-typeset .xl,.md-typeset .xxl,.md-typeset .xxxl{vertical-align:text-bottom}.md-typeset .middle{vertical-align:middle}.md-typeset .lg{--md-icon-size:1.5em}.md-typeset .xl{--md-icon-size:2.25em}.md-typeset .xxl{--md-icon-size:3em}.md-typeset .xxxl{--md-icon-size:4em}.highlight .o,.highlight .ow{color:var(--md-code-hl-operator-color)}.highlight .p{color:var(--md-code-hl-punctuation-color)}.highlight .cpf,.highlight .l,.highlight .s,.highlight .s1,.highlight .s2,.highlight .sb,.highlight .sc,.highlight .si,.highlight .ss{color:var(--md-code-hl-string-color)}.highlight .cp,.highlight .se,.highlight .sh,.highlight .sr,.highlight .sx{color:var(--md-code-hl-special-color)}.highlight .il,.highlight .m,.highlight .mb,.highlight .mf,.highlight .mh,.highlight .mi,.highlight .mo{color:var(--md-code-hl-number-color)}.highlight .k,.highlight .kd,.highlight .kn,.highlight .kp,.highlight .kr,.highlight .kt{color:var(--md-code-hl-keyword-color)}.highlight .kc,.highlight .n{color:var(--md-code-hl-name-color)}.highlight .bp,.highlight .nb,.highlight .no{color:var(--md-code-hl-constant-color)}.highlight .nc,.highlight .ne,.highlight .nf,.highlight .nn{color:var(--md-code-hl-function-color)}.highlight .nd,.highlight .ni,.highlight .nl,.highlight .nt{color:var(--md-code-hl-keyword-color)}.highlight .c,.highlight .c1,.highlight .ch,.highlight .cm,.highlight .cs,.highlight .sd{color:var(--md-code-hl-comment-color)}.highlight .na,.highlight .nv,.highlight .vc,.highlight .vg,.highlight .vi{color:var(--md-code-hl-variable-color)}.highlight .ge,.highlight .gh,.highlight .go,.highlight .gp,.highlight .gr,.highlight .gs,.highlight .gt,.highlight .gu{color:var(--md-code-hl-generic-color)}.highlight .gd,.highlight .gi{border-radius:.1rem;margin:0 -.125em;padding:0 .125em}.highlight .gd{background-color:var(--md-typeset-del-color)}.highlight .gi{background-color:var(--md-typeset-ins-color)}.highlight .hll{background-color:var(--md-code-hl-color--light);box-shadow:2px 0 0 0 var(--md-code-hl-color) inset;display:block;margin:0 -1.1764705882em;padding:0 1.1764705882em}.highlight span.filename{background-color:var(--md-code-bg-color);border-bottom:.05rem solid var(--md-default-fg-color--lightest);border-top-left-radius:.1rem;border-top-right-radius:.1rem;display:flow-root;font-size:.85em;font-weight:700;margin-top:1em;padding:.6617647059em 1.1764705882em;position:relative}.highlight span.filename+pre{margin-top:0}.highlight span.filename+pre>code{border-top-left-radius:0;border-top-right-radius:0}.highlight [data-linenos]:before{background-color:var(--md-code-bg-color);box-shadow:-.05rem 0 var(--md-default-fg-color--lightest) inset;color:var(--md-default-fg-color--light);content:attr(data-linenos);float:left;left:-1.1764705882em;margin-left:-1.1764705882em;margin-right:1.1764705882em;padding-left:1.1764705882em;position:sticky;-webkit-user-select:none;user-select:none;z-index:3}.highlight code a[id]{position:absolute;visibility:hidden}.highlight code[data-md-copying]{display:initial}.highlight code[data-md-copying] .hll{display:contents}.highlight code[data-md-copying] .md-annotation{display:none}.highlighttable{display:flow-root}.highlighttable tbody,.highlighttable td{display:block;padding:0}.highlighttable tr{display:flex}.highlighttable pre{margin:0}.highlighttable th.filename{flex-grow:1;padding:0;text-align:left}.highlighttable th.filename span.filename{margin-top:0}.highlighttable .linenos{background-color:var(--md-code-bg-color);border-bottom-left-radius:.1rem;border-top-left-radius:.1rem;font-size:.85em;padding:.7720588235em 0 .7720588235em 1.1764705882em;-webkit-user-select:none;user-select:none}.highlighttable .linenodiv{box-shadow:-.05rem 0 var(--md-default-fg-color--lightest) inset}.highlighttable .linenodiv pre{color:var(--md-default-fg-color--light);text-align:right}.highlighttable .linenodiv span[class]{padding-right:.5882352941em}.highlighttable .code{flex:1;min-width:0}.linenodiv a{color:inherit}.md-typeset .highlighttable{direction:ltr;margin:1em 0}.md-typeset .highlighttable>tbody>tr>.code>div>pre>code{border-bottom-left-radius:0;border-top-left-radius:0}.md-typeset .highlight+.result{border:.05rem solid var(--md-code-bg-color);border-bottom-left-radius:.1rem;border-bottom-right-radius:.1rem;border-top-width:.1rem;margin-top:-1.125em;overflow:visible;padding:0 1em}.md-typeset .highlight+.result:after{clear:both;content:"";display:block}@media screen and (max-width:44.984375em){.md-content__inner>.highlight{margin:1em -.8rem}.md-content__inner>.highlight>.filename,.md-content__inner>.highlight>.highlighttable>tbody>tr>.code>div>pre>code,.md-content__inner>.highlight>.highlighttable>tbody>tr>.filename span.filename,.md-content__inner>.highlight>.highlighttable>tbody>tr>.linenos,.md-content__inner>.highlight>pre>code{border-radius:0}.md-content__inner>.highlight+.result{border-left-width:0;border-radius:0;border-right-width:0;margin-left:-.8rem;margin-right:-.8rem}}.md-typeset .keys kbd:after,.md-typeset .keys kbd:before{-moz-osx-font-smoothing:initial;-webkit-font-smoothing:initial;color:inherit;margin:0;position:relative}.md-typeset .keys span{color:var(--md-default-fg-color--light);padding:0 .2em}.md-typeset .keys .key-alt:before,.md-typeset .keys .key-left-alt:before,.md-typeset .keys .key-right-alt:before{content:"⎇";padding-right:.4em}.md-typeset .keys .key-command:before,.md-typeset .keys .key-left-command:before,.md-typeset .keys .key-right-command:before{content:"⌘";padding-right:.4em}.md-typeset .keys .key-control:before,.md-typeset .keys .key-left-control:before,.md-typeset .keys .key-right-control:before{content:"⌃";padding-right:.4em}.md-typeset .keys .key-left-meta:before,.md-typeset .keys .key-meta:before,.md-typeset .keys .key-right-meta:before{content:"◆";padding-right:.4em}.md-typeset .keys .key-left-option:before,.md-typeset .keys .key-option:before,.md-typeset .keys .key-right-option:before{content:"⌥";padding-right:.4em}.md-typeset .keys .key-left-shift:before,.md-typeset .keys .key-right-shift:before,.md-typeset .keys .key-shift:before{content:"⇧";padding-right:.4em}.md-typeset .keys .key-left-super:before,.md-typeset .keys .key-right-super:before,.md-typeset .keys .key-super:before{content:"❖";padding-right:.4em}.md-typeset .keys .key-left-windows:before,.md-typeset .keys .key-right-windows:before,.md-typeset .keys .key-windows:before{content:"⊞";padding-right:.4em}.md-typeset .keys .key-arrow-down:before{content:"↓";padding-right:.4em}.md-typeset .keys .key-arrow-left:before{content:"←";padding-right:.4em}.md-typeset .keys .key-arrow-right:before{content:"→";padding-right:.4em}.md-typeset .keys .key-arrow-up:before{content:"↑";padding-right:.4em}.md-typeset .keys .key-backspace:before{content:"⌫";padding-right:.4em}.md-typeset .keys .key-backtab:before{content:"⇤";padding-right:.4em}.md-typeset .keys .key-caps-lock:before{content:"⇪";padding-right:.4em}.md-typeset .keys .key-clear:before{content:"⌧";padding-right:.4em}.md-typeset .keys .key-context-menu:before{content:"☰";padding-right:.4em}.md-typeset .keys .key-delete:before{content:"⌦";padding-right:.4em}.md-typeset .keys .key-eject:before{content:"⏏";padding-right:.4em}.md-typeset .keys .key-end:before{content:"⤓";padding-right:.4em}.md-typeset .keys .key-escape:before{content:"⎋";padding-right:.4em}.md-typeset .keys .key-home:before{content:"⤒";padding-right:.4em}.md-typeset .keys .key-insert:before{content:"⎀";padding-right:.4em}.md-typeset .keys .key-page-down:before{content:"⇟";padding-right:.4em}.md-typeset .keys .key-page-up:before{content:"⇞";padding-right:.4em}.md-typeset .keys .key-print-screen:before{content:"⎙";padding-right:.4em}.md-typeset .keys .key-tab:after{content:"⇥";padding-left:.4em}.md-typeset .keys .key-num-enter:after{content:"⌤";padding-left:.4em}.md-typeset .keys .key-enter:after{content:"⏎";padding-left:.4em}:root{--md-tabbed-icon--prev:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15.41 16.58 10.83 12l4.58-4.59L14 6l-6 6 6 6z"/></svg>');--md-tabbed-icon--next:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>')}.md-typeset .tabbed-set{border-radius:.1rem;display:flex;flex-flow:column wrap;margin:1em 0;position:relative}.md-typeset .tabbed-set>input{height:0;opacity:0;position:absolute;width:0}.md-typeset .tabbed-set>input:target{--md-scroll-offset:0.625em}.md-typeset .tabbed-set>input.focus-visible~.tabbed-labels:before{background-color:var(--md-accent-fg-color)}.md-typeset .tabbed-labels{-ms-overflow-style:none;box-shadow:0 -.05rem var(--md-default-fg-color--lightest) inset;display:flex;max-width:100%;overflow:auto;scrollbar-width:none}@media print{.md-typeset .tabbed-labels{display:contents}}@media screen{.js .md-typeset .tabbed-labels{position:relative}.js .md-typeset .tabbed-labels:before{background:var(--md-default-fg-color);bottom:0;content:"";display:block;height:2px;left:0;position:absolute;transform:translateX(var(--md-indicator-x));transition:width 225ms,background-color .25s,transform .25s;transition-timing-function:cubic-bezier(.4,0,.2,1);width:var(--md-indicator-width)}}.md-typeset .tabbed-labels::-webkit-scrollbar{display:none}.md-typeset .tabbed-labels>label{border-bottom:.1rem solid #0000;border-radius:.1rem .1rem 0 0;color:var(--md-default-fg-color--light);cursor:pointer;flex-shrink:0;font-size:.64rem;font-weight:700;padding:.78125em 1.25em .625em;scroll-margin-inline-start:1rem;transition:background-color .25s,color .25s;white-space:nowrap;width:auto}@media print{.md-typeset .tabbed-labels>label:first-child{order:1}.md-typeset .tabbed-labels>label:nth-child(2){order:2}.md-typeset .tabbed-labels>label:nth-child(3){order:3}.md-typeset .tabbed-labels>label:nth-child(4){order:4}.md-typeset .tabbed-labels>label:nth-child(5){order:5}.md-typeset .tabbed-labels>label:nth-child(6){order:6}.md-typeset .tabbed-labels>label:nth-child(7){order:7}.md-typeset .tabbed-labels>label:nth-child(8){order:8}.md-typeset .tabbed-labels>label:nth-child(9){order:9}.md-typeset .tabbed-labels>label:nth-child(10){order:10}.md-typeset .tabbed-labels>label:nth-child(11){order:11}.md-typeset .tabbed-labels>label:nth-child(12){order:12}.md-typeset .tabbed-labels>label:nth-child(13){order:13}.md-typeset .tabbed-labels>label:nth-child(14){order:14}.md-typeset .tabbed-labels>label:nth-child(15){order:15}.md-typeset .tabbed-labels>label:nth-child(16){order:16}.md-typeset .tabbed-labels>label:nth-child(17){order:17}.md-typeset .tabbed-labels>label:nth-child(18){order:18}.md-typeset .tabbed-labels>label:nth-child(19){order:19}.md-typeset .tabbed-labels>label:nth-child(20){order:20}}.md-typeset .tabbed-labels>label:hover{color:var(--md-default-fg-color)}.md-typeset .tabbed-labels>label>[href]:first-child{color:inherit}.md-typeset .tabbed-labels--linked>label{padding:0}.md-typeset .tabbed-labels--linked>label>a{display:block;padding:.78125em 1.25em .625em}.md-typeset .tabbed-content{width:100%}@media print{.md-typeset .tabbed-content{display:contents}}.md-typeset .tabbed-block{display:none}@media print{.md-typeset .tabbed-block{display:block}.md-typeset .tabbed-block:first-child{order:1}.md-typeset .tabbed-block:nth-child(2){order:2}.md-typeset .tabbed-block:nth-child(3){order:3}.md-typeset .tabbed-block:nth-child(4){order:4}.md-typeset .tabbed-block:nth-child(5){order:5}.md-typeset .tabbed-block:nth-child(6){order:6}.md-typeset .tabbed-block:nth-child(7){order:7}.md-typeset .tabbed-block:nth-child(8){order:8}.md-typeset .tabbed-block:nth-child(9){order:9}.md-typeset .tabbed-block:nth-child(10){order:10}.md-typeset .tabbed-block:nth-child(11){order:11}.md-typeset .tabbed-block:nth-child(12){order:12}.md-typeset .tabbed-block:nth-child(13){order:13}.md-typeset .tabbed-block:nth-child(14){order:14}.md-typeset .tabbed-block:nth-child(15){order:15}.md-typeset .tabbed-block:nth-child(16){order:16}.md-typeset .tabbed-block:nth-child(17){order:17}.md-typeset .tabbed-block:nth-child(18){order:18}.md-typeset .tabbed-block:nth-child(19){order:19}.md-typeset .tabbed-block:nth-child(20){order:20}}.md-typeset .tabbed-block>.highlight:first-child>pre,.md-typeset .tabbed-block>pre:first-child{margin:0}.md-typeset .tabbed-block>.highlight:first-child>pre>code,.md-typeset .tabbed-block>pre:first-child>code{border-top-left-radius:0;border-top-right-radius:0}.md-typeset .tabbed-block>.highlight:first-child>.filename{border-top-left-radius:0;border-top-right-radius:0;margin:0}.md-typeset .tabbed-block>.highlight:first-child>.highlighttable{margin:0}.md-typeset .tabbed-block>.highlight:first-child>.highlighttable>tbody>tr>.filename span.filename,.md-typeset .tabbed-block>.highlight:first-child>.highlighttable>tbody>tr>.linenos{border-top-left-radius:0;border-top-right-radius:0;margin:0}.md-typeset .tabbed-block>.highlight:first-child>.highlighttable>tbody>tr>.code>div>pre>code{border-top-left-radius:0;border-top-right-radius:0}.md-typeset .tabbed-block>.highlight:first-child+.result{margin-top:-.125em}.md-typeset .tabbed-block>.tabbed-set{margin:0}.md-typeset .tabbed-button{align-self:center;border-radius:100%;color:var(--md-default-fg-color--light);cursor:pointer;display:block;height:.9rem;margin-top:.1rem;pointer-events:auto;transition:background-color .25s;width:.9rem}.md-typeset .tabbed-button:hover{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-typeset .tabbed-button:after{background-color:currentcolor;content:"";display:block;height:100%;-webkit-mask-image:var(--md-tabbed-icon--prev);mask-image:var(--md-tabbed-icon--prev);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:background-color .25s,transform .25s;width:100%}.md-typeset .tabbed-control{background:linear-gradient(to right,var(--md-default-bg-color) 60%,#0000);display:flex;height:1.9rem;justify-content:start;pointer-events:none;position:absolute;transition:opacity 125ms;width:1.2rem}[dir=rtl] .md-typeset .tabbed-control{transform:rotate(180deg)}.md-typeset .tabbed-control[hidden]{opacity:0}.md-typeset .tabbed-control--next{background:linear-gradient(to left,var(--md-default-bg-color) 60%,#0000);justify-content:end;right:0}.md-typeset .tabbed-control--next .tabbed-button:after{-webkit-mask-image:var(--md-tabbed-icon--next);mask-image:var(--md-tabbed-icon--next)}@media screen and (max-width:44.984375em){[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels{padding-left:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels{padding-right:.8rem}.md-content__inner>.tabbed-set .tabbed-labels{margin:0 -.8rem;max-width:100vw;scroll-padding-inline-start:.8rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels:after{padding-right:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels:after{padding-left:.8rem}.md-content__inner>.tabbed-set .tabbed-labels:after{content:""}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{padding-left:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{padding-right:.8rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{margin-left:-.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{margin-right:-.8rem}.md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{width:2rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{padding-right:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{padding-left:.8rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{margin-right:-.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{margin-left:-.8rem}.md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{width:2rem}}@media screen{.md-typeset .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9){color:var(--md-default-fg-color)}.md-typeset .no-js .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.md-typeset .no-js .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.md-typeset .no-js .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.md-typeset .no-js .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.md-typeset .no-js .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.md-typeset .no-js .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.md-typeset .no-js .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.md-typeset .no-js .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.md-typeset .no-js .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.md-typeset .no-js .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.md-typeset .no-js .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.md-typeset .no-js .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.md-typeset .no-js .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.md-typeset .no-js .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.md-typeset .no-js .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.md-typeset .no-js .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.md-typeset .no-js .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.md-typeset .no-js .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.md-typeset .no-js .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.md-typeset .no-js .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9),.md-typeset [role=dialog] .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.md-typeset [role=dialog] .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.md-typeset [role=dialog] .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.md-typeset [role=dialog] .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.md-typeset [role=dialog] .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.md-typeset [role=dialog] .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.md-typeset [role=dialog] .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.md-typeset [role=dialog] .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.md-typeset [role=dialog] .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.md-typeset [role=dialog] .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.md-typeset [role=dialog] .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.md-typeset [role=dialog] .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.md-typeset [role=dialog] .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.md-typeset [role=dialog] .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.md-typeset [role=dialog] .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.md-typeset [role=dialog] .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.md-typeset [role=dialog] .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.md-typeset [role=dialog] .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.md-typeset [role=dialog] .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.md-typeset [role=dialog] .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9),.no-js .md-typeset .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.no-js .md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.no-js .md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.no-js .md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.no-js .md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.no-js .md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.no-js .md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.no-js .md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.no-js .md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.no-js .md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.no-js .md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.no-js .md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.no-js .md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.no-js .md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.no-js .md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.no-js .md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.no-js .md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.no-js .md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.no-js .md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.no-js .md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9),[role=dialog] .md-typeset .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,[role=dialog] .md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),[role=dialog] .md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),[role=dialog] .md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),[role=dialog] .md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),[role=dialog] .md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),[role=dialog] .md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),[role=dialog] .md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),[role=dialog] .md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),[role=dialog] .md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),[role=dialog] .md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),[role=dialog] .md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),[role=dialog] .md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),[role=dialog] .md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),[role=dialog] .md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),[role=dialog] .md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),[role=dialog] .md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),[role=dialog] .md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),[role=dialog] .md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),[role=dialog] .md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9){border-color:var(--md-default-fg-color)}}.md-typeset .tabbed-set>input:first-child.focus-visible~.tabbed-labels>:first-child,.md-typeset .tabbed-set>input:nth-child(10).focus-visible~.tabbed-labels>:nth-child(10),.md-typeset .tabbed-set>input:nth-child(11).focus-visible~.tabbed-labels>:nth-child(11),.md-typeset .tabbed-set>input:nth-child(12).focus-visible~.tabbed-labels>:nth-child(12),.md-typeset .tabbed-set>input:nth-child(13).focus-visible~.tabbed-labels>:nth-child(13),.md-typeset .tabbed-set>input:nth-child(14).focus-visible~.tabbed-labels>:nth-child(14),.md-typeset .tabbed-set>input:nth-child(15).focus-visible~.tabbed-labels>:nth-child(15),.md-typeset .tabbed-set>input:nth-child(16).focus-visible~.tabbed-labels>:nth-child(16),.md-typeset .tabbed-set>input:nth-child(17).focus-visible~.tabbed-labels>:nth-child(17),.md-typeset .tabbed-set>input:nth-child(18).focus-visible~.tabbed-labels>:nth-child(18),.md-typeset .tabbed-set>input:nth-child(19).focus-visible~.tabbed-labels>:nth-child(19),.md-typeset .tabbed-set>input:nth-child(2).focus-visible~.tabbed-labels>:nth-child(2),.md-typeset .tabbed-set>input:nth-child(20).focus-visible~.tabbed-labels>:nth-child(20),.md-typeset .tabbed-set>input:nth-child(3).focus-visible~.tabbed-labels>:nth-child(3),.md-typeset .tabbed-set>input:nth-child(4).focus-visible~.tabbed-labels>:nth-child(4),.md-typeset .tabbed-set>input:nth-child(5).focus-visible~.tabbed-labels>:nth-child(5),.md-typeset .tabbed-set>input:nth-child(6).focus-visible~.tabbed-labels>:nth-child(6),.md-typeset .tabbed-set>input:nth-child(7).focus-visible~.tabbed-labels>:nth-child(7),.md-typeset .tabbed-set>input:nth-child(8).focus-visible~.tabbed-labels>:nth-child(8),.md-typeset .tabbed-set>input:nth-child(9).focus-visible~.tabbed-labels>:nth-child(9){color:var(--md-accent-fg-color)}.md-typeset .tabbed-set>input:first-child:checked~.tabbed-content>:first-child,.md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-content>:nth-child(10),.md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-content>:nth-child(11),.md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-content>:nth-child(12),.md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-content>:nth-child(13),.md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-content>:nth-child(14),.md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-content>:nth-child(15),.md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-content>:nth-child(16),.md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-content>:nth-child(17),.md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-content>:nth-child(18),.md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-content>:nth-child(19),.md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-content>:nth-child(2),.md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-content>:nth-child(20),.md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-content>:nth-child(3),.md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-content>:nth-child(4),.md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-content>:nth-child(5),.md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-content>:nth-child(6),.md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-content>:nth-child(7),.md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-content>:nth-child(8),.md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-content>:nth-child(9){display:block}:root{--md-tasklist-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12m16.28-2.72a.75.75 0 0 0-.018-1.042.75.75 0 0 0-1.042-.018l-5.97 5.97-2.47-2.47a.75.75 0 0 0-1.042.018.75.75 0 0 0-.018 1.042l3 3a.75.75 0 0 0 1.06 0Z"/></svg>');--md-tasklist-icon--checked:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12m16.28-2.72a.75.75 0 0 0-.018-1.042.75.75 0 0 0-1.042-.018l-5.97 5.97-2.47-2.47a.75.75 0 0 0-1.042.018.75.75 0 0 0-.018 1.042l3 3a.75.75 0 0 0 1.06 0Z"/></svg>')}.md-typeset .task-list-item{list-style-type:none;position:relative}[dir=ltr] .md-typeset .task-list-item [type=checkbox]{left:-2em}[dir=rtl] .md-typeset .task-list-item [type=checkbox]{right:-2em}.md-typeset .task-list-item [type=checkbox]{position:absolute;top:.45em}.md-typeset .task-list-control [type=checkbox]{opacity:0;z-index:-1}[dir=ltr] .md-typeset .task-list-indicator:before{left:-1.5em}[dir=rtl] .md-typeset .task-list-indicator:before{right:-1.5em}.md-typeset .task-list-indicator:before{background-color:var(--md-default-fg-color--lightest);content:"";height:1.25em;-webkit-mask-image:var(--md-tasklist-icon);mask-image:var(--md-tasklist-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:.15em;width:1.25em}.md-typeset [type=checkbox]:checked+.task-list-indicator:before{background-color:#00e676;-webkit-mask-image:var(--md-tasklist-icon--checked);mask-image:var(--md-tasklist-icon--checked)}@media print{.giscus,[id=__comments]{display:none}}:root>*{--md-mermaid-font-family:var(--md-text-font-family),sans-serif;--md-mermaid-edge-color:var(--md-code-fg-color);--md-mermaid-node-bg-color:var(--md-accent-fg-color--transparent);--md-mermaid-node-fg-color:var(--md-accent-fg-color);--md-mermaid-label-bg-color:var(--md-default-bg-color);--md-mermaid-label-fg-color:var(--md-code-fg-color);--md-mermaid-sequence-actor-bg-color:var(--md-mermaid-label-bg-color);--md-mermaid-sequence-actor-fg-color:var(--md-mermaid-label-fg-color);--md-mermaid-sequence-actor-border-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-actor-line-color:var(--md-default-fg-color--lighter);--md-mermaid-sequence-actorman-bg-color:var(--md-mermaid-label-bg-color);--md-mermaid-sequence-actorman-line-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-box-bg-color:var(--md-mermaid-node-bg-color);--md-mermaid-sequence-box-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-label-bg-color:var(--md-mermaid-node-bg-color);--md-mermaid-sequence-label-fg-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-loop-bg-color:var(--md-mermaid-node-bg-color);--md-mermaid-sequence-loop-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-loop-border-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-message-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-message-line-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-note-bg-color:var(--md-mermaid-label-bg-color);--md-mermaid-sequence-note-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-note-border-color:var(--md-mermaid-label-fg-color);--md-mermaid-sequence-number-bg-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-number-fg-color:var(--md-accent-bg-color)}.mermaid{line-height:normal;margin:1em 0}.md-typeset .grid{grid-gap:.4rem;display:grid;grid-template-columns:repeat(auto-fit,minmax(min(100%,16rem),1fr));margin:1em 0}.md-typeset .grid.cards>ol,.md-typeset .grid.cards>ul{display:contents}.md-typeset .grid.cards>ol>li,.md-typeset .grid.cards>ul>li,.md-typeset .grid>.card{border:.05rem solid var(--md-default-fg-color--lightest);border-radius:.1rem;display:block;margin:0;padding:.8rem;transition:border .25s,box-shadow .25s}.md-typeset .grid.cards>ol>li:focus-within,.md-typeset .grid.cards>ol>li:hover,.md-typeset .grid.cards>ul>li:focus-within,.md-typeset .grid.cards>ul>li:hover,.md-typeset .grid>.card:focus-within,.md-typeset .grid>.card:hover{border-color:#0000;box-shadow:var(--md-shadow-z2)}.md-typeset .grid.cards>ol>li>hr,.md-typeset .grid.cards>ul>li>hr,.md-typeset .grid>.card>hr{margin-bottom:1em;margin-top:1em}.md-typeset .grid.cards>ol>li>:first-child,.md-typeset .grid.cards>ul>li>:first-child,.md-typeset .grid>.card>:first-child{margin-top:0}.md-typeset .grid.cards>ol>li>:last-child,.md-typeset .grid.cards>ul>li>:last-child,.md-typeset .grid>.card>:last-child{margin-bottom:0}.md-typeset .grid>*,.md-typeset .grid>.admonition,.md-typeset .grid>.highlight>*,.md-typeset .grid>.highlighttable,.md-typeset .grid>.md-typeset details,.md-typeset .grid>details,.md-typeset .grid>pre{margin-bottom:0;margin-top:0}.md-typeset .grid>.highlight>pre:only-child,.md-typeset .grid>.highlight>pre>code,.md-typeset .grid>.highlighttable,.md-typeset .grid>.highlighttable>tbody,.md-typeset .grid>.highlighttable>tbody>tr,.md-typeset .grid>.highlighttable>tbody>tr>.code,.md-typeset .grid>.highlighttable>tbody>tr>.code>.highlight,.md-typeset .grid>.highlighttable>tbody>tr>.code>.highlight>pre,.md-typeset .grid>.highlighttable>tbody>tr>.code>.highlight>pre>code{height:100%}.md-typeset .grid>.tabbed-set{margin-bottom:0;margin-top:0}@media screen and (min-width:45em){[dir=ltr] .md-typeset .inline{float:left}[dir=rtl] .md-typeset .inline{float:right}[dir=ltr] .md-typeset .inline{margin-right:.8rem}[dir=rtl] .md-typeset .inline{margin-left:.8rem}.md-typeset .inline{margin-bottom:.8rem;margin-top:0;width:11.7rem}[dir=ltr] .md-typeset .inline.end{float:right}[dir=rtl] .md-typeset .inline.end{float:left}[dir=ltr] .md-typeset .inline.end{margin-left:.8rem;margin-right:0}[dir=rtl] .md-typeset .inline.end{margin-left:0;margin-right:.8rem}}
</document_content>
</document>

<document index="13">
<source>docs/assets/stylesheets/palette.ab4e12ef.min.css</source>
<document_content>
@media screen{[data-md-color-scheme=slate]{--md-default-fg-color:hsla(var(--md-hue),15%,90%,0.82);--md-default-fg-color--light:hsla(var(--md-hue),15%,90%,0.56);--md-default-fg-color--lighter:hsla(var(--md-hue),15%,90%,0.32);--md-default-fg-color--lightest:hsla(var(--md-hue),15%,90%,0.12);--md-default-bg-color:hsla(var(--md-hue),15%,14%,1);--md-default-bg-color--light:hsla(var(--md-hue),15%,14%,0.54);--md-default-bg-color--lighter:hsla(var(--md-hue),15%,14%,0.26);--md-default-bg-color--lightest:hsla(var(--md-hue),15%,14%,0.07);--md-code-fg-color:hsla(var(--md-hue),18%,86%,0.82);--md-code-bg-color:hsla(var(--md-hue),15%,18%,1);--md-code-bg-color--light:hsla(var(--md-hue),15%,18%,0.9);--md-code-bg-color--lighter:hsla(var(--md-hue),15%,18%,0.54);--md-code-hl-color:#2977ff;--md-code-hl-color--light:#2977ff1a;--md-code-hl-number-color:#e6695b;--md-code-hl-special-color:#f06090;--md-code-hl-function-color:#c973d9;--md-code-hl-constant-color:#9383e2;--md-code-hl-keyword-color:#6791e0;--md-code-hl-string-color:#2fb170;--md-code-hl-name-color:var(--md-code-fg-color);--md-code-hl-operator-color:var(--md-default-fg-color--light);--md-code-hl-punctuation-color:var(--md-default-fg-color--light);--md-code-hl-comment-color:var(--md-default-fg-color--light);--md-code-hl-generic-color:var(--md-default-fg-color--light);--md-code-hl-variable-color:var(--md-default-fg-color--light);--md-typeset-color:var(--md-default-fg-color);--md-typeset-a-color:var(--md-primary-fg-color);--md-typeset-kbd-color:hsla(var(--md-hue),15%,90%,0.12);--md-typeset-kbd-accent-color:hsla(var(--md-hue),15%,90%,0.2);--md-typeset-kbd-border-color:hsla(var(--md-hue),15%,14%,1);--md-typeset-mark-color:#4287ff4d;--md-typeset-table-color:hsla(var(--md-hue),15%,95%,0.12);--md-typeset-table-color--light:hsla(var(--md-hue),15%,95%,0.035);--md-admonition-fg-color:var(--md-default-fg-color);--md-admonition-bg-color:var(--md-default-bg-color);--md-footer-bg-color:hsla(var(--md-hue),15%,10%,0.87);--md-footer-bg-color--dark:hsla(var(--md-hue),15%,8%,1);--md-shadow-z1:0 0.2rem 0.5rem #0000000d,0 0 0.05rem #0000001a;--md-shadow-z2:0 0.2rem 0.5rem #00000040,0 0 0.05rem #00000040;--md-shadow-z3:0 0.2rem 0.5rem #0006,0 0 0.05rem #00000059;color-scheme:dark}[data-md-color-scheme=slate] img[src$="#gh-light-mode-only"],[data-md-color-scheme=slate] img[src$="#only-light"]{display:none}[data-md-color-scheme=slate][data-md-color-primary=pink]{--md-typeset-a-color:#ed5487}[data-md-color-scheme=slate][data-md-color-primary=purple]{--md-typeset-a-color:#c46fd3}[data-md-color-scheme=slate][data-md-color-primary=deep-purple]{--md-typeset-a-color:#a47bea}[data-md-color-scheme=slate][data-md-color-primary=indigo]{--md-typeset-a-color:#5488e8}[data-md-color-scheme=slate][data-md-color-primary=teal]{--md-typeset-a-color:#00ccb8}[data-md-color-scheme=slate][data-md-color-primary=green]{--md-typeset-a-color:#71c174}[data-md-color-scheme=slate][data-md-color-primary=deep-orange]{--md-typeset-a-color:#ff764d}[data-md-color-scheme=slate][data-md-color-primary=brown]{--md-typeset-a-color:#c1775c}[data-md-color-scheme=slate][data-md-color-primary=black],[data-md-color-scheme=slate][data-md-color-primary=blue-grey],[data-md-color-scheme=slate][data-md-color-primary=grey],[data-md-color-scheme=slate][data-md-color-primary=white]{--md-typeset-a-color:#5e8bde}[data-md-color-switching] *,[data-md-color-switching] :after,[data-md-color-switching] :before{transition-duration:0ms!important}}[data-md-color-accent=red]{--md-accent-fg-color:#ff1947;--md-accent-fg-color--transparent:#ff19471a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=pink]{--md-accent-fg-color:#f50056;--md-accent-fg-color--transparent:#f500561a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=purple]{--md-accent-fg-color:#df41fb;--md-accent-fg-color--transparent:#df41fb1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=deep-purple]{--md-accent-fg-color:#7c4dff;--md-accent-fg-color--transparent:#7c4dff1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=indigo]{--md-accent-fg-color:#526cfe;--md-accent-fg-color--transparent:#526cfe1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=blue]{--md-accent-fg-color:#4287ff;--md-accent-fg-color--transparent:#4287ff1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=light-blue]{--md-accent-fg-color:#0091eb;--md-accent-fg-color--transparent:#0091eb1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=cyan]{--md-accent-fg-color:#00bad6;--md-accent-fg-color--transparent:#00bad61a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=teal]{--md-accent-fg-color:#00bda4;--md-accent-fg-color--transparent:#00bda41a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=green]{--md-accent-fg-color:#00c753;--md-accent-fg-color--transparent:#00c7531a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=light-green]{--md-accent-fg-color:#63de17;--md-accent-fg-color--transparent:#63de171a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=lime]{--md-accent-fg-color:#b0eb00;--md-accent-fg-color--transparent:#b0eb001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=yellow]{--md-accent-fg-color:#ffd500;--md-accent-fg-color--transparent:#ffd5001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=amber]{--md-accent-fg-color:#fa0;--md-accent-fg-color--transparent:#ffaa001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=orange]{--md-accent-fg-color:#ff9100;--md-accent-fg-color--transparent:#ff91001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=deep-orange]{--md-accent-fg-color:#ff6e42;--md-accent-fg-color--transparent:#ff6e421a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-primary=red]{--md-primary-fg-color:#ef5552;--md-primary-fg-color--light:#e57171;--md-primary-fg-color--dark:#e53734;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=pink]{--md-primary-fg-color:#e92063;--md-primary-fg-color--light:#ec417a;--md-primary-fg-color--dark:#c3185d;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=purple]{--md-primary-fg-color:#ab47bd;--md-primary-fg-color--light:#bb69c9;--md-primary-fg-color--dark:#8c24a8;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=deep-purple]{--md-primary-fg-color:#7e56c2;--md-primary-fg-color--light:#9574cd;--md-primary-fg-color--dark:#673ab6;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=indigo]{--md-primary-fg-color:#4051b5;--md-primary-fg-color--light:#5d6cc0;--md-primary-fg-color--dark:#303fa1;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=blue]{--md-primary-fg-color:#2094f3;--md-primary-fg-color--light:#42a5f5;--md-primary-fg-color--dark:#1975d2;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=light-blue]{--md-primary-fg-color:#02a6f2;--md-primary-fg-color--light:#28b5f6;--md-primary-fg-color--dark:#0287cf;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=cyan]{--md-primary-fg-color:#00bdd6;--md-primary-fg-color--light:#25c5da;--md-primary-fg-color--dark:#0097a8;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=teal]{--md-primary-fg-color:#009485;--md-primary-fg-color--light:#26a699;--md-primary-fg-color--dark:#007a6c;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=green]{--md-primary-fg-color:#4cae4f;--md-primary-fg-color--light:#68bb6c;--md-primary-fg-color--dark:#398e3d;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=light-green]{--md-primary-fg-color:#8bc34b;--md-primary-fg-color--light:#9ccc66;--md-primary-fg-color--dark:#689f38;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=lime]{--md-primary-fg-color:#cbdc38;--md-primary-fg-color--light:#d3e156;--md-primary-fg-color--dark:#b0b52c;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=yellow]{--md-primary-fg-color:#ffec3d;--md-primary-fg-color--light:#ffee57;--md-primary-fg-color--dark:#fbc02d;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=amber]{--md-primary-fg-color:#ffc105;--md-primary-fg-color--light:#ffc929;--md-primary-fg-color--dark:#ffa200;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=orange]{--md-primary-fg-color:#ffa724;--md-primary-fg-color--light:#ffa724;--md-primary-fg-color--dark:#fa8900;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=deep-orange]{--md-primary-fg-color:#ff6e42;--md-primary-fg-color--light:#ff8a66;--md-primary-fg-color--dark:#f4511f;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=brown]{--md-primary-fg-color:#795649;--md-primary-fg-color--light:#8d6e62;--md-primary-fg-color--dark:#5d4037;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=grey]{--md-primary-fg-color:#757575;--md-primary-fg-color--light:#9e9e9e;--md-primary-fg-color--dark:#616161;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3;--md-typeset-a-color:#4051b5}[data-md-color-primary=blue-grey]{--md-primary-fg-color:#546d78;--md-primary-fg-color--light:#607c8a;--md-primary-fg-color--dark:#455a63;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3;--md-typeset-a-color:#4051b5}[data-md-color-primary=light-green]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#72ad2e}[data-md-color-primary=lime]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#8b990a}[data-md-color-primary=yellow]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#b8a500}[data-md-color-primary=amber]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#d19d00}[data-md-color-primary=orange]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#e68a00}[data-md-color-primary=white]{--md-primary-fg-color:hsla(var(--md-hue),0%,100%,1);--md-primary-fg-color--light:hsla(var(--md-hue),0%,100%,0.7);--md-primary-fg-color--dark:hsla(var(--md-hue),0%,0%,0.07);--md-primary-bg-color:hsla(var(--md-hue),0%,0%,0.87);--md-primary-bg-color--light:hsla(var(--md-hue),0%,0%,0.54);--md-typeset-a-color:#4051b5}[data-md-color-primary=white] .md-button{color:var(--md-typeset-a-color)}[data-md-color-primary=white] .md-button--primary{background-color:var(--md-typeset-a-color);border-color:var(--md-typeset-a-color);color:hsla(var(--md-hue),0%,100%,1)}@media screen and (min-width:60em){[data-md-color-primary=white] .md-search__form{background-color:hsla(var(--md-hue),0%,0%,.07)}[data-md-color-primary=white] .md-search__form:hover{background-color:hsla(var(--md-hue),0%,0%,.32)}[data-md-color-primary=white] .md-search__input+.md-search__icon{color:hsla(var(--md-hue),0%,0%,.87)}}@media screen and (min-width:76.25em){[data-md-color-primary=white] .md-tabs{border-bottom:.05rem solid #00000012}}[data-md-color-primary=black]{--md-primary-fg-color:hsla(var(--md-hue),15%,9%,1);--md-primary-fg-color--light:hsla(var(--md-hue),15%,9%,0.54);--md-primary-fg-color--dark:hsla(var(--md-hue),15%,9%,1);--md-primary-bg-color:hsla(var(--md-hue),15%,100%,1);--md-primary-bg-color--light:hsla(var(--md-hue),15%,100%,0.7);--md-typeset-a-color:#4051b5}[data-md-color-primary=black] .md-button{color:var(--md-typeset-a-color)}[data-md-color-primary=black] .md-button--primary{background-color:var(--md-typeset-a-color);border-color:var(--md-typeset-a-color);color:hsla(var(--md-hue),0%,100%,1)}[data-md-color-primary=black] .md-header{background-color:hsla(var(--md-hue),15%,9%,1)}@media screen and (max-width:59.984375em){[data-md-color-primary=black] .md-nav__source{background-color:hsla(var(--md-hue),15%,11%,.87)}}@media screen and (max-width:76.234375em){html [data-md-color-primary=black] .md-nav--primary .md-nav__title[for=__drawer]{background-color:hsla(var(--md-hue),15%,9%,1)}}@media screen and (min-width:76.25em){[data-md-color-primary=black] .md-tabs{background-color:hsla(var(--md-hue),15%,9%,1)}}
</document_content>
</document>

<document index="14">
<source>docs/index.html</source>
<document_content>

<!doctype html>
<html lang="en" class="no-js">
  <head>
    
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width,initial-scale=1">
      
        <meta name="description" content="A plugin that captures HTML output and creates cousin Markdown files">
      
      
        <meta name="author" content="Vexy">
      
      
        <link rel="canonical" href="https://vexyart.github.io/vexy-mkdocs-output-as-input/">
      
      
      
      
        
      
      
      <link rel="icon" href="assets/images/favicon.png">
      <meta name="generator" content="mkdocs-1.6.1, mkdocs-material-9.6.15+insiders-4.53.16">
    
    
      
        <title>MkDocs Output as Input Plugin - MkDocs Output as Input Plugin</title>
      
    
    
      <link rel="stylesheet" href="assets/stylesheets/main.8cce3a28.min.css">
      
        
        <link rel="stylesheet" href="assets/stylesheets/palette.ab4e12ef.min.css">
      
      


    
    
      
    
    
      
        
        
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,700,700i%7CRoboto+Mono:400,400i,700,700i&display=fallback">
        <style>:root{--md-text-font:"Roboto";--md-code-font:"Roboto Mono"}</style>
      
    
    
    <script>__md_scope=new URL(".",location),__md_hash=e=>[...e].reduce(((e,_)=>(e<<5)-e+_.charCodeAt(0)),0),__md_get=(e,_=localStorage,t=__md_scope)=>JSON.parse(_.getItem(t.pathname+"."+e)),__md_set=(e,_,t=localStorage,a=__md_scope)=>{try{t.setItem(a.pathname+"."+e,JSON.stringify(_))}catch(e){}}</script>
    
      

    
    
  </head>
  
  
    
    
      
    
    
    
    
    <body dir="ltr" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo">
  
    
    <input class="md-toggle" data-md-toggle="drawer" type="checkbox" id="__drawer" autocomplete="off">
    <input class="md-toggle" data-md-toggle="search" type="checkbox" id="__search" autocomplete="off">
    <label class="md-overlay" for="__drawer"></label>
    <div data-md-component="skip">
      
    </div>
    <div data-md-component="announce">
      
    </div>
    
    
      

  

<header class="md-header md-header--shadow" data-md-component="header">
  <nav class="md-header__inner md-grid" aria-label="Header">
    <a href="." title="MkDocs Output as Input Plugin" class="md-header__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    <label class="md-header__button md-icon" for="__drawer">
      
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 6h18v2H3zm0 5h18v2H3zm0 5h18v2H3z"/></svg>
    </label>
    <div class="md-header__title" data-md-component="header-title">
      <div class="md-header__ellipsis">
        <div class="md-header__topic">
          <span class="md-ellipsis">
            MkDocs Output as Input Plugin
          </span>
        </div>
        <div class="md-header__topic" data-md-component="header-topic">
          <span class="md-ellipsis">
            
              MkDocs Output as Input Plugin
            
          </span>
        </div>
      </div>
    </div>
    
      
        <form class="md-header__option" data-md-component="palette">
  
    
    
    
    <input class="md-option" data-md-color-media="" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo"  aria-hidden="true"  type="radio" name="__palette" id="__palette_0">
    
  
</form>
      
    
    
      <script>var palette=__md_get("__palette");if(palette&&palette.color){if("(prefers-color-scheme)"===palette.color.media){var media=matchMedia("(prefers-color-scheme: light)"),input=document.querySelector(media.matches?"[data-md-color-media='(prefers-color-scheme: light)']":"[data-md-color-media='(prefers-color-scheme: dark)']");palette.color.media=input.getAttribute("data-md-color-media"),palette.color.scheme=input.getAttribute("data-md-color-scheme"),palette.color.primary=input.getAttribute("data-md-color-primary"),palette.color.accent=input.getAttribute("data-md-color-accent")}for(var[key,value]of Object.entries(palette.color))document.body.setAttribute("data-md-color-"+key,value)}</script>
    
    
    
      
      
        <label class="md-header__button md-icon" for="__search">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        </label>
        <div class="md-search" data-md-component="search" role="dialog">
  <label class="md-search__overlay" for="__search"></label>
  <div class="md-search__inner" role="search">
    <form class="md-search__form" name="search">
      <input type="text" class="md-search__input" name="query" aria-label="Search" placeholder="Search" autocapitalize="off" autocorrect="off" autocomplete="off" spellcheck="false" data-md-component="search-query" required>
      <label class="md-search__icon md-icon" for="__search">
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20 11v2H8l5.5 5.5-1.42 1.42L4.16 12l7.92-7.92L13.5 5.5 8 11z"/></svg>
      </label>
      <nav class="md-search__options" aria-label="Search">
        
        <button type="reset" class="md-search__icon md-icon" title="Clear" aria-label="Clear" tabindex="-1">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>
        </button>
      </nav>
      
    </form>
    <div class="md-search__output">
      <div class="md-search__scrollwrap" tabindex="0" data-md-scrollfix>
        <div class="md-search-result" data-md-component="search-result">
          <div class="md-search-result__meta">
            Initializing search
          </div>
          <ol class="md-search-result__list" role="presentation"></ol>
        </div>
      </div>
    </div>
  </div>
</div>
      
    
    
  </nav>
  
</header>
    
    <div class="md-container" data-md-component="container">
      
      
        
          
        
      
      <main class="md-main" data-md-component="main">
        <div class="md-main__inner md-grid">
          
            
              
              <div class="md-sidebar md-sidebar--primary" data-md-component="sidebar" data-md-type="navigation" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    



<nav class="md-nav md-nav--primary" aria-label="Navigation" data-md-level="0">
  <label class="md-nav__title" for="__drawer">
    <a href="." title="MkDocs Output as Input Plugin" class="md-nav__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    MkDocs Output as Input Plugin
  </label>
  
  <ul class="md-nav__list" data-md-scrollfix>
    
      
      
  
  
    
  
  
  
    <li class="md-nav__item md-nav__item--active">
      
      <input class="md-nav__toggle md-toggle" type="checkbox" id="__toc">
      
      
      
      <a href="." class="md-nav__link md-nav__link--active">
        
  
  
  <span class="md-ellipsis">
    
  
    Home
  

    
  </span>
  
  

      </a>
      
    </li>
  

    
  </ul>
</nav>
                  </div>
                </div>
              </div>
            
            
              
              <div class="md-sidebar md-sidebar--secondary" data-md-component="sidebar" data-md-type="toc" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    

<nav class="md-nav md-nav--secondary" aria-label="Table of contents">
  
  
  
  
</nav>
                  </div>
                </div>
              </div>
            
          
          
            <div class="md-content" data-md-component="content">
              
              <article class="md-content__inner md-typeset">
                
                  



<div class="md-content__inner md-typeset">
<h1 class="custom-heading" id="vexy-mkdocs-output-as-input">vexy-mkdocs-output-as-input<a class="headerlink" href="#vexy-mkdocs-output-as-input" title="Permanent link">¶</a></h1>
<p><a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="PyPI version" src="https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg"/></a>
<a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml"><img alt="CI" src="https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg"/></a>
<a href="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input"><img alt="codecov" src="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg"/></a>
<a href="https://opensource.org/licenses/MIT"><img alt="License: MIT" src="https://img.shields.io/badge/License-MIT-yellow.svg"/></a>
<a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="Python versions" src="https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg"/></a></p>
<p>A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.</p>
<h2 class="custom-heading" id="features">Features<a class="headerlink" href="#features" title="Permanent link">¶</a></h2>
<p>This plugin enables powerful post-processing workflows by:</p>
<ol>
<li>✅ Preserving your original Markdown structure and frontmatter</li>
<li>✅ Capturing the fully-rendered HTML output from MkDocs</li>
<li>✅ Creating new Markdown files that combine original metadata with processed HTML</li>
<li>✅ Enabling further processing by other static site generators</li>
</ol>
<h2 class="custom-heading" id="installation">Installation<a class="headerlink" href="#installation" title="Permanent link">¶</a></h2>
<p>Install from PyPI:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-0-1" id="__codelineno-0-1" name="__codelineno-0-1"></a>uv<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>--system<span class="w"> </span>--upgrade<span class="w"> </span>vexy-mkdocs-output-as-input
</code></pre></div>
<p>Or install from source:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-1-1" id="__codelineno-1-1" name="__codelineno-1-1"></a>pip<span class="w"> </span>install<span class="w"> </span>git+https://github.com/vexyart/vexy-mkdocs-output-as-input
</code></pre></div>
<h2 class="custom-heading" id="quick-start">Quick Start<a class="headerlink" href="#quick-start" title="Permanent link">¶</a></h2>
<p>Add the plugin to your <code>mkdocs.yml</code>:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-2-1" id="__codelineno-2-1" name="__codelineno-2-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-2-2" id="__codelineno-2-2" name="__codelineno-2-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span><span class="w">  </span><span class="c1"># Other plugins</span>
<a href="#__codelineno-2-3" id="__codelineno-2-3" name="__codelineno-2-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<p>Build your site:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-3-1" id="__codelineno-3-1" name="__codelineno-3-1"></a>mkdocs<span class="w"> </span>build
</code></pre></div>
<p>Find your processed files in the <code>stage/</code> directory (relative to your MkDocs project root).</p>
<h2 class="custom-heading" id="configuration">Configuration<a class="headerlink" href="#configuration" title="Permanent link">¶</a></h2>
<p>All configuration options with their defaults:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-4-1" id="__codelineno-4-1" name="__codelineno-4-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-4-2" id="__codelineno-4-2" name="__codelineno-4-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-4-3" id="__codelineno-4-3" name="__codelineno-4-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">stage</span><span class="w">          </span><span class="c1"># Output directory name (default: 'stage')</span>
<a href="#__codelineno-4-4" id="__codelineno-4-4" name="__codelineno-4-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span><span class="w">        </span><span class="c1"># HTML element to extract (default: 'main')</span>
<a href="#__codelineno-4-5" id="__codelineno-4-5" name="__codelineno-4-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span><span class="w">       </span><span class="c1"># Tag to use in output (default: 'article')</span>
<a href="#__codelineno-4-6" id="__codelineno-4-6" name="__codelineno-4-6"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">false</span><span class="w">            </span><span class="c1"># Enable verbose logging (default: false)</span>
</code></pre></div>
<h3 class="custom-heading" id="options-explained">Options Explained<a class="headerlink" href="#options-explained" title="Permanent link">¶</a></h3>
<table>
<thead>
<tr>
<th>Option</th>
<th>Type</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>stage_dir</code></td>
<td>string</td>
<td><code>"stage"</code></td>
<td>Directory name for output files (relative to project root)</td>
</tr>
<tr>
<td><code>html_element</code></td>
<td>string</td>
<td><code>"main"</code></td>
<td>CSS selector for the HTML element to extract</td>
</tr>
<tr>
<td><code>target_tag</code></td>
<td>string</td>
<td><code>"article"</code></td>
<td>HTML tag to use in the output (replaces extracted element's tag)</td>
</tr>
<tr>
<td><code>verbose</code></td>
<td>boolean</td>
<td><code>false</code></td>
<td>Enable detailed logging for debugging</td>
</tr>
</tbody>
</table>
<h2 class="custom-heading" id="how-it-works">How It Works<a class="headerlink" href="#how-it-works" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="input-process-output">Input → Process → Output<a class="headerlink" href="#input-process-output" title="Permanent link">¶</a></h3>
<ol>
<li>
<p><strong>Input</strong>: Your source Markdown with frontmatter
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-5-1" id="__codelineno-5-1" name="__codelineno-5-1"></a>---
<a href="#__codelineno-5-2" id="__codelineno-5-2" name="__codelineno-5-2"></a>title: My Page
<a href="#__codelineno-5-3" id="__codelineno-5-3" name="__codelineno-5-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-5-4" id="__codelineno-5-4" name="__codelineno-5-4"></a><span class="gu">---</span>
<a href="#__codelineno-5-5" id="__codelineno-5-5" name="__codelineno-5-5"></a>
<a href="#__codelineno-5-6" id="__codelineno-5-6" name="__codelineno-5-6"></a><span class="gh"># My Page</span>
<a href="#__codelineno-5-7" id="__codelineno-5-7" name="__codelineno-5-7"></a>
<a href="#__codelineno-5-8" id="__codelineno-5-8" name="__codelineno-5-8"></a>This is my content with <span class="gs">**markdown**</span>.
</code></pre></div></p>
</li>
<li>
<p><strong>MkDocs Processing</strong>: Renders to HTML as usual
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-6-1" id="__codelineno-6-1" name="__codelineno-6-1"></a><span class="p">&lt;</span><span class="nt">main</span> <span class="na">class</span><span class="o">=</span><span class="s">"md-content"</span><span class="p">&gt;</span>
<a href="#__codelineno-6-2" id="__codelineno-6-2" name="__codelineno-6-2"></a>  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>My Page<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<a href="#__codelineno-6-3" id="__codelineno-6-3" name="__codelineno-6-3"></a>  <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>This is my content with <span class="p">&lt;</span><span class="nt">strong</span><span class="p">&gt;</span>markdown<span class="p">&lt;/</span><span class="nt">strong</span><span class="p">&gt;</span>.<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<a href="#__codelineno-6-4" id="__codelineno-6-4" name="__codelineno-6-4"></a><span class="p">&lt;/</span><span class="nt">main</span><span class="p">&gt;</span>
</code></pre></div></p>
</li>
<li>
<p><strong>Output</strong>: Cousin file with preserved frontmatter + extracted HTML
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-7-1" id="__codelineno-7-1" name="__codelineno-7-1"></a>---
<a href="#__codelineno-7-2" id="__codelineno-7-2" name="__codelineno-7-2"></a>title: My Page
<a href="#__codelineno-7-3" id="__codelineno-7-3" name="__codelineno-7-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-7-4" id="__codelineno-7-4" name="__codelineno-7-4"></a><span class="gu">---</span>
<a href="#__codelineno-7-5" id="__codelineno-7-5" name="__codelineno-7-5"></a>
<a href="#__codelineno-7-6" id="__codelineno-7-6" name="__codelineno-7-6"></a>&lt;article class="md-content"&gt;
<a href="#__codelineno-7-7" id="__codelineno-7-7" name="__codelineno-7-7"></a>  &lt;h1&gt;My Page&lt;/h1&gt;
<a href="#__codelineno-7-8" id="__codelineno-7-8" name="__codelineno-7-8"></a>  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;
<a href="#__codelineno-7-9" id="__codelineno-7-9" name="__codelineno-7-9"></a>&lt;/article&gt;
</code></pre></div></p>
</li>
</ol>
<h2 class="custom-heading" id="use-cases">Use Cases<a class="headerlink" href="#use-cases" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="multi-stage-documentation-pipeline">🔄 Multi-Stage Documentation Pipeline<a class="headerlink" href="#multi-stage-documentation-pipeline" title="Permanent link">¶</a></h3>
<p>Process documentation through MkDocs first, then feed to another SSG:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-8-1" id="__codelineno-8-1" name="__codelineno-8-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-8-2" id="__codelineno-8-2" name="__codelineno-8-2"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-8-3" id="__codelineno-8-3" name="__codelineno-8-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-8-4" id="__codelineno-8-4" name="__codelineno-8-4"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">hugo/content</span>
<a href="#__codelineno-8-5" id="__codelineno-8-5" name="__codelineno-8-5"></a>
<a href="#__codelineno-8-6" id="__codelineno-8-6" name="__codelineno-8-6"></a><span class="c1"># Then run:</span>
<a href="#__codelineno-8-7" id="__codelineno-8-7" name="__codelineno-8-7"></a><span class="c1"># mkdocs build &amp;&amp; hugo build</span>
</code></pre></div>
<h3 class="custom-heading" id="content-extraction">📝 Content Extraction<a class="headerlink" href="#content-extraction" title="Permanent link">¶</a></h3>
<p>Extract just the article content without theme wrapper:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-9-1" id="__codelineno-9-1" name="__codelineno-9-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-9-2" id="__codelineno-9-2" name="__codelineno-9-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-9-3" id="__codelineno-9-3" name="__codelineno-9-3"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span>
<a href="#__codelineno-9-4" id="__codelineno-9-4" name="__codelineno-9-4"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">div</span>
</code></pre></div>
<h3 class="custom-heading" id="custom-post-processing">🎨 Custom Post-Processing<a class="headerlink" href="#custom-post-processing" title="Permanent link">¶</a></h3>
<p>Preserve MkDocs rendering while preparing for custom templates:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-10-1" id="__codelineno-10-1" name="__codelineno-10-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-10-2" id="__codelineno-10-2" name="__codelineno-10-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-10-3" id="__codelineno-10-3" name="__codelineno-10-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">_includes</span>
<a href="#__codelineno-10-4" id="__codelineno-10-4" name="__codelineno-10-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-10-5" id="__codelineno-10-5" name="__codelineno-10-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">section</span>
</code></pre></div>
<h2 class="custom-heading" id="examples">Examples<a class="headerlink" href="#examples" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="basic-example">Basic Example<a class="headerlink" href="#basic-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-11-1" id="__codelineno-11-1" name="__codelineno-11-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-11-2" id="__codelineno-11-2" name="__codelineno-11-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-11-3" id="__codelineno-11-3" name="__codelineno-11-3"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-11-4" id="__codelineno-11-4" name="__codelineno-11-4"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<h3 class="custom-heading" id="advanced-example">Advanced Example<a class="headerlink" href="#advanced-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-12-1" id="__codelineno-12-1" name="__codelineno-12-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-12-2" id="__codelineno-12-2" name="__codelineno-12-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-12-3" id="__codelineno-12-3" name="__codelineno-12-3"></a><span class="nt">theme</span><span class="p">:</span>
<a href="#__codelineno-12-4" id="__codelineno-12-4" name="__codelineno-12-4"></a><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">material</span>
<a href="#__codelineno-12-5" id="__codelineno-12-5" name="__codelineno-12-5"></a>
<a href="#__codelineno-12-6" id="__codelineno-12-6" name="__codelineno-12-6"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-12-7" id="__codelineno-12-7" name="__codelineno-12-7"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span>
<a href="#__codelineno-12-8" id="__codelineno-12-8" name="__codelineno-12-8"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-12-9" id="__codelineno-12-9" name="__codelineno-12-9"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">processed</span>
<a href="#__codelineno-12-10" id="__codelineno-12-10" name="__codelineno-12-10"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article.md-content__inner</span>
<a href="#__codelineno-12-11" id="__codelineno-12-11" name="__codelineno-12-11"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-12-12" id="__codelineno-12-12" name="__codelineno-12-12"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">true</span>
<a href="#__codelineno-12-13" id="__codelineno-12-13" name="__codelineno-12-13"></a>
<a href="#__codelineno-12-14" id="__codelineno-12-14" name="__codelineno-12-14"></a><span class="c1"># Process specific content area from Material theme</span>
</code></pre></div>
<h3 class="custom-heading" id="integration-example">Integration Example<a class="headerlink" href="#integration-example" title="Permanent link">¶</a></h3>
<p>Using with other tools in a documentation pipeline:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-13-1" id="__codelineno-13-1" name="__codelineno-13-1"></a><span class="ch">#!/bin/bash</span>
<a href="#__codelineno-13-2" id="__codelineno-13-2" name="__codelineno-13-2"></a><span class="c1"># build.sh</span>
<a href="#__codelineno-13-3" id="__codelineno-13-3" name="__codelineno-13-3"></a>
<a href="#__codelineno-13-4" id="__codelineno-13-4" name="__codelineno-13-4"></a><span class="c1"># Stage 1: Build with MkDocs + plugins</span>
<a href="#__codelineno-13-5" id="__codelineno-13-5" name="__codelineno-13-5"></a>mkdocs<span class="w"> </span>build
<a href="#__codelineno-13-6" id="__codelineno-13-6" name="__codelineno-13-6"></a>
<a href="#__codelineno-13-7" id="__codelineno-13-7" name="__codelineno-13-7"></a><span class="c1"># Stage 2: Process staged output</span>
<a href="#__codelineno-13-8" id="__codelineno-13-8" name="__codelineno-13-8"></a>python<span class="w"> </span>post_process.py<span class="w"> </span>stage/
<a href="#__codelineno-13-9" id="__codelineno-13-9" name="__codelineno-13-9"></a>
<a href="#__codelineno-13-10" id="__codelineno-13-10" name="__codelineno-13-10"></a><span class="c1"># Stage 3: Build final site</span>
<a href="#__codelineno-13-11" id="__codelineno-13-11" name="__codelineno-13-11"></a>hugo<span class="w"> </span>--contentDir<span class="o">=</span>stage/
</code></pre></div>
<h2 class="custom-heading" id="development">Development<a class="headerlink" href="#development" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="setup-development-environment">Setup Development Environment<a class="headerlink" href="#setup-development-environment" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-14-1" id="__codelineno-14-1" name="__codelineno-14-1"></a><span class="c1"># Clone the repository</span>
<a href="#__codelineno-14-2" id="__codelineno-14-2" name="__codelineno-14-2"></a>git<span class="w"> </span>clone<span class="w"> </span>https://github.com/vexyart/vexy-mkdocs-output-as-input
<a href="#__codelineno-14-3" id="__codelineno-14-3" name="__codelineno-14-3"></a><span class="nb">cd</span><span class="w"> </span>vexy-mkdocs-output-as-input
<a href="#__codelineno-14-4" id="__codelineno-14-4" name="__codelineno-14-4"></a>
<a href="#__codelineno-14-5" id="__codelineno-14-5" name="__codelineno-14-5"></a><span class="c1"># Create virtual environment</span>
<a href="#__codelineno-14-6" id="__codelineno-14-6" name="__codelineno-14-6"></a>python<span class="w"> </span>-m<span class="w"> </span>venv<span class="w"> </span>venv
<a href="#__codelineno-14-7" id="__codelineno-14-7" name="__codelineno-14-7"></a><span class="nb">source</span><span class="w"> </span>venv/bin/activate<span class="w">  </span><span class="c1"># On Windows: venv\Scripts\activate</span>
<a href="#__codelineno-14-8" id="__codelineno-14-8" name="__codelineno-14-8"></a>
<a href="#__codelineno-14-9" id="__codelineno-14-9" name="__codelineno-14-9"></a><span class="c1"># Install in development mode</span>
<a href="#__codelineno-14-10" id="__codelineno-14-10" name="__codelineno-14-10"></a>pip<span class="w"> </span>install<span class="w"> </span>-e<span class="w"> </span>.<span class="o">[</span>dev<span class="o">]</span>
<a href="#__codelineno-14-11" id="__codelineno-14-11" name="__codelineno-14-11"></a>
<a href="#__codelineno-14-12" id="__codelineno-14-12" name="__codelineno-14-12"></a><span class="c1"># Install pre-commit hooks</span>
<a href="#__codelineno-14-13" id="__codelineno-14-13" name="__codelineno-14-13"></a>pre-commit<span class="w"> </span>install
</code></pre></div>
<h3 class="custom-heading" id="running-tests">Running Tests<a class="headerlink" href="#running-tests" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-15-1" id="__codelineno-15-1" name="__codelineno-15-1"></a><span class="c1"># Run all tests</span>
<a href="#__codelineno-15-2" id="__codelineno-15-2" name="__codelineno-15-2"></a>pytest
<a href="#__codelineno-15-3" id="__codelineno-15-3" name="__codelineno-15-3"></a>
<a href="#__codelineno-15-4" id="__codelineno-15-4" name="__codelineno-15-4"></a><span class="c1"># Run with coverage</span>
<a href="#__codelineno-15-5" id="__codelineno-15-5" name="__codelineno-15-5"></a>pytest<span class="w"> </span>--cov<span class="o">=</span>mkdocs_output_as_input<span class="w"> </span>--cov-report<span class="o">=</span>html
<a href="#__codelineno-15-6" id="__codelineno-15-6" name="__codelineno-15-6"></a>
<a href="#__codelineno-15-7" id="__codelineno-15-7" name="__codelineno-15-7"></a><span class="c1"># Run specific test</span>
<a href="#__codelineno-15-8" id="__codelineno-15-8" name="__codelineno-15-8"></a>pytest<span class="w"> </span>tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
</code></pre></div>
<h3 class="custom-heading" id="code-quality">Code Quality<a class="headerlink" href="#code-quality" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-16-1" id="__codelineno-16-1" name="__codelineno-16-1"></a><span class="c1"># Format code</span>
<a href="#__codelineno-16-2" id="__codelineno-16-2" name="__codelineno-16-2"></a>black<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-3" id="__codelineno-16-3" name="__codelineno-16-3"></a>
<a href="#__codelineno-16-4" id="__codelineno-16-4" name="__codelineno-16-4"></a><span class="c1"># Lint code</span>
<a href="#__codelineno-16-5" id="__codelineno-16-5" name="__codelineno-16-5"></a>ruff<span class="w"> </span>check<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-6" id="__codelineno-16-6" name="__codelineno-16-6"></a>
<a href="#__codelineno-16-7" id="__codelineno-16-7" name="__codelineno-16-7"></a><span class="c1"># Type check</span>
<a href="#__codelineno-16-8" id="__codelineno-16-8" name="__codelineno-16-8"></a>mypy<span class="w"> </span>src
</code></pre></div>
<h2 class="custom-heading" id="contributing">Contributing<a class="headerlink" href="#contributing" title="Permanent link">¶</a></h2>
<p>Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.</p>
<ol>
<li>Fork the repository</li>
<li>Create your feature branch (<code>git checkout -b feature/AmazingFeature</code>)</li>
<li>Commit your changes (<code>git commit -m 'Add some AmazingFeature'</code>)</li>
<li>Push to the branch (<code>git push origin feature/AmazingFeature</code>)</li>
<li>Open a Pull Request</li>
</ol>
<h2 class="custom-heading" id="license">License<a class="headerlink" href="#license" title="Permanent link">¶</a></h2>
<p>This project is licensed under the MIT License - see the <a href="LICENSE">LICENSE</a> file for details.</p>
<h2 class="custom-heading" id="support">Support<a class="headerlink" href="#support" title="Permanent link">¶</a></h2>
<ul>
<li>📧 Email: you@example.com</li>
<li>🐛 Issues: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/issues">GitHub Issues</a></li>
<li>💬 Discussions: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions">GitHub Discussions</a></li>
</ul>
</div>







  
  






                
              </article>
            </div>
          
          
<script>var target=document.getElementById(location.hash.slice(1));target&&target.name&&(target.checked=target.name.startsWith("__tabbed_"))</script>
        </div>
        
      </main>
      
        <footer class="md-footer">
  
  <div class="md-footer-meta md-typeset">
    <div class="md-footer-meta__inner md-grid">
      <div class="md-copyright">
  
  
    Made with
    <a href="https://squidfunk.github.io/mkdocs-material/" target="_blank" rel="noopener">
      Material for MkDocs Insiders
    </a>
  
</div>
      
    </div>
  </div>
</footer>
      
    </div>
    <div class="md-dialog" data-md-component="dialog">
      <div class="md-dialog__inner md-typeset"></div>
    </div>
    
    
    
      
      
      <script id="__config" type="application/json">{"annotate": null, "base": ".", "features": ["navigation.instant", "navigation.tracking", "content.code.copy"], "search": "assets/javascripts/workers/search.ad38c271.min.js", "tags": null, "translations": {"clipboard.copied": "Copied to clipboard", "clipboard.copy": "Copy to clipboard", "search.result.more.one": "1 more on this page", "search.result.more.other": "# more on this page", "search.result.none": "No matching documents", "search.result.one": "1 matching document", "search.result.other": "# matching documents", "search.result.placeholder": "Type to start searching", "search.result.term.missing": "Missing", "select.version": "Select version"}, "version": null}</script>
    
    
      <script src="assets/javascripts/bundle.5c86578b.min.js"></script>
      
    
  </body>
</html>
</document_content>
</document>

<document index="15">
<source>docs/search/search_index.json</source>
<document_content>
{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"MkDocs Output as Input Plugin","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#vexy-mkdocs-output-as-input","title":"vexy-mkdocs-output-as-input","text":"<p>A MkDocs plugin that captures HTML output and creates \"cousin\" Markdown files with original frontmatter and extracted HTML content.</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#features","title":"Features","text":"<p>This plugin enables powerful post-processing workflows by:</p> <ol> <li>\u2705 Preserving your original Markdown structure and frontmatter</li> <li>\u2705 Capturing the fully-rendered HTML output from MkDocs</li> <li>\u2705 Creating new Markdown files that combine original metadata with processed HTML</li> <li>\u2705 Enabling further processing by other static site generators</li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#installation","title":"Installation","text":"<p>Install from PyPI:</p> <pre><code>uv pip install --system --upgrade vexy-mkdocs-output-as-input\n</code></pre> <p>Or install from source:</p> <pre><code>pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#quick-start","title":"Quick Start","text":"<p>Add the plugin to your <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - search  # Other plugins\n  - output-as-input\n</code></pre> <p>Build your site:</p> <pre><code>mkdocs build\n</code></pre> <p>Find your processed files in the <code>stage/</code> directory (relative to your MkDocs project root).</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#configuration","title":"Configuration","text":"<p>All configuration options with their defaults:</p> <pre><code>plugins:\n  - output-as-input:\n      stage_dir: stage          # Output directory name (default: 'stage')\n      html_element: main        # HTML element to extract (default: 'main')\n      target_tag: article       # Tag to use in output (default: 'article')\n      verbose: false            # Enable verbose logging (default: false)\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#options-explained","title":"Options Explained","text":"Option Type Default Description <code>stage_dir</code> string <code>\"stage\"</code> Directory name for output files (relative to project root) <code>html_element</code> string <code>\"main\"</code> CSS selector for the HTML element to extract <code>target_tag</code> string <code>\"article\"</code> HTML tag to use in the output (replaces extracted element's tag) <code>verbose</code> boolean <code>false</code> Enable detailed logging for debugging","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#how-it-works","title":"How It Works","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#input-process-output","title":"Input \u2192 Process \u2192 Output","text":"<ol> <li> <p>Input: Your source Markdown with frontmatter    <pre><code>---\ntitle: My Page\nauthor: Jane Doe\n---\n\n# My Page\n\nThis is my content with **markdown**.\n</code></pre></p> </li> <li> <p>MkDocs Processing: Renders to HTML as usual    <pre><code>&lt;main class=\"md-content\"&gt;\n  &lt;h1&gt;My Page&lt;/h1&gt;\n  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;\n&lt;/main&gt;\n</code></pre></p> </li> <li> <p>Output: Cousin file with preserved frontmatter + extracted HTML    <pre><code>---\ntitle: My Page\nauthor: Jane Doe\n---\n\n&lt;article class=\"md-content\"&gt;\n  &lt;h1&gt;My Page&lt;/h1&gt;\n  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;\n&lt;/article&gt;\n</code></pre></p> </li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#use-cases","title":"Use Cases","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#multi-stage-documentation-pipeline","title":"\ud83d\udd04 Multi-Stage Documentation Pipeline","text":"<p>Process documentation through MkDocs first, then feed to another SSG:</p> <pre><code># mkdocs.yml\nplugins:\n  - output-as-input:\n      stage_dir: hugo/content\n\n# Then run:\n# mkdocs build &amp;&amp; hugo build\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#content-extraction","title":"\ud83d\udcdd Content Extraction","text":"<p>Extract just the article content without theme wrapper:</p> <pre><code>plugins:\n  - output-as-input:\n      html_element: article\n      target_tag: div\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#custom-post-processing","title":"\ud83c\udfa8 Custom Post-Processing","text":"<p>Preserve MkDocs rendering while preparing for custom templates:</p> <pre><code>plugins:\n  - output-as-input:\n      stage_dir: _includes\n      html_element: main\n      target_tag: section\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#examples","title":"Examples","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#basic-example","title":"Basic Example","text":"<pre><code># mkdocs.yml\nsite_name: My Documentation\nplugins:\n  - output-as-input\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#advanced-example","title":"Advanced Example","text":"<pre><code># mkdocs.yml\nsite_name: My Documentation\ntheme:\n  name: material\n\nplugins:\n  - search\n  - output-as-input:\n      stage_dir: processed\n      html_element: article.md-content__inner\n      target_tag: main\n      verbose: true\n\n# Process specific content area from Material theme\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#integration-example","title":"Integration Example","text":"<p>Using with other tools in a documentation pipeline:</p> <pre><code>#!/bin/bash\n# build.sh\n\n# Stage 1: Build with MkDocs + plugins\nmkdocs build\n\n# Stage 2: Process staged output\npython post_process.py stage/\n\n# Stage 3: Build final site\nhugo --contentDir=stage/\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#development","title":"Development","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#setup-development-environment","title":"Setup Development Environment","text":"<pre><code># Clone the repository\ngit clone https://github.com/vexyart/vexy-mkdocs-output-as-input\ncd vexy-mkdocs-output-as-input\n\n# Create virtual environment\npython -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n\n# Install in development mode\npip install -e .[dev]\n\n# Install pre-commit hooks\npre-commit install\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#running-tests","title":"Running Tests","text":"<pre><code># Run all tests\npytest\n\n# Run with coverage\npytest --cov=mkdocs_output_as_input --cov-report=html\n\n# Run specific test\npytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#code-quality","title":"Code Quality","text":"<pre><code># Format code\nblack src tests\n\n# Lint code\nruff check src tests\n\n# Type check\nmypy src\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.</p> <ol> <li>Fork the repository</li> <li>Create your feature branch (<code>git checkout -b feature/AmazingFeature</code>)</li> <li>Commit your changes (<code>git commit -m 'Add some AmazingFeature'</code>)</li> <li>Push to the branch (<code>git push origin feature/AmazingFeature</code>)</li> <li>Open a Pull Request</li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#support","title":"Support","text":"<ul> <li>\ud83d\udce7 Email: you@example.com</li> <li>\ud83d\udc1b Issues: GitHub Issues</li> <li>\ud83d\udcac Discussions: GitHub Discussions</li> </ul>","tags":["mkdocs","plugin","documentation","pipeline"]}]}
</document_content>
</document>

<document index="16">
<source>docs/sitemap.xml</source>
<document_content>
<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
    <url>
         <loc>https://vexyart.github.io/vexy-mkdocs-output-as-input/</loc>
         <lastmod>2025-07-14</lastmod>
    </url>
</urlset>
</document_content>
</document>

<document index="17">
<source>llms.txt</source>
<document_content>
Project Structure:
📁 vexy-mkdocs-output-as-input
├── 📁 .github
│   └── 📁 workflows
│       ├── 📄 ci.yml
│       └── 📄 release.yml
├── 📁 docs
│   ├── 📁 assets
│   │   ├── 📁 images
│   │   ├── 📁 javascripts
│   │   │   ├── 📁 lunr
│   │   │   │   ├── 📁 min
│   │   │   │   │   └── ... (depth limit reached)
│   │   │   │   ├── 📄 tinyseg.js
│   │   │   │   └── 📄 wordcut.js
│   │   │   ├── 📁 workers
│   │   │   │   └── 📄 search.ad38c271.min.js
│   │   │   └── 📄 bundle.5c86578b.min.js
│   │   └── 📁 stylesheets
│   │       ├── 📄 main.8cce3a28.min.css
│   │       └── 📄 palette.ab4e12ef.min.css
│   ├── 📁 search
│   │   └── 📄 search_index.json
│   ├── 📄 404.html
│   ├── 📄 index.html
│   ├── 📄 README.md
│   └── 📄 sitemap.xml
├── 📁 src
│   └── 📁 mkdocs_output_as_input
│       ├── 📄 __init__.py
│       ├── 📄 cli.py
│       └── 📄 plugin.py
├── 📁 stage
│   └── 📄 README.md
├── 📁 tests
│   ├── 📄 test_cli.py
│   └── 📄 test_plugin.py
├── 📄 .gitignore
├── 📄 AGENTS.md
├── 📄 build_docs.py
├── 📄 CHANGELOG.md
├── 📄 CLAUDE.md
├── 📄 GEMINI.md
├── 📄 LICENSE
├── 📄 llms.txt
├── 📄 mkdocs.yml
├── 📄 pyproject.toml
├── 📄 README.md
└── 📄 TODO.md


<documents>
<document index="1">
<source>.github/workflows/ci.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run pre-commit
        if: matrix.python-version == '3.11'
        run: pre-commit run --all-files

      - name: Run tests
        run: |
          pytest -v --cov=mkdocs_output_as_input --cov-report=xml --cov-report=term

      - name: Upload coverage
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run ruff
        run: ruff check --output-format=github .

      - name: Run ruff format
        run: ruff format --check --diff .

      - name: Run mypy
        run: mypy src
</document_content>
</document>

<document index="2">
<source>.github/workflows/release.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write  # Required for PyPI trusted publishing

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mkdocs-output-as-input
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # Trusted publishing configured in PyPI project settings

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Extract changelog section
        id: changelog
        run: |
          version=${GITHUB_REF#refs/tags/v}
          awk "/## \[$version\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.changelog.outputs.version }}
          body_path: release_notes.md
          files: dist/*
          draft: false
          prerelease: false
</document_content>
</document>

<document index="3">
<source>.gitignore</source>
<document_content>
# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
venv/
ENV/
env/
.venv
.env

# pyenv
.python-version

# pipenv
Pipfile.lock

# Poetry
poetry.lock

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# pytest
.pytest_cache/
.coverage
htmlcov/
.tox/
coverage.xml
*.cover
.hypothesis/

# Jupyter Notebook
.ipynb_checkpoints

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# MkDocs
site/
.cache/

# setuptools-scm
src/mkdocs_output_as_input/_version.py
</document_content>
</document>

<document index="4">
<source>AGENTS.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="5">
<source>CHANGELOG.md</source>
<document_content>
# Changelog

All notable changes to vexy-mkdocs-output-as-input will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [Unreleased]

### Added
- Complete documentation pages for getting started, configuration, examples, and API reference
- Additional test cases for edge cases, improving coverage to 91%+
- Proper error handling for missing directories (docs_dir, site_dir)
- Configuration option `include_frontmatter` to control whether YAML frontmatter is included in output files (default: true)
- Configuration option `preserve_links` to convert absolute links to relative paths (default: false)
- Configuration options `minify` and `prettify` for HTML output formatting (mutually exclusive)
- Support for multiple HTML selectors - extract multiple elements in one pass
- Support for CSS selectors in addition to tag names (e.g., `.content`, `#main`)
- CLI tool `mkdocs-output-as-input` for standalone HTML processing
- CLI options for preserving relative links, minifying, and prettifying HTML output
- CLI support for multiple selectors using `--html-element` flag multiple times
- Comprehensive test suite for CLI functionality

### Changed
- Replaced Black formatter with Ruff format in CI workflow
- Enhanced type hints with proper type ignore comments for MkDocs compatibility
- Improved error handling and logging throughout the plugin
- Refactored `build_docs.py` to use proper two-stage MkDocs pipeline:
  1. Source → Intermediate (with plugin capturing HTML)
  2. Intermediate → Final (standard MkDocs build with full Material theme)

### Fixed
- Fixed broken plugin implementation - all methods now properly implemented
- Fixed broken test suite - all tests now passing with proper fixtures
- Fixed mypy type checking errors with appropriate type annotations
- Pre-commit configuration updated to remove conflicting Black formatter
- Documentation build now generates proper MkDocs Material site (not manual HTML)
- Removed duplicate README.md from docs directory

## [0.2.0] - 2025-01-14

### Changed
- **BREAKING**: Migrated to src-layout package structure
- **BREAKING**: Minimum Python version is now 3.9
- Switched from Loguru to standard library logging for better integration
- Modernized packaging with PEP 621 compliant pyproject.toml
- Improved type hints throughout the codebase

### Added
- Comprehensive test suite with >90% coverage
- Pre-commit hooks for code quality
- GitHub Actions CI/CD workflows
- Support for Python 3.9, 3.10, 3.11, and 3.12
- Automated release process with trusted PyPI publishing
- Development documentation in README

### Fixed
- Better error handling for missing files
- Graceful handling of invalid YAML frontmatter
- Improved logging messages for debugging

## [0.1.0] - 2025-01-10

### Added
- Initial release of vexy-mkdocs-output-as-input plugin
- Core functionality to capture HTML output and create cousin Markdown files
- Configurable stage directory for output files
- Configurable HTML element extraction (default: `<main>`)
- Configurable target tag transformation (default: `<article>`)
- Preservation of original YAML frontmatter
- Verbose logging mode for debugging
- Basic documentation and examples

[Unreleased]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.2.0...HEAD
[0.2.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.1.0...v0.2.0
[0.1.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/releases/tag/v0.1.0
</document_content>
</document>

<document index="6">
<source>CLAUDE.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="7">
<source>GEMINI.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="8">
<source>LICENSE</source>
<document_content>
MIT License

Copyright (c) 2025 MkDocs Output as Input Contributors

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</document_content>
</document>

<document index="9">
<source>README.md</source>
<document_content>
# vexy-mkdocs-output-as-input

[![PyPI version](https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)
[![CI](https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg)](https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg)](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Python versions](https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)

A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.

## Features

This plugin enables powerful post-processing workflows by:

1. ✅ Preserving your original Markdown structure and frontmatter
2. ✅ Capturing the fully-rendered HTML output from MkDocs
3. ✅ Creating new Markdown files that combine original metadata with processed HTML
4. ✅ Enabling further processing by other static site generators

## Installation

Install from PyPI:

```bash
uv pip install --system --upgrade vexy-mkdocs-output-as-input
```

Or install from source:

```bash
pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input
```

This also installs a CLI tool: `mkdocs-output-as-input`

## Quick Start

Add the plugin to your `mkdocs.yml`:

```yaml
plugins:
  - search  # Other plugins
  - output-as-input
```

Build your site:

```bash
mkdocs build
```

Find your processed files in the `stage/` directory (relative to your MkDocs project root).

## Configuration

All configuration options with their defaults:

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory name (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      include_frontmatter: true # Include YAML frontmatter (default: true)
      preserve_links: false     # Convert absolute to relative links (default: false)
      verbose: false            # Enable verbose logging (default: false)
```

### Advanced Examples

Extract multiple elements:
```yaml
plugins:
  - output-as-input:
      html_element: [main, aside]  # Extract both main content and sidebar
```

Extract using CSS selectors:
```yaml
plugins:
  - output-as-input:
      html_element: .content  # Extract element with class="content"
```

### Options Explained

| Option | Type | Default | Description |
|--------|------|---------|-------------|
| `stage_dir` | string | `"stage"` | Directory name for output files (relative to project root) |
| `html_element` | string or list | `"main"` | CSS selector(s) for HTML elements to extract |
| `target_tag` | string | `"article"` | HTML tag to use in the output (replaces extracted element's tag) |
| `include_frontmatter` | boolean | `true` | Include YAML frontmatter in output files |
| `preserve_links` | boolean | `false` | Convert absolute links to relative (e.g., `/path` → `./path`) |
| `minify` | boolean | `false` | Minify HTML output (remove whitespace) |
| `prettify` | boolean | `false` | Prettify HTML output (add indentation) |
| `verbose` | boolean | `false` | Enable detailed logging for debugging |

## How It Works

### Input → Process → Output

1. **Input**: Your source Markdown with frontmatter
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   # My Page
   
   This is my content with **markdown**.
   ```

2. **MkDocs Processing**: Renders to HTML as usual
   ```html
   <main class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </main>
   ```

3. **Output**: Cousin file with preserved frontmatter + extracted HTML
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   <article class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </article>
   ```

## Use Cases

### 🔄 Multi-Stage Documentation Pipeline

Process documentation through MkDocs first, then feed to another SSG:

```yaml
# mkdocs.yml
plugins:
  - output-as-input:
      stage_dir: hugo/content

# Then run:
# mkdocs build && hugo build
```

### 📝 Content Extraction

Extract just the article content without theme wrapper:

```yaml
plugins:
  - output-as-input:
      html_element: article
      target_tag: div
```

### 🎨 Custom Post-Processing

Preserve MkDocs rendering while preparing for custom templates:

```yaml
plugins:
  - output-as-input:
      stage_dir: _includes
      html_element: main
      target_tag: section
```

## Examples

### Basic Example

```yaml
# mkdocs.yml
site_name: My Documentation
plugins:
  - output-as-input
```

### Advanced Example

```yaml
# mkdocs.yml
site_name: My Documentation
theme:
  name: material

plugins:
  - search
  - output-as-input:
      stage_dir: processed
      html_element: article.md-content__inner
      target_tag: main
      verbose: true

# Process specific content area from Material theme
```

### Integration Example

Using with other tools in a documentation pipeline:

```bash
#!/bin/bash
# build.sh

# Stage 1: Build with MkDocs + plugins
mkdocs build

# Stage 2: Process staged output
python post_process.py stage/

# Stage 3: Build final site
hugo --contentDir=stage/
```

## Development

### Setup Development Environment

```bash
# Clone the repository
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input

# Create virtual environment
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install in development mode
pip install -e .[dev]

# Install pre-commit hooks
pre-commit install
```

### Running Tests

```bash
# Run all tests
pytest

# Run with coverage
pytest --cov=mkdocs_output_as_input --cov-report=html

# Run specific test
pytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
```

### Code Quality

```bash
# Format code
black src tests

# Lint code
ruff check src tests

# Type check
mypy src
```

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Support

- 📧 Email: you@example.com
- 🐛 Issues: [GitHub Issues](https://github.com/vexyart/vexy-mkdocs-output-as-input/issues)
- 💬 Discussions: [GitHub Discussions](https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions)
</document_content>
</document>

<document index="10">
<source>TODO.md</source>
<document_content>
# TODO


</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/build_docs.py
# Language: python

import os
import shutil
import subprocess
import tempfile
from pathlib import Path
import yaml

def run_command((cmd, cwd=None)):
    """Run a command and print output."""

def create_stage_mkdocs_config((temp_dir)):
    """Create mkdocs.yml for stage 1 (source → intermediate)."""

def create_final_mkdocs_config(()):
    """Create mkdocs.yml for final build (intermediate → final site)."""

def step1_create_intermediate(()):
    """Step 1: Build README.md → stage/README.md with plugin."""

def step2_build_final_docs(()):
    """Step 2: Build stage/README.md → docs/ with standard MkDocs."""

def main(()):
    """Run the documentation build pipeline."""


<document index="11">
<source>docs/404.html</source>
<document_content>

<!doctype html>
<html lang="en" class="no-js">
  <head>
    
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width,initial-scale=1">
      
        <meta name="description" content="A plugin that captures HTML output and creates cousin Markdown files">
      
      
      
      
      
      
        
      
      
      <link rel="icon" href="/vexy-mkdocs-output-as-input/assets/images/favicon.png">
      <meta name="generator" content="mkdocs-1.6.1, mkdocs-material-9.6.15+insiders-4.53.16">
    
    
      
        <title>MkDocs Output as Input Plugin</title>
      
    
    
      <link rel="stylesheet" href="/vexy-mkdocs-output-as-input/assets/stylesheets/main.8cce3a28.min.css">
      
        
        <link rel="stylesheet" href="/vexy-mkdocs-output-as-input/assets/stylesheets/palette.ab4e12ef.min.css">
      
      


    
    
      
    
    
      
        
        
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,700,700i%7CRoboto+Mono:400,400i,700,700i&display=fallback">
        <style>:root{--md-text-font:"Roboto";--md-code-font:"Roboto Mono"}</style>
      
    
    
    <script>__md_scope=new URL("/vexy-mkdocs-output-as-input/",location),__md_hash=e=>[...e].reduce(((e,_)=>(e<<5)-e+_.charCodeAt(0)),0),__md_get=(e,_=localStorage,t=__md_scope)=>JSON.parse(_.getItem(t.pathname+"."+e)),__md_set=(e,_,t=localStorage,a=__md_scope)=>{try{t.setItem(a.pathname+"."+e,JSON.stringify(_))}catch(e){}}</script>
    
      

    
    
  </head>
  
  
    
    
      
    
    
    
    
    <body dir="ltr" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo">
  
    
    <input class="md-toggle" data-md-toggle="drawer" type="checkbox" id="__drawer" autocomplete="off">
    <input class="md-toggle" data-md-toggle="search" type="checkbox" id="__search" autocomplete="off">
    <label class="md-overlay" for="__drawer"></label>
    <div data-md-component="skip">
      
    </div>
    <div data-md-component="announce">
      
    </div>
    
    
      

  

<header class="md-header md-header--shadow" data-md-component="header">
  <nav class="md-header__inner md-grid" aria-label="Header">
    <a href="/vexy-mkdocs-output-as-input/." title="MkDocs Output as Input Plugin" class="md-header__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    <label class="md-header__button md-icon" for="__drawer">
      
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 6h18v2H3zm0 5h18v2H3zm0 5h18v2H3z"/></svg>
    </label>
    <div class="md-header__title" data-md-component="header-title">
      <div class="md-header__ellipsis">
        <div class="md-header__topic">
          <span class="md-ellipsis">
            MkDocs Output as Input Plugin
          </span>
        </div>
        <div class="md-header__topic" data-md-component="header-topic">
          <span class="md-ellipsis">
            
              
            
          </span>
        </div>
      </div>
    </div>
    
      
        <form class="md-header__option" data-md-component="palette">
  
    
    
    
    <input class="md-option" data-md-color-media="" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo"  aria-hidden="true"  type="radio" name="__palette" id="__palette_0">
    
  
</form>
      
    
    
      <script>var palette=__md_get("__palette");if(palette&&palette.color){if("(prefers-color-scheme)"===palette.color.media){var media=matchMedia("(prefers-color-scheme: light)"),input=document.querySelector(media.matches?"[data-md-color-media='(prefers-color-scheme: light)']":"[data-md-color-media='(prefers-color-scheme: dark)']");palette.color.media=input.getAttribute("data-md-color-media"),palette.color.scheme=input.getAttribute("data-md-color-scheme"),palette.color.primary=input.getAttribute("data-md-color-primary"),palette.color.accent=input.getAttribute("data-md-color-accent")}for(var[key,value]of Object.entries(palette.color))document.body.setAttribute("data-md-color-"+key,value)}</script>
    
    
    
      
      
        <label class="md-header__button md-icon" for="__search">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        </label>
        <div class="md-search" data-md-component="search" role="dialog">
  <label class="md-search__overlay" for="__search"></label>
  <div class="md-search__inner" role="search">
    <form class="md-search__form" name="search">
      <input type="text" class="md-search__input" name="query" aria-label="Search" placeholder="Search" autocapitalize="off" autocorrect="off" autocomplete="off" spellcheck="false" data-md-component="search-query" required>
      <label class="md-search__icon md-icon" for="__search">
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20 11v2H8l5.5 5.5-1.42 1.42L4.16 12l7.92-7.92L13.5 5.5 8 11z"/></svg>
      </label>
      <nav class="md-search__options" aria-label="Search">
        
        <button type="reset" class="md-search__icon md-icon" title="Clear" aria-label="Clear" tabindex="-1">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>
        </button>
      </nav>
      
    </form>
    <div class="md-search__output">
      <div class="md-search__scrollwrap" tabindex="0" data-md-scrollfix>
        <div class="md-search-result" data-md-component="search-result">
          <div class="md-search-result__meta">
            Initializing search
          </div>
          <ol class="md-search-result__list" role="presentation"></ol>
        </div>
      </div>
    </div>
  </div>
</div>
      
    
    
  </nav>
  
</header>
    
    <div class="md-container" data-md-component="container">
      
      
        
          
        
      
      <main class="md-main" data-md-component="main">
        <div class="md-main__inner md-grid">
          
            
              
              <div class="md-sidebar md-sidebar--primary" data-md-component="sidebar" data-md-type="navigation" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    



<nav class="md-nav md-nav--primary" aria-label="Navigation" data-md-level="0">
  <label class="md-nav__title" for="__drawer">
    <a href="/vexy-mkdocs-output-as-input/." title="MkDocs Output as Input Plugin" class="md-nav__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    MkDocs Output as Input Plugin
  </label>
  
  <ul class="md-nav__list" data-md-scrollfix>
    
      
      
  
  
  
  
    <li class="md-nav__item">
      <a href="/vexy-mkdocs-output-as-input/." class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    
  
    Home
  

    
  </span>
  
  

      </a>
    </li>
  

    
  </ul>
</nav>
                  </div>
                </div>
              </div>
            
            
              
              <div class="md-sidebar md-sidebar--secondary" data-md-component="sidebar" data-md-type="toc" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    

<nav class="md-nav md-nav--secondary" aria-label="Table of contents">
  
  
  
  
</nav>
                  </div>
                </div>
              </div>
            
          
          
            <div class="md-content" data-md-component="content">
              
              <article class="md-content__inner md-typeset">
                
  <h1>404 - Not found</h1>

              </article>
            </div>
          
          
<script>var target=document.getElementById(location.hash.slice(1));target&&target.name&&(target.checked=target.name.startsWith("__tabbed_"))</script>
        </div>
        
      </main>
      
        <footer class="md-footer">
  
  <div class="md-footer-meta md-typeset">
    <div class="md-footer-meta__inner md-grid">
      <div class="md-copyright">
  
  
    Made with
    <a href="https://squidfunk.github.io/mkdocs-material/" target="_blank" rel="noopener">
      Material for MkDocs Insiders
    </a>
  
</div>
      
    </div>
  </div>
</footer>
      
    </div>
    <div class="md-dialog" data-md-component="dialog">
      <div class="md-dialog__inner md-typeset"></div>
    </div>
    
    
    
      
      
      <script id="__config" type="application/json">{"annotate": null, "base": "/vexy-mkdocs-output-as-input/", "features": ["navigation.instant", "navigation.tracking", "content.code.copy"], "search": "/vexy-mkdocs-output-as-input/assets/javascripts/workers/search.ad38c271.min.js", "tags": null, "translations": {"clipboard.copied": "Copied to clipboard", "clipboard.copy": "Copy to clipboard", "search.result.more.one": "1 more on this page", "search.result.more.other": "# more on this page", "search.result.none": "No matching documents", "search.result.one": "1 matching document", "search.result.other": "# matching documents", "search.result.placeholder": "Type to start searching", "search.result.term.missing": "Missing", "select.version": "Select version"}, "version": null}</script>
    
    
      <script src="/vexy-mkdocs-output-as-input/assets/javascripts/bundle.5c86578b.min.js"></script>
      
    
  </body>
</html>
</document_content>
</document>

<document index="12">
<source>docs/README.md</source>
<document_content>
# Documentation

This directory contains the generated documentation for the vexy-mkdocs-output-as-input plugin.

View the documentation at: https://vexyart.github.io/vexy-mkdocs-output-as-input/

## Build Process

The documentation is built using the plugin itself:

1. **Source**: `README.md` (root of repository)
2. **Intermediate**: `stage/README.md` (preserved in git)
3. **Final**: `docs/index.html` (this directory)

To rebuild the documentation, run: `python build_docs.py`

</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/bundle.5c86578b.min.js
# Language: javascript

function e((r))

function a((k))

function c((k))

function p((k))

function l((k))

function f((k))

function u((k))

function d((k))

function v((k))

function S((k))

function X(())

function re(())

function ee((k))

function Ka((e))

function u((q))

function S((q))

function k((q))

function R((q))

function se((q,C))

function ce((q,C))

function he((q,C,_))

function Se((q,C))

function Ue((q,C))

function Qi((q))

function Yi((q,C))

function Bi((q))

function Gi(())

function Qt((q))

function Mr((q,C))

function _((D,N))

function s((a,c))

function a((l,f,u,d,v))

function c((l,f,u,d,v))

function p((l,f,u,d))

function c((u,d,v))

function p((u,d,v))

function l((u,d,v))

function f((u,d,v))

function n((i))

function n(())

function p(())

function r((o))

function ie((e,t))

function r(())

function Eo((e,t,r,o))

function n((i))

function a((l))

function c((l))

function p((l))

function Gt((e,t))

function a((p))

function c((p))

function Oe((e))

function K((e,t))

function B((e,t,r))

function dt((e))

function wo((e,t,r))

function s((d))

function a((d,v))

function c((d,v))

function p((d))

function l((d))

function f((d))

function u((d,v))

function To((e))

function o((i))

function n((i,s,a,c))

function I((e))

function yt((e))

function Ze((e,t))

function e((t))

function Xt((e))

function So((e))

function Zt((e))

function ge(())

function Lo((e))

function Mo((e))

function Pr((e,t,r))

function Et((e))

function _o((e))

function t((r))

function Rr((e,t))

function e((t))

function t((r,o,n))

function er((e))

function aa((e))

function Ir((e,t))

function be((e))

function Ao(())

function Fr((e))

function e((t))

function Co((e))

function ca((e))

function pa((e))

function la((e))

function E((e))

function w((e,t,r,o,n))

function t((r,o,n,i,s,a))

function t(())

function t((r,o))

function t((r))

function t((r,o,n))

function t((r,o))

function t((r,o))

function e((t,r))

function t((r,o))

function t((r,o))

function t(())

function t((r,o))

function t(())

function tr((e))

function Vr((e))

function pt((e))

function Fe((e))

function rr((e,t))

function or((e))

function nr((e))

function ir((e))

function ar((e))

function fa(())

function cr((e))

function pr((e))

function lr((e))

function U((e))

function ua((e))

function da((e))

function ha((e))

function ba((e))

function jo((e))

function va((e))

function ga((e,t))

function _e((e,t,r,o,n))

function xe((e,t))

function et((e,t))

function Uo((e,t))

function Wo((e,t))

function Do((e,t))

function Vo((e,t))

function mr((e,t))

function No((e,t))

function zo((e,t))

function fe((e,t))

function $(())

function Nr((e,t))

function qo((e))

function m((e,t))

function xa((e,t))

function lt((e))

function Ko((e))

function Oa((e))

function Qo((e,t))

function z(())

function zr((e,t,r))

function Yo((e,t,r))

function Bo((e,t,r,o,n,i,s,a))

function J((e,t,r))

function Mt((e))

function Go(())

function Ke(())

function H((e))

function h((e,t,r,o))

function Jo((e,t))

function Aa((e))

function Ca((e))

function ka((e))

function ur((e,t,r))

function He((e,t,r))

function L(())

function dr((e))

function g((e,t))

function rt(())

function Xo((e))

function $e((e,t))

function ot((e,t))

function ve((e))

function Zo((e,t,r,o,n))

function qr(())

function Pe(())

function jt((e))

function Ae((e,t))

function c(())

function Qe((e))

function Ee((e))

function oe(())

function en((e))

function Kr((e,t))

function nt((e,t))

function Qr((e,t))

function Y((e,t))

function $a((e,t))

function ne((e,t))

function tn((e))

function Pa(())

function ae(())

function hr((e,t))

function A((e))

function Re((e,t))

function Yr((e))

function rn(())

function Ve(())

function vt((e))

function Ut((e,t))

function le((e))

function Br((e,t))

function Z((e,t,r))

function Ie((e))

function Gr((e))

function Q(())

function b((e,t))

function W((e))

function Jr((e,t))

function O((e,t,r))

function on((e,t))

function gt((e,t,r))

function te(())

function nn(())

function Xr(())

function an(())

function M((e,t=document))

function j((e,t=document))

function ue((e,t=document))

function Ne(())

function Ye((e))

function it((e,t))

function sn((e,t))

function x((e,t,...r))

function br((e))

function _t((e))

function de((e))

function Le((e))

function At((e))

function vr((e))

function pn((e))

function Be((e))

function ln((e))

function mn((e))

function gr((e))

function Ge((e))

function mt((e))

function un((e,t=16))

function dn((e))

function at((e,t))

function Je((e))

function ja((e,t))

function Ua(())

function hn(())

function we(())

function st((e,t=!1))

function bn(())

function vn(())

function gn((e))

function Zr((e))

function yn((e))

function Wt((e))

function xn(())

function eo((e,t))

function to((e,t))

function ze((e,t))

function xr((e,t))

function En((e,t))

function wn(())

function Tn(())

function Sn(())

function On(())

function Ln(())

function Er((e,{viewport$:t,header$:r}))

function Wa((e))

function Da((e))

function Mn((e,t=new Worker(e)))

function Te(())

function V((e))

function Me((e,t))

function Ce((e,t=document))

function me((e,t=document))

function Na((e))

function _n((e))

function za((e,{target$:t}))

function An((e,t))

function Dt((e,t))

function wr((...e))

function Cn((...e))

function kn((e,t))

function Hn((e))

function $n(())

function Pn(())

function oo((e,t))

function Fn((e))

function jn((e))

function no((e))

function Un((e))

function Qa((e))

function Wn((e,t))

function Ba((e,t=250))

function Vt((e,t,r=250))

function Xe((e,{viewport$:t},r=document.body))

function Ga((e,t))

function Dn((e,t,{target$:r}))

function Ja((e))

function Xa((e))

function Vn((e,t))

function Tr((e,t,{target$:r,print$:o}))

function Nn((e))

function zn((e,t))

function Qn((e))

function es((e))

function Yn((e,t))

function ts((e,{target$:t,print$:r}))

function Bn((e,t))

function rs((e))

function os((e,t))

function Jn((e,t))

function as(())

function Zn((e))

function ti((e))

function ss((e))

function ri((e,{viewport$:t,target$:r}))

function oi((e,t))

function cs((e,{alert$:t}))

function ni((e,t))

function ls((e,t))

function ii((e))

function ms(({viewport$:e}))

function ai((e,t))

function si((e,{header$:t,main$:r}))

function fs((e,{viewport$:t,header$:r}))

function ci((e,t))

function pi((e,{viewport$:t,header$:r}))

function us((e))

function li((e))

function mi((e,{progress$:t}))

function fi((e,t))

function ds((e,t))

function kt((e))

function ui(({document$:e}))

function hs((e))

function di(({alert$:e}))

function hi((e,t))

function bi((e))

function vi((e))

function bs((e))

function gi(({sitemap$:e,location$:t,viewport$:r,progress$:o}))

function xi((e))

function zt((e))

function Sr((e))

function Ei((e,t))

function wi((e))

function po((e,t))

function ys((e,t))

function xs((e,t))

function Es((e))

function Ti(({document$:e}))

function ws((e,{worker$:t}))

function Si((e,{worker$:t}))

function Oi((e,{worker$:t,query$:r}))

function Ts((e,{query$:t}))

function Li((e,t))

function Mi((e,{worker$:t,keyboard$:r}))

function _i((e,{index$:t,keyboard$:r}))

function Ai((e,{index$:t,location$:r}))

function Ss((e,{viewport$:t,main$:r}))

function lo((e,o))

function Ci((e,t))

function ki((e,t))

function Hi((e))

function Ls((e))

function $i((e))

function Ms((e,{viewport$:t,header$:r}))

function Pi((e,t))

function _s((e,{viewport$:t,header$:r}))

function Ri((e,{viewport$:t,header$:r,main$:o,target$:n}))

function As((e,{viewport$:t,main$:r,target$:o}))

function Ii((e,{viewport$:t,header$:r,main$:o,target$:n}))

function Fi(({document$:e,viewport$:t}))

function ji(({document$:e,tablet$:t}))

function Cs(())

function Ui(({document$:e}))

function Wi(({viewport$:e,tablet$:t}))

function ks(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ar.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.da.min.js
# Language: javascript

function e(())

function n(())

function t(())

function s(())

function o(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.de.min.js
# Language: javascript

function e((e,r,n))

function i(())

function s(())

function t(())

function o(())

function c(())

function u(())

function a(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.du.min.js
# Language: javascript

function e(())

function n((e))

function o(())

function t(())

function s(())

function u(())

function c(())

function a(())

function l(())

function m(())

function d(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.el.min.js
# Language: javascript

function e((e))

function t((e))

function r((e))

function n((n))


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.es.min.js
# Language: javascript

function e(())

function n(())

function i(())

function a(())

function t(())

function o(())

function u(())

function w(())

function c(())

function m(())

function l((e,s))

function d((e))

function b(())

function f(())

function _(())

function h(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.fi.min.js
# Language: javascript

function i(())

function n(())

function t(())

function s(())

function o(())

function l(())

function a(())

function u(())

function c(())

function m(())

function w(())

function _(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.fr.min.js
# Language: javascript

function e((e,r,s))

function i((e,r,s))

function n(())

function t(())

function u(())

function o(())

function c(())

function a(())

function l(())

function w(())

function f(())

function m(())

function _(())

function b(())

function d(())

function k(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.he.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.hi.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.hu.min.js
# Language: javascript

function e(())

function i(())

function a(())

function t(())

function s(())

function c(())

function o(())

function w(())

function l(())

function u(())

function m(())

function k(())

function f(())

function b(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.hy.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.it.min.js
# Language: javascript

function e((e,r,n))

function i(())

function o((e))

function t(())

function s(())

function a(())

function u(())

function c(())

function w(())

function l(())

function m(())

function f(())

function v(())

function b(())

function d(())

function _(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ja.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.jp.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.kn.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ko.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.multi.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.nl.min.js
# Language: javascript

function r(())

function n((r))

function o(())

function t(())

function s(())

function u(())

function c(())

function a(())

function l(())

function m(())

function f(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.no.min.js
# Language: javascript

function e(())

function i(())

function t(())

function o(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.pt.min.js
# Language: javascript

function e(())

function n(())

function i(())

function o(())

function t(())

function a(())

function u(())

function w(())

function m(())

function c(())

function l(())

function f(())

function d(())

function v((e,r))

function p(())

function _(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ro.min.js
# Language: javascript

function e((e,i))

function n(())

function t(())

function a(())

function o(())

function u(())

function c(())

function s(())

function w(())

function m(())

function l(())

function f(())

function p(())

function d(())

function b(())

function v(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ru.min.js
# Language: javascript

function e(())

function t(())

function w(())

function i(())

function u((e,n))

function o(())

function s((e,n))

function c(())

function m(())

function f(())

function l(())

function a(())

function p(())

function d(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.sa.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.stemmer.support.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.sv.min.js
# Language: javascript

function e(())

function t(())

function i(())

function s(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ta.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.te.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.th.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.tr.min.js
# Language: javascript

function r((r,i,e))

function n(())

function t((r,i))

function u((r))

function o(())

function s(())

function c(())

function l(())

function a(())

function m(())

function d(())

function f(())

function b(())

function w(())

function _(())

function k(())

function p(())

function g(())

function y(())

function z(())

function v(())

function h(())

function q(())

function C(())

function P(())

function F(())

function S(())

function W(())

function L(())

function x(())

function A(())

function E(())

function j(())

function T(())

function Z(())

function B(())

function D(())

function G(())

function H(())

function I(())

function J(())

function K(())

function M((r))

function N((r))

function O(())

function Q(())

function R(())

function U(())

function V(())

function X((r,i,e))

function Y(())

function $(())

function rr((r,i,e))

function ir(())

function er(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.vi.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.zh.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/tinyseg.js
# Language: javascript

function TinySegmenter(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/wordcut.js
# Language: javascript

function s((o,u))

function isMatch((pat, offset, ch))

function replacer((key, value))

function truncate((s, n))

function getMessage((self))

function fail((actual, expected, message, operator, stackStartFunction))

function ok((value, message))

function _deepEqual((actual, expected))

function isArguments((object))

function objEquiv((a, b))

function expectedException((actual, expected))

function _throws((shouldThrow, block, expected, message))

function balanced((a, b, str))

function maybeMatch((reg, str))

function range((a, b, str))

function numeric((str))

function escapeBraces((str))

function unescapeBraces((str))

function parseCommaParts((str))

function expandTop((str))

function identity((e))

function embrace((str))

function isPadded((el))

function lte((i, y))

function gte((i, y))

function expand((str, isTop))

function EventEmitter(())

function g(())

function isFunction((arg))

function isNumber((arg))

function isObject((arg))

function isUndefined((arg))

function ownProp((obj, field))

function alphasorti((a, b))

function alphasort((a, b))

function setupIgnores((self, options))

function ignoreMap((pattern))

function setopts((self, pattern, options))

function deprecationWarning((options))

function finish((self))

function mark((self, p))

function makeAbs((self, f))

function isIgnored((self, path))

function childrenIgnored((self, path))

function glob((pattern, options, cb))

function Glob((pattern, options, cb))

function done(())

function next(())

function lstatcb_((er, lstat))

function readdirCb((self, abs, cb))

function lstatcb_((er, lstat))

function globSync((pattern, options))

function GlobSync((pattern, options))

function inflight((key, cb))

function makeres((key))

function slice((args))

function charSet((s))

function filter((pattern, options))

function ext((a, b))

function minimatch((p, pattern, options))

function Minimatch((pattern, options))

function make(())

function parseNegate(())

function braceExpand((pattern, options))

function parse((pattern, isSub))

function clearStateChar(())

function makeRe(())

function match((f, partial))

function globUnescape((s))

function regExpEscape((s))

function once((fn))

function onceStrict((fn))

function normalizeArray((parts, allowAboveRoot))

function trim((arr))

function filter((xs, f))

function posix((path))

function win32((path))

function defaultSetTimout(())

function defaultClearTimeout(())

function runTimeout((fun))

function runClearTimeout((marker))

function cleanUpNextTick(())

function drainQueue(())

function Item((fun, array))

function noop(())

function createReduce((dir))

function iterator((obj, iteratee, memo, keys, index, length))

function createPredicateIndexFinder((dir))

function createIndexFinder((dir, predicateFind, sortedIndex))

function collectNonEnumProps((obj, keys))

function deprecated(())

function inspect((obj, opts))

function stylizeWithColor((str, styleType))

function stylizeNoColor((str, styleType))

function arrayToHash((array))

function formatValue((ctx, value, recurseTimes))

function formatPrimitive((ctx, value))

function formatError((value))

function formatArray((ctx, value, recurseTimes, visibleKeys, keys))

function formatProperty((ctx, value, recurseTimes, visibleKeys, key, array))

function reduceToSingleString((output, base, braces))

function isArray((ar))

function isBoolean((arg))

function isNull((arg))

function isNullOrUndefined((arg))

function isNumber((arg))

function isString((arg))

function isSymbol((arg))

function isUndefined((arg))

function isRegExp((re))

function isObject((arg))

function isDate((d))

function isError((e))

function isFunction((arg))

function isPrimitive((arg))

function objectToString((o))

function pad((n))

function timestamp(())

function hasOwnProperty((obj, prop))

function wrappy((fn, cb))

function wrapper(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/workers/search.ad38c271.min.js
# Language: javascript

function ne((t,e=document))

function ke((t,e=document))

function ie((t))

function H((t,e,r))

function se((t,e))

function oe((t,e,r,n=!1))

function q((t,e,r,n=!1))

function ae((t))

function ue((t,e=r=>r))

function ce((t))

function le((t))

function he((t,e))

function fe((t,e))

function Oe((t))

function Re((t,e))

function Ie((t))

function Fe((t))


<document index="13">
<source>docs/assets/stylesheets/main.8cce3a28.min.css</source>
<document_content>
@charset "UTF-8";html{-webkit-text-size-adjust:none;-moz-text-size-adjust:none;text-size-adjust:none;box-sizing:border-box}*,:after,:before{box-sizing:inherit}@media (prefers-reduced-motion){*,:after,:before{transition:none!important}}body{margin:0}a,button,input,label{-webkit-tap-highlight-color:transparent}a{color:inherit;text-decoration:none}hr{border:0;box-sizing:initial;display:block;height:.05rem;overflow:visible;padding:0}small{font-size:80%}sub,sup{line-height:1em}img{border-style:none}table{border-collapse:initial;border-spacing:0}td,th{font-weight:400;vertical-align:top}button{background:#0000;border:0;font-family:inherit;font-size:inherit;margin:0;padding:0}input{border:0;outline:none}:root{--md-primary-fg-color:#4051b5;--md-primary-fg-color--light:#5d6cc0;--md-primary-fg-color--dark:#303fa1;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3;--md-accent-fg-color:#526cfe;--md-accent-fg-color--transparent:#526cfe1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-scheme=default]{color-scheme:light}[data-md-color-scheme=default] img[src$="#gh-dark-mode-only"],[data-md-color-scheme=default] img[src$="#only-dark"]{display:none}:root,[data-md-color-scheme=default]{--md-hue:225deg;--md-default-fg-color:#000000de;--md-default-fg-color--light:#0000008a;--md-default-fg-color--lighter:#00000052;--md-default-fg-color--lightest:#00000012;--md-default-bg-color:#fff;--md-default-bg-color--light:#ffffffb3;--md-default-bg-color--lighter:#ffffff4d;--md-default-bg-color--lightest:#ffffff1f;--md-code-fg-color:#36464e;--md-code-bg-color:#f5f5f5;--md-code-bg-color--light:#f5f5f5b3;--md-code-bg-color--lighter:#f5f5f54d;--md-code-hl-color:#4287ff;--md-code-hl-color--light:#4287ff1a;--md-code-hl-number-color:#d52a2a;--md-code-hl-special-color:#db1457;--md-code-hl-function-color:#a846b9;--md-code-hl-constant-color:#6e59d9;--md-code-hl-keyword-color:#3f6ec6;--md-code-hl-string-color:#1c7d4d;--md-code-hl-name-color:var(--md-code-fg-color);--md-code-hl-operator-color:var(--md-default-fg-color--light);--md-code-hl-punctuation-color:var(--md-default-fg-color--light);--md-code-hl-comment-color:var(--md-default-fg-color--light);--md-code-hl-generic-color:var(--md-default-fg-color--light);--md-code-hl-variable-color:var(--md-default-fg-color--light);--md-typeset-color:var(--md-default-fg-color);--md-typeset-a-color:var(--md-primary-fg-color);--md-typeset-del-color:#f5503d26;--md-typeset-ins-color:#0bd57026;--md-typeset-kbd-color:#fafafa;--md-typeset-kbd-accent-color:#fff;--md-typeset-kbd-border-color:#b8b8b8;--md-typeset-mark-color:#ffff0080;--md-typeset-table-color:#0000001f;--md-typeset-table-color--light:rgba(0,0,0,.035);--md-admonition-fg-color:var(--md-default-fg-color);--md-admonition-bg-color:var(--md-default-bg-color);--md-warning-fg-color:#000000de;--md-warning-bg-color:#ff9;--md-footer-fg-color:#fff;--md-footer-fg-color--light:#ffffffb3;--md-footer-fg-color--lighter:#ffffff73;--md-footer-bg-color:#000000de;--md-footer-bg-color--dark:#00000052;--md-shadow-z1:0 0.2rem 0.5rem #0000000d,0 0 0.05rem #0000001a;--md-shadow-z2:0 0.2rem 0.5rem #0000001a,0 0 0.05rem #00000040;--md-shadow-z3:0 0.2rem 0.5rem #0003,0 0 0.05rem #00000059}.md-icon svg{fill:currentcolor;display:block;height:1.2rem;width:1.2rem}body{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;--md-text-font-family:var(--md-text-font,_),-apple-system,BlinkMacSystemFont,Helvetica,Arial,sans-serif;--md-code-font-family:var(--md-code-font,_),SFMono-Regular,Consolas,Menlo,monospace}aside,body,input{font-feature-settings:"kern","liga";color:var(--md-typeset-color);font-family:var(--md-text-font-family)}code,kbd,pre{font-feature-settings:"kern";font-family:var(--md-code-font-family)}:root{--md-typeset-table-sort-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m18 21-4-4h3V7h-3l4-4 4 4h-3v10h3M2 19v-2h10v2M2 13v-2h7v2M2 7V5h4v2z"/></svg>');--md-typeset-table-sort-icon--asc:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 17h3l-4 4-4-4h3V3h2M2 17h10v2H2M6 5v2H2V5m0 6h7v2H2z"/></svg>');--md-typeset-table-sort-icon--desc:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 7h3l-4-4-4 4h3v14h2M2 17h10v2H2M6 5v2H2V5m0 6h7v2H2z"/></svg>')}.md-typeset{-webkit-print-color-adjust:exact;color-adjust:exact;font-size:.8rem;line-height:1.6;overflow-wrap:break-word}@media print{.md-typeset{font-size:.68rem}}.md-typeset blockquote,.md-typeset dl,.md-typeset figure,.md-typeset ol,.md-typeset pre,.md-typeset ul{margin-bottom:1em;margin-top:1em}.md-typeset h1{color:var(--md-default-fg-color--light);font-size:2em;line-height:1.3;margin:0 0 1.25em}.md-typeset h1,.md-typeset h2{font-weight:300;letter-spacing:-.01em}.md-typeset h2{font-size:1.5625em;line-height:1.4;margin:1.6em 0 .64em}.md-typeset h3{font-size:1.25em;font-weight:400;letter-spacing:-.01em;line-height:1.5;margin:1.6em 0 .8em}.md-typeset h2+h3{margin-top:.8em}.md-typeset h4{font-weight:700;letter-spacing:-.01em;margin:1em 0}.md-typeset h5,.md-typeset h6{color:var(--md-default-fg-color--light);font-size:.8em;font-weight:700;letter-spacing:-.01em;margin:1.25em 0}.md-typeset h5{text-transform:uppercase}.md-typeset h5 code{text-transform:none}.md-typeset hr{border-bottom:.05rem solid var(--md-default-fg-color--lightest);display:flow-root;margin:1.5em 0}.md-typeset a{color:var(--md-typeset-a-color);word-break:break-word}.md-typeset a,.md-typeset a:before{transition:color 125ms}.md-typeset a:focus,.md-typeset a:hover{color:var(--md-accent-fg-color)}.md-typeset a:focus code,.md-typeset a:hover code{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-typeset a code{color:var(--md-typeset-a-color)}.md-typeset a.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-typeset code,.md-typeset kbd,.md-typeset pre{color:var(--md-code-fg-color);direction:ltr;font-variant-ligatures:none;transition:background-color 125ms}@media print{.md-typeset code,.md-typeset kbd,.md-typeset pre{white-space:pre-wrap}}.md-typeset code{background-color:var(--md-code-bg-color);border-radius:.1rem;-webkit-box-decoration-break:clone;box-decoration-break:clone;font-size:.85em;padding:0 .2941176471em;transition:color 125ms,background-color 125ms;word-break:break-word}.md-typeset code:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}.md-typeset pre{display:flow-root;line-height:1.4;position:relative}.md-typeset pre>code{-webkit-box-decoration-break:slice;box-decoration-break:slice;box-shadow:none;display:block;margin:0;outline-color:var(--md-accent-fg-color);overflow:auto;padding:.7720588235em 1.1764705882em;scrollbar-color:var(--md-default-fg-color--lighter) #0000;scrollbar-width:thin;touch-action:auto;word-break:normal}.md-typeset pre>code:hover{scrollbar-color:var(--md-accent-fg-color) #0000}.md-typeset pre>code::-webkit-scrollbar{height:.2rem;width:.2rem}.md-typeset pre>code::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-typeset pre>code::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}.md-typeset kbd{background-color:var(--md-typeset-kbd-color);border-radius:.1rem;box-shadow:0 .1rem 0 .05rem var(--md-typeset-kbd-border-color),0 .1rem 0 var(--md-typeset-kbd-border-color),0 -.1rem .2rem var(--md-typeset-kbd-accent-color) inset;color:var(--md-default-fg-color);display:inline-block;font-size:.75em;padding:0 .6666666667em;vertical-align:text-top;word-break:break-word}.md-typeset mark{background-color:var(--md-typeset-mark-color);-webkit-box-decoration-break:clone;box-decoration-break:clone;color:inherit;word-break:break-word}.md-typeset abbr{cursor:help;text-decoration:none}.md-typeset [data-preview],.md-typeset abbr{border-bottom:.05rem dotted var(--md-default-fg-color--light)}.md-typeset small{opacity:.75}[dir=ltr] .md-typeset sub,[dir=ltr] .md-typeset sup{margin-left:.078125em}[dir=rtl] .md-typeset sub,[dir=rtl] .md-typeset sup{margin-right:.078125em}[dir=ltr] .md-typeset blockquote{padding-left:.6rem}[dir=rtl] .md-typeset blockquote{padding-right:.6rem}[dir=ltr] .md-typeset blockquote{border-left:.2rem solid var(--md-default-fg-color--lighter)}[dir=rtl] .md-typeset blockquote{border-right:.2rem solid var(--md-default-fg-color--lighter)}.md-typeset blockquote{color:var(--md-default-fg-color--light);margin-left:0;margin-right:0}.md-typeset ul{list-style-type:disc}.md-typeset ul[type]{list-style-type:revert-layer}[dir=ltr] .md-typeset ol,[dir=ltr] .md-typeset ul{margin-left:.625em}[dir=rtl] .md-typeset ol,[dir=rtl] .md-typeset ul{margin-right:.625em}.md-typeset ol,.md-typeset ul{padding:0}.md-typeset ol:not([hidden]),.md-typeset ul:not([hidden]){display:flow-root}.md-typeset ol ol,.md-typeset ul ol{list-style-type:lower-alpha}.md-typeset ol ol ol,.md-typeset ul ol ol{list-style-type:lower-roman}.md-typeset ol ol ol ol,.md-typeset ul ol ol ol{list-style-type:upper-alpha}.md-typeset ol ol ol ol ol,.md-typeset ul ol ol ol ol{list-style-type:upper-roman}.md-typeset ol[type],.md-typeset ul[type]{list-style-type:revert-layer}[dir=ltr] .md-typeset ol li,[dir=ltr] .md-typeset ul li{margin-left:1.25em}[dir=rtl] .md-typeset ol li,[dir=rtl] .md-typeset ul li{margin-right:1.25em}.md-typeset ol li,.md-typeset ul li{margin-bottom:.5em}.md-typeset ol li blockquote,.md-typeset ol li p,.md-typeset ul li blockquote,.md-typeset ul li p{margin:.5em 0}.md-typeset ol li:last-child,.md-typeset ul li:last-child{margin-bottom:0}[dir=ltr] .md-typeset ol li ol,[dir=ltr] .md-typeset ol li ul,[dir=ltr] .md-typeset ul li ol,[dir=ltr] .md-typeset ul li ul{margin-left:.625em}[dir=rtl] .md-typeset ol li ol,[dir=rtl] .md-typeset ol li ul,[dir=rtl] .md-typeset ul li ol,[dir=rtl] .md-typeset ul li ul{margin-right:.625em}.md-typeset ol li ol,.md-typeset ol li ul,.md-typeset ul li ol,.md-typeset ul li ul{margin-bottom:.5em;margin-top:.5em}[dir=ltr] .md-typeset dd{margin-left:1.875em}[dir=rtl] .md-typeset dd{margin-right:1.875em}.md-typeset dd{margin-bottom:1.5em;margin-top:1em}.md-typeset img,.md-typeset svg,.md-typeset video{height:auto;max-width:100%}.md-typeset img[align=left]{margin:1em 1em 1em 0}.md-typeset img[align=right]{margin:1em 0 1em 1em}.md-typeset img[align]:only-child{margin-top:0}.md-typeset figure{display:flow-root;margin:1em auto;max-width:100%;text-align:center;width:-moz-fit-content;width:fit-content}.md-typeset figure img{display:block;margin:0 auto}.md-typeset figcaption{font-style:italic;margin:1em auto;max-width:24rem}.md-typeset iframe{max-width:100%}.md-typeset table:not([class]){background-color:var(--md-default-bg-color);border:.05rem solid var(--md-typeset-table-color);border-radius:.1rem;display:inline-block;font-size:.64rem;max-width:100%;overflow:auto;touch-action:auto}@media print{.md-typeset table:not([class]){display:table}}.md-typeset table:not([class])+*{margin-top:1.5em}.md-typeset table:not([class]) td>:first-child,.md-typeset table:not([class]) th>:first-child{margin-top:0}.md-typeset table:not([class]) td>:last-child,.md-typeset table:not([class]) th>:last-child{margin-bottom:0}.md-typeset table:not([class]) td:not([align]),.md-typeset table:not([class]) th:not([align]){text-align:left}[dir=rtl] .md-typeset table:not([class]) td:not([align]),[dir=rtl] .md-typeset table:not([class]) th:not([align]){text-align:right}.md-typeset table:not([class]) th{font-weight:700;min-width:5rem;padding:.9375em 1.25em;vertical-align:top}.md-typeset table:not([class]) td{border-top:.05rem solid var(--md-typeset-table-color);padding:.9375em 1.25em;vertical-align:top}.md-typeset table:not([class]) tbody tr{transition:background-color 125ms}.md-typeset table:not([class]) tbody tr:hover{background-color:var(--md-typeset-table-color--light);box-shadow:0 .05rem 0 var(--md-default-bg-color) inset}.md-typeset table:not([class]) a{word-break:normal}.md-typeset table th[role=columnheader]{cursor:pointer}[dir=ltr] .md-typeset table th[role=columnheader]:after{margin-left:.5em}[dir=rtl] .md-typeset table th[role=columnheader]:after{margin-right:.5em}.md-typeset table th[role=columnheader]:after{content:"";display:inline-block;height:1.2em;-webkit-mask-image:var(--md-typeset-table-sort-icon);mask-image:var(--md-typeset-table-sort-icon);-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:background-color 125ms;vertical-align:text-bottom;width:1.2em}.md-typeset table th[role=columnheader]:hover:after{background-color:var(--md-default-fg-color--lighter)}.md-typeset table th[role=columnheader][aria-sort=ascending]:after{background-color:var(--md-default-fg-color--light);-webkit-mask-image:var(--md-typeset-table-sort-icon--asc);mask-image:var(--md-typeset-table-sort-icon--asc)}.md-typeset table th[role=columnheader][aria-sort=descending]:after{background-color:var(--md-default-fg-color--light);-webkit-mask-image:var(--md-typeset-table-sort-icon--desc);mask-image:var(--md-typeset-table-sort-icon--desc)}.md-typeset__scrollwrap{margin:1em -.8rem;overflow-x:auto;touch-action:auto}.md-typeset__table{display:inline-block;margin-bottom:.5em;padding:0 .8rem}@media print{.md-typeset__table{display:block}}html .md-typeset__table table{display:table;margin:0;overflow:hidden;width:100%}@media screen and (max-width:44.984375em){.md-content__inner>pre{margin:1em -.8rem}.md-content__inner>pre code{border-radius:0}}.md-typeset .md-author{border-radius:100%;display:block;flex-shrink:0;height:1.6rem;overflow:hidden;position:relative;transition:color 125ms,transform 125ms;width:1.6rem}.md-typeset .md-author img{display:block}.md-typeset .md-author--more{background:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--lighter);font-size:.6rem;font-weight:700;line-height:1.6rem;text-align:center}.md-typeset .md-author--long{height:2.4rem;width:2.4rem}.md-typeset a.md-author{transform:scale(1)}.md-typeset a.md-author img{border-radius:100%;filter:grayscale(100%) opacity(75%);transition:filter 125ms}.md-typeset a.md-author:focus,.md-typeset a.md-author:hover{transform:scale(1.1);z-index:1}.md-typeset a.md-author:focus img,.md-typeset a.md-author:hover img{filter:grayscale(0)}.md-banner{background-color:var(--md-footer-bg-color);color:var(--md-footer-fg-color);overflow:auto}@media print{.md-banner{display:none}}.md-banner--warning{background-color:var(--md-warning-bg-color);color:var(--md-warning-fg-color)}.md-banner__inner{font-size:.7rem;margin:.6rem auto;padding:0 .8rem}[dir=ltr] .md-banner__button{float:right}[dir=rtl] .md-banner__button{float:left}.md-banner__button{color:inherit;cursor:pointer;transition:opacity .25s}.no-js .md-banner__button{display:none}.md-banner__button:hover{opacity:.7}html{font-size:125%;height:100%;overflow-x:hidden}@media screen and (min-width:100em){html{font-size:137.5%}}@media screen and (min-width:125em){html{font-size:150%}}body{background-color:var(--md-default-bg-color);display:flex;flex-direction:column;font-size:.5rem;min-height:100%;position:relative;width:100%}@media print{body{display:block}}@media screen and (max-width:59.984375em){body[data-md-scrolllock]{position:fixed}}.md-grid{margin-left:auto;margin-right:auto;max-width:61rem}.md-container{display:flex;flex-direction:column;flex-grow:1}@media print{.md-container{display:block}}.md-main{flex-grow:1}.md-main__inner{display:flex;height:100%;margin-top:1.5rem}.md-ellipsis{overflow:hidden;text-overflow:ellipsis}.md-toggle{display:none}.md-option{height:0;opacity:0;position:absolute;width:0}.md-option:checked+label:not([hidden]){display:block}.md-option.focus-visible+label{outline-color:var(--md-accent-fg-color);outline-style:auto}.md-skip{background-color:var(--md-default-fg-color);border-radius:.1rem;color:var(--md-default-bg-color);font-size:.64rem;margin:.5rem;opacity:0;outline-color:var(--md-accent-fg-color);padding:.3rem .5rem;position:fixed;transform:translateY(.4rem);z-index:-1}.md-skip:focus{opacity:1;transform:translateY(0);transition:transform .25s cubic-bezier(.4,0,.2,1),opacity 175ms 75ms;z-index:10}@page{margin:25mm}:root{--md-clipboard-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 21H8V7h11m0-2H8a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2m-3-4H4a2 2 0 0 0-2 2v14h2V3h12z"/></svg>')}.md-clipboard{border-radius:.1rem;color:var(--md-default-fg-color--lightest);cursor:pointer;height:1.5em;outline-color:var(--md-accent-fg-color);outline-offset:.1rem;transition:color .25s;width:1.5em;z-index:1}@media print{.md-clipboard{display:none}}.md-clipboard:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}:hover>.md-clipboard{color:var(--md-default-fg-color--light)}.md-clipboard:focus,.md-clipboard:hover{color:var(--md-accent-fg-color)}.md-clipboard:after{background-color:currentcolor;content:"";display:block;height:1.125em;margin:0 auto;-webkit-mask-image:var(--md-clipboard-icon);mask-image:var(--md-clipboard-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:1.125em}.md-clipboard--inline{cursor:pointer}.md-clipboard--inline code{transition:color .25s,background-color .25s}.md-clipboard--inline:focus code,.md-clipboard--inline:hover code{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}:root{--md-code-select-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 19h-4v2h4c1.1 0 2-.9 2-2v-4h-2m0-12h-4v2h4v4h2V5c0-1.1-.9-2-2-2M5 5h4V3H5c-1.1 0-2 .9-2 2v4h2m0 6H3v4c0 1.1.9 2 2 2h4v-2H5zm2-4h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2zM7 7h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2zm-8 8h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2z"/></svg>');--md-code-copy-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 21H8V7h11m0-2H8a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2m-3-4H4a2 2 0 0 0-2 2v14h2V3h12z"/></svg>')}.md-typeset .md-code__content{display:grid}.md-code__nav{background-color:var(--md-code-bg-color--lighter);border-radius:.1rem;display:flex;gap:.2rem;padding:.2rem;position:absolute;right:.25em;top:.25em;transition:background-color .25s;z-index:1}:hover>.md-code__nav{background-color:var(--md-code-bg-color--light)}.md-code__button{color:var(--md-default-fg-color--lightest);cursor:pointer;display:block;height:1.5em;outline-color:var(--md-accent-fg-color);outline-offset:.1rem;transition:color .25s;width:1.5em}:hover>*>.md-code__button{color:var(--md-default-fg-color--light)}.md-code__button.focus-visible,.md-code__button:hover{color:var(--md-accent-fg-color)}.md-code__button--active{color:var(--md-default-fg-color)!important}.md-code__button:after{background-color:currentcolor;content:"";display:block;height:1.125em;margin:0 auto;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:1.125em}.md-code__button[data-md-type=select]:after{-webkit-mask-image:var(--md-code-select-icon);mask-image:var(--md-code-select-icon)}.md-code__button[data-md-type=copy]:after{-webkit-mask-image:var(--md-code-copy-icon);mask-image:var(--md-code-copy-icon)}@keyframes consent{0%{opacity:0;transform:translateY(100%)}to{opacity:1;transform:translateY(0)}}@keyframes overlay{0%{opacity:0}to{opacity:1}}.md-consent__overlay{animation:overlay .25s both;-webkit-backdrop-filter:blur(.1rem);backdrop-filter:blur(.1rem);background-color:#0000008a;height:100%;opacity:1;position:fixed;top:0;width:100%;z-index:5}.md-consent__inner{animation:consent .5s cubic-bezier(.1,.7,.1,1) both;background-color:var(--md-default-bg-color);border:0;border-radius:.1rem;bottom:0;box-shadow:0 0 .2rem #0000001a,0 .2rem .4rem #0003;max-height:100%;overflow:auto;padding:0;position:fixed;width:100%;z-index:5}.md-consent__form{padding:.8rem}.md-consent__settings{display:none;margin:1em 0}input:checked+.md-consent__settings{display:block}.md-consent__controls{margin-bottom:.8rem}.md-typeset .md-consent__controls .md-button{display:inline}@media screen and (max-width:44.984375em){.md-typeset .md-consent__controls .md-button{display:block;margin-top:.4rem;text-align:center;width:100%}}.md-consent label{cursor:pointer}.md-content{flex-grow:1;min-width:0}.md-content__inner{margin:0 .8rem 1.2rem;padding-top:.6rem}@media screen and (min-width:76.25em){[dir=ltr] .md-sidebar--primary:not([hidden])~.md-content>.md-content__inner{margin-left:1.2rem}[dir=ltr] .md-sidebar--secondary:not([hidden])~.md-content>.md-content__inner,[dir=rtl] .md-sidebar--primary:not([hidden])~.md-content>.md-content__inner{margin-right:1.2rem}[dir=rtl] .md-sidebar--secondary:not([hidden])~.md-content>.md-content__inner{margin-left:1.2rem}}.md-content__inner:before{content:"";display:block;height:.4rem}.md-content__inner>:last-child{margin-bottom:0}[dir=ltr] .md-content__button{float:right}[dir=rtl] .md-content__button{float:left}[dir=ltr] .md-content__button{margin-left:.4rem}[dir=rtl] .md-content__button{margin-right:.4rem}.md-content__button{margin:.4rem 0;padding:0}@media print{.md-content__button{display:none}}.md-typeset .md-content__button{color:var(--md-default-fg-color--lighter)}.md-content__button svg{display:inline;vertical-align:top}[dir=rtl] .md-content__button svg{transform:scaleX(-1)}[dir=ltr] .md-dialog{right:.8rem}[dir=rtl] .md-dialog{left:.8rem}.md-dialog{background-color:var(--md-default-fg-color);border-radius:.1rem;bottom:.8rem;box-shadow:var(--md-shadow-z3);min-width:11.1rem;opacity:0;padding:.4rem .6rem;pointer-events:none;position:fixed;transform:translateY(100%);transition:transform 0ms .4s,opacity .4s;z-index:4}@media print{.md-dialog{display:none}}.md-dialog--active{opacity:1;pointer-events:auto;transform:translateY(0);transition:transform .4s cubic-bezier(.075,.85,.175,1),opacity .4s}.md-dialog__inner{color:var(--md-default-bg-color);font-size:.7rem}.md-feedback{margin:2em 0 1em;text-align:center}.md-feedback fieldset{border:none;margin:0;padding:0}.md-feedback__title{font-weight:700;margin:1em auto}.md-feedback__inner{position:relative}.md-feedback__list{display:flex;flex-wrap:wrap;place-content:baseline center;position:relative}.md-feedback__list:hover .md-icon:not(:disabled){color:var(--md-default-fg-color--lighter)}:disabled .md-feedback__list{min-height:1.8rem}.md-feedback__icon{color:var(--md-default-fg-color--light);cursor:pointer;flex-shrink:0;margin:0 .1rem;transition:color 125ms}.md-feedback__icon:not(:disabled).md-icon:hover{color:var(--md-accent-fg-color)}.md-feedback__icon:disabled{color:var(--md-default-fg-color--lightest);pointer-events:none}.md-feedback__note{opacity:0;position:relative;transform:translateY(.4rem);transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s}.md-feedback__note>*{margin:0 auto;max-width:16rem}:disabled .md-feedback__note{opacity:1;transform:translateY(0)}@media print{.md-feedback{display:none}}.md-footer{background-color:var(--md-footer-bg-color);color:var(--md-footer-fg-color)}@media print{.md-footer{display:none}}.md-footer__inner{justify-content:space-between;overflow:auto;padding:.2rem}.md-footer__inner:not([hidden]){display:flex}.md-footer__link{align-items:end;display:flex;flex-grow:0.01;margin-bottom:.4rem;margin-top:1rem;max-width:100%;outline-color:var(--md-accent-fg-color);overflow:hidden;transition:opacity .25s}.md-footer__link:focus,.md-footer__link:hover{opacity:.7}[dir=rtl] .md-footer__link svg{transform:scaleX(-1)}@media screen and (max-width:44.984375em){.md-footer__link--prev{flex-shrink:0}.md-footer__link--prev .md-footer__title{display:none}}[dir=ltr] .md-footer__link--next{margin-left:auto}[dir=rtl] .md-footer__link--next{margin-right:auto}.md-footer__link--next{text-align:right}[dir=rtl] .md-footer__link--next{text-align:left}.md-footer__title{flex-grow:1;font-size:.9rem;margin-bottom:.7rem;max-width:calc(100% - 2.4rem);padding:0 1rem;white-space:nowrap}.md-footer__button{margin:.2rem;padding:.4rem}.md-footer__direction{font-size:.64rem;opacity:.7}.md-footer-meta{background-color:var(--md-footer-bg-color--dark)}.md-footer-meta__inner{display:flex;flex-wrap:wrap;justify-content:space-between;padding:.2rem}html .md-footer-meta.md-typeset a{color:var(--md-footer-fg-color--light)}html .md-footer-meta.md-typeset a:focus,html .md-footer-meta.md-typeset a:hover{color:var(--md-footer-fg-color)}.md-copyright{color:var(--md-footer-fg-color--lighter);font-size:.64rem;margin:auto .6rem;padding:.4rem 0;width:100%}@media screen and (min-width:45em){.md-copyright{width:auto}}.md-copyright__highlight{color:var(--md-footer-fg-color--light)}.md-social{display:inline-flex;gap:.2rem;margin:0 .4rem;padding:.2rem 0 .6rem}@media screen and (min-width:45em){.md-social{padding:.6rem 0}}.md-social__link{display:inline-block;height:1.6rem;text-align:center;width:1.6rem}.md-social__link:before{line-height:1.9}.md-social__link svg{fill:currentcolor;max-height:.8rem;vertical-align:-25%}.md-typeset .md-button{border:.1rem solid;border-radius:.1rem;color:var(--md-primary-fg-color);cursor:pointer;display:inline-block;font-weight:700;padding:.625em 2em;transition:color 125ms,background-color 125ms,border-color 125ms}.md-typeset .md-button--primary{background-color:var(--md-primary-fg-color);border-color:var(--md-primary-fg-color);color:var(--md-primary-bg-color)}.md-typeset .md-button:focus,.md-typeset .md-button:hover{background-color:var(--md-accent-fg-color);border-color:var(--md-accent-fg-color);color:var(--md-accent-bg-color)}[dir=ltr] .md-typeset .md-input{border-top-left-radius:.1rem}[dir=ltr] .md-typeset .md-input,[dir=rtl] .md-typeset .md-input{border-top-right-radius:.1rem}[dir=rtl] .md-typeset .md-input{border-top-left-radius:.1rem}.md-typeset .md-input{border-bottom:.1rem solid var(--md-default-fg-color--lighter);box-shadow:var(--md-shadow-z1);font-size:.8rem;height:1.8rem;padding:0 .6rem;transition:border .25s,box-shadow .25s}.md-typeset .md-input:focus,.md-typeset .md-input:hover{border-bottom-color:var(--md-accent-fg-color);box-shadow:var(--md-shadow-z2)}.md-typeset .md-input--stretch{width:100%}.md-header{background-color:var(--md-primary-fg-color);box-shadow:0 0 .2rem #0000,0 .2rem .4rem #0000;color:var(--md-primary-bg-color);display:block;left:0;position:sticky;right:0;top:0;z-index:4}@media print{.md-header{display:none}}.md-header[hidden]{transform:translateY(-100%);transition:transform .25s cubic-bezier(.8,0,.6,1),box-shadow .25s}.md-header--shadow{box-shadow:0 0 .2rem #0000001a,0 .2rem .4rem #0003;transition:transform .25s cubic-bezier(.1,.7,.1,1),box-shadow .25s}.md-header__inner{align-items:center;display:flex;padding:0 .2rem}.md-header__button{color:currentcolor;cursor:pointer;margin:.2rem;outline-color:var(--md-accent-fg-color);padding:.4rem;position:relative;transition:opacity .25s;vertical-align:middle;z-index:1}.md-header__button:hover{opacity:.7}.md-header__button:not([hidden]){display:inline-block}.md-header__button:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}.md-header__button.md-logo{margin:.2rem;padding:.4rem}@media screen and (max-width:76.234375em){.md-header__button.md-logo{display:none}}.md-header__button.md-logo img,.md-header__button.md-logo svg{fill:currentcolor;display:block;height:1.2rem;width:auto}@media screen and (min-width:60em){.md-header__button[for=__search]{display:none}}.no-js .md-header__button[for=__search]{display:none}[dir=rtl] .md-header__button[for=__search] svg{transform:scaleX(-1)}@media screen and (min-width:76.25em){.md-header__button[for=__drawer]{display:none}}.md-header__topic{display:flex;max-width:100%;position:absolute;transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s;white-space:nowrap}.md-header__topic+.md-header__topic{opacity:0;pointer-events:none;transform:translateX(1.25rem);transition:transform .4s cubic-bezier(1,.7,.1,.1),opacity .15s;z-index:-1}[dir=rtl] .md-header__topic+.md-header__topic{transform:translateX(-1.25rem)}.md-header__topic:first-child{font-weight:700}[dir=ltr] .md-header__title{margin-left:1rem;margin-right:.4rem}[dir=rtl] .md-header__title{margin-left:.4rem;margin-right:1rem}.md-header__title{flex-grow:1;font-size:.9rem;height:2.4rem;line-height:2.4rem}.md-header__title--active .md-header__topic{opacity:0;pointer-events:none;transform:translateX(-1.25rem);transition:transform .4s cubic-bezier(1,.7,.1,.1),opacity .15s;z-index:-1}[dir=rtl] .md-header__title--active .md-header__topic{transform:translateX(1.25rem)}.md-header__title--active .md-header__topic+.md-header__topic{opacity:1;pointer-events:auto;transform:translateX(0);transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s;z-index:0}.md-header__title>.md-header__ellipsis{height:100%;position:relative;width:100%}.md-header__option{display:flex;flex-shrink:0;max-width:100%;transition:max-width 0ms .25s,opacity .25s .25s;white-space:nowrap}[data-md-toggle=search]:checked~.md-header .md-header__option{max-width:0;opacity:0;transition:max-width 0ms,opacity 0ms}.md-header__option>input{bottom:0}.md-header__source{display:none}@media screen and (min-width:60em){[dir=ltr] .md-header__source{margin-left:1rem}[dir=rtl] .md-header__source{margin-right:1rem}.md-header__source{display:block;max-width:11.7rem;width:11.7rem}}@media screen and (min-width:76.25em){[dir=ltr] .md-header__source{margin-left:1.4rem}[dir=rtl] .md-header__source{margin-right:1.4rem}}.md-meta{color:var(--md-default-fg-color--light);font-size:.7rem;line-height:1.3}.md-meta__list{display:inline-flex;flex-wrap:wrap;list-style:none;margin:0;padding:0}.md-meta__item:not(:last-child):after{content:"·";margin-left:.2rem;margin-right:.2rem}.md-meta__link{color:var(--md-typeset-a-color)}.md-meta__link:focus,.md-meta__link:hover{color:var(--md-accent-fg-color)}.md-draft{background-color:#ff1744;border-radius:.125em;color:#fff;display:inline-block;font-weight:700;padding-left:.5714285714em;padding-right:.5714285714em}:root{--md-nav-icon--prev:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20 11v2H8l5.5 5.5-1.42 1.42L4.16 12l7.92-7.92L13.5 5.5 8 11z"/></svg>');--md-nav-icon--next:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>');--md-toc-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 9h14V7H3zm0 4h14v-2H3zm0 4h14v-2H3zm16 0h2v-2h-2zm0-10v2h2V7zm0 6h2v-2h-2z"/></svg>')}.md-nav{font-size:.7rem;line-height:1.3}.md-nav__title{color:var(--md-default-fg-color--light);display:block;font-weight:700;overflow:hidden;padding:0 .6rem;text-overflow:ellipsis}.md-nav__title .md-nav__button{display:none}.md-nav__title .md-nav__button img{height:100%;width:auto}.md-nav__title .md-nav__button.md-logo img,.md-nav__title .md-nav__button.md-logo svg{fill:currentcolor;display:block;height:2.4rem;max-width:100%;object-fit:contain;width:auto}.md-nav__list{list-style:none;margin:0;padding:0}.md-nav__link{align-items:flex-start;display:flex;gap:.4rem;margin-top:.625em;scroll-snap-align:start;transition:color 125ms}.md-nav__link--passed,.md-nav__link--passed code{color:var(--md-default-fg-color--light)}.md-nav__item .md-nav__link--active,.md-nav__item .md-nav__link--active code{color:var(--md-typeset-a-color)}.md-nav__link .md-ellipsis{position:relative}.md-nav__link .md-ellipsis code{word-break:normal}[dir=ltr] .md-nav__link .md-icon:last-child{margin-left:auto}[dir=rtl] .md-nav__link .md-icon:last-child{margin-right:auto}.md-nav__link .md-typeset{font-size:.7rem;line-height:1.3}.md-nav__link svg{fill:currentcolor;flex-shrink:0;height:1.3em;position:relative}.md-nav__link[for]:focus,.md-nav__link[for]:hover,.md-nav__link[href]:focus,.md-nav__link[href]:hover{color:var(--md-accent-fg-color);cursor:pointer}.md-nav__link[for]:focus code,.md-nav__link[for]:hover code,.md-nav__link[href]:focus code,.md-nav__link[href]:hover code{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-nav__link.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-nav--primary .md-nav__link[for=__toc]{display:none}.md-nav--primary .md-nav__link[for=__toc] .md-icon:after{background-color:currentcolor;display:block;height:100%;-webkit-mask-image:var(--md-toc-icon);mask-image:var(--md-toc-icon);width:100%}.md-nav--primary .md-nav__link[for=__toc]~.md-nav{display:none}.md-nav__container>.md-nav__link{margin-top:0}.md-nav__container>.md-nav__link:first-child{flex-grow:1;min-width:0}.md-nav__icon{flex-shrink:0}.md-nav__source{display:none}@media screen and (max-width:76.234375em){.md-nav--primary,.md-nav--primary .md-nav{background-color:var(--md-default-bg-color);display:flex;flex-direction:column;height:100%;left:0;position:absolute;right:0;top:0;z-index:1}.md-nav--primary .md-nav__item,.md-nav--primary .md-nav__title{font-size:.8rem;line-height:1.5}.md-nav--primary .md-nav__title{background-color:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--light);cursor:pointer;height:5.6rem;line-height:2.4rem;padding:3rem .8rem .2rem;position:relative;white-space:nowrap}[dir=ltr] .md-nav--primary .md-nav__title .md-nav__icon{left:.4rem}[dir=rtl] .md-nav--primary .md-nav__title .md-nav__icon{right:.4rem}.md-nav--primary .md-nav__title .md-nav__icon{display:block;height:1.2rem;margin:.2rem;position:absolute;top:.4rem;width:1.2rem}.md-nav--primary .md-nav__title .md-nav__icon:after{background-color:currentcolor;content:"";display:block;height:100%;-webkit-mask-image:var(--md-nav-icon--prev);mask-image:var(--md-nav-icon--prev);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:100%}.md-nav--primary .md-nav__title~.md-nav__list{background-color:var(--md-default-bg-color);box-shadow:0 .05rem 0 var(--md-default-fg-color--lightest) inset;overflow-y:auto;scroll-snap-type:y mandatory;touch-action:pan-y}.md-nav--primary .md-nav__title~.md-nav__list>:first-child{border-top:0}.md-nav--primary .md-nav__title[for=__drawer]{background-color:var(--md-primary-fg-color);color:var(--md-primary-bg-color);font-weight:700}.md-nav--primary .md-nav__title .md-logo{display:block;left:.2rem;margin:.2rem;padding:.4rem;position:absolute;right:.2rem;top:.2rem}.md-nav--primary .md-nav__list{flex:1}.md-nav--primary .md-nav__item{border-top:.05rem solid var(--md-default-fg-color--lightest)}.md-nav--primary .md-nav__item--active>.md-nav__link{color:var(--md-typeset-a-color)}.md-nav--primary .md-nav__item--active>.md-nav__link:focus,.md-nav--primary .md-nav__item--active>.md-nav__link:hover{color:var(--md-accent-fg-color)}.md-nav--primary .md-nav__link{margin-top:0;padding:.6rem .8rem}.md-nav--primary .md-nav__link svg{margin-top:.1em}.md-nav--primary .md-nav__link>.md-nav__link{padding:0}[dir=ltr] .md-nav--primary .md-nav__link .md-nav__icon{margin-right:-.2rem}[dir=rtl] .md-nav--primary .md-nav__link .md-nav__icon{margin-left:-.2rem}.md-nav--primary .md-nav__link .md-nav__icon{font-size:1.2rem;height:1.2rem;width:1.2rem}.md-nav--primary .md-nav__link .md-nav__icon:after{background-color:currentcolor;content:"";display:block;height:100%;-webkit-mask-image:var(--md-nav-icon--next);mask-image:var(--md-nav-icon--next);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:100%}[dir=rtl] .md-nav--primary .md-nav__icon:after{transform:scale(-1)}.md-nav--primary .md-nav--secondary .md-nav{background-color:initial;position:static}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav__link{padding-left:1.4rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav__link{padding-right:1.4rem}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav__link{padding-left:2rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav__link{padding-right:2rem}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav__link{padding-left:2.6rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav__link{padding-right:2.6rem}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav .md-nav__link{padding-left:3.2rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav .md-nav__link{padding-right:3.2rem}.md-nav--secondary{background-color:initial}.md-nav__toggle~.md-nav{display:flex;opacity:0;transform:translateX(100%);transition:transform .25s cubic-bezier(.8,0,.6,1),opacity 125ms 50ms}[dir=rtl] .md-nav__toggle~.md-nav{transform:translateX(-100%)}.md-nav__toggle:checked~.md-nav{opacity:1;transform:translateX(0);transition:transform .25s cubic-bezier(.4,0,.2,1),opacity 125ms 125ms}.md-nav__toggle:checked~.md-nav>.md-nav__list{-webkit-backface-visibility:hidden;backface-visibility:hidden}}@media screen and (max-width:59.984375em){.md-nav--primary .md-nav__link[for=__toc]{display:flex}.md-nav--primary .md-nav__link[for=__toc] .md-icon:after{content:""}.md-nav--primary .md-nav__link[for=__toc]+.md-nav__link{display:none}.md-nav--primary .md-nav__link[for=__toc]~.md-nav{display:flex}.md-nav__source{background-color:var(--md-primary-fg-color--dark);color:var(--md-primary-bg-color);display:block;padding:0 .2rem}}@media screen and (min-width:60em) and (max-width:76.234375em){.md-nav--integrated .md-nav__link[for=__toc]{display:flex}.md-nav--integrated .md-nav__link[for=__toc] .md-icon:after{content:""}.md-nav--integrated .md-nav__link[for=__toc]+.md-nav__link{display:none}.md-nav--integrated .md-nav__link[for=__toc]~.md-nav{display:flex}}@media screen and (min-width:60em){.md-nav{margin-bottom:-.4rem}.md-nav--secondary .md-nav__title{background:var(--md-default-bg-color);box-shadow:0 0 .4rem .4rem var(--md-default-bg-color);position:sticky;top:0;z-index:1}.md-nav--secondary .md-nav__title[for=__toc]{scroll-snap-align:start}.md-nav--secondary .md-nav__title .md-nav__icon{display:none}[dir=ltr] .md-nav--secondary .md-nav__list{padding-left:.6rem}[dir=rtl] .md-nav--secondary .md-nav__list{padding-right:.6rem}.md-nav--secondary .md-nav__list{padding-bottom:.4rem}[dir=ltr] .md-nav--secondary .md-nav__item>.md-nav__link{margin-right:.4rem}[dir=rtl] .md-nav--secondary .md-nav__item>.md-nav__link{margin-left:.4rem}}@media screen and (min-width:76.25em){.md-nav{margin-bottom:-.4rem;transition:max-height .25s cubic-bezier(.86,0,.07,1)}.md-nav--primary .md-nav__title{background:var(--md-default-bg-color);box-shadow:0 0 .4rem .4rem var(--md-default-bg-color);position:sticky;top:0;z-index:1}.md-nav--primary .md-nav__title[for=__drawer]{scroll-snap-align:start}.md-nav--primary .md-nav__title .md-nav__icon{display:none}[dir=ltr] .md-nav--primary .md-nav__list{padding-left:.6rem}[dir=rtl] .md-nav--primary .md-nav__list{padding-right:.6rem}.md-nav--primary .md-nav__list{padding-bottom:.4rem}[dir=ltr] .md-nav--primary .md-nav__item>.md-nav__link{margin-right:.4rem}[dir=rtl] .md-nav--primary .md-nav__item>.md-nav__link{margin-left:.4rem}.md-nav__toggle~.md-nav{display:grid;grid-template-rows:minmax(.4rem,0fr);opacity:0;transition:grid-template-rows .25s cubic-bezier(.86,0,.07,1),opacity .25s,visibility 0ms .25s;visibility:collapse}.md-nav__toggle~.md-nav>.md-nav__list{overflow:hidden}.md-nav__toggle.md-toggle--indeterminate~.md-nav,.md-nav__toggle:checked~.md-nav{grid-template-rows:minmax(.4rem,1fr);opacity:1;transition:grid-template-rows .25s cubic-bezier(.86,0,.07,1),opacity .15s .1s,visibility 0ms;visibility:visible}.md-nav__toggle.md-toggle--indeterminate~.md-nav{transition:none}.md-nav__item--nested>.md-nav>.md-nav__title{display:none}.md-nav__item--section{display:block;margin:1.25em 0}.md-nav__item--section:last-child{margin-bottom:0}.md-nav__item--section>.md-nav__link{font-weight:700}.md-nav__item--section>.md-nav__link[for]{color:var(--md-default-fg-color--light)}.md-nav__item--section>.md-nav__link:not(.md-nav__container){pointer-events:none}.md-nav__item--section>.md-nav__link .md-icon,.md-nav__item--section>.md-nav__link>[for]{display:none}[dir=ltr] .md-nav__item--section>.md-nav{margin-left:-.6rem}[dir=rtl] .md-nav__item--section>.md-nav{margin-right:-.6rem}.md-nav__item--section>.md-nav{display:block;opacity:1;visibility:visible}.md-nav__item--section>.md-nav>.md-nav__list>.md-nav__item{padding:0}.md-nav__icon{border-radius:100%;height:.9rem;transition:background-color .25s;width:.9rem}.md-nav__icon:hover{background-color:var(--md-accent-fg-color--transparent)}.md-nav__icon:after{background-color:currentcolor;border-radius:100%;content:"";display:inline-block;height:100%;-webkit-mask-image:var(--md-nav-icon--next);mask-image:var(--md-nav-icon--next);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:transform .25s;vertical-align:-.1rem;width:100%}[dir=rtl] .md-nav__icon:after{transform:rotate(180deg)}.md-nav__item--nested .md-nav__toggle:checked~.md-nav__link .md-nav__icon:after,.md-nav__item--nested .md-toggle--indeterminate~.md-nav__link .md-nav__icon:after{transform:rotate(90deg)}.md-nav--lifted>.md-nav__list>.md-nav__item,.md-nav--lifted>.md-nav__title{display:none}.md-nav--lifted>.md-nav__list>.md-nav__item--active{display:block}.md-nav--lifted>.md-nav__list>.md-nav__item--active>.md-nav__link{background:var(--md-default-bg-color);box-shadow:0 0 .4rem .4rem var(--md-default-bg-color);margin-top:0;position:sticky;top:0;z-index:1}.md-nav--lifted>.md-nav__list>.md-nav__item--active>.md-nav__link:not(.md-nav__container){pointer-events:none}.md-nav--lifted>.md-nav__list>.md-nav__item--active.md-nav__item--section{margin:0}[dir=ltr] .md-nav--lifted>.md-nav__list>.md-nav__item>.md-nav:not(.md-nav--secondary){margin-left:-.6rem}[dir=rtl] .md-nav--lifted>.md-nav__list>.md-nav__item>.md-nav:not(.md-nav--secondary){margin-right:-.6rem}.md-nav--lifted>.md-nav__list>.md-nav__item>[for]{color:var(--md-default-fg-color--light)}.md-nav--lifted .md-nav[data-md-level="1"]{grid-template-rows:minmax(.4rem,1fr);opacity:1;visibility:visible}[dir=ltr] .md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary{border-left:.05rem solid var(--md-primary-fg-color)}[dir=rtl] .md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary{border-right:.05rem solid var(--md-primary-fg-color)}.md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary{display:block;margin-bottom:1.25em;opacity:1;visibility:visible}.md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary>.md-nav__list{overflow:visible;padding-bottom:0}.md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary>.md-nav__title{display:none}}.md-pagination{font-size:.8rem;font-weight:700;gap:.4rem}.md-pagination,.md-pagination>*{align-items:center;display:flex;justify-content:center}.md-pagination>*{border-radius:.2rem;height:1.8rem;min-width:1.8rem;text-align:center}.md-pagination__current{background-color:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--light)}.md-pagination__link{transition:color 125ms,background-color 125ms}.md-pagination__link:focus,.md-pagination__link:hover{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-pagination__link:focus svg,.md-pagination__link:hover svg{color:var(--md-accent-fg-color)}.md-pagination__link.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-pagination__link svg{fill:currentcolor;color:var(--md-default-fg-color--lighter);display:block;max-height:100%;width:1.2rem}:root{--md-path-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>')}.md-path{font-size:.7rem;margin:0 .8rem;overflow:auto;padding-top:1.2rem}.md-path:not([hidden]){display:block}@media screen and (min-width:76.25em){.md-path{margin:0 1.2rem}}.md-path__list{align-items:center;display:flex;gap:.2rem;list-style:none;margin:0;padding:0}.md-path__item:not(:first-child){display:inline-flex;gap:.2rem;white-space:nowrap}.md-path__item:not(:first-child):before{background-color:var(--md-default-fg-color--lighter);content:"";display:inline;height:.8rem;-webkit-mask-image:var(--md-path-icon);mask-image:var(--md-path-icon);width:.8rem}.md-path__link{align-items:center;color:var(--md-default-fg-color--light);display:flex}.md-path__link:focus,.md-path__link:hover{color:var(--md-accent-fg-color)}:root{--md-post-pin-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16 12V4h1V2H7v2h1v8l-2 2v2h5.2v6h1.6v-6H18v-2z"/></svg>')}.md-post__back{border-bottom:.05rem solid var(--md-default-fg-color--lightest);margin-bottom:1.2rem;padding-bottom:1.2rem}@media screen and (max-width:76.234375em){.md-post__back{display:none}}[dir=rtl] .md-post__back svg{transform:scaleX(-1)}.md-post__authors{display:flex;flex-direction:column;gap:.6rem;margin:0 .6rem 1.2rem}.md-post .md-post__meta a{transition:color 125ms}.md-post .md-post__meta a:focus,.md-post .md-post__meta a:hover{color:var(--md-accent-fg-color)}.md-post__title{color:var(--md-default-fg-color--light);font-weight:700}.md-post--excerpt{margin-bottom:3.2rem}.md-post--excerpt .md-post__header{align-items:center;display:flex;gap:.6rem;min-height:1.6rem}.md-post--excerpt .md-post__authors{align-items:center;display:inline-flex;flex-direction:row;gap:.2rem;margin:0;min-height:2.4rem}[dir=ltr] .md-post--excerpt .md-post__meta .md-meta__list{margin-right:.4rem}[dir=rtl] .md-post--excerpt .md-post__meta .md-meta__list{margin-left:.4rem}.md-post--excerpt .md-post__content>:first-child{--md-scroll-margin:6rem;margin-top:0}.md-post>.md-nav--secondary{margin:1em 0}.md-pin{background:var(--md-default-fg-color--lightest);border-radius:1rem;margin-top:-.05rem;padding:.2rem}.md-pin:after{background-color:currentcolor;content:"";display:block;height:.6rem;margin:0 auto;-webkit-mask-image:var(--md-post-pin-icon);mask-image:var(--md-post-pin-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:.6rem}.md-profile{align-items:center;display:flex;font-size:.7rem;gap:.6rem;line-height:1.4;width:100%}.md-profile__description{flex-grow:1}.md-content--post{display:flex}@media screen and (max-width:76.234375em){.md-content--post{flex-flow:column-reverse}}.md-content--post>.md-content__inner{flex-grow:1;min-width:0}@media screen and (min-width:76.25em){[dir=ltr] .md-content--post>.md-content__inner{margin-left:1.2rem}[dir=rtl] .md-content--post>.md-content__inner{margin-right:1.2rem}}@media screen and (max-width:76.234375em){.md-sidebar.md-sidebar--post{padding:0;position:static;width:100%}.md-sidebar.md-sidebar--post .md-sidebar__scrollwrap{overflow:visible}.md-sidebar.md-sidebar--post .md-sidebar__inner{padding:0}.md-sidebar.md-sidebar--post .md-post__meta{margin-left:.6rem;margin-right:.6rem}.md-sidebar.md-sidebar--post .md-nav__item{border:none;display:inline}.md-sidebar.md-sidebar--post .md-nav__list{display:inline-flex;flex-wrap:wrap;gap:.6rem;padding-bottom:.6rem;padding-top:.6rem}.md-sidebar.md-sidebar--post .md-nav__link{padding:0}.md-sidebar.md-sidebar--post .md-nav{height:auto;margin-bottom:0;position:static}}:root{--md-progress-value:0;--md-progress-delay:400ms}.md-progress{background:var(--md-primary-bg-color);height:.075rem;opacity:min(clamp(0,var(--md-progress-value),1),clamp(0,100 - var(--md-progress-value),1));position:fixed;top:0;transform:scaleX(calc(var(--md-progress-value)*1%));transform-origin:left;transition:transform .5s cubic-bezier(.19,1,.22,1),opacity .25s var(--md-progress-delay);width:100%;z-index:4}:root{--md-search-result-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h7c-.41-.25-.8-.56-1.14-.9-.33-.33-.61-.7-.86-1.1H6V4h7v5h5v1.18c.71.16 1.39.43 2 .82V8zm6.31 16.9c1.33-2.11.69-4.9-1.4-6.22-2.11-1.33-4.91-.68-6.22 1.4-1.34 2.11-.69 4.89 1.4 6.22 1.46.93 3.32.93 4.79.02L22 23.39 23.39 22zm-3.81.1a2.5 2.5 0 0 1-2.5-2.5 2.5 2.5 0 0 1 2.5-2.5 2.5 2.5 0 0 1 2.5 2.5 2.5 2.5 0 0 1-2.5 2.5"/></svg>')}.md-search{position:relative}@media screen and (min-width:60em){.md-search{padding:.2rem 0}}.no-js .md-search{display:none}.md-search__overlay{opacity:0;z-index:1}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__overlay{left:-2.2rem}[dir=rtl] .md-search__overlay{right:-2.2rem}.md-search__overlay{background-color:var(--md-default-bg-color);border-radius:1rem;height:2rem;overflow:hidden;pointer-events:none;position:absolute;top:-1rem;transform-origin:center;transition:transform .3s .1s,opacity .2s .2s;width:2rem}[data-md-toggle=search]:checked~.md-header .md-search__overlay{opacity:1;transition:transform .4s,opacity .1s}}@media screen and (min-width:60em){[dir=ltr] .md-search__overlay{left:0}[dir=rtl] .md-search__overlay{right:0}.md-search__overlay{background-color:#0000008a;cursor:pointer;height:0;position:fixed;top:0;transition:width 0ms .25s,height 0ms .25s,opacity .25s;width:0}[data-md-toggle=search]:checked~.md-header .md-search__overlay{height:200vh;opacity:1;transition:width 0ms,height 0ms,opacity .25s;width:100%}}@media screen and (max-width:29.984375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{transform:scale(45)}}@media screen and (min-width:30em) and (max-width:44.984375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{transform:scale(60)}}@media screen and (min-width:45em) and (max-width:59.984375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{transform:scale(75)}}.md-search__inner{-webkit-backface-visibility:hidden;backface-visibility:hidden}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__inner{left:0}[dir=rtl] .md-search__inner{right:0}.md-search__inner{height:0;opacity:0;overflow:hidden;position:fixed;top:0;transform:translateX(5%);transition:width 0ms .3s,height 0ms .3s,transform .15s cubic-bezier(.4,0,.2,1) .15s,opacity .15s .15s;width:0;z-index:2}[dir=rtl] .md-search__inner{transform:translateX(-5%)}[data-md-toggle=search]:checked~.md-header .md-search__inner{height:100%;opacity:1;transform:translateX(0);transition:width 0ms 0ms,height 0ms 0ms,transform .15s cubic-bezier(.1,.7,.1,1) .15s,opacity .15s .15s;width:100%}}@media screen and (min-width:60em){[dir=ltr] .md-search__inner{float:right}[dir=rtl] .md-search__inner{float:left}.md-search__inner{padding:.1rem 0;position:relative;transition:width .25s cubic-bezier(.1,.7,.1,1);width:11.7rem}}@media screen and (min-width:60em) and (max-width:76.234375em){[data-md-toggle=search]:checked~.md-header .md-search__inner{width:23.4rem}}@media screen and (min-width:76.25em){[data-md-toggle=search]:checked~.md-header .md-search__inner{width:34.4rem}}.md-search__form{background-color:var(--md-default-bg-color);box-shadow:0 0 .6rem #0000;height:2.4rem;position:relative;transition:color .25s,background-color .25s;z-index:2}@media screen and (min-width:60em){.md-search__form{background-color:#00000042;border-radius:.1rem;height:1.8rem}.md-search__form:hover{background-color:#ffffff1f}}[data-md-toggle=search]:checked~.md-header .md-search__form{background-color:var(--md-default-bg-color);border-radius:.1rem .1rem 0 0;box-shadow:0 0 .6rem #00000012;color:var(--md-default-fg-color)}[dir=ltr] .md-search__input{padding-left:3.6rem;padding-right:2.2rem}[dir=rtl] .md-search__input{padding-left:2.2rem;padding-right:3.6rem}.md-search__input{background:#0000;font-size:.9rem;height:100%;position:relative;text-overflow:ellipsis;width:100%;z-index:2}.md-search__input::placeholder{transition:color .25s}.md-search__input::placeholder,.md-search__input~.md-search__icon{color:var(--md-default-fg-color--light)}.md-search__input::-ms-clear{display:none}@media screen and (max-width:59.984375em){.md-search__input{font-size:.9rem;height:2.4rem;width:100%}}@media screen and (min-width:60em){[dir=ltr] .md-search__input{padding-left:2.2rem}[dir=rtl] .md-search__input{padding-right:2.2rem}.md-search__input{color:inherit;font-size:.8rem}.md-search__input::placeholder{color:var(--md-primary-bg-color--light)}.md-search__input+.md-search__icon{color:var(--md-primary-bg-color)}[data-md-toggle=search]:checked~.md-header .md-search__input{text-overflow:clip}[data-md-toggle=search]:checked~.md-header .md-search__input+.md-search__icon{color:var(--md-default-fg-color--light)}[data-md-toggle=search]:checked~.md-header .md-search__input::placeholder{color:#0000}}.md-search__icon{cursor:pointer;display:inline-block;height:1.2rem;transition:color .25s,opacity .25s;width:1.2rem}.md-search__icon:hover{opacity:.7}[dir=ltr] .md-search__icon[for=__search]{left:.5rem}[dir=rtl] .md-search__icon[for=__search]{right:.5rem}.md-search__icon[for=__search]{position:absolute;top:.3rem;z-index:2}[dir=rtl] .md-search__icon[for=__search] svg{transform:scaleX(-1)}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__icon[for=__search]{left:.8rem}[dir=rtl] .md-search__icon[for=__search]{right:.8rem}.md-search__icon[for=__search]{top:.6rem}.md-search__icon[for=__search] svg:first-child{display:none}}@media screen and (min-width:60em){.md-search__icon[for=__search]{pointer-events:none}.md-search__icon[for=__search] svg:last-child{display:none}}[dir=ltr] .md-search__options{right:.5rem}[dir=rtl] .md-search__options{left:.5rem}.md-search__options{pointer-events:none;position:absolute;top:.3rem;z-index:2}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__options{right:.8rem}[dir=rtl] .md-search__options{left:.8rem}.md-search__options{top:.6rem}}[dir=ltr] .md-search__options>.md-icon{margin-left:.2rem}[dir=rtl] .md-search__options>.md-icon{margin-right:.2rem}.md-search__options>.md-icon{color:var(--md-default-fg-color--light);opacity:0;transform:scale(.75);transition:transform .15s cubic-bezier(.1,.7,.1,1),opacity .15s}.md-search__options>.md-icon:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}[data-md-toggle=search]:checked~.md-header .md-search__input:valid~.md-search__options>.md-icon{opacity:1;pointer-events:auto;transform:scale(1)}[data-md-toggle=search]:checked~.md-header .md-search__input:valid~.md-search__options>.md-icon:hover{opacity:.7}[dir=ltr] .md-search__suggest{padding-left:3.6rem;padding-right:2.2rem}[dir=rtl] .md-search__suggest{padding-left:2.2rem;padding-right:3.6rem}.md-search__suggest{align-items:center;color:var(--md-default-fg-color--lighter);display:flex;font-size:.9rem;height:100%;opacity:0;position:absolute;top:0;transition:opacity 50ms;white-space:nowrap;width:100%}@media screen and (min-width:60em){[dir=ltr] .md-search__suggest{padding-left:2.2rem}[dir=rtl] .md-search__suggest{padding-right:2.2rem}.md-search__suggest{font-size:.8rem}}[data-md-toggle=search]:checked~.md-header .md-search__suggest{opacity:1;transition:opacity .3s .1s}[dir=ltr] .md-search__output{border-bottom-left-radius:.1rem}[dir=ltr] .md-search__output,[dir=rtl] .md-search__output{border-bottom-right-radius:.1rem}[dir=rtl] .md-search__output{border-bottom-left-radius:.1rem}.md-search__output{overflow:hidden;position:absolute;width:100%;z-index:1}@media screen and (max-width:59.984375em){.md-search__output{bottom:0;top:2.4rem}}@media screen and (min-width:60em){.md-search__output{opacity:0;top:1.9rem;transition:opacity .4s}[data-md-toggle=search]:checked~.md-header .md-search__output{box-shadow:var(--md-shadow-z3);opacity:1}}.md-search__scrollwrap{-webkit-backface-visibility:hidden;backface-visibility:hidden;background-color:var(--md-default-bg-color);height:100%;overflow-y:auto;touch-action:pan-y}@media (-webkit-max-device-pixel-ratio:1),(max-resolution:1dppx){.md-search__scrollwrap{transform:translateZ(0)}}@media screen and (min-width:60em) and (max-width:76.234375em){.md-search__scrollwrap{width:23.4rem}}@media screen and (min-width:76.25em){.md-search__scrollwrap{width:34.4rem}}@media screen and (min-width:60em){.md-search__scrollwrap{max-height:0;scrollbar-color:var(--md-default-fg-color--lighter) #0000;scrollbar-width:thin}[data-md-toggle=search]:checked~.md-header .md-search__scrollwrap{max-height:75vh}.md-search__scrollwrap:hover{scrollbar-color:var(--md-accent-fg-color) #0000}.md-search__scrollwrap::-webkit-scrollbar{height:.2rem;width:.2rem}.md-search__scrollwrap::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-search__scrollwrap::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}}.md-search-result{color:var(--md-default-fg-color);word-break:break-word}.md-search-result__meta{background-color:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--light);font-size:.64rem;line-height:1.8rem;padding:0 .8rem;scroll-snap-align:start}@media screen and (min-width:60em){[dir=ltr] .md-search-result__meta{padding-left:2.2rem}[dir=rtl] .md-search-result__meta{padding-right:2.2rem}}.md-search-result__list{list-style:none;margin:0;padding:0;-webkit-user-select:none;user-select:none}.md-search-result__item{box-shadow:0 -.05rem var(--md-default-fg-color--lightest)}.md-search-result__item:first-child{box-shadow:none}.md-search-result__link{display:block;outline:none;scroll-snap-align:start;transition:background-color .25s}.md-search-result__link:focus,.md-search-result__link:hover{background-color:var(--md-accent-fg-color--transparent)}.md-search-result__link:last-child p:last-child{margin-bottom:.6rem}.md-search-result__more>summary{cursor:pointer;display:block;outline:none;position:sticky;scroll-snap-align:start;top:0;z-index:1}.md-search-result__more>summary::marker{display:none}.md-search-result__more>summary::-webkit-details-marker{display:none}.md-search-result__more>summary>div{color:var(--md-typeset-a-color);font-size:.64rem;padding:.75em .8rem;transition:color .25s,background-color .25s}@media screen and (min-width:60em){[dir=ltr] .md-search-result__more>summary>div{padding-left:2.2rem}[dir=rtl] .md-search-result__more>summary>div{padding-right:2.2rem}}.md-search-result__more>summary:focus>div,.md-search-result__more>summary:hover>div{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-search-result__more[open]>summary{background-color:var(--md-default-bg-color)}.md-search-result__article{overflow:hidden;padding:0 .8rem;position:relative}@media screen and (min-width:60em){[dir=ltr] .md-search-result__article{padding-left:2.2rem}[dir=rtl] .md-search-result__article{padding-right:2.2rem}}[dir=ltr] .md-search-result__icon{left:0}[dir=rtl] .md-search-result__icon{right:0}.md-search-result__icon{color:var(--md-default-fg-color--light);height:1.2rem;margin:.5rem;position:absolute;width:1.2rem}@media screen and (max-width:59.984375em){.md-search-result__icon{display:none}}.md-search-result__icon:after{background-color:currentcolor;content:"";display:inline-block;height:100%;-webkit-mask-image:var(--md-search-result-icon);mask-image:var(--md-search-result-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:100%}[dir=rtl] .md-search-result__icon:after{transform:scaleX(-1)}.md-search-result .md-typeset{color:var(--md-default-fg-color--light);font-size:.64rem;line-height:1.6}.md-search-result .md-typeset h1{color:var(--md-default-fg-color);font-size:.8rem;font-weight:400;line-height:1.4;margin:.55rem 0}.md-search-result .md-typeset h1 mark{text-decoration:none}.md-search-result .md-typeset h2{color:var(--md-default-fg-color);font-size:.64rem;font-weight:700;line-height:1.6;margin:.5em 0}.md-search-result .md-typeset h2 mark{text-decoration:none}.md-search-result__terms{color:var(--md-default-fg-color);display:block;font-size:.64rem;font-style:italic;margin:.5em 0}.md-search-result mark{background-color:initial;color:var(--md-accent-fg-color);text-decoration:underline}.md-select{position:relative;z-index:1}.md-select__inner{background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color);left:50%;margin-top:.2rem;max-height:0;opacity:0;position:absolute;top:calc(100% - .2rem);transform:translate3d(-50%,.3rem,0);transition:transform .25s 375ms,opacity .25s .25s,max-height 0ms .5s}.md-select:focus-within .md-select__inner,.md-select:hover .md-select__inner{max-height:10rem;opacity:1;transform:translate3d(-50%,0,0);transition:transform .25s cubic-bezier(.1,.7,.1,1),opacity .25s,max-height 0ms}.md-select__inner:after{border-bottom:.2rem solid #0000;border-bottom-color:var(--md-default-bg-color);border-left:.2rem solid #0000;border-right:.2rem solid #0000;border-top:0;content:"";height:0;left:50%;margin-left:-.2rem;margin-top:-.2rem;position:absolute;top:0;width:0}.md-select__list{border-radius:.1rem;font-size:.8rem;list-style-type:none;margin:0;max-height:inherit;overflow:auto;padding:0}.md-select__item{line-height:1.8rem}[dir=ltr] .md-select__link{padding-left:.6rem;padding-right:1.2rem}[dir=rtl] .md-select__link{padding-left:1.2rem;padding-right:.6rem}.md-select__link{cursor:pointer;display:block;outline:none;scroll-snap-align:start;transition:background-color .25s,color .25s;width:100%}.md-select__link:focus,.md-select__link:hover{color:var(--md-accent-fg-color)}.md-select__link:focus{background-color:var(--md-default-fg-color--lightest)}.md-sidebar{align-self:flex-start;flex-shrink:0;padding:1.2rem 0;position:sticky;top:2.4rem;width:12.1rem}@media print{.md-sidebar{display:none}}@media screen and (max-width:76.234375em){[dir=ltr] .md-sidebar--primary{left:-12.1rem}[dir=rtl] .md-sidebar--primary{right:-12.1rem}.md-sidebar--primary{background-color:var(--md-default-bg-color);display:block;height:100%;position:fixed;top:0;transform:translateX(0);transition:transform .25s cubic-bezier(.4,0,.2,1),box-shadow .25s;width:12.1rem;z-index:5}[data-md-toggle=drawer]:checked~.md-container .md-sidebar--primary{box-shadow:var(--md-shadow-z3);transform:translateX(12.1rem)}[dir=rtl] [data-md-toggle=drawer]:checked~.md-container .md-sidebar--primary{transform:translateX(-12.1rem)}.md-sidebar--primary .md-sidebar__scrollwrap{bottom:0;left:0;margin:0;overflow:hidden;position:absolute;right:0;scroll-snap-type:none;top:0}}@media screen and (min-width:76.25em){.md-sidebar{height:0}.no-js .md-sidebar{height:auto}.md-header--lifted~.md-container .md-sidebar{top:4.8rem}}.md-sidebar--secondary{display:none;order:2}@media screen and (min-width:60em){.md-sidebar--secondary{height:0}.no-js .md-sidebar--secondary{height:auto}.md-sidebar--secondary:not([hidden]){display:block}.md-sidebar--secondary .md-sidebar__scrollwrap{touch-action:pan-y}}.md-sidebar__scrollwrap{-webkit-backface-visibility:hidden;backface-visibility:hidden;margin:0 .2rem;overflow-y:auto;scrollbar-color:var(--md-default-fg-color--lighter) #0000}@media screen and (min-width:60em){.md-sidebar__scrollwrap{scrollbar-gutter:stable;scrollbar-width:thin}}.md-sidebar__scrollwrap::-webkit-scrollbar{height:.2rem;width:.2rem}.md-sidebar__scrollwrap:focus-within,.md-sidebar__scrollwrap:hover{scrollbar-color:var(--md-accent-fg-color) #0000}.md-sidebar__scrollwrap:focus-within::-webkit-scrollbar-thumb,.md-sidebar__scrollwrap:hover::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-sidebar__scrollwrap:focus-within::-webkit-scrollbar-thumb:hover,.md-sidebar__scrollwrap:hover::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}@supports selector(::-webkit-scrollbar){.md-sidebar__scrollwrap{scrollbar-gutter:auto}[dir=ltr] .md-sidebar__inner{padding-right:calc(100% - 11.5rem)}[dir=rtl] .md-sidebar__inner{padding-left:calc(100% - 11.5rem)}}@media screen and (max-width:76.234375em){.md-overlay{background-color:#0000008a;height:0;opacity:0;position:fixed;top:0;transition:width 0ms .25s,height 0ms .25s,opacity .25s;width:0;z-index:5}[data-md-toggle=drawer]:checked~.md-overlay{height:100%;opacity:1;transition:width 0ms,height 0ms,opacity .25s;width:100%}}@keyframes facts{0%{height:0}to{height:.65rem}}@keyframes fact{0%{opacity:0;transform:translateY(100%)}50%{opacity:0}to{opacity:1;transform:translateY(0)}}:root{--md-source-forks-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0M5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0m6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5m-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0"/></svg>');--md-source-repositories-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M2 2.5A2.5 2.5 0 0 1 4.5 0h8.75a.75.75 0 0 1 .75.75v12.5a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h1.75v-2h-8a1 1 0 0 0-.714 1.7.75.75 0 1 1-1.072 1.05A2.5 2.5 0 0 1 2 11.5Zm10.5-1h-8a1 1 0 0 0-1 1v6.708A2.5 2.5 0 0 1 4.5 9h8ZM5 12.25a.25.25 0 0 1 .25-.25h3.5a.25.25 0 0 1 .25.25v3.25a.25.25 0 0 1-.4.2l-1.45-1.087a.25.25 0 0 0-.3 0L5.4 15.7a.25.25 0 0 1-.4-.2Z"/></svg>');--md-source-stars-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25m0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41z"/></svg>');--md-source-version-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.75 1.75 0 0 1 1 7.775m1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2"/></svg>')}.md-source{-webkit-backface-visibility:hidden;backface-visibility:hidden;display:block;font-size:.65rem;line-height:1.2;outline-color:var(--md-accent-fg-color);transition:opacity .25s;white-space:nowrap}.md-source:hover{opacity:.7}.md-source__icon{display:inline-block;height:2.4rem;vertical-align:middle;width:2rem}[dir=ltr] .md-source__icon svg{margin-left:.6rem}[dir=rtl] .md-source__icon svg{margin-right:.6rem}.md-source__icon svg{margin-top:.6rem}[dir=ltr] .md-source__icon+.md-source__repository{padding-left:2rem}[dir=rtl] .md-source__icon+.md-source__repository{padding-right:2rem}[dir=ltr] .md-source__icon+.md-source__repository{margin-left:-2rem}[dir=rtl] .md-source__icon+.md-source__repository{margin-right:-2rem}[dir=ltr] .md-source__repository{margin-left:.6rem}[dir=rtl] .md-source__repository{margin-right:.6rem}.md-source__repository{display:inline-block;max-width:calc(100% - 1.2rem);overflow:hidden;text-overflow:ellipsis;vertical-align:middle}.md-source__facts{display:flex;font-size:.55rem;gap:.4rem;list-style-type:none;margin:.1rem 0 0;opacity:.75;overflow:hidden;padding:0;width:100%}.md-source__repository--active .md-source__facts{animation:facts .25s ease-in}.md-source__fact{overflow:hidden;text-overflow:ellipsis}.md-source__repository--active .md-source__fact{animation:fact .4s ease-out}[dir=ltr] .md-source__fact:before{margin-right:.1rem}[dir=rtl] .md-source__fact:before{margin-left:.1rem}.md-source__fact:before{background-color:currentcolor;content:"";display:inline-block;height:.6rem;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;vertical-align:text-top;width:.6rem}.md-source__fact:nth-child(1n+2){flex-shrink:0}.md-source__fact--version:before{-webkit-mask-image:var(--md-source-version-icon);mask-image:var(--md-source-version-icon)}.md-source__fact--stars:before{-webkit-mask-image:var(--md-source-stars-icon);mask-image:var(--md-source-stars-icon)}.md-source__fact--forks:before{-webkit-mask-image:var(--md-source-forks-icon);mask-image:var(--md-source-forks-icon)}.md-source__fact--repositories:before{-webkit-mask-image:var(--md-source-repositories-icon);mask-image:var(--md-source-repositories-icon)}.md-source-file{margin:1em 0}[dir=ltr] .md-source-file__fact{margin-right:.6rem}[dir=rtl] .md-source-file__fact{margin-left:.6rem}.md-source-file__fact{align-items:center;color:var(--md-default-fg-color--light);display:inline-flex;font-size:.68rem;gap:.3rem}.md-source-file__fact .md-icon{flex-shrink:0;margin-bottom:.05rem}[dir=ltr] .md-source-file__fact .md-author{float:left}[dir=rtl] .md-source-file__fact .md-author{float:right}.md-source-file__fact .md-author{margin-right:.2rem}.md-source-file__fact svg{width:.9rem}:root{--md-status:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11 9h2V7h-2m1 13c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8m0-18A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2m-1 15h2v-6h-2z"/></svg>');--md-status--new:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m23 12-2.44-2.78.34-3.68-3.61-.82-1.89-3.18L12 3 8.6 1.54 6.71 4.72l-3.61.81.34 3.68L1 12l2.44 2.78-.34 3.69 3.61.82 1.89 3.18L12 21l3.4 1.46 1.89-3.18 3.61-.82-.34-3.68zm-10 5h-2v-2h2zm0-4h-2V7h2z"/></svg>');--md-status--deprecated:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9 3v1H4v2h1v13a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V6h1V4h-5V3zm0 5h2v9H9zm4 0h2v9h-2z"/></svg>');--md-status--encrypted:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5zm0 6c1.4 0 2.8 1.1 2.8 2.5V11c.6 0 1.2.6 1.2 1.3v3.5c0 .6-.6 1.2-1.3 1.2H9.2c-.6 0-1.2-.6-1.2-1.3v-3.5c0-.6.6-1.2 1.2-1.2V9.5C9.2 8.1 10.6 7 12 7m0 1.2c-.8 0-1.5.5-1.5 1.3V11h3V9.5c0-.8-.7-1.3-1.5-1.3"/></svg>')}.md-status:after{background-color:var(--md-default-fg-color--light);content:"";display:inline-block;height:1.125em;-webkit-mask-image:var(--md-status);mask-image:var(--md-status);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;vertical-align:text-bottom;width:1.125em}.md-status:hover:after{background-color:currentcolor}.md-status--new:after{-webkit-mask-image:var(--md-status--new);mask-image:var(--md-status--new)}.md-status--deprecated:after{-webkit-mask-image:var(--md-status--deprecated);mask-image:var(--md-status--deprecated)}.md-status--encrypted:after{-webkit-mask-image:var(--md-status--encrypted);mask-image:var(--md-status--encrypted)}.md-tabs{background-color:var(--md-primary-fg-color);color:var(--md-primary-bg-color);display:block;line-height:1.3;overflow:auto;width:100%;z-index:3}@media print{.md-tabs{display:none}}@media screen and (max-width:76.234375em){.md-tabs{display:none}}.md-tabs[hidden]{pointer-events:none}[dir=ltr] .md-tabs__list{margin-left:.2rem}[dir=rtl] .md-tabs__list{margin-right:.2rem}.md-tabs__list{contain:content;display:flex;list-style:none;margin:0;overflow:auto;padding:0;scrollbar-width:none;white-space:nowrap}.md-tabs__list::-webkit-scrollbar{display:none}.md-tabs__item{height:2.4rem;padding-left:.6rem;padding-right:.6rem}.md-tabs__item--active .md-tabs__link{color:inherit;opacity:1}.md-tabs__link{-webkit-backface-visibility:hidden;backface-visibility:hidden;display:flex;font-size:.7rem;margin-top:.8rem;opacity:.7;outline-color:var(--md-accent-fg-color);outline-offset:.2rem;transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .25s}.md-tabs__link:focus,.md-tabs__link:hover{color:inherit;opacity:1}[dir=ltr] .md-tabs__link svg{margin-right:.4rem}[dir=rtl] .md-tabs__link svg{margin-left:.4rem}.md-tabs__link svg{fill:currentcolor;height:1.3em}.md-tabs__item:nth-child(2) .md-tabs__link{transition-delay:20ms}.md-tabs__item:nth-child(3) .md-tabs__link{transition-delay:40ms}.md-tabs__item:nth-child(4) .md-tabs__link{transition-delay:60ms}.md-tabs__item:nth-child(5) .md-tabs__link{transition-delay:80ms}.md-tabs__item:nth-child(6) .md-tabs__link{transition-delay:.1s}.md-tabs__item:nth-child(7) .md-tabs__link{transition-delay:.12s}.md-tabs__item:nth-child(8) .md-tabs__link{transition-delay:.14s}.md-tabs__item:nth-child(9) .md-tabs__link{transition-delay:.16s}.md-tabs__item:nth-child(10) .md-tabs__link{transition-delay:.18s}.md-tabs__item:nth-child(11) .md-tabs__link{transition-delay:.2s}.md-tabs__item:nth-child(12) .md-tabs__link{transition-delay:.22s}.md-tabs__item:nth-child(13) .md-tabs__link{transition-delay:.24s}.md-tabs__item:nth-child(14) .md-tabs__link{transition-delay:.26s}.md-tabs__item:nth-child(15) .md-tabs__link{transition-delay:.28s}.md-tabs__item:nth-child(16) .md-tabs__link{transition-delay:.3s}.md-tabs[hidden] .md-tabs__link{opacity:0;transform:translateY(50%);transition:transform 0ms .1s,opacity .1s}:root{--md-tag-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m5.41 21 .71-4h-4l.35-2h4l1.06-6h-4l.35-2h4l.71-4h2l-.71 4h6l.71-4h2l-.71 4h4l-.35 2h-4l-1.06 6h4l-.35 2h-4l-.71 4h-2l.71-4h-6l-.71 4zM9.53 9l-1.06 6h6l1.06-6z"/></svg>')}.md-typeset .md-tags:not([hidden]){display:inline-flex;flex-wrap:wrap;gap:.5em;margin-bottom:.75em;margin-top:-.125em}.md-typeset .md-tag{align-items:center;background:var(--md-default-fg-color--lightest);border-radius:2.4rem;display:inline-flex;font-size:.64rem;font-size:min(.8em,.64rem);font-weight:700;gap:.5em;letter-spacing:normal;line-height:1.6;padding:.3125em .78125em}.md-typeset .md-tag[href]{-webkit-tap-highlight-color:transparent;color:inherit;outline:none;transition:color 125ms,background-color 125ms}.md-typeset .md-tag[href]:focus,.md-typeset .md-tag[href]:hover{background-color:var(--md-accent-fg-color);color:var(--md-accent-bg-color)}[id]>.md-typeset .md-tag{vertical-align:text-top}.md-typeset .md-tag-shadow{opacity:.5}.md-typeset .md-tag-icon:before{background-color:var(--md-default-fg-color--lighter);content:"";display:inline-block;height:1.2em;-webkit-mask-image:var(--md-tag-icon);mask-image:var(--md-tag-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:background-color 125ms;vertical-align:text-bottom;width:1.2em}.md-typeset .md-tag-icon[href]:focus:before,.md-typeset .md-tag-icon[href]:hover:before{background-color:var(--md-accent-bg-color)}@keyframes pulse{0%{transform:scale(.95)}75%{transform:scale(1)}to{transform:scale(.95)}}:root{--md-annotation-bg-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 2A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2"/></svg>');--md-annotation-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M17 13h-4v4h-2v-4H7v-2h4V7h2v4h4m-5-9A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2"/></svg>')}.md-tooltip{-webkit-backface-visibility:hidden;backface-visibility:hidden;background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color);font-family:var(--md-text-font-family);left:clamp(var(--md-tooltip-0,0rem) + .8rem,var(--md-tooltip-x),100vw + var(--md-tooltip-0,0rem) + .8rem - var(--md-tooltip-width) - 2 * .8rem);max-width:calc(100vw - 1.6rem);opacity:0;position:absolute;top:var(--md-tooltip-y);transform:translateY(-.4rem);transition:transform 0ms .25s,opacity .25s,z-index .25s;width:var(--md-tooltip-width);z-index:0}.md-tooltip--active{opacity:1;transform:translateY(0);transition:transform .25s cubic-bezier(.1,.7,.1,1),opacity .25s,z-index 0ms;z-index:2}.md-tooltip--inline{font-weight:700;-webkit-user-select:none;user-select:none;width:auto}.md-tooltip--inline:not(.md-tooltip--active){transform:translateY(.2rem) scale(.9)}.md-tooltip--inline .md-tooltip__inner{font-size:.5rem;padding:.2rem .4rem}[hidden]+.md-tooltip--inline{display:none}.focus-visible>.md-tooltip,.md-tooltip:target{outline:var(--md-accent-fg-color) auto}.md-tooltip__inner{font-size:.64rem;padding:.8rem}.md-tooltip__inner.md-typeset>:first-child{margin-top:0}.md-tooltip__inner.md-typeset>:last-child{margin-bottom:0}.md-annotation{font-style:normal;font-weight:400;outline:none;text-align:initial;vertical-align:text-bottom;white-space:normal}[dir=rtl] .md-annotation{direction:rtl}code .md-annotation{font-family:var(--md-code-font-family);font-size:inherit}.md-annotation:not([hidden]){display:inline-block;line-height:1.25}.md-annotation__index{border-radius:.01px;cursor:pointer;display:inline-block;margin-left:.4ch;margin-right:.4ch;outline:none;overflow:hidden;position:relative;-webkit-user-select:none;user-select:none;vertical-align:text-top;z-index:0}.md-annotation .md-annotation__index{transition:z-index .25s}@media screen{.md-annotation__index{width:2.2ch}[data-md-visible]>.md-annotation__index{animation:pulse 2s infinite}.md-annotation__index:before{background:var(--md-default-bg-color);-webkit-mask-image:var(--md-annotation-bg-icon);mask-image:var(--md-annotation-bg-icon)}.md-annotation__index:after,.md-annotation__index:before{content:"";height:2.2ch;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:-.1ch;width:2.2ch;z-index:-1}.md-annotation__index:after{background-color:var(--md-default-fg-color--lighter);-webkit-mask-image:var(--md-annotation-icon);mask-image:var(--md-annotation-icon);transform:scale(1.0001);transition:background-color .25s,transform .25s}.md-tooltip--active+.md-annotation__index:after{transform:rotate(45deg)}.md-tooltip--active+.md-annotation__index:after,:hover>.md-annotation__index:after{background-color:var(--md-accent-fg-color)}}.md-tooltip--active+.md-annotation__index{animation-play-state:paused;transition-duration:0ms;z-index:2}.md-annotation__index [data-md-annotation-id]{display:inline-block}@media print{.md-annotation__index [data-md-annotation-id]{background:var(--md-default-fg-color--lighter);border-radius:2ch;color:var(--md-default-bg-color);font-weight:700;padding:0 .6ch;white-space:nowrap}.md-annotation__index [data-md-annotation-id]:after{content:attr(data-md-annotation-id)}}.md-typeset .md-annotation-list{counter-reset:annotation;list-style:none!important}.md-typeset .md-annotation-list li{position:relative}[dir=ltr] .md-typeset .md-annotation-list li:before{left:-2.125em}[dir=rtl] .md-typeset .md-annotation-list li:before{right:-2.125em}.md-typeset .md-annotation-list li:before{background:var(--md-default-fg-color--lighter);border-radius:2ch;color:var(--md-default-bg-color);content:counter(annotation);counter-increment:annotation;font-size:.8875em;font-weight:700;height:2ch;line-height:1.25;min-width:2ch;padding:0 .6ch;position:absolute;text-align:center;top:.25em}:root{--md-tooltip-width:20rem;--md-tooltip-tail:0.3rem}.md-tooltip2{-webkit-backface-visibility:hidden;backface-visibility:hidden;color:var(--md-default-fg-color);font-family:var(--md-text-font-family);opacity:0;pointer-events:none;position:absolute;top:calc(var(--md-tooltip-host-y) + var(--md-tooltip-y));transform:translateY(-.4rem);transform-origin:calc(var(--md-tooltip-host-x) + var(--md-tooltip-x)) 0;transition:transform 0ms .25s,opacity .25s,z-index .25s;width:100%;z-index:0}.md-tooltip2:before{border-left:var(--md-tooltip-tail) solid #0000;border-right:var(--md-tooltip-tail) solid #0000;content:"";display:block;left:clamp(1.5 * .8rem,var(--md-tooltip-host-x) + var(--md-tooltip-x) - var(--md-tooltip-tail),100vw - 2 * var(--md-tooltip-tail) - 1.5 * .8rem);position:absolute;z-index:1}.md-tooltip2--top:before{border-top:var(--md-tooltip-tail) solid var(--md-default-bg-color);bottom:calc(var(--md-tooltip-tail)*-1 + .025rem);filter:drop-shadow(0 1px 0 hsla(0,0%,0%,.05))}.md-tooltip2--bottom:before{border-bottom:var(--md-tooltip-tail) solid var(--md-default-bg-color);filter:drop-shadow(0 -1px 0 hsla(0,0%,0%,.05));top:calc(var(--md-tooltip-tail)*-1 + .025rem)}.md-tooltip2--active{opacity:1;transform:translateY(0);transition:transform .4s cubic-bezier(0,1,.5,1),opacity .25s,z-index 0ms;z-index:2}.md-tooltip2__inner{scrollbar-gutter:stable;background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);left:clamp(.8rem,var(--md-tooltip-host-x) - .8rem,100vw - var(--md-tooltip-width) - .8rem);max-height:40vh;max-width:calc(100vw - 1.6rem);position:relative;scrollbar-width:thin}.md-tooltip2__inner::-webkit-scrollbar{height:.2rem;width:.2rem}.md-tooltip2__inner::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-tooltip2__inner::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}[role=dialog]>.md-tooltip2__inner{font-size:.64rem;overflow:auto;padding:0 .8rem;pointer-events:auto;width:var(--md-tooltip-width)}[role=dialog]>.md-tooltip2__inner:after,[role=dialog]>.md-tooltip2__inner:before{content:"";display:block;height:.8rem;position:sticky;width:100%;z-index:10}[role=dialog]>.md-tooltip2__inner:before{background:linear-gradient(var(--md-default-bg-color),#0000 75%);top:0}[role=dialog]>.md-tooltip2__inner:after{background:linear-gradient(#0000,var(--md-default-bg-color) 75%);bottom:0}[role=tooltip]>.md-tooltip2__inner{font-size:.5rem;font-weight:700;left:clamp(.8rem,var(--md-tooltip-host-x) + var(--md-tooltip-x) - var(--md-tooltip-width)/2,100vw - var(--md-tooltip-width) - .8rem);max-width:min(100vw - 2 * .8rem,400px);padding:.2rem .4rem;-webkit-user-select:none;user-select:none;width:-moz-fit-content;width:fit-content}.md-tooltip2__inner.md-typeset>:first-child{margin-top:0}.md-tooltip2__inner.md-typeset>:last-child{margin-bottom:0}[dir=ltr] .md-top{margin-left:50%}[dir=rtl] .md-top{margin-right:50%}.md-top{background-color:var(--md-default-bg-color);border-radius:1.6rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color--light);cursor:pointer;display:block;font-size:.7rem;outline:none;padding:.4rem .8rem;position:fixed;top:3.2rem;transform:translate(-50%);transition:color 125ms,background-color 125ms,transform 125ms cubic-bezier(.4,0,.2,1),opacity 125ms;z-index:2}@media print{.md-top{display:none}}[dir=rtl] .md-top{transform:translate(50%)}.md-top[hidden]{opacity:0;pointer-events:none;transform:translate(-50%,.2rem);transition-duration:0ms}[dir=rtl] .md-top[hidden]{transform:translate(50%,.2rem)}.md-top:focus,.md-top:hover{background-color:var(--md-accent-fg-color);color:var(--md-accent-bg-color)}.md-top svg{display:inline-block;vertical-align:-.5em}@keyframes hoverfix{0%{pointer-events:none}}:root{--md-version-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!--! Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2024 Fonticons, Inc.--><path d="M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9S301 191.9 288 191.9L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z"/></svg>')}.md-version{flex-shrink:0;font-size:.8rem;height:2.4rem}[dir=ltr] .md-version__current{margin-left:1.4rem;margin-right:.4rem}[dir=rtl] .md-version__current{margin-left:.4rem;margin-right:1.4rem}.md-version__current{color:inherit;cursor:pointer;outline:none;position:relative;top:.05rem}[dir=ltr] .md-version__current:after{margin-left:.4rem}[dir=rtl] .md-version__current:after{margin-right:.4rem}.md-version__current:after{background-color:currentcolor;content:"";display:inline-block;height:.6rem;-webkit-mask-image:var(--md-version-icon);mask-image:var(--md-version-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:.4rem}.md-version__alias{margin-left:.3rem;opacity:.7}.md-version__list{background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color);list-style-type:none;margin:.2rem .8rem;max-height:0;opacity:0;overflow:auto;padding:0;position:absolute;scroll-snap-type:y mandatory;top:.15rem;transition:max-height 0ms .5s,opacity .25s .25s;z-index:3}.md-version:focus-within .md-version__list,.md-version:hover .md-version__list{max-height:10rem;opacity:1;transition:max-height 0ms,opacity .25s}@media (hover:none),(pointer:coarse){.md-version:hover .md-version__list{animation:hoverfix .25s forwards}.md-version:focus-within .md-version__list{animation:none}}.md-version__item{line-height:1.8rem}[dir=ltr] .md-version__link{padding-left:.6rem;padding-right:1.2rem}[dir=rtl] .md-version__link{padding-left:1.2rem;padding-right:.6rem}.md-version__link{cursor:pointer;display:block;outline:none;scroll-snap-align:start;transition:color .25s,background-color .25s;white-space:nowrap;width:100%}.md-version__link:focus,.md-version__link:hover{color:var(--md-accent-fg-color)}.md-version__link:focus{background-color:var(--md-default-fg-color--lightest)}:root{--md-admonition-icon--note:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m3.1 5.07c.14 0 .28.05.4.16l1.27 1.27c.23.22.23.57 0 .78l-1 1-2.05-2.05 1-1c.1-.11.24-.16.38-.16m-1.97 1.74 2.06 2.06-6.06 6.06H7.07v-2.06z"/></svg>');--md-admonition-icon--abstract:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M17 9H7V7h10m0 6H7v-2h10m-3 6H7v-2h7M12 3a1 1 0 0 1 1 1 1 1 0 0 1-1 1 1 1 0 0 1-1-1 1 1 0 0 1 1-1m7 0h-4.18C14.4 1.84 13.3 1 12 1s-2.4.84-2.82 2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2"/></svg>');--md-admonition-icon--info:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13 9h-2V7h2m0 10h-2v-6h2m-1-9A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2"/></svg>');--md-admonition-icon--tip:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M17.66 11.2c-.23-.3-.51-.56-.77-.82-.67-.6-1.43-1.03-2.07-1.66C13.33 7.26 13 4.85 13.95 3c-.95.23-1.78.75-2.49 1.32-2.59 2.08-3.61 5.75-2.39 8.9.04.1.08.2.08.33 0 .22-.15.42-.35.5-.23.1-.47.04-.66-.12a.6.6 0 0 1-.14-.17c-1.13-1.43-1.31-3.48-.55-5.12C5.78 10 4.87 12.3 5 14.47c.06.5.12 1 .29 1.5.14.6.41 1.2.71 1.73 1.08 1.73 2.95 2.97 4.96 3.22 2.14.27 4.43-.12 6.07-1.6 1.83-1.66 2.47-4.32 1.53-6.6l-.13-.26c-.21-.46-.77-1.26-.77-1.26m-3.16 6.3c-.28.24-.74.5-1.1.6-1.12.4-2.24-.16-2.9-.82 1.19-.28 1.9-1.16 2.11-2.05.17-.8-.15-1.46-.28-2.23-.12-.74-.1-1.37.17-2.06.19.38.39.76.63 1.06.77 1 1.98 1.44 2.24 2.8.04.14.06.28.06.43.03.82-.33 1.72-.93 2.27"/></svg>');--md-admonition-icon--success:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M21 7 9 19l-5.5-5.5 1.41-1.41L9 16.17 19.59 5.59z"/></svg>');--md-admonition-icon--question:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m15.07 11.25-.9.92C13.45 12.89 13 13.5 13 15h-2v-.5c0-1.11.45-2.11 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41a2 2 0 0 0-2-2 2 2 0 0 0-2 2H8a4 4 0 0 1 4-4 4 4 0 0 1 4 4 3.2 3.2 0 0 1-.93 2.25M13 19h-2v-2h2M12 2A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10c0-5.53-4.5-10-10-10"/></svg>');--md-admonition-icon--warning:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13 14h-2V9h2m0 9h-2v-2h2M1 21h22L12 2z"/></svg>');--md-admonition-icon--failure:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>');--md-admonition-icon--danger:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m11.5 20 4.86-9.73H13V4l-5 9.73h3.5zM12 2c2.75 0 5.1 1 7.05 2.95S22 9.25 22 12s-1 5.1-2.95 7.05S14.75 22 12 22s-5.1-1-7.05-2.95S2 14.75 2 12s1-5.1 2.95-7.05S9.25 2 12 2"/></svg>');--md-admonition-icon--bug:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11 13h2v1h-2zm10-8v6c0 5.5-3.8 10.7-9 12-5.2-1.3-9-6.5-9-12V5l9-4zm-4 5h-2.2c-.2-.6-.6-1.1-1.1-1.5l1.2-1.2-.7-.7L12.8 8H12c-.2 0-.5 0-.7.1L9.9 6.6l-.8.8 1.2 1.2c-.5.3-.9.8-1.1 1.4H7v1h2v1H7v1h2v1H7v1h2.2c.4 1.2 1.5 2 2.8 2s2.4-.8 2.8-2H17v-1h-2v-1h2v-1h-2v-1h2zm-6 2h2v-1h-2z"/></svg>');--md-admonition-icon--example:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M7 2v2h1v14a4 4 0 0 0 4 4 4 4 0 0 0 4-4V4h1V2zm4 14c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1m2-4c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1m1-5h-4V4h4z"/></svg>');--md-admonition-icon--quote:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14 17h3l2-4V7h-6v6h3M6 17h3l2-4V7H5v6h3z"/></svg>')}.md-typeset .admonition,.md-typeset details{background-color:var(--md-admonition-bg-color);border:.075rem solid #448aff;border-radius:.2rem;box-shadow:var(--md-shadow-z1);color:var(--md-admonition-fg-color);display:flow-root;font-size:.64rem;margin:1.5625em 0;padding:0 .6rem;page-break-inside:avoid;transition:box-shadow 125ms}@media print{.md-typeset .admonition,.md-typeset details{box-shadow:none}}.md-typeset .admonition:focus-within,.md-typeset details:focus-within{box-shadow:0 0 0 .2rem #448aff1a}.md-typeset .admonition>*,.md-typeset details>*{box-sizing:border-box}.md-typeset .admonition .admonition,.md-typeset .admonition details,.md-typeset details .admonition,.md-typeset details details{margin-bottom:1em;margin-top:1em}.md-typeset .admonition .md-typeset__scrollwrap,.md-typeset details .md-typeset__scrollwrap{margin:1em -.6rem}.md-typeset .admonition .md-typeset__table,.md-typeset details .md-typeset__table{padding:0 .6rem}.md-typeset .admonition>.tabbed-set:only-child,.md-typeset details>.tabbed-set:only-child{margin-top:0}html .md-typeset .admonition>:last-child,html .md-typeset details>:last-child{margin-bottom:.6rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary{padding-left:2rem;padding-right:.6rem}[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{padding-left:.6rem;padding-right:2rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary{border-left-width:.2rem}[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{border-right-width:.2rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary{border-top-left-radius:.1rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary,[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{border-top-right-radius:.1rem}[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{border-top-left-radius:.1rem}.md-typeset .admonition-title,.md-typeset summary{background-color:#448aff1a;border:none;font-weight:700;margin:0 -.6rem;padding-bottom:.4rem;padding-top:.4rem;position:relative}html .md-typeset .admonition-title:last-child,html .md-typeset summary:last-child{margin-bottom:0}[dir=ltr] .md-typeset .admonition-title:before,[dir=ltr] .md-typeset summary:before{left:.6rem}[dir=rtl] .md-typeset .admonition-title:before,[dir=rtl] .md-typeset summary:before{right:.6rem}.md-typeset .admonition-title:before,.md-typeset summary:before{background-color:#448aff;content:"";height:1rem;-webkit-mask-image:var(--md-admonition-icon--note);mask-image:var(--md-admonition-icon--note);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:.625em;width:1rem}.md-typeset .admonition-title code,.md-typeset summary code{box-shadow:0 0 0 .05rem var(--md-default-fg-color--lightest)}.md-typeset .admonition.note,.md-typeset details.note{border-color:#448aff}.md-typeset .admonition.note:focus-within,.md-typeset details.note:focus-within{box-shadow:0 0 0 .2rem #448aff1a}.md-typeset .note>.admonition-title,.md-typeset .note>summary{background-color:#448aff1a}.md-typeset .note>.admonition-title:before,.md-typeset .note>summary:before{background-color:#448aff;-webkit-mask-image:var(--md-admonition-icon--note);mask-image:var(--md-admonition-icon--note)}.md-typeset .note>.admonition-title:after,.md-typeset .note>summary:after{color:#448aff}.md-typeset .admonition.abstract,.md-typeset details.abstract{border-color:#00b0ff}.md-typeset .admonition.abstract:focus-within,.md-typeset details.abstract:focus-within{box-shadow:0 0 0 .2rem #00b0ff1a}.md-typeset .abstract>.admonition-title,.md-typeset .abstract>summary{background-color:#00b0ff1a}.md-typeset .abstract>.admonition-title:before,.md-typeset .abstract>summary:before{background-color:#00b0ff;-webkit-mask-image:var(--md-admonition-icon--abstract);mask-image:var(--md-admonition-icon--abstract)}.md-typeset .abstract>.admonition-title:after,.md-typeset .abstract>summary:after{color:#00b0ff}.md-typeset .admonition.info,.md-typeset details.info{border-color:#00b8d4}.md-typeset .admonition.info:focus-within,.md-typeset details.info:focus-within{box-shadow:0 0 0 .2rem #00b8d41a}.md-typeset .info>.admonition-title,.md-typeset .info>summary{background-color:#00b8d41a}.md-typeset .info>.admonition-title:before,.md-typeset .info>summary:before{background-color:#00b8d4;-webkit-mask-image:var(--md-admonition-icon--info);mask-image:var(--md-admonition-icon--info)}.md-typeset .info>.admonition-title:after,.md-typeset .info>summary:after{color:#00b8d4}.md-typeset .admonition.tip,.md-typeset details.tip{border-color:#00bfa5}.md-typeset .admonition.tip:focus-within,.md-typeset details.tip:focus-within{box-shadow:0 0 0 .2rem #00bfa51a}.md-typeset .tip>.admonition-title,.md-typeset .tip>summary{background-color:#00bfa51a}.md-typeset .tip>.admonition-title:before,.md-typeset .tip>summary:before{background-color:#00bfa5;-webkit-mask-image:var(--md-admonition-icon--tip);mask-image:var(--md-admonition-icon--tip)}.md-typeset .tip>.admonition-title:after,.md-typeset .tip>summary:after{color:#00bfa5}.md-typeset .admonition.success,.md-typeset details.success{border-color:#00c853}.md-typeset .admonition.success:focus-within,.md-typeset details.success:focus-within{box-shadow:0 0 0 .2rem #00c8531a}.md-typeset .success>.admonition-title,.md-typeset .success>summary{background-color:#00c8531a}.md-typeset .success>.admonition-title:before,.md-typeset .success>summary:before{background-color:#00c853;-webkit-mask-image:var(--md-admonition-icon--success);mask-image:var(--md-admonition-icon--success)}.md-typeset .success>.admonition-title:after,.md-typeset .success>summary:after{color:#00c853}.md-typeset .admonition.question,.md-typeset details.question{border-color:#64dd17}.md-typeset .admonition.question:focus-within,.md-typeset details.question:focus-within{box-shadow:0 0 0 .2rem #64dd171a}.md-typeset .question>.admonition-title,.md-typeset .question>summary{background-color:#64dd171a}.md-typeset .question>.admonition-title:before,.md-typeset .question>summary:before{background-color:#64dd17;-webkit-mask-image:var(--md-admonition-icon--question);mask-image:var(--md-admonition-icon--question)}.md-typeset .question>.admonition-title:after,.md-typeset .question>summary:after{color:#64dd17}.md-typeset .admonition.warning,.md-typeset details.warning{border-color:#ff9100}.md-typeset .admonition.warning:focus-within,.md-typeset details.warning:focus-within{box-shadow:0 0 0 .2rem #ff91001a}.md-typeset .warning>.admonition-title,.md-typeset .warning>summary{background-color:#ff91001a}.md-typeset .warning>.admonition-title:before,.md-typeset .warning>summary:before{background-color:#ff9100;-webkit-mask-image:var(--md-admonition-icon--warning);mask-image:var(--md-admonition-icon--warning)}.md-typeset .warning>.admonition-title:after,.md-typeset .warning>summary:after{color:#ff9100}.md-typeset .admonition.failure,.md-typeset details.failure{border-color:#ff5252}.md-typeset .admonition.failure:focus-within,.md-typeset details.failure:focus-within{box-shadow:0 0 0 .2rem #ff52521a}.md-typeset .failure>.admonition-title,.md-typeset .failure>summary{background-color:#ff52521a}.md-typeset .failure>.admonition-title:before,.md-typeset .failure>summary:before{background-color:#ff5252;-webkit-mask-image:var(--md-admonition-icon--failure);mask-image:var(--md-admonition-icon--failure)}.md-typeset .failure>.admonition-title:after,.md-typeset .failure>summary:after{color:#ff5252}.md-typeset .admonition.danger,.md-typeset details.danger{border-color:#ff1744}.md-typeset .admonition.danger:focus-within,.md-typeset details.danger:focus-within{box-shadow:0 0 0 .2rem #ff17441a}.md-typeset .danger>.admonition-title,.md-typeset .danger>summary{background-color:#ff17441a}.md-typeset .danger>.admonition-title:before,.md-typeset .danger>summary:before{background-color:#ff1744;-webkit-mask-image:var(--md-admonition-icon--danger);mask-image:var(--md-admonition-icon--danger)}.md-typeset .danger>.admonition-title:after,.md-typeset .danger>summary:after{color:#ff1744}.md-typeset .admonition.bug,.md-typeset details.bug{border-color:#f50057}.md-typeset .admonition.bug:focus-within,.md-typeset details.bug:focus-within{box-shadow:0 0 0 .2rem #f500571a}.md-typeset .bug>.admonition-title,.md-typeset .bug>summary{background-color:#f500571a}.md-typeset .bug>.admonition-title:before,.md-typeset .bug>summary:before{background-color:#f50057;-webkit-mask-image:var(--md-admonition-icon--bug);mask-image:var(--md-admonition-icon--bug)}.md-typeset .bug>.admonition-title:after,.md-typeset .bug>summary:after{color:#f50057}.md-typeset .admonition.example,.md-typeset details.example{border-color:#7c4dff}.md-typeset .admonition.example:focus-within,.md-typeset details.example:focus-within{box-shadow:0 0 0 .2rem #7c4dff1a}.md-typeset .example>.admonition-title,.md-typeset .example>summary{background-color:#7c4dff1a}.md-typeset .example>.admonition-title:before,.md-typeset .example>summary:before{background-color:#7c4dff;-webkit-mask-image:var(--md-admonition-icon--example);mask-image:var(--md-admonition-icon--example)}.md-typeset .example>.admonition-title:after,.md-typeset .example>summary:after{color:#7c4dff}.md-typeset .admonition.quote,.md-typeset details.quote{border-color:#9e9e9e}.md-typeset .admonition.quote:focus-within,.md-typeset details.quote:focus-within{box-shadow:0 0 0 .2rem #9e9e9e1a}.md-typeset .quote>.admonition-title,.md-typeset .quote>summary{background-color:#9e9e9e1a}.md-typeset .quote>.admonition-title:before,.md-typeset .quote>summary:before{background-color:#9e9e9e;-webkit-mask-image:var(--md-admonition-icon--quote);mask-image:var(--md-admonition-icon--quote)}.md-typeset .quote>.admonition-title:after,.md-typeset .quote>summary:after{color:#9e9e9e}:root{--md-footnotes-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.42L5.83 13H21V7z"/></svg>')}.md-typeset .footnote{color:var(--md-default-fg-color--light);font-size:.64rem}[dir=ltr] .md-typeset .footnote>ol{margin-left:0}[dir=rtl] .md-typeset .footnote>ol{margin-right:0}.md-typeset .footnote>ol>li{transition:color 125ms}.md-typeset .footnote>ol>li:target{color:var(--md-default-fg-color)}.md-typeset .footnote>ol>li:focus-within .footnote-backref{opacity:1;transform:translateX(0);transition:none}.md-typeset .footnote>ol>li:hover .footnote-backref,.md-typeset .footnote>ol>li:target .footnote-backref{opacity:1;transform:translateX(0)}.md-typeset .footnote>ol>li>:first-child{margin-top:0}.md-typeset .footnote-ref{font-size:.75em;font-weight:700}html .md-typeset .footnote-ref{outline-offset:.1rem}.md-typeset [id^="fnref:"]:target>.footnote-ref{outline:auto}.md-typeset .footnote-backref{color:var(--md-typeset-a-color);display:inline-block;font-size:0;opacity:0;transform:translateX(.25rem);transition:color .25s,transform .25s .25s,opacity 125ms .25s;vertical-align:text-bottom}@media print{.md-typeset .footnote-backref{color:var(--md-typeset-a-color);opacity:1;transform:translateX(0)}}[dir=rtl] .md-typeset .footnote-backref{transform:translateX(-.25rem)}.md-typeset .footnote-backref:hover{color:var(--md-accent-fg-color)}.md-typeset .footnote-backref:before{background-color:currentcolor;content:"";display:inline-block;height:.8rem;-webkit-mask-image:var(--md-footnotes-icon);mask-image:var(--md-footnotes-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:.8rem}[dir=rtl] .md-typeset .footnote-backref:before{transform:scaleX(-1)}[dir=ltr] .md-typeset .headerlink{margin-left:.5rem}[dir=rtl] .md-typeset .headerlink{margin-right:.5rem}.md-typeset .headerlink{color:var(--md-default-fg-color--lighter);display:inline-block;opacity:0;transition:color .25s,opacity 125ms}@media print{.md-typeset .headerlink{display:none}}.md-typeset .headerlink:focus,.md-typeset :hover>.headerlink,.md-typeset :target>.headerlink{opacity:1;transition:color .25s,opacity 125ms}.md-typeset .headerlink:focus,.md-typeset .headerlink:hover,.md-typeset :target>.headerlink{color:var(--md-accent-fg-color)}.md-typeset :target{--md-scroll-margin:3.6rem;--md-scroll-offset:0rem;scroll-margin-top:calc(var(--md-scroll-margin) - var(--md-scroll-offset))}@media screen and (min-width:76.25em){.md-header--lifted~.md-container .md-typeset :target{--md-scroll-margin:6rem}}.md-typeset h1:target,.md-typeset h2:target,.md-typeset h3:target{--md-scroll-offset:0.2rem}.md-typeset h4:target{--md-scroll-offset:0.15rem}.md-typeset div.arithmatex{overflow:auto}@media screen and (max-width:44.984375em){.md-typeset div.arithmatex{margin:0 -.8rem}.md-typeset div.arithmatex>*{width:min-content}}.md-typeset div.arithmatex>*{margin-left:auto!important;margin-right:auto!important;padding:0 .8rem;touch-action:auto}.md-typeset div.arithmatex>* mjx-container{margin:0!important}.md-typeset div.arithmatex mjx-assistive-mml{height:0}.md-typeset del.critic{background-color:var(--md-typeset-del-color)}.md-typeset del.critic,.md-typeset ins.critic{-webkit-box-decoration-break:clone;box-decoration-break:clone}.md-typeset ins.critic{background-color:var(--md-typeset-ins-color)}.md-typeset .critic.comment{-webkit-box-decoration-break:clone;box-decoration-break:clone;color:var(--md-code-hl-comment-color)}.md-typeset .critic.comment:before{content:"/* "}.md-typeset .critic.comment:after{content:" */"}.md-typeset .critic.block{box-shadow:none;display:block;margin:1em 0;overflow:auto;padding-left:.8rem;padding-right:.8rem}.md-typeset .critic.block>:first-child{margin-top:.5em}.md-typeset .critic.block>:last-child{margin-bottom:.5em}:root{--md-details-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>')}.md-typeset details{display:flow-root;overflow:visible;padding-top:0}.md-typeset details[open]>summary:after{transform:rotate(90deg)}.md-typeset details:not([open]){box-shadow:none;padding-bottom:0}.md-typeset details:not([open])>summary{border-radius:.1rem}[dir=ltr] .md-typeset summary{padding-right:1.8rem}[dir=rtl] .md-typeset summary{padding-left:1.8rem}[dir=ltr] .md-typeset summary{border-top-left-radius:.1rem}[dir=ltr] .md-typeset summary,[dir=rtl] .md-typeset summary{border-top-right-radius:.1rem}[dir=rtl] .md-typeset summary{border-top-left-radius:.1rem}.md-typeset summary{cursor:pointer;display:block;min-height:1rem;overflow:hidden}.md-typeset summary.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-typeset summary:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}[dir=ltr] .md-typeset summary:after{right:.4rem}[dir=rtl] .md-typeset summary:after{left:.4rem}.md-typeset summary:after{background-color:currentcolor;content:"";height:1rem;-webkit-mask-image:var(--md-details-icon);mask-image:var(--md-details-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:.625em;transform:rotate(0deg);transition:transform .25s;width:1rem}[dir=rtl] .md-typeset summary:after{transform:rotate(180deg)}.md-typeset summary::marker{display:none}.md-typeset summary::-webkit-details-marker{display:none}.md-typeset .emojione,.md-typeset .gemoji,.md-typeset .twemoji{--md-icon-size:1.125em;display:inline-flex;height:var(--md-icon-size);vertical-align:text-top}.md-typeset .emojione svg,.md-typeset .gemoji svg,.md-typeset .twemoji svg{fill:currentcolor;max-height:100%;width:var(--md-icon-size)}.md-typeset .lg,.md-typeset .xl,.md-typeset .xxl,.md-typeset .xxxl{vertical-align:text-bottom}.md-typeset .middle{vertical-align:middle}.md-typeset .lg{--md-icon-size:1.5em}.md-typeset .xl{--md-icon-size:2.25em}.md-typeset .xxl{--md-icon-size:3em}.md-typeset .xxxl{--md-icon-size:4em}.highlight .o,.highlight .ow{color:var(--md-code-hl-operator-color)}.highlight .p{color:var(--md-code-hl-punctuation-color)}.highlight .cpf,.highlight .l,.highlight .s,.highlight .s1,.highlight .s2,.highlight .sb,.highlight .sc,.highlight .si,.highlight .ss{color:var(--md-code-hl-string-color)}.highlight .cp,.highlight .se,.highlight .sh,.highlight .sr,.highlight .sx{color:var(--md-code-hl-special-color)}.highlight .il,.highlight .m,.highlight .mb,.highlight .mf,.highlight .mh,.highlight .mi,.highlight .mo{color:var(--md-code-hl-number-color)}.highlight .k,.highlight .kd,.highlight .kn,.highlight .kp,.highlight .kr,.highlight .kt{color:var(--md-code-hl-keyword-color)}.highlight .kc,.highlight .n{color:var(--md-code-hl-name-color)}.highlight .bp,.highlight .nb,.highlight .no{color:var(--md-code-hl-constant-color)}.highlight .nc,.highlight .ne,.highlight .nf,.highlight .nn{color:var(--md-code-hl-function-color)}.highlight .nd,.highlight .ni,.highlight .nl,.highlight .nt{color:var(--md-code-hl-keyword-color)}.highlight .c,.highlight .c1,.highlight .ch,.highlight .cm,.highlight .cs,.highlight .sd{color:var(--md-code-hl-comment-color)}.highlight .na,.highlight .nv,.highlight .vc,.highlight .vg,.highlight .vi{color:var(--md-code-hl-variable-color)}.highlight .ge,.highlight .gh,.highlight .go,.highlight .gp,.highlight .gr,.highlight .gs,.highlight .gt,.highlight .gu{color:var(--md-code-hl-generic-color)}.highlight .gd,.highlight .gi{border-radius:.1rem;margin:0 -.125em;padding:0 .125em}.highlight .gd{background-color:var(--md-typeset-del-color)}.highlight .gi{background-color:var(--md-typeset-ins-color)}.highlight .hll{background-color:var(--md-code-hl-color--light);box-shadow:2px 0 0 0 var(--md-code-hl-color) inset;display:block;margin:0 -1.1764705882em;padding:0 1.1764705882em}.highlight span.filename{background-color:var(--md-code-bg-color);border-bottom:.05rem solid var(--md-default-fg-color--lightest);border-top-left-radius:.1rem;border-top-right-radius:.1rem;display:flow-root;font-size:.85em;font-weight:700;margin-top:1em;padding:.6617647059em 1.1764705882em;position:relative}.highlight span.filename+pre{margin-top:0}.highlight span.filename+pre>code{border-top-left-radius:0;border-top-right-radius:0}.highlight [data-linenos]:before{background-color:var(--md-code-bg-color);box-shadow:-.05rem 0 var(--md-default-fg-color--lightest) inset;color:var(--md-default-fg-color--light);content:attr(data-linenos);float:left;left:-1.1764705882em;margin-left:-1.1764705882em;margin-right:1.1764705882em;padding-left:1.1764705882em;position:sticky;-webkit-user-select:none;user-select:none;z-index:3}.highlight code a[id]{position:absolute;visibility:hidden}.highlight code[data-md-copying]{display:initial}.highlight code[data-md-copying] .hll{display:contents}.highlight code[data-md-copying] .md-annotation{display:none}.highlighttable{display:flow-root}.highlighttable tbody,.highlighttable td{display:block;padding:0}.highlighttable tr{display:flex}.highlighttable pre{margin:0}.highlighttable th.filename{flex-grow:1;padding:0;text-align:left}.highlighttable th.filename span.filename{margin-top:0}.highlighttable .linenos{background-color:var(--md-code-bg-color);border-bottom-left-radius:.1rem;border-top-left-radius:.1rem;font-size:.85em;padding:.7720588235em 0 .7720588235em 1.1764705882em;-webkit-user-select:none;user-select:none}.highlighttable .linenodiv{box-shadow:-.05rem 0 var(--md-default-fg-color--lightest) inset}.highlighttable .linenodiv pre{color:var(--md-default-fg-color--light);text-align:right}.highlighttable .linenodiv span[class]{padding-right:.5882352941em}.highlighttable .code{flex:1;min-width:0}.linenodiv a{color:inherit}.md-typeset .highlighttable{direction:ltr;margin:1em 0}.md-typeset .highlighttable>tbody>tr>.code>div>pre>code{border-bottom-left-radius:0;border-top-left-radius:0}.md-typeset .highlight+.result{border:.05rem solid var(--md-code-bg-color);border-bottom-left-radius:.1rem;border-bottom-right-radius:.1rem;border-top-width:.1rem;margin-top:-1.125em;overflow:visible;padding:0 1em}.md-typeset .highlight+.result:after{clear:both;content:"";display:block}@media screen and (max-width:44.984375em){.md-content__inner>.highlight{margin:1em -.8rem}.md-content__inner>.highlight>.filename,.md-content__inner>.highlight>.highlighttable>tbody>tr>.code>div>pre>code,.md-content__inner>.highlight>.highlighttable>tbody>tr>.filename span.filename,.md-content__inner>.highlight>.highlighttable>tbody>tr>.linenos,.md-content__inner>.highlight>pre>code{border-radius:0}.md-content__inner>.highlight+.result{border-left-width:0;border-radius:0;border-right-width:0;margin-left:-.8rem;margin-right:-.8rem}}.md-typeset .keys kbd:after,.md-typeset .keys kbd:before{-moz-osx-font-smoothing:initial;-webkit-font-smoothing:initial;color:inherit;margin:0;position:relative}.md-typeset .keys span{color:var(--md-default-fg-color--light);padding:0 .2em}.md-typeset .keys .key-alt:before,.md-typeset .keys .key-left-alt:before,.md-typeset .keys .key-right-alt:before{content:"⎇";padding-right:.4em}.md-typeset .keys .key-command:before,.md-typeset .keys .key-left-command:before,.md-typeset .keys .key-right-command:before{content:"⌘";padding-right:.4em}.md-typeset .keys .key-control:before,.md-typeset .keys .key-left-control:before,.md-typeset .keys .key-right-control:before{content:"⌃";padding-right:.4em}.md-typeset .keys .key-left-meta:before,.md-typeset .keys .key-meta:before,.md-typeset .keys .key-right-meta:before{content:"◆";padding-right:.4em}.md-typeset .keys .key-left-option:before,.md-typeset .keys .key-option:before,.md-typeset .keys .key-right-option:before{content:"⌥";padding-right:.4em}.md-typeset .keys .key-left-shift:before,.md-typeset .keys .key-right-shift:before,.md-typeset .keys .key-shift:before{content:"⇧";padding-right:.4em}.md-typeset .keys .key-left-super:before,.md-typeset .keys .key-right-super:before,.md-typeset .keys .key-super:before{content:"❖";padding-right:.4em}.md-typeset .keys .key-left-windows:before,.md-typeset .keys .key-right-windows:before,.md-typeset .keys .key-windows:before{content:"⊞";padding-right:.4em}.md-typeset .keys .key-arrow-down:before{content:"↓";padding-right:.4em}.md-typeset .keys .key-arrow-left:before{content:"←";padding-right:.4em}.md-typeset .keys .key-arrow-right:before{content:"→";padding-right:.4em}.md-typeset .keys .key-arrow-up:before{content:"↑";padding-right:.4em}.md-typeset .keys .key-backspace:before{content:"⌫";padding-right:.4em}.md-typeset .keys .key-backtab:before{content:"⇤";padding-right:.4em}.md-typeset .keys .key-caps-lock:before{content:"⇪";padding-right:.4em}.md-typeset .keys .key-clear:before{content:"⌧";padding-right:.4em}.md-typeset .keys .key-context-menu:before{content:"☰";padding-right:.4em}.md-typeset .keys .key-delete:before{content:"⌦";padding-right:.4em}.md-typeset .keys .key-eject:before{content:"⏏";padding-right:.4em}.md-typeset .keys .key-end:before{content:"⤓";padding-right:.4em}.md-typeset .keys .key-escape:before{content:"⎋";padding-right:.4em}.md-typeset .keys .key-home:before{content:"⤒";padding-right:.4em}.md-typeset .keys .key-insert:before{content:"⎀";padding-right:.4em}.md-typeset .keys .key-page-down:before{content:"⇟";padding-right:.4em}.md-typeset .keys .key-page-up:before{content:"⇞";padding-right:.4em}.md-typeset .keys .key-print-screen:before{content:"⎙";padding-right:.4em}.md-typeset .keys .key-tab:after{content:"⇥";padding-left:.4em}.md-typeset .keys .key-num-enter:after{content:"⌤";padding-left:.4em}.md-typeset .keys .key-enter:after{content:"⏎";padding-left:.4em}:root{--md-tabbed-icon--prev:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15.41 16.58 10.83 12l4.58-4.59L14 6l-6 6 6 6z"/></svg>');--md-tabbed-icon--next:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>')}.md-typeset .tabbed-set{border-radius:.1rem;display:flex;flex-flow:column wrap;margin:1em 0;position:relative}.md-typeset .tabbed-set>input{height:0;opacity:0;position:absolute;width:0}.md-typeset .tabbed-set>input:target{--md-scroll-offset:0.625em}.md-typeset .tabbed-set>input.focus-visible~.tabbed-labels:before{background-color:var(--md-accent-fg-color)}.md-typeset .tabbed-labels{-ms-overflow-style:none;box-shadow:0 -.05rem var(--md-default-fg-color--lightest) inset;display:flex;max-width:100%;overflow:auto;scrollbar-width:none}@media print{.md-typeset .tabbed-labels{display:contents}}@media screen{.js .md-typeset .tabbed-labels{position:relative}.js .md-typeset .tabbed-labels:before{background:var(--md-default-fg-color);bottom:0;content:"";display:block;height:2px;left:0;position:absolute;transform:translateX(var(--md-indicator-x));transition:width 225ms,background-color .25s,transform .25s;transition-timing-function:cubic-bezier(.4,0,.2,1);width:var(--md-indicator-width)}}.md-typeset .tabbed-labels::-webkit-scrollbar{display:none}.md-typeset .tabbed-labels>label{border-bottom:.1rem solid #0000;border-radius:.1rem .1rem 0 0;color:var(--md-default-fg-color--light);cursor:pointer;flex-shrink:0;font-size:.64rem;font-weight:700;padding:.78125em 1.25em .625em;scroll-margin-inline-start:1rem;transition:background-color .25s,color .25s;white-space:nowrap;width:auto}@media print{.md-typeset .tabbed-labels>label:first-child{order:1}.md-typeset .tabbed-labels>label:nth-child(2){order:2}.md-typeset .tabbed-labels>label:nth-child(3){order:3}.md-typeset .tabbed-labels>label:nth-child(4){order:4}.md-typeset .tabbed-labels>label:nth-child(5){order:5}.md-typeset .tabbed-labels>label:nth-child(6){order:6}.md-typeset .tabbed-labels>label:nth-child(7){order:7}.md-typeset .tabbed-labels>label:nth-child(8){order:8}.md-typeset .tabbed-labels>label:nth-child(9){order:9}.md-typeset .tabbed-labels>label:nth-child(10){order:10}.md-typeset .tabbed-labels>label:nth-child(11){order:11}.md-typeset .tabbed-labels>label:nth-child(12){order:12}.md-typeset .tabbed-labels>label:nth-child(13){order:13}.md-typeset .tabbed-labels>label:nth-child(14){order:14}.md-typeset .tabbed-labels>label:nth-child(15){order:15}.md-typeset .tabbed-labels>label:nth-child(16){order:16}.md-typeset .tabbed-labels>label:nth-child(17){order:17}.md-typeset .tabbed-labels>label:nth-child(18){order:18}.md-typeset .tabbed-labels>label:nth-child(19){order:19}.md-typeset .tabbed-labels>label:nth-child(20){order:20}}.md-typeset .tabbed-labels>label:hover{color:var(--md-default-fg-color)}.md-typeset .tabbed-labels>label>[href]:first-child{color:inherit}.md-typeset .tabbed-labels--linked>label{padding:0}.md-typeset .tabbed-labels--linked>label>a{display:block;padding:.78125em 1.25em .625em}.md-typeset .tabbed-content{width:100%}@media print{.md-typeset .tabbed-content{display:contents}}.md-typeset .tabbed-block{display:none}@media print{.md-typeset .tabbed-block{display:block}.md-typeset .tabbed-block:first-child{order:1}.md-typeset .tabbed-block:nth-child(2){order:2}.md-typeset .tabbed-block:nth-child(3){order:3}.md-typeset .tabbed-block:nth-child(4){order:4}.md-typeset .tabbed-block:nth-child(5){order:5}.md-typeset .tabbed-block:nth-child(6){order:6}.md-typeset .tabbed-block:nth-child(7){order:7}.md-typeset .tabbed-block:nth-child(8){order:8}.md-typeset .tabbed-block:nth-child(9){order:9}.md-typeset .tabbed-block:nth-child(10){order:10}.md-typeset .tabbed-block:nth-child(11){order:11}.md-typeset .tabbed-block:nth-child(12){order:12}.md-typeset .tabbed-block:nth-child(13){order:13}.md-typeset .tabbed-block:nth-child(14){order:14}.md-typeset .tabbed-block:nth-child(15){order:15}.md-typeset .tabbed-block:nth-child(16){order:16}.md-typeset .tabbed-block:nth-child(17){order:17}.md-typeset .tabbed-block:nth-child(18){order:18}.md-typeset .tabbed-block:nth-child(19){order:19}.md-typeset .tabbed-block:nth-child(20){order:20}}.md-typeset .tabbed-block>.highlight:first-child>pre,.md-typeset .tabbed-block>pre:first-child{margin:0}.md-typeset .tabbed-block>.highlight:first-child>pre>code,.md-typeset .tabbed-block>pre:first-child>code{border-top-left-radius:0;border-top-right-radius:0}.md-typeset .tabbed-block>.highlight:first-child>.filename{border-top-left-radius:0;border-top-right-radius:0;margin:0}.md-typeset .tabbed-block>.highlight:first-child>.highlighttable{margin:0}.md-typeset .tabbed-block>.highlight:first-child>.highlighttable>tbody>tr>.filename span.filename,.md-typeset .tabbed-block>.highlight:first-child>.highlighttable>tbody>tr>.linenos{border-top-left-radius:0;border-top-right-radius:0;margin:0}.md-typeset .tabbed-block>.highlight:first-child>.highlighttable>tbody>tr>.code>div>pre>code{border-top-left-radius:0;border-top-right-radius:0}.md-typeset .tabbed-block>.highlight:first-child+.result{margin-top:-.125em}.md-typeset .tabbed-block>.tabbed-set{margin:0}.md-typeset .tabbed-button{align-self:center;border-radius:100%;color:var(--md-default-fg-color--light);cursor:pointer;display:block;height:.9rem;margin-top:.1rem;pointer-events:auto;transition:background-color .25s;width:.9rem}.md-typeset .tabbed-button:hover{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-typeset .tabbed-button:after{background-color:currentcolor;content:"";display:block;height:100%;-webkit-mask-image:var(--md-tabbed-icon--prev);mask-image:var(--md-tabbed-icon--prev);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:background-color .25s,transform .25s;width:100%}.md-typeset .tabbed-control{background:linear-gradient(to right,var(--md-default-bg-color) 60%,#0000);display:flex;height:1.9rem;justify-content:start;pointer-events:none;position:absolute;transition:opacity 125ms;width:1.2rem}[dir=rtl] .md-typeset .tabbed-control{transform:rotate(180deg)}.md-typeset .tabbed-control[hidden]{opacity:0}.md-typeset .tabbed-control--next{background:linear-gradient(to left,var(--md-default-bg-color) 60%,#0000);justify-content:end;right:0}.md-typeset .tabbed-control--next .tabbed-button:after{-webkit-mask-image:var(--md-tabbed-icon--next);mask-image:var(--md-tabbed-icon--next)}@media screen and (max-width:44.984375em){[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels{padding-left:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels{padding-right:.8rem}.md-content__inner>.tabbed-set .tabbed-labels{margin:0 -.8rem;max-width:100vw;scroll-padding-inline-start:.8rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels:after{padding-right:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels:after{padding-left:.8rem}.md-content__inner>.tabbed-set .tabbed-labels:after{content:""}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{padding-left:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{padding-right:.8rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{margin-left:-.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{margin-right:-.8rem}.md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{width:2rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{padding-right:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{padding-left:.8rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{margin-right:-.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{margin-left:-.8rem}.md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{width:2rem}}@media screen{.md-typeset .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9){color:var(--md-default-fg-color)}.md-typeset .no-js .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.md-typeset .no-js .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.md-typeset .no-js .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.md-typeset .no-js .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.md-typeset .no-js .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.md-typeset .no-js .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.md-typeset .no-js .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.md-typeset .no-js .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.md-typeset .no-js .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.md-typeset .no-js .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.md-typeset .no-js .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.md-typeset .no-js .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.md-typeset .no-js .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.md-typeset .no-js .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.md-typeset .no-js .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.md-typeset .no-js .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.md-typeset .no-js .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.md-typeset .no-js .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.md-typeset .no-js .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.md-typeset .no-js .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9),.md-typeset [role=dialog] .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.md-typeset [role=dialog] .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.md-typeset [role=dialog] .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.md-typeset [role=dialog] .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.md-typeset [role=dialog] .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.md-typeset [role=dialog] .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.md-typeset [role=dialog] .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.md-typeset [role=dialog] .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.md-typeset [role=dialog] .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.md-typeset [role=dialog] .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.md-typeset [role=dialog] .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.md-typeset [role=dialog] .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.md-typeset [role=dialog] .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.md-typeset [role=dialog] .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.md-typeset [role=dialog] .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.md-typeset [role=dialog] .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.md-typeset [role=dialog] .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.md-typeset [role=dialog] .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.md-typeset [role=dialog] .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.md-typeset [role=dialog] .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9),.no-js .md-typeset .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.no-js .md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.no-js .md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.no-js .md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.no-js .md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.no-js .md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.no-js .md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.no-js .md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.no-js .md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.no-js .md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.no-js .md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.no-js .md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.no-js .md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.no-js .md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.no-js .md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.no-js .md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.no-js .md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.no-js .md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.no-js .md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.no-js .md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9),[role=dialog] .md-typeset .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,[role=dialog] .md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),[role=dialog] .md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),[role=dialog] .md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),[role=dialog] .md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),[role=dialog] .md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),[role=dialog] .md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),[role=dialog] .md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),[role=dialog] .md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),[role=dialog] .md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),[role=dialog] .md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),[role=dialog] .md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),[role=dialog] .md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),[role=dialog] .md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),[role=dialog] .md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),[role=dialog] .md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),[role=dialog] .md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),[role=dialog] .md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),[role=dialog] .md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),[role=dialog] .md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9){border-color:var(--md-default-fg-color)}}.md-typeset .tabbed-set>input:first-child.focus-visible~.tabbed-labels>:first-child,.md-typeset .tabbed-set>input:nth-child(10).focus-visible~.tabbed-labels>:nth-child(10),.md-typeset .tabbed-set>input:nth-child(11).focus-visible~.tabbed-labels>:nth-child(11),.md-typeset .tabbed-set>input:nth-child(12).focus-visible~.tabbed-labels>:nth-child(12),.md-typeset .tabbed-set>input:nth-child(13).focus-visible~.tabbed-labels>:nth-child(13),.md-typeset .tabbed-set>input:nth-child(14).focus-visible~.tabbed-labels>:nth-child(14),.md-typeset .tabbed-set>input:nth-child(15).focus-visible~.tabbed-labels>:nth-child(15),.md-typeset .tabbed-set>input:nth-child(16).focus-visible~.tabbed-labels>:nth-child(16),.md-typeset .tabbed-set>input:nth-child(17).focus-visible~.tabbed-labels>:nth-child(17),.md-typeset .tabbed-set>input:nth-child(18).focus-visible~.tabbed-labels>:nth-child(18),.md-typeset .tabbed-set>input:nth-child(19).focus-visible~.tabbed-labels>:nth-child(19),.md-typeset .tabbed-set>input:nth-child(2).focus-visible~.tabbed-labels>:nth-child(2),.md-typeset .tabbed-set>input:nth-child(20).focus-visible~.tabbed-labels>:nth-child(20),.md-typeset .tabbed-set>input:nth-child(3).focus-visible~.tabbed-labels>:nth-child(3),.md-typeset .tabbed-set>input:nth-child(4).focus-visible~.tabbed-labels>:nth-child(4),.md-typeset .tabbed-set>input:nth-child(5).focus-visible~.tabbed-labels>:nth-child(5),.md-typeset .tabbed-set>input:nth-child(6).focus-visible~.tabbed-labels>:nth-child(6),.md-typeset .tabbed-set>input:nth-child(7).focus-visible~.tabbed-labels>:nth-child(7),.md-typeset .tabbed-set>input:nth-child(8).focus-visible~.tabbed-labels>:nth-child(8),.md-typeset .tabbed-set>input:nth-child(9).focus-visible~.tabbed-labels>:nth-child(9){color:var(--md-accent-fg-color)}.md-typeset .tabbed-set>input:first-child:checked~.tabbed-content>:first-child,.md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-content>:nth-child(10),.md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-content>:nth-child(11),.md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-content>:nth-child(12),.md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-content>:nth-child(13),.md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-content>:nth-child(14),.md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-content>:nth-child(15),.md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-content>:nth-child(16),.md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-content>:nth-child(17),.md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-content>:nth-child(18),.md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-content>:nth-child(19),.md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-content>:nth-child(2),.md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-content>:nth-child(20),.md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-content>:nth-child(3),.md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-content>:nth-child(4),.md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-content>:nth-child(5),.md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-content>:nth-child(6),.md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-content>:nth-child(7),.md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-content>:nth-child(8),.md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-content>:nth-child(9){display:block}:root{--md-tasklist-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12m16.28-2.72a.75.75 0 0 0-.018-1.042.75.75 0 0 0-1.042-.018l-5.97 5.97-2.47-2.47a.75.75 0 0 0-1.042.018.75.75 0 0 0-.018 1.042l3 3a.75.75 0 0 0 1.06 0Z"/></svg>');--md-tasklist-icon--checked:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12m16.28-2.72a.75.75 0 0 0-.018-1.042.75.75 0 0 0-1.042-.018l-5.97 5.97-2.47-2.47a.75.75 0 0 0-1.042.018.75.75 0 0 0-.018 1.042l3 3a.75.75 0 0 0 1.06 0Z"/></svg>')}.md-typeset .task-list-item{list-style-type:none;position:relative}[dir=ltr] .md-typeset .task-list-item [type=checkbox]{left:-2em}[dir=rtl] .md-typeset .task-list-item [type=checkbox]{right:-2em}.md-typeset .task-list-item [type=checkbox]{position:absolute;top:.45em}.md-typeset .task-list-control [type=checkbox]{opacity:0;z-index:-1}[dir=ltr] .md-typeset .task-list-indicator:before{left:-1.5em}[dir=rtl] .md-typeset .task-list-indicator:before{right:-1.5em}.md-typeset .task-list-indicator:before{background-color:var(--md-default-fg-color--lightest);content:"";height:1.25em;-webkit-mask-image:var(--md-tasklist-icon);mask-image:var(--md-tasklist-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:.15em;width:1.25em}.md-typeset [type=checkbox]:checked+.task-list-indicator:before{background-color:#00e676;-webkit-mask-image:var(--md-tasklist-icon--checked);mask-image:var(--md-tasklist-icon--checked)}@media print{.giscus,[id=__comments]{display:none}}:root>*{--md-mermaid-font-family:var(--md-text-font-family),sans-serif;--md-mermaid-edge-color:var(--md-code-fg-color);--md-mermaid-node-bg-color:var(--md-accent-fg-color--transparent);--md-mermaid-node-fg-color:var(--md-accent-fg-color);--md-mermaid-label-bg-color:var(--md-default-bg-color);--md-mermaid-label-fg-color:var(--md-code-fg-color);--md-mermaid-sequence-actor-bg-color:var(--md-mermaid-label-bg-color);--md-mermaid-sequence-actor-fg-color:var(--md-mermaid-label-fg-color);--md-mermaid-sequence-actor-border-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-actor-line-color:var(--md-default-fg-color--lighter);--md-mermaid-sequence-actorman-bg-color:var(--md-mermaid-label-bg-color);--md-mermaid-sequence-actorman-line-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-box-bg-color:var(--md-mermaid-node-bg-color);--md-mermaid-sequence-box-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-label-bg-color:var(--md-mermaid-node-bg-color);--md-mermaid-sequence-label-fg-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-loop-bg-color:var(--md-mermaid-node-bg-color);--md-mermaid-sequence-loop-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-loop-border-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-message-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-message-line-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-note-bg-color:var(--md-mermaid-label-bg-color);--md-mermaid-sequence-note-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-note-border-color:var(--md-mermaid-label-fg-color);--md-mermaid-sequence-number-bg-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-number-fg-color:var(--md-accent-bg-color)}.mermaid{line-height:normal;margin:1em 0}.md-typeset .grid{grid-gap:.4rem;display:grid;grid-template-columns:repeat(auto-fit,minmax(min(100%,16rem),1fr));margin:1em 0}.md-typeset .grid.cards>ol,.md-typeset .grid.cards>ul{display:contents}.md-typeset .grid.cards>ol>li,.md-typeset .grid.cards>ul>li,.md-typeset .grid>.card{border:.05rem solid var(--md-default-fg-color--lightest);border-radius:.1rem;display:block;margin:0;padding:.8rem;transition:border .25s,box-shadow .25s}.md-typeset .grid.cards>ol>li:focus-within,.md-typeset .grid.cards>ol>li:hover,.md-typeset .grid.cards>ul>li:focus-within,.md-typeset .grid.cards>ul>li:hover,.md-typeset .grid>.card:focus-within,.md-typeset .grid>.card:hover{border-color:#0000;box-shadow:var(--md-shadow-z2)}.md-typeset .grid.cards>ol>li>hr,.md-typeset .grid.cards>ul>li>hr,.md-typeset .grid>.card>hr{margin-bottom:1em;margin-top:1em}.md-typeset .grid.cards>ol>li>:first-child,.md-typeset .grid.cards>ul>li>:first-child,.md-typeset .grid>.card>:first-child{margin-top:0}.md-typeset .grid.cards>ol>li>:last-child,.md-typeset .grid.cards>ul>li>:last-child,.md-typeset .grid>.card>:last-child{margin-bottom:0}.md-typeset .grid>*,.md-typeset .grid>.admonition,.md-typeset .grid>.highlight>*,.md-typeset .grid>.highlighttable,.md-typeset .grid>.md-typeset details,.md-typeset .grid>details,.md-typeset .grid>pre{margin-bottom:0;margin-top:0}.md-typeset .grid>.highlight>pre:only-child,.md-typeset .grid>.highlight>pre>code,.md-typeset .grid>.highlighttable,.md-typeset .grid>.highlighttable>tbody,.md-typeset .grid>.highlighttable>tbody>tr,.md-typeset .grid>.highlighttable>tbody>tr>.code,.md-typeset .grid>.highlighttable>tbody>tr>.code>.highlight,.md-typeset .grid>.highlighttable>tbody>tr>.code>.highlight>pre,.md-typeset .grid>.highlighttable>tbody>tr>.code>.highlight>pre>code{height:100%}.md-typeset .grid>.tabbed-set{margin-bottom:0;margin-top:0}@media screen and (min-width:45em){[dir=ltr] .md-typeset .inline{float:left}[dir=rtl] .md-typeset .inline{float:right}[dir=ltr] .md-typeset .inline{margin-right:.8rem}[dir=rtl] .md-typeset .inline{margin-left:.8rem}.md-typeset .inline{margin-bottom:.8rem;margin-top:0;width:11.7rem}[dir=ltr] .md-typeset .inline.end{float:right}[dir=rtl] .md-typeset .inline.end{float:left}[dir=ltr] .md-typeset .inline.end{margin-left:.8rem;margin-right:0}[dir=rtl] .md-typeset .inline.end{margin-left:0;margin-right:.8rem}}
</document_content>
</document>

<document index="14">
<source>docs/assets/stylesheets/palette.ab4e12ef.min.css</source>
<document_content>
@media screen{[data-md-color-scheme=slate]{--md-default-fg-color:hsla(var(--md-hue),15%,90%,0.82);--md-default-fg-color--light:hsla(var(--md-hue),15%,90%,0.56);--md-default-fg-color--lighter:hsla(var(--md-hue),15%,90%,0.32);--md-default-fg-color--lightest:hsla(var(--md-hue),15%,90%,0.12);--md-default-bg-color:hsla(var(--md-hue),15%,14%,1);--md-default-bg-color--light:hsla(var(--md-hue),15%,14%,0.54);--md-default-bg-color--lighter:hsla(var(--md-hue),15%,14%,0.26);--md-default-bg-color--lightest:hsla(var(--md-hue),15%,14%,0.07);--md-code-fg-color:hsla(var(--md-hue),18%,86%,0.82);--md-code-bg-color:hsla(var(--md-hue),15%,18%,1);--md-code-bg-color--light:hsla(var(--md-hue),15%,18%,0.9);--md-code-bg-color--lighter:hsla(var(--md-hue),15%,18%,0.54);--md-code-hl-color:#2977ff;--md-code-hl-color--light:#2977ff1a;--md-code-hl-number-color:#e6695b;--md-code-hl-special-color:#f06090;--md-code-hl-function-color:#c973d9;--md-code-hl-constant-color:#9383e2;--md-code-hl-keyword-color:#6791e0;--md-code-hl-string-color:#2fb170;--md-code-hl-name-color:var(--md-code-fg-color);--md-code-hl-operator-color:var(--md-default-fg-color--light);--md-code-hl-punctuation-color:var(--md-default-fg-color--light);--md-code-hl-comment-color:var(--md-default-fg-color--light);--md-code-hl-generic-color:var(--md-default-fg-color--light);--md-code-hl-variable-color:var(--md-default-fg-color--light);--md-typeset-color:var(--md-default-fg-color);--md-typeset-a-color:var(--md-primary-fg-color);--md-typeset-kbd-color:hsla(var(--md-hue),15%,90%,0.12);--md-typeset-kbd-accent-color:hsla(var(--md-hue),15%,90%,0.2);--md-typeset-kbd-border-color:hsla(var(--md-hue),15%,14%,1);--md-typeset-mark-color:#4287ff4d;--md-typeset-table-color:hsla(var(--md-hue),15%,95%,0.12);--md-typeset-table-color--light:hsla(var(--md-hue),15%,95%,0.035);--md-admonition-fg-color:var(--md-default-fg-color);--md-admonition-bg-color:var(--md-default-bg-color);--md-footer-bg-color:hsla(var(--md-hue),15%,10%,0.87);--md-footer-bg-color--dark:hsla(var(--md-hue),15%,8%,1);--md-shadow-z1:0 0.2rem 0.5rem #0000000d,0 0 0.05rem #0000001a;--md-shadow-z2:0 0.2rem 0.5rem #00000040,0 0 0.05rem #00000040;--md-shadow-z3:0 0.2rem 0.5rem #0006,0 0 0.05rem #00000059;color-scheme:dark}[data-md-color-scheme=slate] img[src$="#gh-light-mode-only"],[data-md-color-scheme=slate] img[src$="#only-light"]{display:none}[data-md-color-scheme=slate][data-md-color-primary=pink]{--md-typeset-a-color:#ed5487}[data-md-color-scheme=slate][data-md-color-primary=purple]{--md-typeset-a-color:#c46fd3}[data-md-color-scheme=slate][data-md-color-primary=deep-purple]{--md-typeset-a-color:#a47bea}[data-md-color-scheme=slate][data-md-color-primary=indigo]{--md-typeset-a-color:#5488e8}[data-md-color-scheme=slate][data-md-color-primary=teal]{--md-typeset-a-color:#00ccb8}[data-md-color-scheme=slate][data-md-color-primary=green]{--md-typeset-a-color:#71c174}[data-md-color-scheme=slate][data-md-color-primary=deep-orange]{--md-typeset-a-color:#ff764d}[data-md-color-scheme=slate][data-md-color-primary=brown]{--md-typeset-a-color:#c1775c}[data-md-color-scheme=slate][data-md-color-primary=black],[data-md-color-scheme=slate][data-md-color-primary=blue-grey],[data-md-color-scheme=slate][data-md-color-primary=grey],[data-md-color-scheme=slate][data-md-color-primary=white]{--md-typeset-a-color:#5e8bde}[data-md-color-switching] *,[data-md-color-switching] :after,[data-md-color-switching] :before{transition-duration:0ms!important}}[data-md-color-accent=red]{--md-accent-fg-color:#ff1947;--md-accent-fg-color--transparent:#ff19471a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=pink]{--md-accent-fg-color:#f50056;--md-accent-fg-color--transparent:#f500561a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=purple]{--md-accent-fg-color:#df41fb;--md-accent-fg-color--transparent:#df41fb1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=deep-purple]{--md-accent-fg-color:#7c4dff;--md-accent-fg-color--transparent:#7c4dff1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=indigo]{--md-accent-fg-color:#526cfe;--md-accent-fg-color--transparent:#526cfe1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=blue]{--md-accent-fg-color:#4287ff;--md-accent-fg-color--transparent:#4287ff1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=light-blue]{--md-accent-fg-color:#0091eb;--md-accent-fg-color--transparent:#0091eb1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=cyan]{--md-accent-fg-color:#00bad6;--md-accent-fg-color--transparent:#00bad61a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=teal]{--md-accent-fg-color:#00bda4;--md-accent-fg-color--transparent:#00bda41a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=green]{--md-accent-fg-color:#00c753;--md-accent-fg-color--transparent:#00c7531a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=light-green]{--md-accent-fg-color:#63de17;--md-accent-fg-color--transparent:#63de171a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=lime]{--md-accent-fg-color:#b0eb00;--md-accent-fg-color--transparent:#b0eb001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=yellow]{--md-accent-fg-color:#ffd500;--md-accent-fg-color--transparent:#ffd5001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=amber]{--md-accent-fg-color:#fa0;--md-accent-fg-color--transparent:#ffaa001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=orange]{--md-accent-fg-color:#ff9100;--md-accent-fg-color--transparent:#ff91001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=deep-orange]{--md-accent-fg-color:#ff6e42;--md-accent-fg-color--transparent:#ff6e421a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-primary=red]{--md-primary-fg-color:#ef5552;--md-primary-fg-color--light:#e57171;--md-primary-fg-color--dark:#e53734;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=pink]{--md-primary-fg-color:#e92063;--md-primary-fg-color--light:#ec417a;--md-primary-fg-color--dark:#c3185d;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=purple]{--md-primary-fg-color:#ab47bd;--md-primary-fg-color--light:#bb69c9;--md-primary-fg-color--dark:#8c24a8;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=deep-purple]{--md-primary-fg-color:#7e56c2;--md-primary-fg-color--light:#9574cd;--md-primary-fg-color--dark:#673ab6;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=indigo]{--md-primary-fg-color:#4051b5;--md-primary-fg-color--light:#5d6cc0;--md-primary-fg-color--dark:#303fa1;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=blue]{--md-primary-fg-color:#2094f3;--md-primary-fg-color--light:#42a5f5;--md-primary-fg-color--dark:#1975d2;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=light-blue]{--md-primary-fg-color:#02a6f2;--md-primary-fg-color--light:#28b5f6;--md-primary-fg-color--dark:#0287cf;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=cyan]{--md-primary-fg-color:#00bdd6;--md-primary-fg-color--light:#25c5da;--md-primary-fg-color--dark:#0097a8;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=teal]{--md-primary-fg-color:#009485;--md-primary-fg-color--light:#26a699;--md-primary-fg-color--dark:#007a6c;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=green]{--md-primary-fg-color:#4cae4f;--md-primary-fg-color--light:#68bb6c;--md-primary-fg-color--dark:#398e3d;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=light-green]{--md-primary-fg-color:#8bc34b;--md-primary-fg-color--light:#9ccc66;--md-primary-fg-color--dark:#689f38;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=lime]{--md-primary-fg-color:#cbdc38;--md-primary-fg-color--light:#d3e156;--md-primary-fg-color--dark:#b0b52c;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=yellow]{--md-primary-fg-color:#ffec3d;--md-primary-fg-color--light:#ffee57;--md-primary-fg-color--dark:#fbc02d;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=amber]{--md-primary-fg-color:#ffc105;--md-primary-fg-color--light:#ffc929;--md-primary-fg-color--dark:#ffa200;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=orange]{--md-primary-fg-color:#ffa724;--md-primary-fg-color--light:#ffa724;--md-primary-fg-color--dark:#fa8900;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=deep-orange]{--md-primary-fg-color:#ff6e42;--md-primary-fg-color--light:#ff8a66;--md-primary-fg-color--dark:#f4511f;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=brown]{--md-primary-fg-color:#795649;--md-primary-fg-color--light:#8d6e62;--md-primary-fg-color--dark:#5d4037;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=grey]{--md-primary-fg-color:#757575;--md-primary-fg-color--light:#9e9e9e;--md-primary-fg-color--dark:#616161;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3;--md-typeset-a-color:#4051b5}[data-md-color-primary=blue-grey]{--md-primary-fg-color:#546d78;--md-primary-fg-color--light:#607c8a;--md-primary-fg-color--dark:#455a63;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3;--md-typeset-a-color:#4051b5}[data-md-color-primary=light-green]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#72ad2e}[data-md-color-primary=lime]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#8b990a}[data-md-color-primary=yellow]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#b8a500}[data-md-color-primary=amber]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#d19d00}[data-md-color-primary=orange]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#e68a00}[data-md-color-primary=white]{--md-primary-fg-color:hsla(var(--md-hue),0%,100%,1);--md-primary-fg-color--light:hsla(var(--md-hue),0%,100%,0.7);--md-primary-fg-color--dark:hsla(var(--md-hue),0%,0%,0.07);--md-primary-bg-color:hsla(var(--md-hue),0%,0%,0.87);--md-primary-bg-color--light:hsla(var(--md-hue),0%,0%,0.54);--md-typeset-a-color:#4051b5}[data-md-color-primary=white] .md-button{color:var(--md-typeset-a-color)}[data-md-color-primary=white] .md-button--primary{background-color:var(--md-typeset-a-color);border-color:var(--md-typeset-a-color);color:hsla(var(--md-hue),0%,100%,1)}@media screen and (min-width:60em){[data-md-color-primary=white] .md-search__form{background-color:hsla(var(--md-hue),0%,0%,.07)}[data-md-color-primary=white] .md-search__form:hover{background-color:hsla(var(--md-hue),0%,0%,.32)}[data-md-color-primary=white] .md-search__input+.md-search__icon{color:hsla(var(--md-hue),0%,0%,.87)}}@media screen and (min-width:76.25em){[data-md-color-primary=white] .md-tabs{border-bottom:.05rem solid #00000012}}[data-md-color-primary=black]{--md-primary-fg-color:hsla(var(--md-hue),15%,9%,1);--md-primary-fg-color--light:hsla(var(--md-hue),15%,9%,0.54);--md-primary-fg-color--dark:hsla(var(--md-hue),15%,9%,1);--md-primary-bg-color:hsla(var(--md-hue),15%,100%,1);--md-primary-bg-color--light:hsla(var(--md-hue),15%,100%,0.7);--md-typeset-a-color:#4051b5}[data-md-color-primary=black] .md-button{color:var(--md-typeset-a-color)}[data-md-color-primary=black] .md-button--primary{background-color:var(--md-typeset-a-color);border-color:var(--md-typeset-a-color);color:hsla(var(--md-hue),0%,100%,1)}[data-md-color-primary=black] .md-header{background-color:hsla(var(--md-hue),15%,9%,1)}@media screen and (max-width:59.984375em){[data-md-color-primary=black] .md-nav__source{background-color:hsla(var(--md-hue),15%,11%,.87)}}@media screen and (max-width:76.234375em){html [data-md-color-primary=black] .md-nav--primary .md-nav__title[for=__drawer]{background-color:hsla(var(--md-hue),15%,9%,1)}}@media screen and (min-width:76.25em){[data-md-color-primary=black] .md-tabs{background-color:hsla(var(--md-hue),15%,9%,1)}}
</document_content>
</document>

<document index="15">
<source>docs/index.html</source>
<document_content>

<!doctype html>
<html lang="en" class="no-js">
  <head>
    
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width,initial-scale=1">
      
        <meta name="description" content="A plugin that captures HTML output and creates cousin Markdown files">
      
      
        <meta name="author" content="Vexy">
      
      
        <link rel="canonical" href="https://vexyart.github.io/vexy-mkdocs-output-as-input/">
      
      
      
      
        
      
      
      <link rel="icon" href="assets/images/favicon.png">
      <meta name="generator" content="mkdocs-1.6.1, mkdocs-material-9.6.15+insiders-4.53.16">
    
    
      
        <title>MkDocs Output as Input Plugin - MkDocs Output as Input Plugin</title>
      
    
    
      <link rel="stylesheet" href="assets/stylesheets/main.8cce3a28.min.css">
      
        
        <link rel="stylesheet" href="assets/stylesheets/palette.ab4e12ef.min.css">
      
      


    
    
      
    
    
      
        
        
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,700,700i%7CRoboto+Mono:400,400i,700,700i&display=fallback">
        <style>:root{--md-text-font:"Roboto";--md-code-font:"Roboto Mono"}</style>
      
    
    
    <script>__md_scope=new URL(".",location),__md_hash=e=>[...e].reduce(((e,_)=>(e<<5)-e+_.charCodeAt(0)),0),__md_get=(e,_=localStorage,t=__md_scope)=>JSON.parse(_.getItem(t.pathname+"."+e)),__md_set=(e,_,t=localStorage,a=__md_scope)=>{try{t.setItem(a.pathname+"."+e,JSON.stringify(_))}catch(e){}}</script>
    
      

    
    
  </head>
  
  
    
    
      
    
    
    
    
    <body dir="ltr" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo">
  
    
    <input class="md-toggle" data-md-toggle="drawer" type="checkbox" id="__drawer" autocomplete="off">
    <input class="md-toggle" data-md-toggle="search" type="checkbox" id="__search" autocomplete="off">
    <label class="md-overlay" for="__drawer"></label>
    <div data-md-component="skip">
      
    </div>
    <div data-md-component="announce">
      
    </div>
    
    
      

  

<header class="md-header md-header--shadow" data-md-component="header">
  <nav class="md-header__inner md-grid" aria-label="Header">
    <a href="." title="MkDocs Output as Input Plugin" class="md-header__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    <label class="md-header__button md-icon" for="__drawer">
      
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 6h18v2H3zm0 5h18v2H3zm0 5h18v2H3z"/></svg>
    </label>
    <div class="md-header__title" data-md-component="header-title">
      <div class="md-header__ellipsis">
        <div class="md-header__topic">
          <span class="md-ellipsis">
            MkDocs Output as Input Plugin
          </span>
        </div>
        <div class="md-header__topic" data-md-component="header-topic">
          <span class="md-ellipsis">
            
              MkDocs Output as Input Plugin
            
          </span>
        </div>
      </div>
    </div>
    
      
        <form class="md-header__option" data-md-component="palette">
  
    
    
    
    <input class="md-option" data-md-color-media="" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo"  aria-hidden="true"  type="radio" name="__palette" id="__palette_0">
    
  
</form>
      
    
    
      <script>var palette=__md_get("__palette");if(palette&&palette.color){if("(prefers-color-scheme)"===palette.color.media){var media=matchMedia("(prefers-color-scheme: light)"),input=document.querySelector(media.matches?"[data-md-color-media='(prefers-color-scheme: light)']":"[data-md-color-media='(prefers-color-scheme: dark)']");palette.color.media=input.getAttribute("data-md-color-media"),palette.color.scheme=input.getAttribute("data-md-color-scheme"),palette.color.primary=input.getAttribute("data-md-color-primary"),palette.color.accent=input.getAttribute("data-md-color-accent")}for(var[key,value]of Object.entries(palette.color))document.body.setAttribute("data-md-color-"+key,value)}</script>
    
    
    
      
      
        <label class="md-header__button md-icon" for="__search">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        </label>
        <div class="md-search" data-md-component="search" role="dialog">
  <label class="md-search__overlay" for="__search"></label>
  <div class="md-search__inner" role="search">
    <form class="md-search__form" name="search">
      <input type="text" class="md-search__input" name="query" aria-label="Search" placeholder="Search" autocapitalize="off" autocorrect="off" autocomplete="off" spellcheck="false" data-md-component="search-query" required>
      <label class="md-search__icon md-icon" for="__search">
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20 11v2H8l5.5 5.5-1.42 1.42L4.16 12l7.92-7.92L13.5 5.5 8 11z"/></svg>
      </label>
      <nav class="md-search__options" aria-label="Search">
        
        <button type="reset" class="md-search__icon md-icon" title="Clear" aria-label="Clear" tabindex="-1">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>
        </button>
      </nav>
      
    </form>
    <div class="md-search__output">
      <div class="md-search__scrollwrap" tabindex="0" data-md-scrollfix>
        <div class="md-search-result" data-md-component="search-result">
          <div class="md-search-result__meta">
            Initializing search
          </div>
          <ol class="md-search-result__list" role="presentation"></ol>
        </div>
      </div>
    </div>
  </div>
</div>
      
    
    
  </nav>
  
</header>
    
    <div class="md-container" data-md-component="container">
      
      
        
          
        
      
      <main class="md-main" data-md-component="main">
        <div class="md-main__inner md-grid">
          
            
              
              <div class="md-sidebar md-sidebar--primary" data-md-component="sidebar" data-md-type="navigation" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    



<nav class="md-nav md-nav--primary" aria-label="Navigation" data-md-level="0">
  <label class="md-nav__title" for="__drawer">
    <a href="." title="MkDocs Output as Input Plugin" class="md-nav__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    MkDocs Output as Input Plugin
  </label>
  
  <ul class="md-nav__list" data-md-scrollfix>
    
      
      
  
  
    
  
  
  
    <li class="md-nav__item md-nav__item--active">
      
      <input class="md-nav__toggle md-toggle" type="checkbox" id="__toc">
      
      
      
      <a href="." class="md-nav__link md-nav__link--active">
        
  
  
  <span class="md-ellipsis">
    
  
    Home
  

    
  </span>
  
  

      </a>
      
    </li>
  

    
  </ul>
</nav>
                  </div>
                </div>
              </div>
            
            
              
              <div class="md-sidebar md-sidebar--secondary" data-md-component="sidebar" data-md-type="toc" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    

<nav class="md-nav md-nav--secondary" aria-label="Table of contents">
  
  
  
  
</nav>
                  </div>
                </div>
              </div>
            
          
          
            <div class="md-content" data-md-component="content">
              
              <article class="md-content__inner md-typeset">
                
                  



<div class="md-content__inner md-typeset">
<h1 class="custom-heading" id="vexy-mkdocs-output-as-input">vexy-mkdocs-output-as-input<a class="headerlink" href="#vexy-mkdocs-output-as-input" title="Permanent link">¶</a></h1>
<p><a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="PyPI version" src="https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg"/></a>
<a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml"><img alt="CI" src="https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg"/></a>
<a href="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input"><img alt="codecov" src="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg"/></a>
<a href="https://opensource.org/licenses/MIT"><img alt="License: MIT" src="https://img.shields.io/badge/License-MIT-yellow.svg"/></a>
<a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="Python versions" src="https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg"/></a></p>
<p>A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.</p>
<h2 class="custom-heading" id="features">Features<a class="headerlink" href="#features" title="Permanent link">¶</a></h2>
<p>This plugin enables powerful post-processing workflows by:</p>
<ol>
<li>✅ Preserving your original Markdown structure and frontmatter</li>
<li>✅ Capturing the fully-rendered HTML output from MkDocs</li>
<li>✅ Creating new Markdown files that combine original metadata with processed HTML</li>
<li>✅ Enabling further processing by other static site generators</li>
</ol>
<h2 class="custom-heading" id="installation">Installation<a class="headerlink" href="#installation" title="Permanent link">¶</a></h2>
<p>Install from PyPI:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-0-1" id="__codelineno-0-1" name="__codelineno-0-1"></a>uv<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>--system<span class="w"> </span>--upgrade<span class="w"> </span>vexy-mkdocs-output-as-input
</code></pre></div>
<p>Or install from source:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-1-1" id="__codelineno-1-1" name="__codelineno-1-1"></a>pip<span class="w"> </span>install<span class="w"> </span>git+https://github.com/vexyart/vexy-mkdocs-output-as-input
</code></pre></div>
<h2 class="custom-heading" id="quick-start">Quick Start<a class="headerlink" href="#quick-start" title="Permanent link">¶</a></h2>
<p>Add the plugin to your <code>mkdocs.yml</code>:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-2-1" id="__codelineno-2-1" name="__codelineno-2-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-2-2" id="__codelineno-2-2" name="__codelineno-2-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span><span class="w">  </span><span class="c1"># Other plugins</span>
<a href="#__codelineno-2-3" id="__codelineno-2-3" name="__codelineno-2-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<p>Build your site:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-3-1" id="__codelineno-3-1" name="__codelineno-3-1"></a>mkdocs<span class="w"> </span>build
</code></pre></div>
<p>Find your processed files in the <code>stage/</code> directory (relative to your MkDocs project root).</p>
<h2 class="custom-heading" id="configuration">Configuration<a class="headerlink" href="#configuration" title="Permanent link">¶</a></h2>
<p>All configuration options with their defaults:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-4-1" id="__codelineno-4-1" name="__codelineno-4-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-4-2" id="__codelineno-4-2" name="__codelineno-4-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-4-3" id="__codelineno-4-3" name="__codelineno-4-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">stage</span><span class="w">          </span><span class="c1"># Output directory name (default: 'stage')</span>
<a href="#__codelineno-4-4" id="__codelineno-4-4" name="__codelineno-4-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span><span class="w">        </span><span class="c1"># HTML element to extract (default: 'main')</span>
<a href="#__codelineno-4-5" id="__codelineno-4-5" name="__codelineno-4-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span><span class="w">       </span><span class="c1"># Tag to use in output (default: 'article')</span>
<a href="#__codelineno-4-6" id="__codelineno-4-6" name="__codelineno-4-6"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">false</span><span class="w">            </span><span class="c1"># Enable verbose logging (default: false)</span>
</code></pre></div>
<h3 class="custom-heading" id="options-explained">Options Explained<a class="headerlink" href="#options-explained" title="Permanent link">¶</a></h3>
<table>
<thead>
<tr>
<th>Option</th>
<th>Type</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>stage_dir</code></td>
<td>string</td>
<td><code>"stage"</code></td>
<td>Directory name for output files (relative to project root)</td>
</tr>
<tr>
<td><code>html_element</code></td>
<td>string</td>
<td><code>"main"</code></td>
<td>CSS selector for the HTML element to extract</td>
</tr>
<tr>
<td><code>target_tag</code></td>
<td>string</td>
<td><code>"article"</code></td>
<td>HTML tag to use in the output (replaces extracted element's tag)</td>
</tr>
<tr>
<td><code>verbose</code></td>
<td>boolean</td>
<td><code>false</code></td>
<td>Enable detailed logging for debugging</td>
</tr>
</tbody>
</table>
<h2 class="custom-heading" id="how-it-works">How It Works<a class="headerlink" href="#how-it-works" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="input-process-output">Input → Process → Output<a class="headerlink" href="#input-process-output" title="Permanent link">¶</a></h3>
<ol>
<li>
<p><strong>Input</strong>: Your source Markdown with frontmatter
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-5-1" id="__codelineno-5-1" name="__codelineno-5-1"></a>---
<a href="#__codelineno-5-2" id="__codelineno-5-2" name="__codelineno-5-2"></a>title: My Page
<a href="#__codelineno-5-3" id="__codelineno-5-3" name="__codelineno-5-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-5-4" id="__codelineno-5-4" name="__codelineno-5-4"></a><span class="gu">---</span>
<a href="#__codelineno-5-5" id="__codelineno-5-5" name="__codelineno-5-5"></a>
<a href="#__codelineno-5-6" id="__codelineno-5-6" name="__codelineno-5-6"></a><span class="gh"># My Page</span>
<a href="#__codelineno-5-7" id="__codelineno-5-7" name="__codelineno-5-7"></a>
<a href="#__codelineno-5-8" id="__codelineno-5-8" name="__codelineno-5-8"></a>This is my content with <span class="gs">**markdown**</span>.
</code></pre></div></p>
</li>
<li>
<p><strong>MkDocs Processing</strong>: Renders to HTML as usual
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-6-1" id="__codelineno-6-1" name="__codelineno-6-1"></a><span class="p">&lt;</span><span class="nt">main</span> <span class="na">class</span><span class="o">=</span><span class="s">"md-content"</span><span class="p">&gt;</span>
<a href="#__codelineno-6-2" id="__codelineno-6-2" name="__codelineno-6-2"></a>  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>My Page<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<a href="#__codelineno-6-3" id="__codelineno-6-3" name="__codelineno-6-3"></a>  <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>This is my content with <span class="p">&lt;</span><span class="nt">strong</span><span class="p">&gt;</span>markdown<span class="p">&lt;/</span><span class="nt">strong</span><span class="p">&gt;</span>.<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<a href="#__codelineno-6-4" id="__codelineno-6-4" name="__codelineno-6-4"></a><span class="p">&lt;/</span><span class="nt">main</span><span class="p">&gt;</span>
</code></pre></div></p>
</li>
<li>
<p><strong>Output</strong>: Cousin file with preserved frontmatter + extracted HTML
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-7-1" id="__codelineno-7-1" name="__codelineno-7-1"></a>---
<a href="#__codelineno-7-2" id="__codelineno-7-2" name="__codelineno-7-2"></a>title: My Page
<a href="#__codelineno-7-3" id="__codelineno-7-3" name="__codelineno-7-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-7-4" id="__codelineno-7-4" name="__codelineno-7-4"></a><span class="gu">---</span>
<a href="#__codelineno-7-5" id="__codelineno-7-5" name="__codelineno-7-5"></a>
<a href="#__codelineno-7-6" id="__codelineno-7-6" name="__codelineno-7-6"></a>&lt;article class="md-content"&gt;
<a href="#__codelineno-7-7" id="__codelineno-7-7" name="__codelineno-7-7"></a>  &lt;h1&gt;My Page&lt;/h1&gt;
<a href="#__codelineno-7-8" id="__codelineno-7-8" name="__codelineno-7-8"></a>  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;
<a href="#__codelineno-7-9" id="__codelineno-7-9" name="__codelineno-7-9"></a>&lt;/article&gt;
</code></pre></div></p>
</li>
</ol>
<h2 class="custom-heading" id="use-cases">Use Cases<a class="headerlink" href="#use-cases" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="multi-stage-documentation-pipeline">🔄 Multi-Stage Documentation Pipeline<a class="headerlink" href="#multi-stage-documentation-pipeline" title="Permanent link">¶</a></h3>
<p>Process documentation through MkDocs first, then feed to another SSG:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-8-1" id="__codelineno-8-1" name="__codelineno-8-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-8-2" id="__codelineno-8-2" name="__codelineno-8-2"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-8-3" id="__codelineno-8-3" name="__codelineno-8-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-8-4" id="__codelineno-8-4" name="__codelineno-8-4"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">hugo/content</span>
<a href="#__codelineno-8-5" id="__codelineno-8-5" name="__codelineno-8-5"></a>
<a href="#__codelineno-8-6" id="__codelineno-8-6" name="__codelineno-8-6"></a><span class="c1"># Then run:</span>
<a href="#__codelineno-8-7" id="__codelineno-8-7" name="__codelineno-8-7"></a><span class="c1"># mkdocs build &amp;&amp; hugo build</span>
</code></pre></div>
<h3 class="custom-heading" id="content-extraction">📝 Content Extraction<a class="headerlink" href="#content-extraction" title="Permanent link">¶</a></h3>
<p>Extract just the article content without theme wrapper:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-9-1" id="__codelineno-9-1" name="__codelineno-9-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-9-2" id="__codelineno-9-2" name="__codelineno-9-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-9-3" id="__codelineno-9-3" name="__codelineno-9-3"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span>
<a href="#__codelineno-9-4" id="__codelineno-9-4" name="__codelineno-9-4"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">div</span>
</code></pre></div>
<h3 class="custom-heading" id="custom-post-processing">🎨 Custom Post-Processing<a class="headerlink" href="#custom-post-processing" title="Permanent link">¶</a></h3>
<p>Preserve MkDocs rendering while preparing for custom templates:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-10-1" id="__codelineno-10-1" name="__codelineno-10-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-10-2" id="__codelineno-10-2" name="__codelineno-10-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-10-3" id="__codelineno-10-3" name="__codelineno-10-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">_includes</span>
<a href="#__codelineno-10-4" id="__codelineno-10-4" name="__codelineno-10-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-10-5" id="__codelineno-10-5" name="__codelineno-10-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">section</span>
</code></pre></div>
<h2 class="custom-heading" id="examples">Examples<a class="headerlink" href="#examples" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="basic-example">Basic Example<a class="headerlink" href="#basic-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-11-1" id="__codelineno-11-1" name="__codelineno-11-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-11-2" id="__codelineno-11-2" name="__codelineno-11-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-11-3" id="__codelineno-11-3" name="__codelineno-11-3"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-11-4" id="__codelineno-11-4" name="__codelineno-11-4"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<h3 class="custom-heading" id="advanced-example">Advanced Example<a class="headerlink" href="#advanced-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-12-1" id="__codelineno-12-1" name="__codelineno-12-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-12-2" id="__codelineno-12-2" name="__codelineno-12-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-12-3" id="__codelineno-12-3" name="__codelineno-12-3"></a><span class="nt">theme</span><span class="p">:</span>
<a href="#__codelineno-12-4" id="__codelineno-12-4" name="__codelineno-12-4"></a><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">material</span>
<a href="#__codelineno-12-5" id="__codelineno-12-5" name="__codelineno-12-5"></a>
<a href="#__codelineno-12-6" id="__codelineno-12-6" name="__codelineno-12-6"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-12-7" id="__codelineno-12-7" name="__codelineno-12-7"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span>
<a href="#__codelineno-12-8" id="__codelineno-12-8" name="__codelineno-12-8"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-12-9" id="__codelineno-12-9" name="__codelineno-12-9"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">processed</span>
<a href="#__codelineno-12-10" id="__codelineno-12-10" name="__codelineno-12-10"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article.md-content__inner</span>
<a href="#__codelineno-12-11" id="__codelineno-12-11" name="__codelineno-12-11"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-12-12" id="__codelineno-12-12" name="__codelineno-12-12"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">true</span>
<a href="#__codelineno-12-13" id="__codelineno-12-13" name="__codelineno-12-13"></a>
<a href="#__codelineno-12-14" id="__codelineno-12-14" name="__codelineno-12-14"></a><span class="c1"># Process specific content area from Material theme</span>
</code></pre></div>
<h3 class="custom-heading" id="integration-example">Integration Example<a class="headerlink" href="#integration-example" title="Permanent link">¶</a></h3>
<p>Using with other tools in a documentation pipeline:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-13-1" id="__codelineno-13-1" name="__codelineno-13-1"></a><span class="ch">#!/bin/bash</span>
<a href="#__codelineno-13-2" id="__codelineno-13-2" name="__codelineno-13-2"></a><span class="c1"># build.sh</span>
<a href="#__codelineno-13-3" id="__codelineno-13-3" name="__codelineno-13-3"></a>
<a href="#__codelineno-13-4" id="__codelineno-13-4" name="__codelineno-13-4"></a><span class="c1"># Stage 1: Build with MkDocs + plugins</span>
<a href="#__codelineno-13-5" id="__codelineno-13-5" name="__codelineno-13-5"></a>mkdocs<span class="w"> </span>build
<a href="#__codelineno-13-6" id="__codelineno-13-6" name="__codelineno-13-6"></a>
<a href="#__codelineno-13-7" id="__codelineno-13-7" name="__codelineno-13-7"></a><span class="c1"># Stage 2: Process staged output</span>
<a href="#__codelineno-13-8" id="__codelineno-13-8" name="__codelineno-13-8"></a>python<span class="w"> </span>post_process.py<span class="w"> </span>stage/
<a href="#__codelineno-13-9" id="__codelineno-13-9" name="__codelineno-13-9"></a>
<a href="#__codelineno-13-10" id="__codelineno-13-10" name="__codelineno-13-10"></a><span class="c1"># Stage 3: Build final site</span>
<a href="#__codelineno-13-11" id="__codelineno-13-11" name="__codelineno-13-11"></a>hugo<span class="w"> </span>--contentDir<span class="o">=</span>stage/
</code></pre></div>
<h2 class="custom-heading" id="development">Development<a class="headerlink" href="#development" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="setup-development-environment">Setup Development Environment<a class="headerlink" href="#setup-development-environment" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-14-1" id="__codelineno-14-1" name="__codelineno-14-1"></a><span class="c1"># Clone the repository</span>
<a href="#__codelineno-14-2" id="__codelineno-14-2" name="__codelineno-14-2"></a>git<span class="w"> </span>clone<span class="w"> </span>https://github.com/vexyart/vexy-mkdocs-output-as-input
<a href="#__codelineno-14-3" id="__codelineno-14-3" name="__codelineno-14-3"></a><span class="nb">cd</span><span class="w"> </span>vexy-mkdocs-output-as-input
<a href="#__codelineno-14-4" id="__codelineno-14-4" name="__codelineno-14-4"></a>
<a href="#__codelineno-14-5" id="__codelineno-14-5" name="__codelineno-14-5"></a><span class="c1"># Create virtual environment</span>
<a href="#__codelineno-14-6" id="__codelineno-14-6" name="__codelineno-14-6"></a>python<span class="w"> </span>-m<span class="w"> </span>venv<span class="w"> </span>venv
<a href="#__codelineno-14-7" id="__codelineno-14-7" name="__codelineno-14-7"></a><span class="nb">source</span><span class="w"> </span>venv/bin/activate<span class="w">  </span><span class="c1"># On Windows: venv\Scripts\activate</span>
<a href="#__codelineno-14-8" id="__codelineno-14-8" name="__codelineno-14-8"></a>
<a href="#__codelineno-14-9" id="__codelineno-14-9" name="__codelineno-14-9"></a><span class="c1"># Install in development mode</span>
<a href="#__codelineno-14-10" id="__codelineno-14-10" name="__codelineno-14-10"></a>pip<span class="w"> </span>install<span class="w"> </span>-e<span class="w"> </span>.<span class="o">[</span>dev<span class="o">]</span>
<a href="#__codelineno-14-11" id="__codelineno-14-11" name="__codelineno-14-11"></a>
<a href="#__codelineno-14-12" id="__codelineno-14-12" name="__codelineno-14-12"></a><span class="c1"># Install pre-commit hooks</span>
<a href="#__codelineno-14-13" id="__codelineno-14-13" name="__codelineno-14-13"></a>pre-commit<span class="w"> </span>install
</code></pre></div>
<h3 class="custom-heading" id="running-tests">Running Tests<a class="headerlink" href="#running-tests" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-15-1" id="__codelineno-15-1" name="__codelineno-15-1"></a><span class="c1"># Run all tests</span>
<a href="#__codelineno-15-2" id="__codelineno-15-2" name="__codelineno-15-2"></a>pytest
<a href="#__codelineno-15-3" id="__codelineno-15-3" name="__codelineno-15-3"></a>
<a href="#__codelineno-15-4" id="__codelineno-15-4" name="__codelineno-15-4"></a><span class="c1"># Run with coverage</span>
<a href="#__codelineno-15-5" id="__codelineno-15-5" name="__codelineno-15-5"></a>pytest<span class="w"> </span>--cov<span class="o">=</span>mkdocs_output_as_input<span class="w"> </span>--cov-report<span class="o">=</span>html
<a href="#__codelineno-15-6" id="__codelineno-15-6" name="__codelineno-15-6"></a>
<a href="#__codelineno-15-7" id="__codelineno-15-7" name="__codelineno-15-7"></a><span class="c1"># Run specific test</span>
<a href="#__codelineno-15-8" id="__codelineno-15-8" name="__codelineno-15-8"></a>pytest<span class="w"> </span>tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
</code></pre></div>
<h3 class="custom-heading" id="code-quality">Code Quality<a class="headerlink" href="#code-quality" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-16-1" id="__codelineno-16-1" name="__codelineno-16-1"></a><span class="c1"># Format code</span>
<a href="#__codelineno-16-2" id="__codelineno-16-2" name="__codelineno-16-2"></a>black<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-3" id="__codelineno-16-3" name="__codelineno-16-3"></a>
<a href="#__codelineno-16-4" id="__codelineno-16-4" name="__codelineno-16-4"></a><span class="c1"># Lint code</span>
<a href="#__codelineno-16-5" id="__codelineno-16-5" name="__codelineno-16-5"></a>ruff<span class="w"> </span>check<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-6" id="__codelineno-16-6" name="__codelineno-16-6"></a>
<a href="#__codelineno-16-7" id="__codelineno-16-7" name="__codelineno-16-7"></a><span class="c1"># Type check</span>
<a href="#__codelineno-16-8" id="__codelineno-16-8" name="__codelineno-16-8"></a>mypy<span class="w"> </span>src
</code></pre></div>
<h2 class="custom-heading" id="contributing">Contributing<a class="headerlink" href="#contributing" title="Permanent link">¶</a></h2>
<p>Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.</p>
<ol>
<li>Fork the repository</li>
<li>Create your feature branch (<code>git checkout -b feature/AmazingFeature</code>)</li>
<li>Commit your changes (<code>git commit -m 'Add some AmazingFeature'</code>)</li>
<li>Push to the branch (<code>git push origin feature/AmazingFeature</code>)</li>
<li>Open a Pull Request</li>
</ol>
<h2 class="custom-heading" id="license">License<a class="headerlink" href="#license" title="Permanent link">¶</a></h2>
<p>This project is licensed under the MIT License - see the <a href="LICENSE">LICENSE</a> file for details.</p>
<h2 class="custom-heading" id="support">Support<a class="headerlink" href="#support" title="Permanent link">¶</a></h2>
<ul>
<li>📧 Email: you@example.com</li>
<li>🐛 Issues: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/issues">GitHub Issues</a></li>
<li>💬 Discussions: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions">GitHub Discussions</a></li>
</ul>
</div>







  
  






                
              </article>
            </div>
          
          
<script>var target=document.getElementById(location.hash.slice(1));target&&target.name&&(target.checked=target.name.startsWith("__tabbed_"))</script>
        </div>
        
      </main>
      
        <footer class="md-footer">
  
  <div class="md-footer-meta md-typeset">
    <div class="md-footer-meta__inner md-grid">
      <div class="md-copyright">
  
  
    Made with
    <a href="https://squidfunk.github.io/mkdocs-material/" target="_blank" rel="noopener">
      Material for MkDocs Insiders
    </a>
  
</div>
      
    </div>
  </div>
</footer>
      
    </div>
    <div class="md-dialog" data-md-component="dialog">
      <div class="md-dialog__inner md-typeset"></div>
    </div>
    
    
    
      
      
      <script id="__config" type="application/json">{"annotate": null, "base": ".", "features": ["navigation.instant", "navigation.tracking", "content.code.copy"], "search": "assets/javascripts/workers/search.ad38c271.min.js", "tags": null, "translations": {"clipboard.copied": "Copied to clipboard", "clipboard.copy": "Copy to clipboard", "search.result.more.one": "1 more on this page", "search.result.more.other": "# more on this page", "search.result.none": "No matching documents", "search.result.one": "1 matching document", "search.result.other": "# matching documents", "search.result.placeholder": "Type to start searching", "search.result.term.missing": "Missing", "select.version": "Select version"}, "version": null}</script>
    
    
      <script src="assets/javascripts/bundle.5c86578b.min.js"></script>
      
    
  </body>
</html>
</document_content>
</document>

<document index="16">
<source>docs/search/search_index.json</source>
<document_content>
{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"MkDocs Output as Input Plugin","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#vexy-mkdocs-output-as-input","title":"vexy-mkdocs-output-as-input","text":"<p>A MkDocs plugin that captures HTML output and creates \"cousin\" Markdown files with original frontmatter and extracted HTML content.</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#features","title":"Features","text":"<p>This plugin enables powerful post-processing workflows by:</p> <ol> <li>\u2705 Preserving your original Markdown structure and frontmatter</li> <li>\u2705 Capturing the fully-rendered HTML output from MkDocs</li> <li>\u2705 Creating new Markdown files that combine original metadata with processed HTML</li> <li>\u2705 Enabling further processing by other static site generators</li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#installation","title":"Installation","text":"<p>Install from PyPI:</p> <pre><code>uv pip install --system --upgrade vexy-mkdocs-output-as-input\n</code></pre> <p>Or install from source:</p> <pre><code>pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#quick-start","title":"Quick Start","text":"<p>Add the plugin to your <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - search  # Other plugins\n  - output-as-input\n</code></pre> <p>Build your site:</p> <pre><code>mkdocs build\n</code></pre> <p>Find your processed files in the <code>stage/</code> directory (relative to your MkDocs project root).</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#configuration","title":"Configuration","text":"<p>All configuration options with their defaults:</p> <pre><code>plugins:\n  - output-as-input:\n      stage_dir: stage          # Output directory name (default: 'stage')\n      html_element: main        # HTML element to extract (default: 'main')\n      target_tag: article       # Tag to use in output (default: 'article')\n      verbose: false            # Enable verbose logging (default: false)\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#options-explained","title":"Options Explained","text":"Option Type Default Description <code>stage_dir</code> string <code>\"stage\"</code> Directory name for output files (relative to project root) <code>html_element</code> string <code>\"main\"</code> CSS selector for the HTML element to extract <code>target_tag</code> string <code>\"article\"</code> HTML tag to use in the output (replaces extracted element's tag) <code>verbose</code> boolean <code>false</code> Enable detailed logging for debugging","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#how-it-works","title":"How It Works","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#input-process-output","title":"Input \u2192 Process \u2192 Output","text":"<ol> <li> <p>Input: Your source Markdown with frontmatter    <pre><code>---\ntitle: My Page\nauthor: Jane Doe\n---\n\n# My Page\n\nThis is my content with **markdown**.\n</code></pre></p> </li> <li> <p>MkDocs Processing: Renders to HTML as usual    <pre><code>&lt;main class=\"md-content\"&gt;\n  &lt;h1&gt;My Page&lt;/h1&gt;\n  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;\n&lt;/main&gt;\n</code></pre></p> </li> <li> <p>Output: Cousin file with preserved frontmatter + extracted HTML    <pre><code>---\ntitle: My Page\nauthor: Jane Doe\n---\n\n&lt;article class=\"md-content\"&gt;\n  &lt;h1&gt;My Page&lt;/h1&gt;\n  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;\n&lt;/article&gt;\n</code></pre></p> </li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#use-cases","title":"Use Cases","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#multi-stage-documentation-pipeline","title":"\ud83d\udd04 Multi-Stage Documentation Pipeline","text":"<p>Process documentation through MkDocs first, then feed to another SSG:</p> <pre><code># mkdocs.yml\nplugins:\n  - output-as-input:\n      stage_dir: hugo/content\n\n# Then run:\n# mkdocs build &amp;&amp; hugo build\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#content-extraction","title":"\ud83d\udcdd Content Extraction","text":"<p>Extract just the article content without theme wrapper:</p> <pre><code>plugins:\n  - output-as-input:\n      html_element: article\n      target_tag: div\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#custom-post-processing","title":"\ud83c\udfa8 Custom Post-Processing","text":"<p>Preserve MkDocs rendering while preparing for custom templates:</p> <pre><code>plugins:\n  - output-as-input:\n      stage_dir: _includes\n      html_element: main\n      target_tag: section\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#examples","title":"Examples","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#basic-example","title":"Basic Example","text":"<pre><code># mkdocs.yml\nsite_name: My Documentation\nplugins:\n  - output-as-input\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#advanced-example","title":"Advanced Example","text":"<pre><code># mkdocs.yml\nsite_name: My Documentation\ntheme:\n  name: material\n\nplugins:\n  - search\n  - output-as-input:\n      stage_dir: processed\n      html_element: article.md-content__inner\n      target_tag: main\n      verbose: true\n\n# Process specific content area from Material theme\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#integration-example","title":"Integration Example","text":"<p>Using with other tools in a documentation pipeline:</p> <pre><code>#!/bin/bash\n# build.sh\n\n# Stage 1: Build with MkDocs + plugins\nmkdocs build\n\n# Stage 2: Process staged output\npython post_process.py stage/\n\n# Stage 3: Build final site\nhugo --contentDir=stage/\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#development","title":"Development","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#setup-development-environment","title":"Setup Development Environment","text":"<pre><code># Clone the repository\ngit clone https://github.com/vexyart/vexy-mkdocs-output-as-input\ncd vexy-mkdocs-output-as-input\n\n# Create virtual environment\npython -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n\n# Install in development mode\npip install -e .[dev]\n\n# Install pre-commit hooks\npre-commit install\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#running-tests","title":"Running Tests","text":"<pre><code># Run all tests\npytest\n\n# Run with coverage\npytest --cov=mkdocs_output_as_input --cov-report=html\n\n# Run specific test\npytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#code-quality","title":"Code Quality","text":"<pre><code># Format code\nblack src tests\n\n# Lint code\nruff check src tests\n\n# Type check\nmypy src\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.</p> <ol> <li>Fork the repository</li> <li>Create your feature branch (<code>git checkout -b feature/AmazingFeature</code>)</li> <li>Commit your changes (<code>git commit -m 'Add some AmazingFeature'</code>)</li> <li>Push to the branch (<code>git push origin feature/AmazingFeature</code>)</li> <li>Open a Pull Request</li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#support","title":"Support","text":"<ul> <li>\ud83d\udce7 Email: you@example.com</li> <li>\ud83d\udc1b Issues: GitHub Issues</li> <li>\ud83d\udcac Discussions: GitHub Discussions</li> </ul>","tags":["mkdocs","plugin","documentation","pipeline"]}]}
</document_content>
</document>

<document index="17">
<source>docs/sitemap.xml</source>
<document_content>
<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
    <url>
         <loc>https://vexyart.github.io/vexy-mkdocs-output-as-input/</loc>
         <lastmod>2025-07-14</lastmod>
    </url>
</urlset>
</document_content>
</document>

<document index="18">
<source>llms.txt</source>
<document_content>
Project Structure:
📁 vexy-mkdocs-output-as-input
├── 📁 .github
│   └── 📁 workflows
│       ├── 📄 ci.yml
│       └── 📄 release.yml
├── 📁 docs
│   ├── 📁 assets
│   │   ├── 📁 images
│   │   ├── 📁 javascripts
│   │   │   ├── 📁 lunr
│   │   │   │   ├── 📁 min
│   │   │   │   │   └── ... (depth limit reached)
│   │   │   │   ├── 📄 tinyseg.js
│   │   │   │   └── 📄 wordcut.js
│   │   │   ├── 📁 workers
│   │   │   │   └── 📄 search.ad38c271.min.js
│   │   │   └── 📄 bundle.5c86578b.min.js
│   │   └── 📁 stylesheets
│   │       ├── 📄 main.8cce3a28.min.css
│   │       └── 📄 palette.ab4e12ef.min.css
│   ├── 📁 search
│   │   └── 📄 search_index.json
│   ├── 📄 404.html
│   ├── 📄 index.html
│   ├── 📄 README.md
│   └── 📄 sitemap.xml
├── 📁 src
│   └── 📁 mkdocs_output_as_input
│       ├── 📄 __init__.py
│       ├── 📄 cli.py
│       └── 📄 plugin.py
├── 📁 stage
│   └── 📄 README.md
├── 📁 tests
│   ├── 📄 test_cli.py
│   └── 📄 test_plugin.py
├── 📄 .gitignore
├── 📄 AGENTS.md
├── 📄 build_docs.py
├── 📄 CHANGELOG.md
├── 📄 CLAUDE.md
├── 📄 GEMINI.md
├── 📄 LICENSE
├── 📄 llms.txt
├── 📄 mkdocs.yml
├── 📄 pyproject.toml
├── 📄 README.md
└── 📄 TODO.md


<documents>
<document index="1">
<source>.github/workflows/ci.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run pre-commit
        if: matrix.python-version == '3.11'
        run: pre-commit run --all-files

      - name: Run tests
        run: |
          pytest -v --cov=mkdocs_output_as_input --cov-report=xml --cov-report=term

      - name: Upload coverage
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run ruff
        run: ruff check --output-format=github .

      - name: Run ruff format
        run: ruff format --check --diff .

      - name: Run mypy
        run: mypy src
</document_content>
</document>

<document index="2">
<source>.github/workflows/release.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write  # Required for PyPI trusted publishing

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mkdocs-output-as-input
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # Trusted publishing configured in PyPI project settings

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Extract changelog section
        id: changelog
        run: |
          version=${GITHUB_REF#refs/tags/v}
          awk "/## \[$version\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.changelog.outputs.version }}
          body_path: release_notes.md
          files: dist/*
          draft: false
          prerelease: false
</document_content>
</document>

<document index="3">
<source>.gitignore</source>
<document_content>
# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
venv/
ENV/
env/
.venv
.env

# pyenv
.python-version

# pipenv
Pipfile.lock

# Poetry
poetry.lock

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# pytest
.pytest_cache/
.coverage
htmlcov/
.tox/
coverage.xml
*.cover
.hypothesis/

# Jupyter Notebook
.ipynb_checkpoints

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# MkDocs
site/
.cache/

# setuptools-scm
src/mkdocs_output_as_input/_version.py
</document_content>
</document>

<document index="4">
<source>AGENTS.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="5">
<source>CHANGELOG.md</source>
<document_content>
# Changelog

All notable changes to vexy-mkdocs-output-as-input will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [Unreleased]

### Added
- Complete documentation pages for getting started, configuration, examples, and API reference
- Additional test cases for edge cases, improving coverage to 91%+
- Proper error handling for missing directories (docs_dir, site_dir)
- Configuration option `include_frontmatter` to control whether YAML frontmatter is included in output files (default: true)
- Configuration option `preserve_links` to convert absolute links to relative paths (default: false)
- Configuration options `minify` and `prettify` for HTML output formatting (mutually exclusive)
- Support for multiple HTML selectors - extract multiple elements in one pass
- Support for CSS selectors in addition to tag names (e.g., `.content`, `#main`)
- CLI tool `mkdocs-output-as-input` for standalone HTML processing
- CLI options for preserving relative links, minifying, and prettifying HTML output
- CLI support for multiple selectors using `--html-element` flag multiple times
- Comprehensive test suite for CLI functionality

### Changed
- Replaced Black formatter with Ruff format in CI workflow
- Enhanced type hints with proper type ignore comments for MkDocs compatibility
- Improved error handling and logging throughout the plugin
- Refactored `build_docs.py` to use proper two-stage MkDocs pipeline:
  1. Source → Intermediate (with plugin capturing HTML)
  2. Intermediate → Final (standard MkDocs build with full Material theme)

### Fixed
- Fixed broken plugin implementation - all methods now properly implemented
- Fixed broken test suite - all tests now passing with proper fixtures
- Fixed mypy type checking errors with appropriate type annotations
- Pre-commit configuration updated to remove conflicting Black formatter
- Documentation build now generates proper MkDocs Material site (not manual HTML)
- Removed duplicate README.md from docs directory

## [0.2.0] - 2025-01-14

### Changed
- **BREAKING**: Migrated to src-layout package structure
- **BREAKING**: Minimum Python version is now 3.9
- Switched from Loguru to standard library logging for better integration
- Modernized packaging with PEP 621 compliant pyproject.toml
- Improved type hints throughout the codebase

### Added
- Comprehensive test suite with >90% coverage
- Pre-commit hooks for code quality
- GitHub Actions CI/CD workflows
- Support for Python 3.9, 3.10, 3.11, and 3.12
- Automated release process with trusted PyPI publishing
- Development documentation in README

### Fixed
- Better error handling for missing files
- Graceful handling of invalid YAML frontmatter
- Improved logging messages for debugging

## [0.1.0] - 2025-01-10

### Added
- Initial release of vexy-mkdocs-output-as-input plugin
- Core functionality to capture HTML output and create cousin Markdown files
- Configurable stage directory for output files
- Configurable HTML element extraction (default: `<main>`)
- Configurable target tag transformation (default: `<article>`)
- Preservation of original YAML frontmatter
- Verbose logging mode for debugging
- Basic documentation and examples

[Unreleased]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.2.0...HEAD
[0.2.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.1.0...v0.2.0
[0.1.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/releases/tag/v0.1.0
</document_content>
</document>

<document index="6">
<source>CLAUDE.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="7">
<source>GEMINI.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="8">
<source>LICENSE</source>
<document_content>
MIT License

Copyright (c) 2025 MkDocs Output as Input Contributors

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</document_content>
</document>

<document index="9">
<source>README.md</source>
<document_content>
# vexy-mkdocs-output-as-input

[![PyPI version](https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)
[![CI](https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg)](https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg)](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Python versions](https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)

A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.

## Features

This plugin enables powerful post-processing workflows by:

1. ✅ Preserving your original Markdown structure and frontmatter
2. ✅ Capturing the fully-rendered HTML output from MkDocs
3. ✅ Creating new Markdown files that combine original metadata with processed HTML
4. ✅ Enabling further processing by other static site generators

## Installation

Install from PyPI:

```bash
uv pip install --system --upgrade vexy-mkdocs-output-as-input
```

Or install from source:

```bash
pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input
```

This also installs a CLI tool: `mkdocs-output-as-input`

## Quick Start

Add the plugin to your `mkdocs.yml`:

```yaml
plugins:
  - search  # Other plugins
  - output-as-input
```

Build your site:

```bash
mkdocs build
```

Find your processed files in the `stage/` directory (relative to your MkDocs project root).

## Configuration

All configuration options with their defaults:

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory name (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      include_frontmatter: true # Include YAML frontmatter (default: true)
      preserve_links: false     # Convert absolute to relative links (default: false)
      verbose: false            # Enable verbose logging (default: false)
```

### Advanced Examples

Extract multiple elements:
```yaml
plugins:
  - output-as-input:
      html_element: [main, aside]  # Extract both main content and sidebar
```

Extract using CSS selectors:
```yaml
plugins:
  - output-as-input:
      html_element: .content  # Extract element with class="content"
```

### Options Explained

| Option | Type | Default | Description |
|--------|------|---------|-------------|
| `stage_dir` | string | `"stage"` | Directory name for output files (relative to project root) |
| `html_element` | string or list | `"main"` | CSS selector(s) for HTML elements to extract |
| `target_tag` | string | `"article"` | HTML tag to use in the output (replaces extracted element's tag) |
| `include_frontmatter` | boolean | `true` | Include YAML frontmatter in output files |
| `preserve_links` | boolean | `false` | Convert absolute links to relative (e.g., `/path` → `./path`) |
| `minify` | boolean | `false` | Minify HTML output (remove whitespace) |
| `prettify` | boolean | `false` | Prettify HTML output (add indentation) |
| `verbose` | boolean | `false` | Enable detailed logging for debugging |

## How It Works

### Input → Process → Output

1. **Input**: Your source Markdown with frontmatter
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   # My Page
   
   This is my content with **markdown**.
   ```

2. **MkDocs Processing**: Renders to HTML as usual
   ```html
   <main class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </main>
   ```

3. **Output**: Cousin file with preserved frontmatter + extracted HTML
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   <article class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </article>
   ```

## Use Cases

### 🔄 Multi-Stage Documentation Pipeline

Process documentation through MkDocs first, then feed to another SSG:

```yaml
# mkdocs.yml
plugins:
  - output-as-input:
      stage_dir: hugo/content

# Then run:
# mkdocs build && hugo build
```

### 📝 Content Extraction

Extract just the article content without theme wrapper:

```yaml
plugins:
  - output-as-input:
      html_element: article
      target_tag: div
```

### 🎨 Custom Post-Processing

Preserve MkDocs rendering while preparing for custom templates:

```yaml
plugins:
  - output-as-input:
      stage_dir: _includes
      html_element: main
      target_tag: section
```

## Examples

### Basic Example

```yaml
# mkdocs.yml
site_name: My Documentation
plugins:
  - output-as-input
```

### Advanced Example

```yaml
# mkdocs.yml
site_name: My Documentation
theme:
  name: material

plugins:
  - search
  - output-as-input:
      stage_dir: processed
      html_element: article.md-content__inner
      target_tag: main
      verbose: true

# Process specific content area from Material theme
```

### Integration Example

Using with other tools in a documentation pipeline:

```bash
#!/bin/bash
# build.sh

# Stage 1: Build with MkDocs + plugins
mkdocs build

# Stage 2: Process staged output
python post_process.py stage/

# Stage 3: Build final site
hugo --contentDir=stage/
```

## Development

### Setup Development Environment

```bash
# Clone the repository
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input

# Create virtual environment
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install in development mode
pip install -e .[dev]

# Install pre-commit hooks
pre-commit install
```

### Running Tests

```bash
# Run all tests
pytest

# Run with coverage
pytest --cov=mkdocs_output_as_input --cov-report=html

# Run specific test
pytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
```

### Code Quality

```bash
# Format code
black src tests

# Lint code
ruff check src tests

# Type check
mypy src
```

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Support

- 📧 Email: you@example.com
- 🐛 Issues: [GitHub Issues](https://github.com/vexyart/vexy-mkdocs-output-as-input/issues)
- 💬 Discussions: [GitHub Discussions](https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions)
</document_content>
</document>

<document index="10">
<source>TODO.md</source>
<document_content>
# TODO


</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/build_docs.py
# Language: python

import os
import shutil
import subprocess
import tempfile
from pathlib import Path
import yaml

def run_command((cmd, cwd=None)):
    """Run a command and print output."""

def create_stage_mkdocs_config((temp_dir)):
    """Create mkdocs.yml for stage 1 (source → intermediate)."""

def create_final_mkdocs_config(()):
    """Create mkdocs.yml for final build (intermediate → final site)."""

def step1_create_intermediate(()):
    """Step 1: Build README.md → stage/README.md with plugin."""

def step2_build_final_docs(()):
    """Step 2: Build stage/README.md → docs/ with standard MkDocs."""

def main(()):
    """Run the documentation build pipeline."""


<document index="11">
<source>docs/404.html</source>
<document_content>

<!doctype html>
<html lang="en" class="no-js">
  <head>
    
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width,initial-scale=1">
      
        <meta name="description" content="A plugin that captures HTML output and creates cousin Markdown files">
      
      
      
      
      
      
        
      
      
      <link rel="icon" href="/vexy-mkdocs-output-as-input/assets/images/favicon.png">
      <meta name="generator" content="mkdocs-1.6.1, mkdocs-material-9.6.15+insiders-4.53.16">
    
    
      
        <title>MkDocs Output as Input Plugin</title>
      
    
    
      <link rel="stylesheet" href="/vexy-mkdocs-output-as-input/assets/stylesheets/main.8cce3a28.min.css">
      
        
        <link rel="stylesheet" href="/vexy-mkdocs-output-as-input/assets/stylesheets/palette.ab4e12ef.min.css">
      
      


    
    
      
    
    
      
        
        
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,700,700i%7CRoboto+Mono:400,400i,700,700i&display=fallback">
        <style>:root{--md-text-font:"Roboto";--md-code-font:"Roboto Mono"}</style>
      
    
    
    <script>__md_scope=new URL("/vexy-mkdocs-output-as-input/",location),__md_hash=e=>[...e].reduce(((e,_)=>(e<<5)-e+_.charCodeAt(0)),0),__md_get=(e,_=localStorage,t=__md_scope)=>JSON.parse(_.getItem(t.pathname+"."+e)),__md_set=(e,_,t=localStorage,a=__md_scope)=>{try{t.setItem(a.pathname+"."+e,JSON.stringify(_))}catch(e){}}</script>
    
      

    
    
  </head>
  
  
    
    
      
    
    
    
    
    <body dir="ltr" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo">
  
    
    <input class="md-toggle" data-md-toggle="drawer" type="checkbox" id="__drawer" autocomplete="off">
    <input class="md-toggle" data-md-toggle="search" type="checkbox" id="__search" autocomplete="off">
    <label class="md-overlay" for="__drawer"></label>
    <div data-md-component="skip">
      
    </div>
    <div data-md-component="announce">
      
    </div>
    
    
      

  

<header class="md-header md-header--shadow" data-md-component="header">
  <nav class="md-header__inner md-grid" aria-label="Header">
    <a href="/vexy-mkdocs-output-as-input/." title="MkDocs Output as Input Plugin" class="md-header__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    <label class="md-header__button md-icon" for="__drawer">
      
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 6h18v2H3zm0 5h18v2H3zm0 5h18v2H3z"/></svg>
    </label>
    <div class="md-header__title" data-md-component="header-title">
      <div class="md-header__ellipsis">
        <div class="md-header__topic">
          <span class="md-ellipsis">
            MkDocs Output as Input Plugin
          </span>
        </div>
        <div class="md-header__topic" data-md-component="header-topic">
          <span class="md-ellipsis">
            
              
            
          </span>
        </div>
      </div>
    </div>
    
      
        <form class="md-header__option" data-md-component="palette">
  
    
    
    
    <input class="md-option" data-md-color-media="" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo"  aria-hidden="true"  type="radio" name="__palette" id="__palette_0">
    
  
</form>
      
    
    
      <script>var palette=__md_get("__palette");if(palette&&palette.color){if("(prefers-color-scheme)"===palette.color.media){var media=matchMedia("(prefers-color-scheme: light)"),input=document.querySelector(media.matches?"[data-md-color-media='(prefers-color-scheme: light)']":"[data-md-color-media='(prefers-color-scheme: dark)']");palette.color.media=input.getAttribute("data-md-color-media"),palette.color.scheme=input.getAttribute("data-md-color-scheme"),palette.color.primary=input.getAttribute("data-md-color-primary"),palette.color.accent=input.getAttribute("data-md-color-accent")}for(var[key,value]of Object.entries(palette.color))document.body.setAttribute("data-md-color-"+key,value)}</script>
    
    
    
      
      
        <label class="md-header__button md-icon" for="__search">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        </label>
        <div class="md-search" data-md-component="search" role="dialog">
  <label class="md-search__overlay" for="__search"></label>
  <div class="md-search__inner" role="search">
    <form class="md-search__form" name="search">
      <input type="text" class="md-search__input" name="query" aria-label="Search" placeholder="Search" autocapitalize="off" autocorrect="off" autocomplete="off" spellcheck="false" data-md-component="search-query" required>
      <label class="md-search__icon md-icon" for="__search">
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20 11v2H8l5.5 5.5-1.42 1.42L4.16 12l7.92-7.92L13.5 5.5 8 11z"/></svg>
      </label>
      <nav class="md-search__options" aria-label="Search">
        
        <button type="reset" class="md-search__icon md-icon" title="Clear" aria-label="Clear" tabindex="-1">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>
        </button>
      </nav>
      
    </form>
    <div class="md-search__output">
      <div class="md-search__scrollwrap" tabindex="0" data-md-scrollfix>
        <div class="md-search-result" data-md-component="search-result">
          <div class="md-search-result__meta">
            Initializing search
          </div>
          <ol class="md-search-result__list" role="presentation"></ol>
        </div>
      </div>
    </div>
  </div>
</div>
      
    
    
  </nav>
  
</header>
    
    <div class="md-container" data-md-component="container">
      
      
        
          
        
      
      <main class="md-main" data-md-component="main">
        <div class="md-main__inner md-grid">
          
            
              
              <div class="md-sidebar md-sidebar--primary" data-md-component="sidebar" data-md-type="navigation" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    



<nav class="md-nav md-nav--primary" aria-label="Navigation" data-md-level="0">
  <label class="md-nav__title" for="__drawer">
    <a href="/vexy-mkdocs-output-as-input/." title="MkDocs Output as Input Plugin" class="md-nav__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    MkDocs Output as Input Plugin
  </label>
  
  <ul class="md-nav__list" data-md-scrollfix>
    
      
      
  
  
  
  
    <li class="md-nav__item">
      <a href="/vexy-mkdocs-output-as-input/." class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    
  
    Home
  

    
  </span>
  
  

      </a>
    </li>
  

    
  </ul>
</nav>
                  </div>
                </div>
              </div>
            
            
              
              <div class="md-sidebar md-sidebar--secondary" data-md-component="sidebar" data-md-type="toc" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    

<nav class="md-nav md-nav--secondary" aria-label="Table of contents">
  
  
  
  
</nav>
                  </div>
                </div>
              </div>
            
          
          
            <div class="md-content" data-md-component="content">
              
              <article class="md-content__inner md-typeset">
                
  <h1>404 - Not found</h1>

              </article>
            </div>
          
          
<script>var target=document.getElementById(location.hash.slice(1));target&&target.name&&(target.checked=target.name.startsWith("__tabbed_"))</script>
        </div>
        
      </main>
      
        <footer class="md-footer">
  
  <div class="md-footer-meta md-typeset">
    <div class="md-footer-meta__inner md-grid">
      <div class="md-copyright">
  
  
    Made with
    <a href="https://squidfunk.github.io/mkdocs-material/" target="_blank" rel="noopener">
      Material for MkDocs Insiders
    </a>
  
</div>
      
    </div>
  </div>
</footer>
      
    </div>
    <div class="md-dialog" data-md-component="dialog">
      <div class="md-dialog__inner md-typeset"></div>
    </div>
    
    
    
      
      
      <script id="__config" type="application/json">{"annotate": null, "base": "/vexy-mkdocs-output-as-input/", "features": ["navigation.instant", "navigation.tracking", "content.code.copy"], "search": "/vexy-mkdocs-output-as-input/assets/javascripts/workers/search.ad38c271.min.js", "tags": null, "translations": {"clipboard.copied": "Copied to clipboard", "clipboard.copy": "Copy to clipboard", "search.result.more.one": "1 more on this page", "search.result.more.other": "# more on this page", "search.result.none": "No matching documents", "search.result.one": "1 matching document", "search.result.other": "# matching documents", "search.result.placeholder": "Type to start searching", "search.result.term.missing": "Missing", "select.version": "Select version"}, "version": null}</script>
    
    
      <script src="/vexy-mkdocs-output-as-input/assets/javascripts/bundle.5c86578b.min.js"></script>
      
    
  </body>
</html>
</document_content>
</document>

<document index="12">
<source>docs/README.md</source>
<document_content>
# Documentation

This directory contains the generated documentation for the vexy-mkdocs-output-as-input plugin.

View the documentation at: https://vexyart.github.io/vexy-mkdocs-output-as-input/

## Build Process

The documentation is built using the plugin itself:

1. **Source**: `README.md` (root of repository)
2. **Intermediate**: `stage/README.md` (preserved in git)
3. **Final**: `docs/index.html` (this directory)

To rebuild the documentation, run: `python build_docs.py`

</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/bundle.5c86578b.min.js
# Language: javascript

function e((r))

function a((k))

function c((k))

function p((k))

function l((k))

function f((k))

function u((k))

function d((k))

function v((k))

function S((k))

function X(())

function re(())

function ee((k))

function Ka((e))

function u((q))

function S((q))

function k((q))

function R((q))

function se((q,C))

function ce((q,C))

function he((q,C,_))

function Se((q,C))

function Ue((q,C))

function Qi((q))

function Yi((q,C))

function Bi((q))

function Gi(())

function Qt((q))

function Mr((q,C))

function _((D,N))

function s((a,c))

function a((l,f,u,d,v))

function c((l,f,u,d,v))

function p((l,f,u,d))

function c((u,d,v))

function p((u,d,v))

function l((u,d,v))

function f((u,d,v))

function n((i))

function n(())

function p(())

function r((o))

function ie((e,t))

function r(())

function Eo((e,t,r,o))

function n((i))

function a((l))

function c((l))

function p((l))

function Gt((e,t))

function a((p))

function c((p))

function Oe((e))

function K((e,t))

function B((e,t,r))

function dt((e))

function wo((e,t,r))

function s((d))

function a((d,v))

function c((d,v))

function p((d))

function l((d))

function f((d))

function u((d,v))

function To((e))

function o((i))

function n((i,s,a,c))

function I((e))

function yt((e))

function Ze((e,t))

function e((t))

function Xt((e))

function So((e))

function Zt((e))

function ge(())

function Lo((e))

function Mo((e))

function Pr((e,t,r))

function Et((e))

function _o((e))

function t((r))

function Rr((e,t))

function e((t))

function t((r,o,n))

function er((e))

function aa((e))

function Ir((e,t))

function be((e))

function Ao(())

function Fr((e))

function e((t))

function Co((e))

function ca((e))

function pa((e))

function la((e))

function E((e))

function w((e,t,r,o,n))

function t((r,o,n,i,s,a))

function t(())

function t((r,o))

function t((r))

function t((r,o,n))

function t((r,o))

function t((r,o))

function e((t,r))

function t((r,o))

function t((r,o))

function t(())

function t((r,o))

function t(())

function tr((e))

function Vr((e))

function pt((e))

function Fe((e))

function rr((e,t))

function or((e))

function nr((e))

function ir((e))

function ar((e))

function fa(())

function cr((e))

function pr((e))

function lr((e))

function U((e))

function ua((e))

function da((e))

function ha((e))

function ba((e))

function jo((e))

function va((e))

function ga((e,t))

function _e((e,t,r,o,n))

function xe((e,t))

function et((e,t))

function Uo((e,t))

function Wo((e,t))

function Do((e,t))

function Vo((e,t))

function mr((e,t))

function No((e,t))

function zo((e,t))

function fe((e,t))

function $(())

function Nr((e,t))

function qo((e))

function m((e,t))

function xa((e,t))

function lt((e))

function Ko((e))

function Oa((e))

function Qo((e,t))

function z(())

function zr((e,t,r))

function Yo((e,t,r))

function Bo((e,t,r,o,n,i,s,a))

function J((e,t,r))

function Mt((e))

function Go(())

function Ke(())

function H((e))

function h((e,t,r,o))

function Jo((e,t))

function Aa((e))

function Ca((e))

function ka((e))

function ur((e,t,r))

function He((e,t,r))

function L(())

function dr((e))

function g((e,t))

function rt(())

function Xo((e))

function $e((e,t))

function ot((e,t))

function ve((e))

function Zo((e,t,r,o,n))

function qr(())

function Pe(())

function jt((e))

function Ae((e,t))

function c(())

function Qe((e))

function Ee((e))

function oe(())

function en((e))

function Kr((e,t))

function nt((e,t))

function Qr((e,t))

function Y((e,t))

function $a((e,t))

function ne((e,t))

function tn((e))

function Pa(())

function ae(())

function hr((e,t))

function A((e))

function Re((e,t))

function Yr((e))

function rn(())

function Ve(())

function vt((e))

function Ut((e,t))

function le((e))

function Br((e,t))

function Z((e,t,r))

function Ie((e))

function Gr((e))

function Q(())

function b((e,t))

function W((e))

function Jr((e,t))

function O((e,t,r))

function on((e,t))

function gt((e,t,r))

function te(())

function nn(())

function Xr(())

function an(())

function M((e,t=document))

function j((e,t=document))

function ue((e,t=document))

function Ne(())

function Ye((e))

function it((e,t))

function sn((e,t))

function x((e,t,...r))

function br((e))

function _t((e))

function de((e))

function Le((e))

function At((e))

function vr((e))

function pn((e))

function Be((e))

function ln((e))

function mn((e))

function gr((e))

function Ge((e))

function mt((e))

function un((e,t=16))

function dn((e))

function at((e,t))

function Je((e))

function ja((e,t))

function Ua(())

function hn(())

function we(())

function st((e,t=!1))

function bn(())

function vn(())

function gn((e))

function Zr((e))

function yn((e))

function Wt((e))

function xn(())

function eo((e,t))

function to((e,t))

function ze((e,t))

function xr((e,t))

function En((e,t))

function wn(())

function Tn(())

function Sn(())

function On(())

function Ln(())

function Er((e,{viewport$:t,header$:r}))

function Wa((e))

function Da((e))

function Mn((e,t=new Worker(e)))

function Te(())

function V((e))

function Me((e,t))

function Ce((e,t=document))

function me((e,t=document))

function Na((e))

function _n((e))

function za((e,{target$:t}))

function An((e,t))

function Dt((e,t))

function wr((...e))

function Cn((...e))

function kn((e,t))

function Hn((e))

function $n(())

function Pn(())

function oo((e,t))

function Fn((e))

function jn((e))

function no((e))

function Un((e))

function Qa((e))

function Wn((e,t))

function Ba((e,t=250))

function Vt((e,t,r=250))

function Xe((e,{viewport$:t},r=document.body))

function Ga((e,t))

function Dn((e,t,{target$:r}))

function Ja((e))

function Xa((e))

function Vn((e,t))

function Tr((e,t,{target$:r,print$:o}))

function Nn((e))

function zn((e,t))

function Qn((e))

function es((e))

function Yn((e,t))

function ts((e,{target$:t,print$:r}))

function Bn((e,t))

function rs((e))

function os((e,t))

function Jn((e,t))

function as(())

function Zn((e))

function ti((e))

function ss((e))

function ri((e,{viewport$:t,target$:r}))

function oi((e,t))

function cs((e,{alert$:t}))

function ni((e,t))

function ls((e,t))

function ii((e))

function ms(({viewport$:e}))

function ai((e,t))

function si((e,{header$:t,main$:r}))

function fs((e,{viewport$:t,header$:r}))

function ci((e,t))

function pi((e,{viewport$:t,header$:r}))

function us((e))

function li((e))

function mi((e,{progress$:t}))

function fi((e,t))

function ds((e,t))

function kt((e))

function ui(({document$:e}))

function hs((e))

function di(({alert$:e}))

function hi((e,t))

function bi((e))

function vi((e))

function bs((e))

function gi(({sitemap$:e,location$:t,viewport$:r,progress$:o}))

function xi((e))

function zt((e))

function Sr((e))

function Ei((e,t))

function wi((e))

function po((e,t))

function ys((e,t))

function xs((e,t))

function Es((e))

function Ti(({document$:e}))

function ws((e,{worker$:t}))

function Si((e,{worker$:t}))

function Oi((e,{worker$:t,query$:r}))

function Ts((e,{query$:t}))

function Li((e,t))

function Mi((e,{worker$:t,keyboard$:r}))

function _i((e,{index$:t,keyboard$:r}))

function Ai((e,{index$:t,location$:r}))

function Ss((e,{viewport$:t,main$:r}))

function lo((e,o))

function Ci((e,t))

function ki((e,t))

function Hi((e))

function Ls((e))

function $i((e))

function Ms((e,{viewport$:t,header$:r}))

function Pi((e,t))

function _s((e,{viewport$:t,header$:r}))

function Ri((e,{viewport$:t,header$:r,main$:o,target$:n}))

function As((e,{viewport$:t,main$:r,target$:o}))

function Ii((e,{viewport$:t,header$:r,main$:o,target$:n}))

function Fi(({document$:e,viewport$:t}))

function ji(({document$:e,tablet$:t}))

function Cs(())

function Ui(({document$:e}))

function Wi(({viewport$:e,tablet$:t}))

function ks(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ar.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.da.min.js
# Language: javascript

function e(())

function n(())

function t(())

function s(())

function o(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.de.min.js
# Language: javascript

function e((e,r,n))

function i(())

function s(())

function t(())

function o(())

function c(())

function u(())

function a(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.du.min.js
# Language: javascript

function e(())

function n((e))

function o(())

function t(())

function s(())

function u(())

function c(())

function a(())

function l(())

function m(())

function d(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.el.min.js
# Language: javascript

function e((e))

function t((e))

function r((e))

function n((n))


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.es.min.js
# Language: javascript

function e(())

function n(())

function i(())

function a(())

function t(())

function o(())

function u(())

function w(())

function c(())

function m(())

function l((e,s))

function d((e))

function b(())

function f(())

function _(())

function h(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.fi.min.js
# Language: javascript

function i(())

function n(())

function t(())

function s(())

function o(())

function l(())

function a(())

function u(())

function c(())

function m(())

function w(())

function _(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.fr.min.js
# Language: javascript

function e((e,r,s))

function i((e,r,s))

function n(())

function t(())

function u(())

function o(())

function c(())

function a(())

function l(())

function w(())

function f(())

function m(())

function _(())

function b(())

function d(())

function k(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.he.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.hi.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.hu.min.js
# Language: javascript

function e(())

function i(())

function a(())

function t(())

function s(())

function c(())

function o(())

function w(())

function l(())

function u(())

function m(())

function k(())

function f(())

function b(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.hy.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.it.min.js
# Language: javascript

function e((e,r,n))

function i(())

function o((e))

function t(())

function s(())

function a(())

function u(())

function c(())

function w(())

function l(())

function m(())

function f(())

function v(())

function b(())

function d(())

function _(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ja.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.jp.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.kn.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ko.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.multi.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.nl.min.js
# Language: javascript

function r(())

function n((r))

function o(())

function t(())

function s(())

function u(())

function c(())

function a(())

function l(())

function m(())

function f(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.no.min.js
# Language: javascript

function e(())

function i(())

function t(())

function o(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.pt.min.js
# Language: javascript

function e(())

function n(())

function i(())

function o(())

function t(())

function a(())

function u(())

function w(())

function m(())

function c(())

function l(())

function f(())

function d(())

function v((e,r))

function p(())

function _(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ro.min.js
# Language: javascript

function e((e,i))

function n(())

function t(())

function a(())

function o(())

function u(())

function c(())

function s(())

function w(())

function m(())

function l(())

function f(())

function p(())

function d(())

function b(())

function v(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ru.min.js
# Language: javascript

function e(())

function t(())

function w(())

function i(())

function u((e,n))

function o(())

function s((e,n))

function c(())

function m(())

function f(())

function l(())

function a(())

function p(())

function d(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.sa.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.stemmer.support.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.sv.min.js
# Language: javascript

function e(())

function t(())

function i(())

function s(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ta.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.te.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.th.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.tr.min.js
# Language: javascript

function r((r,i,e))

function n(())

function t((r,i))

function u((r))

function o(())

function s(())

function c(())

function l(())

function a(())

function m(())

function d(())

function f(())

function b(())

function w(())

function _(())

function k(())

function p(())

function g(())

function y(())

function z(())

function v(())

function h(())

function q(())

function C(())

function P(())

function F(())

function S(())

function W(())

function L(())

function x(())

function A(())

function E(())

function j(())

function T(())

function Z(())

function B(())

function D(())

function G(())

function H(())

function I(())

function J(())

function K(())

function M((r))

function N((r))

function O(())

function Q(())

function R(())

function U(())

function V(())

function X((r,i,e))

function Y(())

function $(())

function rr((r,i,e))

function ir(())

function er(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.vi.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.zh.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/tinyseg.js
# Language: javascript

function TinySegmenter(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/wordcut.js
# Language: javascript

function s((o,u))

function isMatch((pat, offset, ch))

function replacer((key, value))

function truncate((s, n))

function getMessage((self))

function fail((actual, expected, message, operator, stackStartFunction))

function ok((value, message))

function _deepEqual((actual, expected))

function isArguments((object))

function objEquiv((a, b))

function expectedException((actual, expected))

function _throws((shouldThrow, block, expected, message))

function balanced((a, b, str))

function maybeMatch((reg, str))

function range((a, b, str))

function numeric((str))

function escapeBraces((str))

function unescapeBraces((str))

function parseCommaParts((str))

function expandTop((str))

function identity((e))

function embrace((str))

function isPadded((el))

function lte((i, y))

function gte((i, y))

function expand((str, isTop))

function EventEmitter(())

function g(())

function isFunction((arg))

function isNumber((arg))

function isObject((arg))

function isUndefined((arg))

function ownProp((obj, field))

function alphasorti((a, b))

function alphasort((a, b))

function setupIgnores((self, options))

function ignoreMap((pattern))

function setopts((self, pattern, options))

function deprecationWarning((options))

function finish((self))

function mark((self, p))

function makeAbs((self, f))

function isIgnored((self, path))

function childrenIgnored((self, path))

function glob((pattern, options, cb))

function Glob((pattern, options, cb))

function done(())

function next(())

function lstatcb_((er, lstat))

function readdirCb((self, abs, cb))

function lstatcb_((er, lstat))

function globSync((pattern, options))

function GlobSync((pattern, options))

function inflight((key, cb))

function makeres((key))

function slice((args))

function charSet((s))

function filter((pattern, options))

function ext((a, b))

function minimatch((p, pattern, options))

function Minimatch((pattern, options))

function make(())

function parseNegate(())

function braceExpand((pattern, options))

function parse((pattern, isSub))

function clearStateChar(())

function makeRe(())

function match((f, partial))

function globUnescape((s))

function regExpEscape((s))

function once((fn))

function onceStrict((fn))

function normalizeArray((parts, allowAboveRoot))

function trim((arr))

function filter((xs, f))

function posix((path))

function win32((path))

function defaultSetTimout(())

function defaultClearTimeout(())

function runTimeout((fun))

function runClearTimeout((marker))

function cleanUpNextTick(())

function drainQueue(())

function Item((fun, array))

function noop(())

function createReduce((dir))

function iterator((obj, iteratee, memo, keys, index, length))

function createPredicateIndexFinder((dir))

function createIndexFinder((dir, predicateFind, sortedIndex))

function collectNonEnumProps((obj, keys))

function deprecated(())

function inspect((obj, opts))

function stylizeWithColor((str, styleType))

function stylizeNoColor((str, styleType))

function arrayToHash((array))

function formatValue((ctx, value, recurseTimes))

function formatPrimitive((ctx, value))

function formatError((value))

function formatArray((ctx, value, recurseTimes, visibleKeys, keys))

function formatProperty((ctx, value, recurseTimes, visibleKeys, key, array))

function reduceToSingleString((output, base, braces))

function isArray((ar))

function isBoolean((arg))

function isNull((arg))

function isNullOrUndefined((arg))

function isNumber((arg))

function isString((arg))

function isSymbol((arg))

function isUndefined((arg))

function isRegExp((re))

function isObject((arg))

function isDate((d))

function isError((e))

function isFunction((arg))

function isPrimitive((arg))

function objectToString((o))

function pad((n))

function timestamp(())

function hasOwnProperty((obj, prop))

function wrappy((fn, cb))

function wrapper(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/workers/search.ad38c271.min.js
# Language: javascript

function ne((t,e=document))

function ke((t,e=document))

function ie((t))

function H((t,e,r))

function se((t,e))

function oe((t,e,r,n=!1))

function q((t,e,r,n=!1))

function ae((t))

function ue((t,e=r=>r))

function ce((t))

function le((t))

function he((t,e))

function fe((t,e))

function Oe((t))

function Re((t,e))

function Ie((t))

function Fe((t))


<document index="13">
<source>docs/assets/stylesheets/main.8cce3a28.min.css</source>
<document_content>
@charset "UTF-8";html{-webkit-text-size-adjust:none;-moz-text-size-adjust:none;text-size-adjust:none;box-sizing:border-box}*,:after,:before{box-sizing:inherit}@media (prefers-reduced-motion){*,:after,:before{transition:none!important}}body{margin:0}a,button,input,label{-webkit-tap-highlight-color:transparent}a{color:inherit;text-decoration:none}hr{border:0;box-sizing:initial;display:block;height:.05rem;overflow:visible;padding:0}small{font-size:80%}sub,sup{line-height:1em}img{border-style:none}table{border-collapse:initial;border-spacing:0}td,th{font-weight:400;vertical-align:top}button{background:#0000;border:0;font-family:inherit;font-size:inherit;margin:0;padding:0}input{border:0;outline:none}:root{--md-primary-fg-color:#4051b5;--md-primary-fg-color--light:#5d6cc0;--md-primary-fg-color--dark:#303fa1;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3;--md-accent-fg-color:#526cfe;--md-accent-fg-color--transparent:#526cfe1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-scheme=default]{color-scheme:light}[data-md-color-scheme=default] img[src$="#gh-dark-mode-only"],[data-md-color-scheme=default] img[src$="#only-dark"]{display:none}:root,[data-md-color-scheme=default]{--md-hue:225deg;--md-default-fg-color:#000000de;--md-default-fg-color--light:#0000008a;--md-default-fg-color--lighter:#00000052;--md-default-fg-color--lightest:#00000012;--md-default-bg-color:#fff;--md-default-bg-color--light:#ffffffb3;--md-default-bg-color--lighter:#ffffff4d;--md-default-bg-color--lightest:#ffffff1f;--md-code-fg-color:#36464e;--md-code-bg-color:#f5f5f5;--md-code-bg-color--light:#f5f5f5b3;--md-code-bg-color--lighter:#f5f5f54d;--md-code-hl-color:#4287ff;--md-code-hl-color--light:#4287ff1a;--md-code-hl-number-color:#d52a2a;--md-code-hl-special-color:#db1457;--md-code-hl-function-color:#a846b9;--md-code-hl-constant-color:#6e59d9;--md-code-hl-keyword-color:#3f6ec6;--md-code-hl-string-color:#1c7d4d;--md-code-hl-name-color:var(--md-code-fg-color);--md-code-hl-operator-color:var(--md-default-fg-color--light);--md-code-hl-punctuation-color:var(--md-default-fg-color--light);--md-code-hl-comment-color:var(--md-default-fg-color--light);--md-code-hl-generic-color:var(--md-default-fg-color--light);--md-code-hl-variable-color:var(--md-default-fg-color--light);--md-typeset-color:var(--md-default-fg-color);--md-typeset-a-color:var(--md-primary-fg-color);--md-typeset-del-color:#f5503d26;--md-typeset-ins-color:#0bd57026;--md-typeset-kbd-color:#fafafa;--md-typeset-kbd-accent-color:#fff;--md-typeset-kbd-border-color:#b8b8b8;--md-typeset-mark-color:#ffff0080;--md-typeset-table-color:#0000001f;--md-typeset-table-color--light:rgba(0,0,0,.035);--md-admonition-fg-color:var(--md-default-fg-color);--md-admonition-bg-color:var(--md-default-bg-color);--md-warning-fg-color:#000000de;--md-warning-bg-color:#ff9;--md-footer-fg-color:#fff;--md-footer-fg-color--light:#ffffffb3;--md-footer-fg-color--lighter:#ffffff73;--md-footer-bg-color:#000000de;--md-footer-bg-color--dark:#00000052;--md-shadow-z1:0 0.2rem 0.5rem #0000000d,0 0 0.05rem #0000001a;--md-shadow-z2:0 0.2rem 0.5rem #0000001a,0 0 0.05rem #00000040;--md-shadow-z3:0 0.2rem 0.5rem #0003,0 0 0.05rem #00000059}.md-icon svg{fill:currentcolor;display:block;height:1.2rem;width:1.2rem}body{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;--md-text-font-family:var(--md-text-font,_),-apple-system,BlinkMacSystemFont,Helvetica,Arial,sans-serif;--md-code-font-family:var(--md-code-font,_),SFMono-Regular,Consolas,Menlo,monospace}aside,body,input{font-feature-settings:"kern","liga";color:var(--md-typeset-color);font-family:var(--md-text-font-family)}code,kbd,pre{font-feature-settings:"kern";font-family:var(--md-code-font-family)}:root{--md-typeset-table-sort-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m18 21-4-4h3V7h-3l4-4 4 4h-3v10h3M2 19v-2h10v2M2 13v-2h7v2M2 7V5h4v2z"/></svg>');--md-typeset-table-sort-icon--asc:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 17h3l-4 4-4-4h3V3h2M2 17h10v2H2M6 5v2H2V5m0 6h7v2H2z"/></svg>');--md-typeset-table-sort-icon--desc:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 7h3l-4-4-4 4h3v14h2M2 17h10v2H2M6 5v2H2V5m0 6h7v2H2z"/></svg>')}.md-typeset{-webkit-print-color-adjust:exact;color-adjust:exact;font-size:.8rem;line-height:1.6;overflow-wrap:break-word}@media print{.md-typeset{font-size:.68rem}}.md-typeset blockquote,.md-typeset dl,.md-typeset figure,.md-typeset ol,.md-typeset pre,.md-typeset ul{margin-bottom:1em;margin-top:1em}.md-typeset h1{color:var(--md-default-fg-color--light);font-size:2em;line-height:1.3;margin:0 0 1.25em}.md-typeset h1,.md-typeset h2{font-weight:300;letter-spacing:-.01em}.md-typeset h2{font-size:1.5625em;line-height:1.4;margin:1.6em 0 .64em}.md-typeset h3{font-size:1.25em;font-weight:400;letter-spacing:-.01em;line-height:1.5;margin:1.6em 0 .8em}.md-typeset h2+h3{margin-top:.8em}.md-typeset h4{font-weight:700;letter-spacing:-.01em;margin:1em 0}.md-typeset h5,.md-typeset h6{color:var(--md-default-fg-color--light);font-size:.8em;font-weight:700;letter-spacing:-.01em;margin:1.25em 0}.md-typeset h5{text-transform:uppercase}.md-typeset h5 code{text-transform:none}.md-typeset hr{border-bottom:.05rem solid var(--md-default-fg-color--lightest);display:flow-root;margin:1.5em 0}.md-typeset a{color:var(--md-typeset-a-color);word-break:break-word}.md-typeset a,.md-typeset a:before{transition:color 125ms}.md-typeset a:focus,.md-typeset a:hover{color:var(--md-accent-fg-color)}.md-typeset a:focus code,.md-typeset a:hover code{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-typeset a code{color:var(--md-typeset-a-color)}.md-typeset a.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-typeset code,.md-typeset kbd,.md-typeset pre{color:var(--md-code-fg-color);direction:ltr;font-variant-ligatures:none;transition:background-color 125ms}@media print{.md-typeset code,.md-typeset kbd,.md-typeset pre{white-space:pre-wrap}}.md-typeset code{background-color:var(--md-code-bg-color);border-radius:.1rem;-webkit-box-decoration-break:clone;box-decoration-break:clone;font-size:.85em;padding:0 .2941176471em;transition:color 125ms,background-color 125ms;word-break:break-word}.md-typeset code:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}.md-typeset pre{display:flow-root;line-height:1.4;position:relative}.md-typeset pre>code{-webkit-box-decoration-break:slice;box-decoration-break:slice;box-shadow:none;display:block;margin:0;outline-color:var(--md-accent-fg-color);overflow:auto;padding:.7720588235em 1.1764705882em;scrollbar-color:var(--md-default-fg-color--lighter) #0000;scrollbar-width:thin;touch-action:auto;word-break:normal}.md-typeset pre>code:hover{scrollbar-color:var(--md-accent-fg-color) #0000}.md-typeset pre>code::-webkit-scrollbar{height:.2rem;width:.2rem}.md-typeset pre>code::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-typeset pre>code::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}.md-typeset kbd{background-color:var(--md-typeset-kbd-color);border-radius:.1rem;box-shadow:0 .1rem 0 .05rem var(--md-typeset-kbd-border-color),0 .1rem 0 var(--md-typeset-kbd-border-color),0 -.1rem .2rem var(--md-typeset-kbd-accent-color) inset;color:var(--md-default-fg-color);display:inline-block;font-size:.75em;padding:0 .6666666667em;vertical-align:text-top;word-break:break-word}.md-typeset mark{background-color:var(--md-typeset-mark-color);-webkit-box-decoration-break:clone;box-decoration-break:clone;color:inherit;word-break:break-word}.md-typeset abbr{cursor:help;text-decoration:none}.md-typeset [data-preview],.md-typeset abbr{border-bottom:.05rem dotted var(--md-default-fg-color--light)}.md-typeset small{opacity:.75}[dir=ltr] .md-typeset sub,[dir=ltr] .md-typeset sup{margin-left:.078125em}[dir=rtl] .md-typeset sub,[dir=rtl] .md-typeset sup{margin-right:.078125em}[dir=ltr] .md-typeset blockquote{padding-left:.6rem}[dir=rtl] .md-typeset blockquote{padding-right:.6rem}[dir=ltr] .md-typeset blockquote{border-left:.2rem solid var(--md-default-fg-color--lighter)}[dir=rtl] .md-typeset blockquote{border-right:.2rem solid var(--md-default-fg-color--lighter)}.md-typeset blockquote{color:var(--md-default-fg-color--light);margin-left:0;margin-right:0}.md-typeset ul{list-style-type:disc}.md-typeset ul[type]{list-style-type:revert-layer}[dir=ltr] .md-typeset ol,[dir=ltr] .md-typeset ul{margin-left:.625em}[dir=rtl] .md-typeset ol,[dir=rtl] .md-typeset ul{margin-right:.625em}.md-typeset ol,.md-typeset ul{padding:0}.md-typeset ol:not([hidden]),.md-typeset ul:not([hidden]){display:flow-root}.md-typeset ol ol,.md-typeset ul ol{list-style-type:lower-alpha}.md-typeset ol ol ol,.md-typeset ul ol ol{list-style-type:lower-roman}.md-typeset ol ol ol ol,.md-typeset ul ol ol ol{list-style-type:upper-alpha}.md-typeset ol ol ol ol ol,.md-typeset ul ol ol ol ol{list-style-type:upper-roman}.md-typeset ol[type],.md-typeset ul[type]{list-style-type:revert-layer}[dir=ltr] .md-typeset ol li,[dir=ltr] .md-typeset ul li{margin-left:1.25em}[dir=rtl] .md-typeset ol li,[dir=rtl] .md-typeset ul li{margin-right:1.25em}.md-typeset ol li,.md-typeset ul li{margin-bottom:.5em}.md-typeset ol li blockquote,.md-typeset ol li p,.md-typeset ul li blockquote,.md-typeset ul li p{margin:.5em 0}.md-typeset ol li:last-child,.md-typeset ul li:last-child{margin-bottom:0}[dir=ltr] .md-typeset ol li ol,[dir=ltr] .md-typeset ol li ul,[dir=ltr] .md-typeset ul li ol,[dir=ltr] .md-typeset ul li ul{margin-left:.625em}[dir=rtl] .md-typeset ol li ol,[dir=rtl] .md-typeset ol li ul,[dir=rtl] .md-typeset ul li ol,[dir=rtl] .md-typeset ul li ul{margin-right:.625em}.md-typeset ol li ol,.md-typeset ol li ul,.md-typeset ul li ol,.md-typeset ul li ul{margin-bottom:.5em;margin-top:.5em}[dir=ltr] .md-typeset dd{margin-left:1.875em}[dir=rtl] .md-typeset dd{margin-right:1.875em}.md-typeset dd{margin-bottom:1.5em;margin-top:1em}.md-typeset img,.md-typeset svg,.md-typeset video{height:auto;max-width:100%}.md-typeset img[align=left]{margin:1em 1em 1em 0}.md-typeset img[align=right]{margin:1em 0 1em 1em}.md-typeset img[align]:only-child{margin-top:0}.md-typeset figure{display:flow-root;margin:1em auto;max-width:100%;text-align:center;width:-moz-fit-content;width:fit-content}.md-typeset figure img{display:block;margin:0 auto}.md-typeset figcaption{font-style:italic;margin:1em auto;max-width:24rem}.md-typeset iframe{max-width:100%}.md-typeset table:not([class]){background-color:var(--md-default-bg-color);border:.05rem solid var(--md-typeset-table-color);border-radius:.1rem;display:inline-block;font-size:.64rem;max-width:100%;overflow:auto;touch-action:auto}@media print{.md-typeset table:not([class]){display:table}}.md-typeset table:not([class])+*{margin-top:1.5em}.md-typeset table:not([class]) td>:first-child,.md-typeset table:not([class]) th>:first-child{margin-top:0}.md-typeset table:not([class]) td>:last-child,.md-typeset table:not([class]) th>:last-child{margin-bottom:0}.md-typeset table:not([class]) td:not([align]),.md-typeset table:not([class]) th:not([align]){text-align:left}[dir=rtl] .md-typeset table:not([class]) td:not([align]),[dir=rtl] .md-typeset table:not([class]) th:not([align]){text-align:right}.md-typeset table:not([class]) th{font-weight:700;min-width:5rem;padding:.9375em 1.25em;vertical-align:top}.md-typeset table:not([class]) td{border-top:.05rem solid var(--md-typeset-table-color);padding:.9375em 1.25em;vertical-align:top}.md-typeset table:not([class]) tbody tr{transition:background-color 125ms}.md-typeset table:not([class]) tbody tr:hover{background-color:var(--md-typeset-table-color--light);box-shadow:0 .05rem 0 var(--md-default-bg-color) inset}.md-typeset table:not([class]) a{word-break:normal}.md-typeset table th[role=columnheader]{cursor:pointer}[dir=ltr] .md-typeset table th[role=columnheader]:after{margin-left:.5em}[dir=rtl] .md-typeset table th[role=columnheader]:after{margin-right:.5em}.md-typeset table th[role=columnheader]:after{content:"";display:inline-block;height:1.2em;-webkit-mask-image:var(--md-typeset-table-sort-icon);mask-image:var(--md-typeset-table-sort-icon);-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:background-color 125ms;vertical-align:text-bottom;width:1.2em}.md-typeset table th[role=columnheader]:hover:after{background-color:var(--md-default-fg-color--lighter)}.md-typeset table th[role=columnheader][aria-sort=ascending]:after{background-color:var(--md-default-fg-color--light);-webkit-mask-image:var(--md-typeset-table-sort-icon--asc);mask-image:var(--md-typeset-table-sort-icon--asc)}.md-typeset table th[role=columnheader][aria-sort=descending]:after{background-color:var(--md-default-fg-color--light);-webkit-mask-image:var(--md-typeset-table-sort-icon--desc);mask-image:var(--md-typeset-table-sort-icon--desc)}.md-typeset__scrollwrap{margin:1em -.8rem;overflow-x:auto;touch-action:auto}.md-typeset__table{display:inline-block;margin-bottom:.5em;padding:0 .8rem}@media print{.md-typeset__table{display:block}}html .md-typeset__table table{display:table;margin:0;overflow:hidden;width:100%}@media screen and (max-width:44.984375em){.md-content__inner>pre{margin:1em -.8rem}.md-content__inner>pre code{border-radius:0}}.md-typeset .md-author{border-radius:100%;display:block;flex-shrink:0;height:1.6rem;overflow:hidden;position:relative;transition:color 125ms,transform 125ms;width:1.6rem}.md-typeset .md-author img{display:block}.md-typeset .md-author--more{background:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--lighter);font-size:.6rem;font-weight:700;line-height:1.6rem;text-align:center}.md-typeset .md-author--long{height:2.4rem;width:2.4rem}.md-typeset a.md-author{transform:scale(1)}.md-typeset a.md-author img{border-radius:100%;filter:grayscale(100%) opacity(75%);transition:filter 125ms}.md-typeset a.md-author:focus,.md-typeset a.md-author:hover{transform:scale(1.1);z-index:1}.md-typeset a.md-author:focus img,.md-typeset a.md-author:hover img{filter:grayscale(0)}.md-banner{background-color:var(--md-footer-bg-color);color:var(--md-footer-fg-color);overflow:auto}@media print{.md-banner{display:none}}.md-banner--warning{background-color:var(--md-warning-bg-color);color:var(--md-warning-fg-color)}.md-banner__inner{font-size:.7rem;margin:.6rem auto;padding:0 .8rem}[dir=ltr] .md-banner__button{float:right}[dir=rtl] .md-banner__button{float:left}.md-banner__button{color:inherit;cursor:pointer;transition:opacity .25s}.no-js .md-banner__button{display:none}.md-banner__button:hover{opacity:.7}html{font-size:125%;height:100%;overflow-x:hidden}@media screen and (min-width:100em){html{font-size:137.5%}}@media screen and (min-width:125em){html{font-size:150%}}body{background-color:var(--md-default-bg-color);display:flex;flex-direction:column;font-size:.5rem;min-height:100%;position:relative;width:100%}@media print{body{display:block}}@media screen and (max-width:59.984375em){body[data-md-scrolllock]{position:fixed}}.md-grid{margin-left:auto;margin-right:auto;max-width:61rem}.md-container{display:flex;flex-direction:column;flex-grow:1}@media print{.md-container{display:block}}.md-main{flex-grow:1}.md-main__inner{display:flex;height:100%;margin-top:1.5rem}.md-ellipsis{overflow:hidden;text-overflow:ellipsis}.md-toggle{display:none}.md-option{height:0;opacity:0;position:absolute;width:0}.md-option:checked+label:not([hidden]){display:block}.md-option.focus-visible+label{outline-color:var(--md-accent-fg-color);outline-style:auto}.md-skip{background-color:var(--md-default-fg-color);border-radius:.1rem;color:var(--md-default-bg-color);font-size:.64rem;margin:.5rem;opacity:0;outline-color:var(--md-accent-fg-color);padding:.3rem .5rem;position:fixed;transform:translateY(.4rem);z-index:-1}.md-skip:focus{opacity:1;transform:translateY(0);transition:transform .25s cubic-bezier(.4,0,.2,1),opacity 175ms 75ms;z-index:10}@page{margin:25mm}:root{--md-clipboard-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 21H8V7h11m0-2H8a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2m-3-4H4a2 2 0 0 0-2 2v14h2V3h12z"/></svg>')}.md-clipboard{border-radius:.1rem;color:var(--md-default-fg-color--lightest);cursor:pointer;height:1.5em;outline-color:var(--md-accent-fg-color);outline-offset:.1rem;transition:color .25s;width:1.5em;z-index:1}@media print{.md-clipboard{display:none}}.md-clipboard:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}:hover>.md-clipboard{color:var(--md-default-fg-color--light)}.md-clipboard:focus,.md-clipboard:hover{color:var(--md-accent-fg-color)}.md-clipboard:after{background-color:currentcolor;content:"";display:block;height:1.125em;margin:0 auto;-webkit-mask-image:var(--md-clipboard-icon);mask-image:var(--md-clipboard-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:1.125em}.md-clipboard--inline{cursor:pointer}.md-clipboard--inline code{transition:color .25s,background-color .25s}.md-clipboard--inline:focus code,.md-clipboard--inline:hover code{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}:root{--md-code-select-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 19h-4v2h4c1.1 0 2-.9 2-2v-4h-2m0-12h-4v2h4v4h2V5c0-1.1-.9-2-2-2M5 5h4V3H5c-1.1 0-2 .9-2 2v4h2m0 6H3v4c0 1.1.9 2 2 2h4v-2H5zm2-4h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2zM7 7h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2zm-8 8h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2z"/></svg>');--md-code-copy-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 21H8V7h11m0-2H8a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2m-3-4H4a2 2 0 0 0-2 2v14h2V3h12z"/></svg>')}.md-typeset .md-code__content{display:grid}.md-code__nav{background-color:var(--md-code-bg-color--lighter);border-radius:.1rem;display:flex;gap:.2rem;padding:.2rem;position:absolute;right:.25em;top:.25em;transition:background-color .25s;z-index:1}:hover>.md-code__nav{background-color:var(--md-code-bg-color--light)}.md-code__button{color:var(--md-default-fg-color--lightest);cursor:pointer;display:block;height:1.5em;outline-color:var(--md-accent-fg-color);outline-offset:.1rem;transition:color .25s;width:1.5em}:hover>*>.md-code__button{color:var(--md-default-fg-color--light)}.md-code__button.focus-visible,.md-code__button:hover{color:var(--md-accent-fg-color)}.md-code__button--active{color:var(--md-default-fg-color)!important}.md-code__button:after{background-color:currentcolor;content:"";display:block;height:1.125em;margin:0 auto;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:1.125em}.md-code__button[data-md-type=select]:after{-webkit-mask-image:var(--md-code-select-icon);mask-image:var(--md-code-select-icon)}.md-code__button[data-md-type=copy]:after{-webkit-mask-image:var(--md-code-copy-icon);mask-image:var(--md-code-copy-icon)}@keyframes consent{0%{opacity:0;transform:translateY(100%)}to{opacity:1;transform:translateY(0)}}@keyframes overlay{0%{opacity:0}to{opacity:1}}.md-consent__overlay{animation:overlay .25s both;-webkit-backdrop-filter:blur(.1rem);backdrop-filter:blur(.1rem);background-color:#0000008a;height:100%;opacity:1;position:fixed;top:0;width:100%;z-index:5}.md-consent__inner{animation:consent .5s cubic-bezier(.1,.7,.1,1) both;background-color:var(--md-default-bg-color);border:0;border-radius:.1rem;bottom:0;box-shadow:0 0 .2rem #0000001a,0 .2rem .4rem #0003;max-height:100%;overflow:auto;padding:0;position:fixed;width:100%;z-index:5}.md-consent__form{padding:.8rem}.md-consent__settings{display:none;margin:1em 0}input:checked+.md-consent__settings{display:block}.md-consent__controls{margin-bottom:.8rem}.md-typeset .md-consent__controls .md-button{display:inline}@media screen and (max-width:44.984375em){.md-typeset .md-consent__controls .md-button{display:block;margin-top:.4rem;text-align:center;width:100%}}.md-consent label{cursor:pointer}.md-content{flex-grow:1;min-width:0}.md-content__inner{margin:0 .8rem 1.2rem;padding-top:.6rem}@media screen and (min-width:76.25em){[dir=ltr] .md-sidebar--primary:not([hidden])~.md-content>.md-content__inner{margin-left:1.2rem}[dir=ltr] .md-sidebar--secondary:not([hidden])~.md-content>.md-content__inner,[dir=rtl] .md-sidebar--primary:not([hidden])~.md-content>.md-content__inner{margin-right:1.2rem}[dir=rtl] .md-sidebar--secondary:not([hidden])~.md-content>.md-content__inner{margin-left:1.2rem}}.md-content__inner:before{content:"";display:block;height:.4rem}.md-content__inner>:last-child{margin-bottom:0}[dir=ltr] .md-content__button{float:right}[dir=rtl] .md-content__button{float:left}[dir=ltr] .md-content__button{margin-left:.4rem}[dir=rtl] .md-content__button{margin-right:.4rem}.md-content__button{margin:.4rem 0;padding:0}@media print{.md-content__button{display:none}}.md-typeset .md-content__button{color:var(--md-default-fg-color--lighter)}.md-content__button svg{display:inline;vertical-align:top}[dir=rtl] .md-content__button svg{transform:scaleX(-1)}[dir=ltr] .md-dialog{right:.8rem}[dir=rtl] .md-dialog{left:.8rem}.md-dialog{background-color:var(--md-default-fg-color);border-radius:.1rem;bottom:.8rem;box-shadow:var(--md-shadow-z3);min-width:11.1rem;opacity:0;padding:.4rem .6rem;pointer-events:none;position:fixed;transform:translateY(100%);transition:transform 0ms .4s,opacity .4s;z-index:4}@media print{.md-dialog{display:none}}.md-dialog--active{opacity:1;pointer-events:auto;transform:translateY(0);transition:transform .4s cubic-bezier(.075,.85,.175,1),opacity .4s}.md-dialog__inner{color:var(--md-default-bg-color);font-size:.7rem}.md-feedback{margin:2em 0 1em;text-align:center}.md-feedback fieldset{border:none;margin:0;padding:0}.md-feedback__title{font-weight:700;margin:1em auto}.md-feedback__inner{position:relative}.md-feedback__list{display:flex;flex-wrap:wrap;place-content:baseline center;position:relative}.md-feedback__list:hover .md-icon:not(:disabled){color:var(--md-default-fg-color--lighter)}:disabled .md-feedback__list{min-height:1.8rem}.md-feedback__icon{color:var(--md-default-fg-color--light);cursor:pointer;flex-shrink:0;margin:0 .1rem;transition:color 125ms}.md-feedback__icon:not(:disabled).md-icon:hover{color:var(--md-accent-fg-color)}.md-feedback__icon:disabled{color:var(--md-default-fg-color--lightest);pointer-events:none}.md-feedback__note{opacity:0;position:relative;transform:translateY(.4rem);transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s}.md-feedback__note>*{margin:0 auto;max-width:16rem}:disabled .md-feedback__note{opacity:1;transform:translateY(0)}@media print{.md-feedback{display:none}}.md-footer{background-color:var(--md-footer-bg-color);color:var(--md-footer-fg-color)}@media print{.md-footer{display:none}}.md-footer__inner{justify-content:space-between;overflow:auto;padding:.2rem}.md-footer__inner:not([hidden]){display:flex}.md-footer__link{align-items:end;display:flex;flex-grow:0.01;margin-bottom:.4rem;margin-top:1rem;max-width:100%;outline-color:var(--md-accent-fg-color);overflow:hidden;transition:opacity .25s}.md-footer__link:focus,.md-footer__link:hover{opacity:.7}[dir=rtl] .md-footer__link svg{transform:scaleX(-1)}@media screen and (max-width:44.984375em){.md-footer__link--prev{flex-shrink:0}.md-footer__link--prev .md-footer__title{display:none}}[dir=ltr] .md-footer__link--next{margin-left:auto}[dir=rtl] .md-footer__link--next{margin-right:auto}.md-footer__link--next{text-align:right}[dir=rtl] .md-footer__link--next{text-align:left}.md-footer__title{flex-grow:1;font-size:.9rem;margin-bottom:.7rem;max-width:calc(100% - 2.4rem);padding:0 1rem;white-space:nowrap}.md-footer__button{margin:.2rem;padding:.4rem}.md-footer__direction{font-size:.64rem;opacity:.7}.md-footer-meta{background-color:var(--md-footer-bg-color--dark)}.md-footer-meta__inner{display:flex;flex-wrap:wrap;justify-content:space-between;padding:.2rem}html .md-footer-meta.md-typeset a{color:var(--md-footer-fg-color--light)}html .md-footer-meta.md-typeset a:focus,html .md-footer-meta.md-typeset a:hover{color:var(--md-footer-fg-color)}.md-copyright{color:var(--md-footer-fg-color--lighter);font-size:.64rem;margin:auto .6rem;padding:.4rem 0;width:100%}@media screen and (min-width:45em){.md-copyright{width:auto}}.md-copyright__highlight{color:var(--md-footer-fg-color--light)}.md-social{display:inline-flex;gap:.2rem;margin:0 .4rem;padding:.2rem 0 .6rem}@media screen and (min-width:45em){.md-social{padding:.6rem 0}}.md-social__link{display:inline-block;height:1.6rem;text-align:center;width:1.6rem}.md-social__link:before{line-height:1.9}.md-social__link svg{fill:currentcolor;max-height:.8rem;vertical-align:-25%}.md-typeset .md-button{border:.1rem solid;border-radius:.1rem;color:var(--md-primary-fg-color);cursor:pointer;display:inline-block;font-weight:700;padding:.625em 2em;transition:color 125ms,background-color 125ms,border-color 125ms}.md-typeset .md-button--primary{background-color:var(--md-primary-fg-color);border-color:var(--md-primary-fg-color);color:var(--md-primary-bg-color)}.md-typeset .md-button:focus,.md-typeset .md-button:hover{background-color:var(--md-accent-fg-color);border-color:var(--md-accent-fg-color);color:var(--md-accent-bg-color)}[dir=ltr] .md-typeset .md-input{border-top-left-radius:.1rem}[dir=ltr] .md-typeset .md-input,[dir=rtl] .md-typeset .md-input{border-top-right-radius:.1rem}[dir=rtl] .md-typeset .md-input{border-top-left-radius:.1rem}.md-typeset .md-input{border-bottom:.1rem solid var(--md-default-fg-color--lighter);box-shadow:var(--md-shadow-z1);font-size:.8rem;height:1.8rem;padding:0 .6rem;transition:border .25s,box-shadow .25s}.md-typeset .md-input:focus,.md-typeset .md-input:hover{border-bottom-color:var(--md-accent-fg-color);box-shadow:var(--md-shadow-z2)}.md-typeset .md-input--stretch{width:100%}.md-header{background-color:var(--md-primary-fg-color);box-shadow:0 0 .2rem #0000,0 .2rem .4rem #0000;color:var(--md-primary-bg-color);display:block;left:0;position:sticky;right:0;top:0;z-index:4}@media print{.md-header{display:none}}.md-header[hidden]{transform:translateY(-100%);transition:transform .25s cubic-bezier(.8,0,.6,1),box-shadow .25s}.md-header--shadow{box-shadow:0 0 .2rem #0000001a,0 .2rem .4rem #0003;transition:transform .25s cubic-bezier(.1,.7,.1,1),box-shadow .25s}.md-header__inner{align-items:center;display:flex;padding:0 .2rem}.md-header__button{color:currentcolor;cursor:pointer;margin:.2rem;outline-color:var(--md-accent-fg-color);padding:.4rem;position:relative;transition:opacity .25s;vertical-align:middle;z-index:1}.md-header__button:hover{opacity:.7}.md-header__button:not([hidden]){display:inline-block}.md-header__button:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}.md-header__button.md-logo{margin:.2rem;padding:.4rem}@media screen and (max-width:76.234375em){.md-header__button.md-logo{display:none}}.md-header__button.md-logo img,.md-header__button.md-logo svg{fill:currentcolor;display:block;height:1.2rem;width:auto}@media screen and (min-width:60em){.md-header__button[for=__search]{display:none}}.no-js .md-header__button[for=__search]{display:none}[dir=rtl] .md-header__button[for=__search] svg{transform:scaleX(-1)}@media screen and (min-width:76.25em){.md-header__button[for=__drawer]{display:none}}.md-header__topic{display:flex;max-width:100%;position:absolute;transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s;white-space:nowrap}.md-header__topic+.md-header__topic{opacity:0;pointer-events:none;transform:translateX(1.25rem);transition:transform .4s cubic-bezier(1,.7,.1,.1),opacity .15s;z-index:-1}[dir=rtl] .md-header__topic+.md-header__topic{transform:translateX(-1.25rem)}.md-header__topic:first-child{font-weight:700}[dir=ltr] .md-header__title{margin-left:1rem;margin-right:.4rem}[dir=rtl] .md-header__title{margin-left:.4rem;margin-right:1rem}.md-header__title{flex-grow:1;font-size:.9rem;height:2.4rem;line-height:2.4rem}.md-header__title--active .md-header__topic{opacity:0;pointer-events:none;transform:translateX(-1.25rem);transition:transform .4s cubic-bezier(1,.7,.1,.1),opacity .15s;z-index:-1}[dir=rtl] .md-header__title--active .md-header__topic{transform:translateX(1.25rem)}.md-header__title--active .md-header__topic+.md-header__topic{opacity:1;pointer-events:auto;transform:translateX(0);transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s;z-index:0}.md-header__title>.md-header__ellipsis{height:100%;position:relative;width:100%}.md-header__option{display:flex;flex-shrink:0;max-width:100%;transition:max-width 0ms .25s,opacity .25s .25s;white-space:nowrap}[data-md-toggle=search]:checked~.md-header .md-header__option{max-width:0;opacity:0;transition:max-width 0ms,opacity 0ms}.md-header__option>input{bottom:0}.md-header__source{display:none}@media screen and (min-width:60em){[dir=ltr] .md-header__source{margin-left:1rem}[dir=rtl] .md-header__source{margin-right:1rem}.md-header__source{display:block;max-width:11.7rem;width:11.7rem}}@media screen and (min-width:76.25em){[dir=ltr] .md-header__source{margin-left:1.4rem}[dir=rtl] .md-header__source{margin-right:1.4rem}}.md-meta{color:var(--md-default-fg-color--light);font-size:.7rem;line-height:1.3}.md-meta__list{display:inline-flex;flex-wrap:wrap;list-style:none;margin:0;padding:0}.md-meta__item:not(:last-child):after{content:"·";margin-left:.2rem;margin-right:.2rem}.md-meta__link{color:var(--md-typeset-a-color)}.md-meta__link:focus,.md-meta__link:hover{color:var(--md-accent-fg-color)}.md-draft{background-color:#ff1744;border-radius:.125em;color:#fff;display:inline-block;font-weight:700;padding-left:.5714285714em;padding-right:.5714285714em}:root{--md-nav-icon--prev:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20 11v2H8l5.5 5.5-1.42 1.42L4.16 12l7.92-7.92L13.5 5.5 8 11z"/></svg>');--md-nav-icon--next:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>');--md-toc-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 9h14V7H3zm0 4h14v-2H3zm0 4h14v-2H3zm16 0h2v-2h-2zm0-10v2h2V7zm0 6h2v-2h-2z"/></svg>')}.md-nav{font-size:.7rem;line-height:1.3}.md-nav__title{color:var(--md-default-fg-color--light);display:block;font-weight:700;overflow:hidden;padding:0 .6rem;text-overflow:ellipsis}.md-nav__title .md-nav__button{display:none}.md-nav__title .md-nav__button img{height:100%;width:auto}.md-nav__title .md-nav__button.md-logo img,.md-nav__title .md-nav__button.md-logo svg{fill:currentcolor;display:block;height:2.4rem;max-width:100%;object-fit:contain;width:auto}.md-nav__list{list-style:none;margin:0;padding:0}.md-nav__link{align-items:flex-start;display:flex;gap:.4rem;margin-top:.625em;scroll-snap-align:start;transition:color 125ms}.md-nav__link--passed,.md-nav__link--passed code{color:var(--md-default-fg-color--light)}.md-nav__item .md-nav__link--active,.md-nav__item .md-nav__link--active code{color:var(--md-typeset-a-color)}.md-nav__link .md-ellipsis{position:relative}.md-nav__link .md-ellipsis code{word-break:normal}[dir=ltr] .md-nav__link .md-icon:last-child{margin-left:auto}[dir=rtl] .md-nav__link .md-icon:last-child{margin-right:auto}.md-nav__link .md-typeset{font-size:.7rem;line-height:1.3}.md-nav__link svg{fill:currentcolor;flex-shrink:0;height:1.3em;position:relative}.md-nav__link[for]:focus,.md-nav__link[for]:hover,.md-nav__link[href]:focus,.md-nav__link[href]:hover{color:var(--md-accent-fg-color);cursor:pointer}.md-nav__link[for]:focus code,.md-nav__link[for]:hover code,.md-nav__link[href]:focus code,.md-nav__link[href]:hover code{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-nav__link.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-nav--primary .md-nav__link[for=__toc]{display:none}.md-nav--primary .md-nav__link[for=__toc] .md-icon:after{background-color:currentcolor;display:block;height:100%;-webkit-mask-image:var(--md-toc-icon);mask-image:var(--md-toc-icon);width:100%}.md-nav--primary .md-nav__link[for=__toc]~.md-nav{display:none}.md-nav__container>.md-nav__link{margin-top:0}.md-nav__container>.md-nav__link:first-child{flex-grow:1;min-width:0}.md-nav__icon{flex-shrink:0}.md-nav__source{display:none}@media screen and (max-width:76.234375em){.md-nav--primary,.md-nav--primary .md-nav{background-color:var(--md-default-bg-color);display:flex;flex-direction:column;height:100%;left:0;position:absolute;right:0;top:0;z-index:1}.md-nav--primary .md-nav__item,.md-nav--primary .md-nav__title{font-size:.8rem;line-height:1.5}.md-nav--primary .md-nav__title{background-color:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--light);cursor:pointer;height:5.6rem;line-height:2.4rem;padding:3rem .8rem .2rem;position:relative;white-space:nowrap}[dir=ltr] .md-nav--primary .md-nav__title .md-nav__icon{left:.4rem}[dir=rtl] .md-nav--primary .md-nav__title .md-nav__icon{right:.4rem}.md-nav--primary .md-nav__title .md-nav__icon{display:block;height:1.2rem;margin:.2rem;position:absolute;top:.4rem;width:1.2rem}.md-nav--primary .md-nav__title .md-nav__icon:after{background-color:currentcolor;content:"";display:block;height:100%;-webkit-mask-image:var(--md-nav-icon--prev);mask-image:var(--md-nav-icon--prev);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:100%}.md-nav--primary .md-nav__title~.md-nav__list{background-color:var(--md-default-bg-color);box-shadow:0 .05rem 0 var(--md-default-fg-color--lightest) inset;overflow-y:auto;scroll-snap-type:y mandatory;touch-action:pan-y}.md-nav--primary .md-nav__title~.md-nav__list>:first-child{border-top:0}.md-nav--primary .md-nav__title[for=__drawer]{background-color:var(--md-primary-fg-color);color:var(--md-primary-bg-color);font-weight:700}.md-nav--primary .md-nav__title .md-logo{display:block;left:.2rem;margin:.2rem;padding:.4rem;position:absolute;right:.2rem;top:.2rem}.md-nav--primary .md-nav__list{flex:1}.md-nav--primary .md-nav__item{border-top:.05rem solid var(--md-default-fg-color--lightest)}.md-nav--primary .md-nav__item--active>.md-nav__link{color:var(--md-typeset-a-color)}.md-nav--primary .md-nav__item--active>.md-nav__link:focus,.md-nav--primary .md-nav__item--active>.md-nav__link:hover{color:var(--md-accent-fg-color)}.md-nav--primary .md-nav__link{margin-top:0;padding:.6rem .8rem}.md-nav--primary .md-nav__link svg{margin-top:.1em}.md-nav--primary .md-nav__link>.md-nav__link{padding:0}[dir=ltr] .md-nav--primary .md-nav__link .md-nav__icon{margin-right:-.2rem}[dir=rtl] .md-nav--primary .md-nav__link .md-nav__icon{margin-left:-.2rem}.md-nav--primary .md-nav__link .md-nav__icon{font-size:1.2rem;height:1.2rem;width:1.2rem}.md-nav--primary .md-nav__link .md-nav__icon:after{background-color:currentcolor;content:"";display:block;height:100%;-webkit-mask-image:var(--md-nav-icon--next);mask-image:var(--md-nav-icon--next);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:100%}[dir=rtl] .md-nav--primary .md-nav__icon:after{transform:scale(-1)}.md-nav--primary .md-nav--secondary .md-nav{background-color:initial;position:static}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav__link{padding-left:1.4rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav__link{padding-right:1.4rem}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav__link{padding-left:2rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav__link{padding-right:2rem}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav__link{padding-left:2.6rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav__link{padding-right:2.6rem}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav .md-nav__link{padding-left:3.2rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav .md-nav__link{padding-right:3.2rem}.md-nav--secondary{background-color:initial}.md-nav__toggle~.md-nav{display:flex;opacity:0;transform:translateX(100%);transition:transform .25s cubic-bezier(.8,0,.6,1),opacity 125ms 50ms}[dir=rtl] .md-nav__toggle~.md-nav{transform:translateX(-100%)}.md-nav__toggle:checked~.md-nav{opacity:1;transform:translateX(0);transition:transform .25s cubic-bezier(.4,0,.2,1),opacity 125ms 125ms}.md-nav__toggle:checked~.md-nav>.md-nav__list{-webkit-backface-visibility:hidden;backface-visibility:hidden}}@media screen and (max-width:59.984375em){.md-nav--primary .md-nav__link[for=__toc]{display:flex}.md-nav--primary .md-nav__link[for=__toc] .md-icon:after{content:""}.md-nav--primary .md-nav__link[for=__toc]+.md-nav__link{display:none}.md-nav--primary .md-nav__link[for=__toc]~.md-nav{display:flex}.md-nav__source{background-color:var(--md-primary-fg-color--dark);color:var(--md-primary-bg-color);display:block;padding:0 .2rem}}@media screen and (min-width:60em) and (max-width:76.234375em){.md-nav--integrated .md-nav__link[for=__toc]{display:flex}.md-nav--integrated .md-nav__link[for=__toc] .md-icon:after{content:""}.md-nav--integrated .md-nav__link[for=__toc]+.md-nav__link{display:none}.md-nav--integrated .md-nav__link[for=__toc]~.md-nav{display:flex}}@media screen and (min-width:60em){.md-nav{margin-bottom:-.4rem}.md-nav--secondary .md-nav__title{background:var(--md-default-bg-color);box-shadow:0 0 .4rem .4rem var(--md-default-bg-color);position:sticky;top:0;z-index:1}.md-nav--secondary .md-nav__title[for=__toc]{scroll-snap-align:start}.md-nav--secondary .md-nav__title .md-nav__icon{display:none}[dir=ltr] .md-nav--secondary .md-nav__list{padding-left:.6rem}[dir=rtl] .md-nav--secondary .md-nav__list{padding-right:.6rem}.md-nav--secondary .md-nav__list{padding-bottom:.4rem}[dir=ltr] .md-nav--secondary .md-nav__item>.md-nav__link{margin-right:.4rem}[dir=rtl] .md-nav--secondary .md-nav__item>.md-nav__link{margin-left:.4rem}}@media screen and (min-width:76.25em){.md-nav{margin-bottom:-.4rem;transition:max-height .25s cubic-bezier(.86,0,.07,1)}.md-nav--primary .md-nav__title{background:var(--md-default-bg-color);box-shadow:0 0 .4rem .4rem var(--md-default-bg-color);position:sticky;top:0;z-index:1}.md-nav--primary .md-nav__title[for=__drawer]{scroll-snap-align:start}.md-nav--primary .md-nav__title .md-nav__icon{display:none}[dir=ltr] .md-nav--primary .md-nav__list{padding-left:.6rem}[dir=rtl] .md-nav--primary .md-nav__list{padding-right:.6rem}.md-nav--primary .md-nav__list{padding-bottom:.4rem}[dir=ltr] .md-nav--primary .md-nav__item>.md-nav__link{margin-right:.4rem}[dir=rtl] .md-nav--primary .md-nav__item>.md-nav__link{margin-left:.4rem}.md-nav__toggle~.md-nav{display:grid;grid-template-rows:minmax(.4rem,0fr);opacity:0;transition:grid-template-rows .25s cubic-bezier(.86,0,.07,1),opacity .25s,visibility 0ms .25s;visibility:collapse}.md-nav__toggle~.md-nav>.md-nav__list{overflow:hidden}.md-nav__toggle.md-toggle--indeterminate~.md-nav,.md-nav__toggle:checked~.md-nav{grid-template-rows:minmax(.4rem,1fr);opacity:1;transition:grid-template-rows .25s cubic-bezier(.86,0,.07,1),opacity .15s .1s,visibility 0ms;visibility:visible}.md-nav__toggle.md-toggle--indeterminate~.md-nav{transition:none}.md-nav__item--nested>.md-nav>.md-nav__title{display:none}.md-nav__item--section{display:block;margin:1.25em 0}.md-nav__item--section:last-child{margin-bottom:0}.md-nav__item--section>.md-nav__link{font-weight:700}.md-nav__item--section>.md-nav__link[for]{color:var(--md-default-fg-color--light)}.md-nav__item--section>.md-nav__link:not(.md-nav__container){pointer-events:none}.md-nav__item--section>.md-nav__link .md-icon,.md-nav__item--section>.md-nav__link>[for]{display:none}[dir=ltr] .md-nav__item--section>.md-nav{margin-left:-.6rem}[dir=rtl] .md-nav__item--section>.md-nav{margin-right:-.6rem}.md-nav__item--section>.md-nav{display:block;opacity:1;visibility:visible}.md-nav__item--section>.md-nav>.md-nav__list>.md-nav__item{padding:0}.md-nav__icon{border-radius:100%;height:.9rem;transition:background-color .25s;width:.9rem}.md-nav__icon:hover{background-color:var(--md-accent-fg-color--transparent)}.md-nav__icon:after{background-color:currentcolor;border-radius:100%;content:"";display:inline-block;height:100%;-webkit-mask-image:var(--md-nav-icon--next);mask-image:var(--md-nav-icon--next);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:transform .25s;vertical-align:-.1rem;width:100%}[dir=rtl] .md-nav__icon:after{transform:rotate(180deg)}.md-nav__item--nested .md-nav__toggle:checked~.md-nav__link .md-nav__icon:after,.md-nav__item--nested .md-toggle--indeterminate~.md-nav__link .md-nav__icon:after{transform:rotate(90deg)}.md-nav--lifted>.md-nav__list>.md-nav__item,.md-nav--lifted>.md-nav__title{display:none}.md-nav--lifted>.md-nav__list>.md-nav__item--active{display:block}.md-nav--lifted>.md-nav__list>.md-nav__item--active>.md-nav__link{background:var(--md-default-bg-color);box-shadow:0 0 .4rem .4rem var(--md-default-bg-color);margin-top:0;position:sticky;top:0;z-index:1}.md-nav--lifted>.md-nav__list>.md-nav__item--active>.md-nav__link:not(.md-nav__container){pointer-events:none}.md-nav--lifted>.md-nav__list>.md-nav__item--active.md-nav__item--section{margin:0}[dir=ltr] .md-nav--lifted>.md-nav__list>.md-nav__item>.md-nav:not(.md-nav--secondary){margin-left:-.6rem}[dir=rtl] .md-nav--lifted>.md-nav__list>.md-nav__item>.md-nav:not(.md-nav--secondary){margin-right:-.6rem}.md-nav--lifted>.md-nav__list>.md-nav__item>[for]{color:var(--md-default-fg-color--light)}.md-nav--lifted .md-nav[data-md-level="1"]{grid-template-rows:minmax(.4rem,1fr);opacity:1;visibility:visible}[dir=ltr] .md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary{border-left:.05rem solid var(--md-primary-fg-color)}[dir=rtl] .md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary{border-right:.05rem solid var(--md-primary-fg-color)}.md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary{display:block;margin-bottom:1.25em;opacity:1;visibility:visible}.md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary>.md-nav__list{overflow:visible;padding-bottom:0}.md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary>.md-nav__title{display:none}}.md-pagination{font-size:.8rem;font-weight:700;gap:.4rem}.md-pagination,.md-pagination>*{align-items:center;display:flex;justify-content:center}.md-pagination>*{border-radius:.2rem;height:1.8rem;min-width:1.8rem;text-align:center}.md-pagination__current{background-color:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--light)}.md-pagination__link{transition:color 125ms,background-color 125ms}.md-pagination__link:focus,.md-pagination__link:hover{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-pagination__link:focus svg,.md-pagination__link:hover svg{color:var(--md-accent-fg-color)}.md-pagination__link.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-pagination__link svg{fill:currentcolor;color:var(--md-default-fg-color--lighter);display:block;max-height:100%;width:1.2rem}:root{--md-path-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>')}.md-path{font-size:.7rem;margin:0 .8rem;overflow:auto;padding-top:1.2rem}.md-path:not([hidden]){display:block}@media screen and (min-width:76.25em){.md-path{margin:0 1.2rem}}.md-path__list{align-items:center;display:flex;gap:.2rem;list-style:none;margin:0;padding:0}.md-path__item:not(:first-child){display:inline-flex;gap:.2rem;white-space:nowrap}.md-path__item:not(:first-child):before{background-color:var(--md-default-fg-color--lighter);content:"";display:inline;height:.8rem;-webkit-mask-image:var(--md-path-icon);mask-image:var(--md-path-icon);width:.8rem}.md-path__link{align-items:center;color:var(--md-default-fg-color--light);display:flex}.md-path__link:focus,.md-path__link:hover{color:var(--md-accent-fg-color)}:root{--md-post-pin-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16 12V4h1V2H7v2h1v8l-2 2v2h5.2v6h1.6v-6H18v-2z"/></svg>')}.md-post__back{border-bottom:.05rem solid var(--md-default-fg-color--lightest);margin-bottom:1.2rem;padding-bottom:1.2rem}@media screen and (max-width:76.234375em){.md-post__back{display:none}}[dir=rtl] .md-post__back svg{transform:scaleX(-1)}.md-post__authors{display:flex;flex-direction:column;gap:.6rem;margin:0 .6rem 1.2rem}.md-post .md-post__meta a{transition:color 125ms}.md-post .md-post__meta a:focus,.md-post .md-post__meta a:hover{color:var(--md-accent-fg-color)}.md-post__title{color:var(--md-default-fg-color--light);font-weight:700}.md-post--excerpt{margin-bottom:3.2rem}.md-post--excerpt .md-post__header{align-items:center;display:flex;gap:.6rem;min-height:1.6rem}.md-post--excerpt .md-post__authors{align-items:center;display:inline-flex;flex-direction:row;gap:.2rem;margin:0;min-height:2.4rem}[dir=ltr] .md-post--excerpt .md-post__meta .md-meta__list{margin-right:.4rem}[dir=rtl] .md-post--excerpt .md-post__meta .md-meta__list{margin-left:.4rem}.md-post--excerpt .md-post__content>:first-child{--md-scroll-margin:6rem;margin-top:0}.md-post>.md-nav--secondary{margin:1em 0}.md-pin{background:var(--md-default-fg-color--lightest);border-radius:1rem;margin-top:-.05rem;padding:.2rem}.md-pin:after{background-color:currentcolor;content:"";display:block;height:.6rem;margin:0 auto;-webkit-mask-image:var(--md-post-pin-icon);mask-image:var(--md-post-pin-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:.6rem}.md-profile{align-items:center;display:flex;font-size:.7rem;gap:.6rem;line-height:1.4;width:100%}.md-profile__description{flex-grow:1}.md-content--post{display:flex}@media screen and (max-width:76.234375em){.md-content--post{flex-flow:column-reverse}}.md-content--post>.md-content__inner{flex-grow:1;min-width:0}@media screen and (min-width:76.25em){[dir=ltr] .md-content--post>.md-content__inner{margin-left:1.2rem}[dir=rtl] .md-content--post>.md-content__inner{margin-right:1.2rem}}@media screen and (max-width:76.234375em){.md-sidebar.md-sidebar--post{padding:0;position:static;width:100%}.md-sidebar.md-sidebar--post .md-sidebar__scrollwrap{overflow:visible}.md-sidebar.md-sidebar--post .md-sidebar__inner{padding:0}.md-sidebar.md-sidebar--post .md-post__meta{margin-left:.6rem;margin-right:.6rem}.md-sidebar.md-sidebar--post .md-nav__item{border:none;display:inline}.md-sidebar.md-sidebar--post .md-nav__list{display:inline-flex;flex-wrap:wrap;gap:.6rem;padding-bottom:.6rem;padding-top:.6rem}.md-sidebar.md-sidebar--post .md-nav__link{padding:0}.md-sidebar.md-sidebar--post .md-nav{height:auto;margin-bottom:0;position:static}}:root{--md-progress-value:0;--md-progress-delay:400ms}.md-progress{background:var(--md-primary-bg-color);height:.075rem;opacity:min(clamp(0,var(--md-progress-value),1),clamp(0,100 - var(--md-progress-value),1));position:fixed;top:0;transform:scaleX(calc(var(--md-progress-value)*1%));transform-origin:left;transition:transform .5s cubic-bezier(.19,1,.22,1),opacity .25s var(--md-progress-delay);width:100%;z-index:4}:root{--md-search-result-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h7c-.41-.25-.8-.56-1.14-.9-.33-.33-.61-.7-.86-1.1H6V4h7v5h5v1.18c.71.16 1.39.43 2 .82V8zm6.31 16.9c1.33-2.11.69-4.9-1.4-6.22-2.11-1.33-4.91-.68-6.22 1.4-1.34 2.11-.69 4.89 1.4 6.22 1.46.93 3.32.93 4.79.02L22 23.39 23.39 22zm-3.81.1a2.5 2.5 0 0 1-2.5-2.5 2.5 2.5 0 0 1 2.5-2.5 2.5 2.5 0 0 1 2.5 2.5 2.5 2.5 0 0 1-2.5 2.5"/></svg>')}.md-search{position:relative}@media screen and (min-width:60em){.md-search{padding:.2rem 0}}.no-js .md-search{display:none}.md-search__overlay{opacity:0;z-index:1}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__overlay{left:-2.2rem}[dir=rtl] .md-search__overlay{right:-2.2rem}.md-search__overlay{background-color:var(--md-default-bg-color);border-radius:1rem;height:2rem;overflow:hidden;pointer-events:none;position:absolute;top:-1rem;transform-origin:center;transition:transform .3s .1s,opacity .2s .2s;width:2rem}[data-md-toggle=search]:checked~.md-header .md-search__overlay{opacity:1;transition:transform .4s,opacity .1s}}@media screen and (min-width:60em){[dir=ltr] .md-search__overlay{left:0}[dir=rtl] .md-search__overlay{right:0}.md-search__overlay{background-color:#0000008a;cursor:pointer;height:0;position:fixed;top:0;transition:width 0ms .25s,height 0ms .25s,opacity .25s;width:0}[data-md-toggle=search]:checked~.md-header .md-search__overlay{height:200vh;opacity:1;transition:width 0ms,height 0ms,opacity .25s;width:100%}}@media screen and (max-width:29.984375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{transform:scale(45)}}@media screen and (min-width:30em) and (max-width:44.984375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{transform:scale(60)}}@media screen and (min-width:45em) and (max-width:59.984375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{transform:scale(75)}}.md-search__inner{-webkit-backface-visibility:hidden;backface-visibility:hidden}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__inner{left:0}[dir=rtl] .md-search__inner{right:0}.md-search__inner{height:0;opacity:0;overflow:hidden;position:fixed;top:0;transform:translateX(5%);transition:width 0ms .3s,height 0ms .3s,transform .15s cubic-bezier(.4,0,.2,1) .15s,opacity .15s .15s;width:0;z-index:2}[dir=rtl] .md-search__inner{transform:translateX(-5%)}[data-md-toggle=search]:checked~.md-header .md-search__inner{height:100%;opacity:1;transform:translateX(0);transition:width 0ms 0ms,height 0ms 0ms,transform .15s cubic-bezier(.1,.7,.1,1) .15s,opacity .15s .15s;width:100%}}@media screen and (min-width:60em){[dir=ltr] .md-search__inner{float:right}[dir=rtl] .md-search__inner{float:left}.md-search__inner{padding:.1rem 0;position:relative;transition:width .25s cubic-bezier(.1,.7,.1,1);width:11.7rem}}@media screen and (min-width:60em) and (max-width:76.234375em){[data-md-toggle=search]:checked~.md-header .md-search__inner{width:23.4rem}}@media screen and (min-width:76.25em){[data-md-toggle=search]:checked~.md-header .md-search__inner{width:34.4rem}}.md-search__form{background-color:var(--md-default-bg-color);box-shadow:0 0 .6rem #0000;height:2.4rem;position:relative;transition:color .25s,background-color .25s;z-index:2}@media screen and (min-width:60em){.md-search__form{background-color:#00000042;border-radius:.1rem;height:1.8rem}.md-search__form:hover{background-color:#ffffff1f}}[data-md-toggle=search]:checked~.md-header .md-search__form{background-color:var(--md-default-bg-color);border-radius:.1rem .1rem 0 0;box-shadow:0 0 .6rem #00000012;color:var(--md-default-fg-color)}[dir=ltr] .md-search__input{padding-left:3.6rem;padding-right:2.2rem}[dir=rtl] .md-search__input{padding-left:2.2rem;padding-right:3.6rem}.md-search__input{background:#0000;font-size:.9rem;height:100%;position:relative;text-overflow:ellipsis;width:100%;z-index:2}.md-search__input::placeholder{transition:color .25s}.md-search__input::placeholder,.md-search__input~.md-search__icon{color:var(--md-default-fg-color--light)}.md-search__input::-ms-clear{display:none}@media screen and (max-width:59.984375em){.md-search__input{font-size:.9rem;height:2.4rem;width:100%}}@media screen and (min-width:60em){[dir=ltr] .md-search__input{padding-left:2.2rem}[dir=rtl] .md-search__input{padding-right:2.2rem}.md-search__input{color:inherit;font-size:.8rem}.md-search__input::placeholder{color:var(--md-primary-bg-color--light)}.md-search__input+.md-search__icon{color:var(--md-primary-bg-color)}[data-md-toggle=search]:checked~.md-header .md-search__input{text-overflow:clip}[data-md-toggle=search]:checked~.md-header .md-search__input+.md-search__icon{color:var(--md-default-fg-color--light)}[data-md-toggle=search]:checked~.md-header .md-search__input::placeholder{color:#0000}}.md-search__icon{cursor:pointer;display:inline-block;height:1.2rem;transition:color .25s,opacity .25s;width:1.2rem}.md-search__icon:hover{opacity:.7}[dir=ltr] .md-search__icon[for=__search]{left:.5rem}[dir=rtl] .md-search__icon[for=__search]{right:.5rem}.md-search__icon[for=__search]{position:absolute;top:.3rem;z-index:2}[dir=rtl] .md-search__icon[for=__search] svg{transform:scaleX(-1)}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__icon[for=__search]{left:.8rem}[dir=rtl] .md-search__icon[for=__search]{right:.8rem}.md-search__icon[for=__search]{top:.6rem}.md-search__icon[for=__search] svg:first-child{display:none}}@media screen and (min-width:60em){.md-search__icon[for=__search]{pointer-events:none}.md-search__icon[for=__search] svg:last-child{display:none}}[dir=ltr] .md-search__options{right:.5rem}[dir=rtl] .md-search__options{left:.5rem}.md-search__options{pointer-events:none;position:absolute;top:.3rem;z-index:2}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__options{right:.8rem}[dir=rtl] .md-search__options{left:.8rem}.md-search__options{top:.6rem}}[dir=ltr] .md-search__options>.md-icon{margin-left:.2rem}[dir=rtl] .md-search__options>.md-icon{margin-right:.2rem}.md-search__options>.md-icon{color:var(--md-default-fg-color--light);opacity:0;transform:scale(.75);transition:transform .15s cubic-bezier(.1,.7,.1,1),opacity .15s}.md-search__options>.md-icon:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}[data-md-toggle=search]:checked~.md-header .md-search__input:valid~.md-search__options>.md-icon{opacity:1;pointer-events:auto;transform:scale(1)}[data-md-toggle=search]:checked~.md-header .md-search__input:valid~.md-search__options>.md-icon:hover{opacity:.7}[dir=ltr] .md-search__suggest{padding-left:3.6rem;padding-right:2.2rem}[dir=rtl] .md-search__suggest{padding-left:2.2rem;padding-right:3.6rem}.md-search__suggest{align-items:center;color:var(--md-default-fg-color--lighter);display:flex;font-size:.9rem;height:100%;opacity:0;position:absolute;top:0;transition:opacity 50ms;white-space:nowrap;width:100%}@media screen and (min-width:60em){[dir=ltr] .md-search__suggest{padding-left:2.2rem}[dir=rtl] .md-search__suggest{padding-right:2.2rem}.md-search__suggest{font-size:.8rem}}[data-md-toggle=search]:checked~.md-header .md-search__suggest{opacity:1;transition:opacity .3s .1s}[dir=ltr] .md-search__output{border-bottom-left-radius:.1rem}[dir=ltr] .md-search__output,[dir=rtl] .md-search__output{border-bottom-right-radius:.1rem}[dir=rtl] .md-search__output{border-bottom-left-radius:.1rem}.md-search__output{overflow:hidden;position:absolute;width:100%;z-index:1}@media screen and (max-width:59.984375em){.md-search__output{bottom:0;top:2.4rem}}@media screen and (min-width:60em){.md-search__output{opacity:0;top:1.9rem;transition:opacity .4s}[data-md-toggle=search]:checked~.md-header .md-search__output{box-shadow:var(--md-shadow-z3);opacity:1}}.md-search__scrollwrap{-webkit-backface-visibility:hidden;backface-visibility:hidden;background-color:var(--md-default-bg-color);height:100%;overflow-y:auto;touch-action:pan-y}@media (-webkit-max-device-pixel-ratio:1),(max-resolution:1dppx){.md-search__scrollwrap{transform:translateZ(0)}}@media screen and (min-width:60em) and (max-width:76.234375em){.md-search__scrollwrap{width:23.4rem}}@media screen and (min-width:76.25em){.md-search__scrollwrap{width:34.4rem}}@media screen and (min-width:60em){.md-search__scrollwrap{max-height:0;scrollbar-color:var(--md-default-fg-color--lighter) #0000;scrollbar-width:thin}[data-md-toggle=search]:checked~.md-header .md-search__scrollwrap{max-height:75vh}.md-search__scrollwrap:hover{scrollbar-color:var(--md-accent-fg-color) #0000}.md-search__scrollwrap::-webkit-scrollbar{height:.2rem;width:.2rem}.md-search__scrollwrap::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-search__scrollwrap::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}}.md-search-result{color:var(--md-default-fg-color);word-break:break-word}.md-search-result__meta{background-color:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--light);font-size:.64rem;line-height:1.8rem;padding:0 .8rem;scroll-snap-align:start}@media screen and (min-width:60em){[dir=ltr] .md-search-result__meta{padding-left:2.2rem}[dir=rtl] .md-search-result__meta{padding-right:2.2rem}}.md-search-result__list{list-style:none;margin:0;padding:0;-webkit-user-select:none;user-select:none}.md-search-result__item{box-shadow:0 -.05rem var(--md-default-fg-color--lightest)}.md-search-result__item:first-child{box-shadow:none}.md-search-result__link{display:block;outline:none;scroll-snap-align:start;transition:background-color .25s}.md-search-result__link:focus,.md-search-result__link:hover{background-color:var(--md-accent-fg-color--transparent)}.md-search-result__link:last-child p:last-child{margin-bottom:.6rem}.md-search-result__more>summary{cursor:pointer;display:block;outline:none;position:sticky;scroll-snap-align:start;top:0;z-index:1}.md-search-result__more>summary::marker{display:none}.md-search-result__more>summary::-webkit-details-marker{display:none}.md-search-result__more>summary>div{color:var(--md-typeset-a-color);font-size:.64rem;padding:.75em .8rem;transition:color .25s,background-color .25s}@media screen and (min-width:60em){[dir=ltr] .md-search-result__more>summary>div{padding-left:2.2rem}[dir=rtl] .md-search-result__more>summary>div{padding-right:2.2rem}}.md-search-result__more>summary:focus>div,.md-search-result__more>summary:hover>div{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-search-result__more[open]>summary{background-color:var(--md-default-bg-color)}.md-search-result__article{overflow:hidden;padding:0 .8rem;position:relative}@media screen and (min-width:60em){[dir=ltr] .md-search-result__article{padding-left:2.2rem}[dir=rtl] .md-search-result__article{padding-right:2.2rem}}[dir=ltr] .md-search-result__icon{left:0}[dir=rtl] .md-search-result__icon{right:0}.md-search-result__icon{color:var(--md-default-fg-color--light);height:1.2rem;margin:.5rem;position:absolute;width:1.2rem}@media screen and (max-width:59.984375em){.md-search-result__icon{display:none}}.md-search-result__icon:after{background-color:currentcolor;content:"";display:inline-block;height:100%;-webkit-mask-image:var(--md-search-result-icon);mask-image:var(--md-search-result-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:100%}[dir=rtl] .md-search-result__icon:after{transform:scaleX(-1)}.md-search-result .md-typeset{color:var(--md-default-fg-color--light);font-size:.64rem;line-height:1.6}.md-search-result .md-typeset h1{color:var(--md-default-fg-color);font-size:.8rem;font-weight:400;line-height:1.4;margin:.55rem 0}.md-search-result .md-typeset h1 mark{text-decoration:none}.md-search-result .md-typeset h2{color:var(--md-default-fg-color);font-size:.64rem;font-weight:700;line-height:1.6;margin:.5em 0}.md-search-result .md-typeset h2 mark{text-decoration:none}.md-search-result__terms{color:var(--md-default-fg-color);display:block;font-size:.64rem;font-style:italic;margin:.5em 0}.md-search-result mark{background-color:initial;color:var(--md-accent-fg-color);text-decoration:underline}.md-select{position:relative;z-index:1}.md-select__inner{background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color);left:50%;margin-top:.2rem;max-height:0;opacity:0;position:absolute;top:calc(100% - .2rem);transform:translate3d(-50%,.3rem,0);transition:transform .25s 375ms,opacity .25s .25s,max-height 0ms .5s}.md-select:focus-within .md-select__inner,.md-select:hover .md-select__inner{max-height:10rem;opacity:1;transform:translate3d(-50%,0,0);transition:transform .25s cubic-bezier(.1,.7,.1,1),opacity .25s,max-height 0ms}.md-select__inner:after{border-bottom:.2rem solid #0000;border-bottom-color:var(--md-default-bg-color);border-left:.2rem solid #0000;border-right:.2rem solid #0000;border-top:0;content:"";height:0;left:50%;margin-left:-.2rem;margin-top:-.2rem;position:absolute;top:0;width:0}.md-select__list{border-radius:.1rem;font-size:.8rem;list-style-type:none;margin:0;max-height:inherit;overflow:auto;padding:0}.md-select__item{line-height:1.8rem}[dir=ltr] .md-select__link{padding-left:.6rem;padding-right:1.2rem}[dir=rtl] .md-select__link{padding-left:1.2rem;padding-right:.6rem}.md-select__link{cursor:pointer;display:block;outline:none;scroll-snap-align:start;transition:background-color .25s,color .25s;width:100%}.md-select__link:focus,.md-select__link:hover{color:var(--md-accent-fg-color)}.md-select__link:focus{background-color:var(--md-default-fg-color--lightest)}.md-sidebar{align-self:flex-start;flex-shrink:0;padding:1.2rem 0;position:sticky;top:2.4rem;width:12.1rem}@media print{.md-sidebar{display:none}}@media screen and (max-width:76.234375em){[dir=ltr] .md-sidebar--primary{left:-12.1rem}[dir=rtl] .md-sidebar--primary{right:-12.1rem}.md-sidebar--primary{background-color:var(--md-default-bg-color);display:block;height:100%;position:fixed;top:0;transform:translateX(0);transition:transform .25s cubic-bezier(.4,0,.2,1),box-shadow .25s;width:12.1rem;z-index:5}[data-md-toggle=drawer]:checked~.md-container .md-sidebar--primary{box-shadow:var(--md-shadow-z3);transform:translateX(12.1rem)}[dir=rtl] [data-md-toggle=drawer]:checked~.md-container .md-sidebar--primary{transform:translateX(-12.1rem)}.md-sidebar--primary .md-sidebar__scrollwrap{bottom:0;left:0;margin:0;overflow:hidden;position:absolute;right:0;scroll-snap-type:none;top:0}}@media screen and (min-width:76.25em){.md-sidebar{height:0}.no-js .md-sidebar{height:auto}.md-header--lifted~.md-container .md-sidebar{top:4.8rem}}.md-sidebar--secondary{display:none;order:2}@media screen and (min-width:60em){.md-sidebar--secondary{height:0}.no-js .md-sidebar--secondary{height:auto}.md-sidebar--secondary:not([hidden]){display:block}.md-sidebar--secondary .md-sidebar__scrollwrap{touch-action:pan-y}}.md-sidebar__scrollwrap{-webkit-backface-visibility:hidden;backface-visibility:hidden;margin:0 .2rem;overflow-y:auto;scrollbar-color:var(--md-default-fg-color--lighter) #0000}@media screen and (min-width:60em){.md-sidebar__scrollwrap{scrollbar-gutter:stable;scrollbar-width:thin}}.md-sidebar__scrollwrap::-webkit-scrollbar{height:.2rem;width:.2rem}.md-sidebar__scrollwrap:focus-within,.md-sidebar__scrollwrap:hover{scrollbar-color:var(--md-accent-fg-color) #0000}.md-sidebar__scrollwrap:focus-within::-webkit-scrollbar-thumb,.md-sidebar__scrollwrap:hover::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-sidebar__scrollwrap:focus-within::-webkit-scrollbar-thumb:hover,.md-sidebar__scrollwrap:hover::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}@supports selector(::-webkit-scrollbar){.md-sidebar__scrollwrap{scrollbar-gutter:auto}[dir=ltr] .md-sidebar__inner{padding-right:calc(100% - 11.5rem)}[dir=rtl] .md-sidebar__inner{padding-left:calc(100% - 11.5rem)}}@media screen and (max-width:76.234375em){.md-overlay{background-color:#0000008a;height:0;opacity:0;position:fixed;top:0;transition:width 0ms .25s,height 0ms .25s,opacity .25s;width:0;z-index:5}[data-md-toggle=drawer]:checked~.md-overlay{height:100%;opacity:1;transition:width 0ms,height 0ms,opacity .25s;width:100%}}@keyframes facts{0%{height:0}to{height:.65rem}}@keyframes fact{0%{opacity:0;transform:translateY(100%)}50%{opacity:0}to{opacity:1;transform:translateY(0)}}:root{--md-source-forks-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0M5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0m6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5m-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0"/></svg>');--md-source-repositories-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M2 2.5A2.5 2.5 0 0 1 4.5 0h8.75a.75.75 0 0 1 .75.75v12.5a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h1.75v-2h-8a1 1 0 0 0-.714 1.7.75.75 0 1 1-1.072 1.05A2.5 2.5 0 0 1 2 11.5Zm10.5-1h-8a1 1 0 0 0-1 1v6.708A2.5 2.5 0 0 1 4.5 9h8ZM5 12.25a.25.25 0 0 1 .25-.25h3.5a.25.25 0 0 1 .25.25v3.25a.25.25 0 0 1-.4.2l-1.45-1.087a.25.25 0 0 0-.3 0L5.4 15.7a.25.25 0 0 1-.4-.2Z"/></svg>');--md-source-stars-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25m0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41z"/></svg>');--md-source-version-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.75 1.75 0 0 1 1 7.775m1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2"/></svg>')}.md-source{-webkit-backface-visibility:hidden;backface-visibility:hidden;display:block;font-size:.65rem;line-height:1.2;outline-color:var(--md-accent-fg-color);transition:opacity .25s;white-space:nowrap}.md-source:hover{opacity:.7}.md-source__icon{display:inline-block;height:2.4rem;vertical-align:middle;width:2rem}[dir=ltr] .md-source__icon svg{margin-left:.6rem}[dir=rtl] .md-source__icon svg{margin-right:.6rem}.md-source__icon svg{margin-top:.6rem}[dir=ltr] .md-source__icon+.md-source__repository{padding-left:2rem}[dir=rtl] .md-source__icon+.md-source__repository{padding-right:2rem}[dir=ltr] .md-source__icon+.md-source__repository{margin-left:-2rem}[dir=rtl] .md-source__icon+.md-source__repository{margin-right:-2rem}[dir=ltr] .md-source__repository{margin-left:.6rem}[dir=rtl] .md-source__repository{margin-right:.6rem}.md-source__repository{display:inline-block;max-width:calc(100% - 1.2rem);overflow:hidden;text-overflow:ellipsis;vertical-align:middle}.md-source__facts{display:flex;font-size:.55rem;gap:.4rem;list-style-type:none;margin:.1rem 0 0;opacity:.75;overflow:hidden;padding:0;width:100%}.md-source__repository--active .md-source__facts{animation:facts .25s ease-in}.md-source__fact{overflow:hidden;text-overflow:ellipsis}.md-source__repository--active .md-source__fact{animation:fact .4s ease-out}[dir=ltr] .md-source__fact:before{margin-right:.1rem}[dir=rtl] .md-source__fact:before{margin-left:.1rem}.md-source__fact:before{background-color:currentcolor;content:"";display:inline-block;height:.6rem;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;vertical-align:text-top;width:.6rem}.md-source__fact:nth-child(1n+2){flex-shrink:0}.md-source__fact--version:before{-webkit-mask-image:var(--md-source-version-icon);mask-image:var(--md-source-version-icon)}.md-source__fact--stars:before{-webkit-mask-image:var(--md-source-stars-icon);mask-image:var(--md-source-stars-icon)}.md-source__fact--forks:before{-webkit-mask-image:var(--md-source-forks-icon);mask-image:var(--md-source-forks-icon)}.md-source__fact--repositories:before{-webkit-mask-image:var(--md-source-repositories-icon);mask-image:var(--md-source-repositories-icon)}.md-source-file{margin:1em 0}[dir=ltr] .md-source-file__fact{margin-right:.6rem}[dir=rtl] .md-source-file__fact{margin-left:.6rem}.md-source-file__fact{align-items:center;color:var(--md-default-fg-color--light);display:inline-flex;font-size:.68rem;gap:.3rem}.md-source-file__fact .md-icon{flex-shrink:0;margin-bottom:.05rem}[dir=ltr] .md-source-file__fact .md-author{float:left}[dir=rtl] .md-source-file__fact .md-author{float:right}.md-source-file__fact .md-author{margin-right:.2rem}.md-source-file__fact svg{width:.9rem}:root{--md-status:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11 9h2V7h-2m1 13c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8m0-18A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2m-1 15h2v-6h-2z"/></svg>');--md-status--new:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m23 12-2.44-2.78.34-3.68-3.61-.82-1.89-3.18L12 3 8.6 1.54 6.71 4.72l-3.61.81.34 3.68L1 12l2.44 2.78-.34 3.69 3.61.82 1.89 3.18L12 21l3.4 1.46 1.89-3.18 3.61-.82-.34-3.68zm-10 5h-2v-2h2zm0-4h-2V7h2z"/></svg>');--md-status--deprecated:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9 3v1H4v2h1v13a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V6h1V4h-5V3zm0 5h2v9H9zm4 0h2v9h-2z"/></svg>');--md-status--encrypted:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5zm0 6c1.4 0 2.8 1.1 2.8 2.5V11c.6 0 1.2.6 1.2 1.3v3.5c0 .6-.6 1.2-1.3 1.2H9.2c-.6 0-1.2-.6-1.2-1.3v-3.5c0-.6.6-1.2 1.2-1.2V9.5C9.2 8.1 10.6 7 12 7m0 1.2c-.8 0-1.5.5-1.5 1.3V11h3V9.5c0-.8-.7-1.3-1.5-1.3"/></svg>')}.md-status:after{background-color:var(--md-default-fg-color--light);content:"";display:inline-block;height:1.125em;-webkit-mask-image:var(--md-status);mask-image:var(--md-status);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;vertical-align:text-bottom;width:1.125em}.md-status:hover:after{background-color:currentcolor}.md-status--new:after{-webkit-mask-image:var(--md-status--new);mask-image:var(--md-status--new)}.md-status--deprecated:after{-webkit-mask-image:var(--md-status--deprecated);mask-image:var(--md-status--deprecated)}.md-status--encrypted:after{-webkit-mask-image:var(--md-status--encrypted);mask-image:var(--md-status--encrypted)}.md-tabs{background-color:var(--md-primary-fg-color);color:var(--md-primary-bg-color);display:block;line-height:1.3;overflow:auto;width:100%;z-index:3}@media print{.md-tabs{display:none}}@media screen and (max-width:76.234375em){.md-tabs{display:none}}.md-tabs[hidden]{pointer-events:none}[dir=ltr] .md-tabs__list{margin-left:.2rem}[dir=rtl] .md-tabs__list{margin-right:.2rem}.md-tabs__list{contain:content;display:flex;list-style:none;margin:0;overflow:auto;padding:0;scrollbar-width:none;white-space:nowrap}.md-tabs__list::-webkit-scrollbar{display:none}.md-tabs__item{height:2.4rem;padding-left:.6rem;padding-right:.6rem}.md-tabs__item--active .md-tabs__link{color:inherit;opacity:1}.md-tabs__link{-webkit-backface-visibility:hidden;backface-visibility:hidden;display:flex;font-size:.7rem;margin-top:.8rem;opacity:.7;outline-color:var(--md-accent-fg-color);outline-offset:.2rem;transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .25s}.md-tabs__link:focus,.md-tabs__link:hover{color:inherit;opacity:1}[dir=ltr] .md-tabs__link svg{margin-right:.4rem}[dir=rtl] .md-tabs__link svg{margin-left:.4rem}.md-tabs__link svg{fill:currentcolor;height:1.3em}.md-tabs__item:nth-child(2) .md-tabs__link{transition-delay:20ms}.md-tabs__item:nth-child(3) .md-tabs__link{transition-delay:40ms}.md-tabs__item:nth-child(4) .md-tabs__link{transition-delay:60ms}.md-tabs__item:nth-child(5) .md-tabs__link{transition-delay:80ms}.md-tabs__item:nth-child(6) .md-tabs__link{transition-delay:.1s}.md-tabs__item:nth-child(7) .md-tabs__link{transition-delay:.12s}.md-tabs__item:nth-child(8) .md-tabs__link{transition-delay:.14s}.md-tabs__item:nth-child(9) .md-tabs__link{transition-delay:.16s}.md-tabs__item:nth-child(10) .md-tabs__link{transition-delay:.18s}.md-tabs__item:nth-child(11) .md-tabs__link{transition-delay:.2s}.md-tabs__item:nth-child(12) .md-tabs__link{transition-delay:.22s}.md-tabs__item:nth-child(13) .md-tabs__link{transition-delay:.24s}.md-tabs__item:nth-child(14) .md-tabs__link{transition-delay:.26s}.md-tabs__item:nth-child(15) .md-tabs__link{transition-delay:.28s}.md-tabs__item:nth-child(16) .md-tabs__link{transition-delay:.3s}.md-tabs[hidden] .md-tabs__link{opacity:0;transform:translateY(50%);transition:transform 0ms .1s,opacity .1s}:root{--md-tag-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m5.41 21 .71-4h-4l.35-2h4l1.06-6h-4l.35-2h4l.71-4h2l-.71 4h6l.71-4h2l-.71 4h4l-.35 2h-4l-1.06 6h4l-.35 2h-4l-.71 4h-2l.71-4h-6l-.71 4zM9.53 9l-1.06 6h6l1.06-6z"/></svg>')}.md-typeset .md-tags:not([hidden]){display:inline-flex;flex-wrap:wrap;gap:.5em;margin-bottom:.75em;margin-top:-.125em}.md-typeset .md-tag{align-items:center;background:var(--md-default-fg-color--lightest);border-radius:2.4rem;display:inline-flex;font-size:.64rem;font-size:min(.8em,.64rem);font-weight:700;gap:.5em;letter-spacing:normal;line-height:1.6;padding:.3125em .78125em}.md-typeset .md-tag[href]{-webkit-tap-highlight-color:transparent;color:inherit;outline:none;transition:color 125ms,background-color 125ms}.md-typeset .md-tag[href]:focus,.md-typeset .md-tag[href]:hover{background-color:var(--md-accent-fg-color);color:var(--md-accent-bg-color)}[id]>.md-typeset .md-tag{vertical-align:text-top}.md-typeset .md-tag-shadow{opacity:.5}.md-typeset .md-tag-icon:before{background-color:var(--md-default-fg-color--lighter);content:"";display:inline-block;height:1.2em;-webkit-mask-image:var(--md-tag-icon);mask-image:var(--md-tag-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:background-color 125ms;vertical-align:text-bottom;width:1.2em}.md-typeset .md-tag-icon[href]:focus:before,.md-typeset .md-tag-icon[href]:hover:before{background-color:var(--md-accent-bg-color)}@keyframes pulse{0%{transform:scale(.95)}75%{transform:scale(1)}to{transform:scale(.95)}}:root{--md-annotation-bg-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 2A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2"/></svg>');--md-annotation-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M17 13h-4v4h-2v-4H7v-2h4V7h2v4h4m-5-9A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2"/></svg>')}.md-tooltip{-webkit-backface-visibility:hidden;backface-visibility:hidden;background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color);font-family:var(--md-text-font-family);left:clamp(var(--md-tooltip-0,0rem) + .8rem,var(--md-tooltip-x),100vw + var(--md-tooltip-0,0rem) + .8rem - var(--md-tooltip-width) - 2 * .8rem);max-width:calc(100vw - 1.6rem);opacity:0;position:absolute;top:var(--md-tooltip-y);transform:translateY(-.4rem);transition:transform 0ms .25s,opacity .25s,z-index .25s;width:var(--md-tooltip-width);z-index:0}.md-tooltip--active{opacity:1;transform:translateY(0);transition:transform .25s cubic-bezier(.1,.7,.1,1),opacity .25s,z-index 0ms;z-index:2}.md-tooltip--inline{font-weight:700;-webkit-user-select:none;user-select:none;width:auto}.md-tooltip--inline:not(.md-tooltip--active){transform:translateY(.2rem) scale(.9)}.md-tooltip--inline .md-tooltip__inner{font-size:.5rem;padding:.2rem .4rem}[hidden]+.md-tooltip--inline{display:none}.focus-visible>.md-tooltip,.md-tooltip:target{outline:var(--md-accent-fg-color) auto}.md-tooltip__inner{font-size:.64rem;padding:.8rem}.md-tooltip__inner.md-typeset>:first-child{margin-top:0}.md-tooltip__inner.md-typeset>:last-child{margin-bottom:0}.md-annotation{font-style:normal;font-weight:400;outline:none;text-align:initial;vertical-align:text-bottom;white-space:normal}[dir=rtl] .md-annotation{direction:rtl}code .md-annotation{font-family:var(--md-code-font-family);font-size:inherit}.md-annotation:not([hidden]){display:inline-block;line-height:1.25}.md-annotation__index{border-radius:.01px;cursor:pointer;display:inline-block;margin-left:.4ch;margin-right:.4ch;outline:none;overflow:hidden;position:relative;-webkit-user-select:none;user-select:none;vertical-align:text-top;z-index:0}.md-annotation .md-annotation__index{transition:z-index .25s}@media screen{.md-annotation__index{width:2.2ch}[data-md-visible]>.md-annotation__index{animation:pulse 2s infinite}.md-annotation__index:before{background:var(--md-default-bg-color);-webkit-mask-image:var(--md-annotation-bg-icon);mask-image:var(--md-annotation-bg-icon)}.md-annotation__index:after,.md-annotation__index:before{content:"";height:2.2ch;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:-.1ch;width:2.2ch;z-index:-1}.md-annotation__index:after{background-color:var(--md-default-fg-color--lighter);-webkit-mask-image:var(--md-annotation-icon);mask-image:var(--md-annotation-icon);transform:scale(1.0001);transition:background-color .25s,transform .25s}.md-tooltip--active+.md-annotation__index:after{transform:rotate(45deg)}.md-tooltip--active+.md-annotation__index:after,:hover>.md-annotation__index:after{background-color:var(--md-accent-fg-color)}}.md-tooltip--active+.md-annotation__index{animation-play-state:paused;transition-duration:0ms;z-index:2}.md-annotation__index [data-md-annotation-id]{display:inline-block}@media print{.md-annotation__index [data-md-annotation-id]{background:var(--md-default-fg-color--lighter);border-radius:2ch;color:var(--md-default-bg-color);font-weight:700;padding:0 .6ch;white-space:nowrap}.md-annotation__index [data-md-annotation-id]:after{content:attr(data-md-annotation-id)}}.md-typeset .md-annotation-list{counter-reset:annotation;list-style:none!important}.md-typeset .md-annotation-list li{position:relative}[dir=ltr] .md-typeset .md-annotation-list li:before{left:-2.125em}[dir=rtl] .md-typeset .md-annotation-list li:before{right:-2.125em}.md-typeset .md-annotation-list li:before{background:var(--md-default-fg-color--lighter);border-radius:2ch;color:var(--md-default-bg-color);content:counter(annotation);counter-increment:annotation;font-size:.8875em;font-weight:700;height:2ch;line-height:1.25;min-width:2ch;padding:0 .6ch;position:absolute;text-align:center;top:.25em}:root{--md-tooltip-width:20rem;--md-tooltip-tail:0.3rem}.md-tooltip2{-webkit-backface-visibility:hidden;backface-visibility:hidden;color:var(--md-default-fg-color);font-family:var(--md-text-font-family);opacity:0;pointer-events:none;position:absolute;top:calc(var(--md-tooltip-host-y) + var(--md-tooltip-y));transform:translateY(-.4rem);transform-origin:calc(var(--md-tooltip-host-x) + var(--md-tooltip-x)) 0;transition:transform 0ms .25s,opacity .25s,z-index .25s;width:100%;z-index:0}.md-tooltip2:before{border-left:var(--md-tooltip-tail) solid #0000;border-right:var(--md-tooltip-tail) solid #0000;content:"";display:block;left:clamp(1.5 * .8rem,var(--md-tooltip-host-x) + var(--md-tooltip-x) - var(--md-tooltip-tail),100vw - 2 * var(--md-tooltip-tail) - 1.5 * .8rem);position:absolute;z-index:1}.md-tooltip2--top:before{border-top:var(--md-tooltip-tail) solid var(--md-default-bg-color);bottom:calc(var(--md-tooltip-tail)*-1 + .025rem);filter:drop-shadow(0 1px 0 hsla(0,0%,0%,.05))}.md-tooltip2--bottom:before{border-bottom:var(--md-tooltip-tail) solid var(--md-default-bg-color);filter:drop-shadow(0 -1px 0 hsla(0,0%,0%,.05));top:calc(var(--md-tooltip-tail)*-1 + .025rem)}.md-tooltip2--active{opacity:1;transform:translateY(0);transition:transform .4s cubic-bezier(0,1,.5,1),opacity .25s,z-index 0ms;z-index:2}.md-tooltip2__inner{scrollbar-gutter:stable;background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);left:clamp(.8rem,var(--md-tooltip-host-x) - .8rem,100vw - var(--md-tooltip-width) - .8rem);max-height:40vh;max-width:calc(100vw - 1.6rem);position:relative;scrollbar-width:thin}.md-tooltip2__inner::-webkit-scrollbar{height:.2rem;width:.2rem}.md-tooltip2__inner::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-tooltip2__inner::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}[role=dialog]>.md-tooltip2__inner{font-size:.64rem;overflow:auto;padding:0 .8rem;pointer-events:auto;width:var(--md-tooltip-width)}[role=dialog]>.md-tooltip2__inner:after,[role=dialog]>.md-tooltip2__inner:before{content:"";display:block;height:.8rem;position:sticky;width:100%;z-index:10}[role=dialog]>.md-tooltip2__inner:before{background:linear-gradient(var(--md-default-bg-color),#0000 75%);top:0}[role=dialog]>.md-tooltip2__inner:after{background:linear-gradient(#0000,var(--md-default-bg-color) 75%);bottom:0}[role=tooltip]>.md-tooltip2__inner{font-size:.5rem;font-weight:700;left:clamp(.8rem,var(--md-tooltip-host-x) + var(--md-tooltip-x) - var(--md-tooltip-width)/2,100vw - var(--md-tooltip-width) - .8rem);max-width:min(100vw - 2 * .8rem,400px);padding:.2rem .4rem;-webkit-user-select:none;user-select:none;width:-moz-fit-content;width:fit-content}.md-tooltip2__inner.md-typeset>:first-child{margin-top:0}.md-tooltip2__inner.md-typeset>:last-child{margin-bottom:0}[dir=ltr] .md-top{margin-left:50%}[dir=rtl] .md-top{margin-right:50%}.md-top{background-color:var(--md-default-bg-color);border-radius:1.6rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color--light);cursor:pointer;display:block;font-size:.7rem;outline:none;padding:.4rem .8rem;position:fixed;top:3.2rem;transform:translate(-50%);transition:color 125ms,background-color 125ms,transform 125ms cubic-bezier(.4,0,.2,1),opacity 125ms;z-index:2}@media print{.md-top{display:none}}[dir=rtl] .md-top{transform:translate(50%)}.md-top[hidden]{opacity:0;pointer-events:none;transform:translate(-50%,.2rem);transition-duration:0ms}[dir=rtl] .md-top[hidden]{transform:translate(50%,.2rem)}.md-top:focus,.md-top:hover{background-color:var(--md-accent-fg-color);color:var(--md-accent-bg-color)}.md-top svg{display:inline-block;vertical-align:-.5em}@keyframes hoverfix{0%{pointer-events:none}}:root{--md-version-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!--! Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2024 Fonticons, Inc.--><path d="M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9S301 191.9 288 191.9L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z"/></svg>')}.md-version{flex-shrink:0;font-size:.8rem;height:2.4rem}[dir=ltr] .md-version__current{margin-left:1.4rem;margin-right:.4rem}[dir=rtl] .md-version__current{margin-left:.4rem;margin-right:1.4rem}.md-version__current{color:inherit;cursor:pointer;outline:none;position:relative;top:.05rem}[dir=ltr] .md-version__current:after{margin-left:.4rem}[dir=rtl] .md-version__current:after{margin-right:.4rem}.md-version__current:after{background-color:currentcolor;content:"";display:inline-block;height:.6rem;-webkit-mask-image:var(--md-version-icon);mask-image:var(--md-version-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:.4rem}.md-version__alias{margin-left:.3rem;opacity:.7}.md-version__list{background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color);list-style-type:none;margin:.2rem .8rem;max-height:0;opacity:0;overflow:auto;padding:0;position:absolute;scroll-snap-type:y mandatory;top:.15rem;transition:max-height 0ms .5s,opacity .25s .25s;z-index:3}.md-version:focus-within .md-version__list,.md-version:hover .md-version__list{max-height:10rem;opacity:1;transition:max-height 0ms,opacity .25s}@media (hover:none),(pointer:coarse){.md-version:hover .md-version__list{animation:hoverfix .25s forwards}.md-version:focus-within .md-version__list{animation:none}}.md-version__item{line-height:1.8rem}[dir=ltr] .md-version__link{padding-left:.6rem;padding-right:1.2rem}[dir=rtl] .md-version__link{padding-left:1.2rem;padding-right:.6rem}.md-version__link{cursor:pointer;display:block;outline:none;scroll-snap-align:start;transition:color .25s,background-color .25s;white-space:nowrap;width:100%}.md-version__link:focus,.md-version__link:hover{color:var(--md-accent-fg-color)}.md-version__link:focus{background-color:var(--md-default-fg-color--lightest)}:root{--md-admonition-icon--note:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m3.1 5.07c.14 0 .28.05.4.16l1.27 1.27c.23.22.23.57 0 .78l-1 1-2.05-2.05 1-1c.1-.11.24-.16.38-.16m-1.97 1.74 2.06 2.06-6.06 6.06H7.07v-2.06z"/></svg>');--md-admonition-icon--abstract:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M17 9H7V7h10m0 6H7v-2h10m-3 6H7v-2h7M12 3a1 1 0 0 1 1 1 1 1 0 0 1-1 1 1 1 0 0 1-1-1 1 1 0 0 1 1-1m7 0h-4.18C14.4 1.84 13.3 1 12 1s-2.4.84-2.82 2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2"/></svg>');--md-admonition-icon--info:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13 9h-2V7h2m0 10h-2v-6h2m-1-9A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2"/></svg>');--md-admonition-icon--tip:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M17.66 11.2c-.23-.3-.51-.56-.77-.82-.67-.6-1.43-1.03-2.07-1.66C13.33 7.26 13 4.85 13.95 3c-.95.23-1.78.75-2.49 1.32-2.59 2.08-3.61 5.75-2.39 8.9.04.1.08.2.08.33 0 .22-.15.42-.35.5-.23.1-.47.04-.66-.12a.6.6 0 0 1-.14-.17c-1.13-1.43-1.31-3.48-.55-5.12C5.78 10 4.87 12.3 5 14.47c.06.5.12 1 .29 1.5.14.6.41 1.2.71 1.73 1.08 1.73 2.95 2.97 4.96 3.22 2.14.27 4.43-.12 6.07-1.6 1.83-1.66 2.47-4.32 1.53-6.6l-.13-.26c-.21-.46-.77-1.26-.77-1.26m-3.16 6.3c-.28.24-.74.5-1.1.6-1.12.4-2.24-.16-2.9-.82 1.19-.28 1.9-1.16 2.11-2.05.17-.8-.15-1.46-.28-2.23-.12-.74-.1-1.37.17-2.06.19.38.39.76.63 1.06.77 1 1.98 1.44 2.24 2.8.04.14.06.28.06.43.03.82-.33 1.72-.93 2.27"/></svg>');--md-admonition-icon--success:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M21 7 9 19l-5.5-5.5 1.41-1.41L9 16.17 19.59 5.59z"/></svg>');--md-admonition-icon--question:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m15.07 11.25-.9.92C13.45 12.89 13 13.5 13 15h-2v-.5c0-1.11.45-2.11 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41a2 2 0 0 0-2-2 2 2 0 0 0-2 2H8a4 4 0 0 1 4-4 4 4 0 0 1 4 4 3.2 3.2 0 0 1-.93 2.25M13 19h-2v-2h2M12 2A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10c0-5.53-4.5-10-10-10"/></svg>');--md-admonition-icon--warning:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13 14h-2V9h2m0 9h-2v-2h2M1 21h22L12 2z"/></svg>');--md-admonition-icon--failure:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>');--md-admonition-icon--danger:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m11.5 20 4.86-9.73H13V4l-5 9.73h3.5zM12 2c2.75 0 5.1 1 7.05 2.95S22 9.25 22 12s-1 5.1-2.95 7.05S14.75 22 12 22s-5.1-1-7.05-2.95S2 14.75 2 12s1-5.1 2.95-7.05S9.25 2 12 2"/></svg>');--md-admonition-icon--bug:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11 13h2v1h-2zm10-8v6c0 5.5-3.8 10.7-9 12-5.2-1.3-9-6.5-9-12V5l9-4zm-4 5h-2.2c-.2-.6-.6-1.1-1.1-1.5l1.2-1.2-.7-.7L12.8 8H12c-.2 0-.5 0-.7.1L9.9 6.6l-.8.8 1.2 1.2c-.5.3-.9.8-1.1 1.4H7v1h2v1H7v1h2v1H7v1h2.2c.4 1.2 1.5 2 2.8 2s2.4-.8 2.8-2H17v-1h-2v-1h2v-1h-2v-1h2zm-6 2h2v-1h-2z"/></svg>');--md-admonition-icon--example:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M7 2v2h1v14a4 4 0 0 0 4 4 4 4 0 0 0 4-4V4h1V2zm4 14c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1m2-4c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1m1-5h-4V4h4z"/></svg>');--md-admonition-icon--quote:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14 17h3l2-4V7h-6v6h3M6 17h3l2-4V7H5v6h3z"/></svg>')}.md-typeset .admonition,.md-typeset details{background-color:var(--md-admonition-bg-color);border:.075rem solid #448aff;border-radius:.2rem;box-shadow:var(--md-shadow-z1);color:var(--md-admonition-fg-color);display:flow-root;font-size:.64rem;margin:1.5625em 0;padding:0 .6rem;page-break-inside:avoid;transition:box-shadow 125ms}@media print{.md-typeset .admonition,.md-typeset details{box-shadow:none}}.md-typeset .admonition:focus-within,.md-typeset details:focus-within{box-shadow:0 0 0 .2rem #448aff1a}.md-typeset .admonition>*,.md-typeset details>*{box-sizing:border-box}.md-typeset .admonition .admonition,.md-typeset .admonition details,.md-typeset details .admonition,.md-typeset details details{margin-bottom:1em;margin-top:1em}.md-typeset .admonition .md-typeset__scrollwrap,.md-typeset details .md-typeset__scrollwrap{margin:1em -.6rem}.md-typeset .admonition .md-typeset__table,.md-typeset details .md-typeset__table{padding:0 .6rem}.md-typeset .admonition>.tabbed-set:only-child,.md-typeset details>.tabbed-set:only-child{margin-top:0}html .md-typeset .admonition>:last-child,html .md-typeset details>:last-child{margin-bottom:.6rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary{padding-left:2rem;padding-right:.6rem}[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{padding-left:.6rem;padding-right:2rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary{border-left-width:.2rem}[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{border-right-width:.2rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary{border-top-left-radius:.1rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary,[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{border-top-right-radius:.1rem}[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{border-top-left-radius:.1rem}.md-typeset .admonition-title,.md-typeset summary{background-color:#448aff1a;border:none;font-weight:700;margin:0 -.6rem;padding-bottom:.4rem;padding-top:.4rem;position:relative}html .md-typeset .admonition-title:last-child,html .md-typeset summary:last-child{margin-bottom:0}[dir=ltr] .md-typeset .admonition-title:before,[dir=ltr] .md-typeset summary:before{left:.6rem}[dir=rtl] .md-typeset .admonition-title:before,[dir=rtl] .md-typeset summary:before{right:.6rem}.md-typeset .admonition-title:before,.md-typeset summary:before{background-color:#448aff;content:"";height:1rem;-webkit-mask-image:var(--md-admonition-icon--note);mask-image:var(--md-admonition-icon--note);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:.625em;width:1rem}.md-typeset .admonition-title code,.md-typeset summary code{box-shadow:0 0 0 .05rem var(--md-default-fg-color--lightest)}.md-typeset .admonition.note,.md-typeset details.note{border-color:#448aff}.md-typeset .admonition.note:focus-within,.md-typeset details.note:focus-within{box-shadow:0 0 0 .2rem #448aff1a}.md-typeset .note>.admonition-title,.md-typeset .note>summary{background-color:#448aff1a}.md-typeset .note>.admonition-title:before,.md-typeset .note>summary:before{background-color:#448aff;-webkit-mask-image:var(--md-admonition-icon--note);mask-image:var(--md-admonition-icon--note)}.md-typeset .note>.admonition-title:after,.md-typeset .note>summary:after{color:#448aff}.md-typeset .admonition.abstract,.md-typeset details.abstract{border-color:#00b0ff}.md-typeset .admonition.abstract:focus-within,.md-typeset details.abstract:focus-within{box-shadow:0 0 0 .2rem #00b0ff1a}.md-typeset .abstract>.admonition-title,.md-typeset .abstract>summary{background-color:#00b0ff1a}.md-typeset .abstract>.admonition-title:before,.md-typeset .abstract>summary:before{background-color:#00b0ff;-webkit-mask-image:var(--md-admonition-icon--abstract);mask-image:var(--md-admonition-icon--abstract)}.md-typeset .abstract>.admonition-title:after,.md-typeset .abstract>summary:after{color:#00b0ff}.md-typeset .admonition.info,.md-typeset details.info{border-color:#00b8d4}.md-typeset .admonition.info:focus-within,.md-typeset details.info:focus-within{box-shadow:0 0 0 .2rem #00b8d41a}.md-typeset .info>.admonition-title,.md-typeset .info>summary{background-color:#00b8d41a}.md-typeset .info>.admonition-title:before,.md-typeset .info>summary:before{background-color:#00b8d4;-webkit-mask-image:var(--md-admonition-icon--info);mask-image:var(--md-admonition-icon--info)}.md-typeset .info>.admonition-title:after,.md-typeset .info>summary:after{color:#00b8d4}.md-typeset .admonition.tip,.md-typeset details.tip{border-color:#00bfa5}.md-typeset .admonition.tip:focus-within,.md-typeset details.tip:focus-within{box-shadow:0 0 0 .2rem #00bfa51a}.md-typeset .tip>.admonition-title,.md-typeset .tip>summary{background-color:#00bfa51a}.md-typeset .tip>.admonition-title:before,.md-typeset .tip>summary:before{background-color:#00bfa5;-webkit-mask-image:var(--md-admonition-icon--tip);mask-image:var(--md-admonition-icon--tip)}.md-typeset .tip>.admonition-title:after,.md-typeset .tip>summary:after{color:#00bfa5}.md-typeset .admonition.success,.md-typeset details.success{border-color:#00c853}.md-typeset .admonition.success:focus-within,.md-typeset details.success:focus-within{box-shadow:0 0 0 .2rem #00c8531a}.md-typeset .success>.admonition-title,.md-typeset .success>summary{background-color:#00c8531a}.md-typeset .success>.admonition-title:before,.md-typeset .success>summary:before{background-color:#00c853;-webkit-mask-image:var(--md-admonition-icon--success);mask-image:var(--md-admonition-icon--success)}.md-typeset .success>.admonition-title:after,.md-typeset .success>summary:after{color:#00c853}.md-typeset .admonition.question,.md-typeset details.question{border-color:#64dd17}.md-typeset .admonition.question:focus-within,.md-typeset details.question:focus-within{box-shadow:0 0 0 .2rem #64dd171a}.md-typeset .question>.admonition-title,.md-typeset .question>summary{background-color:#64dd171a}.md-typeset .question>.admonition-title:before,.md-typeset .question>summary:before{background-color:#64dd17;-webkit-mask-image:var(--md-admonition-icon--question);mask-image:var(--md-admonition-icon--question)}.md-typeset .question>.admonition-title:after,.md-typeset .question>summary:after{color:#64dd17}.md-typeset .admonition.warning,.md-typeset details.warning{border-color:#ff9100}.md-typeset .admonition.warning:focus-within,.md-typeset details.warning:focus-within{box-shadow:0 0 0 .2rem #ff91001a}.md-typeset .warning>.admonition-title,.md-typeset .warning>summary{background-color:#ff91001a}.md-typeset .warning>.admonition-title:before,.md-typeset .warning>summary:before{background-color:#ff9100;-webkit-mask-image:var(--md-admonition-icon--warning);mask-image:var(--md-admonition-icon--warning)}.md-typeset .warning>.admonition-title:after,.md-typeset .warning>summary:after{color:#ff9100}.md-typeset .admonition.failure,.md-typeset details.failure{border-color:#ff5252}.md-typeset .admonition.failure:focus-within,.md-typeset details.failure:focus-within{box-shadow:0 0 0 .2rem #ff52521a}.md-typeset .failure>.admonition-title,.md-typeset .failure>summary{background-color:#ff52521a}.md-typeset .failure>.admonition-title:before,.md-typeset .failure>summary:before{background-color:#ff5252;-webkit-mask-image:var(--md-admonition-icon--failure);mask-image:var(--md-admonition-icon--failure)}.md-typeset .failure>.admonition-title:after,.md-typeset .failure>summary:after{color:#ff5252}.md-typeset .admonition.danger,.md-typeset details.danger{border-color:#ff1744}.md-typeset .admonition.danger:focus-within,.md-typeset details.danger:focus-within{box-shadow:0 0 0 .2rem #ff17441a}.md-typeset .danger>.admonition-title,.md-typeset .danger>summary{background-color:#ff17441a}.md-typeset .danger>.admonition-title:before,.md-typeset .danger>summary:before{background-color:#ff1744;-webkit-mask-image:var(--md-admonition-icon--danger);mask-image:var(--md-admonition-icon--danger)}.md-typeset .danger>.admonition-title:after,.md-typeset .danger>summary:after{color:#ff1744}.md-typeset .admonition.bug,.md-typeset details.bug{border-color:#f50057}.md-typeset .admonition.bug:focus-within,.md-typeset details.bug:focus-within{box-shadow:0 0 0 .2rem #f500571a}.md-typeset .bug>.admonition-title,.md-typeset .bug>summary{background-color:#f500571a}.md-typeset .bug>.admonition-title:before,.md-typeset .bug>summary:before{background-color:#f50057;-webkit-mask-image:var(--md-admonition-icon--bug);mask-image:var(--md-admonition-icon--bug)}.md-typeset .bug>.admonition-title:after,.md-typeset .bug>summary:after{color:#f50057}.md-typeset .admonition.example,.md-typeset details.example{border-color:#7c4dff}.md-typeset .admonition.example:focus-within,.md-typeset details.example:focus-within{box-shadow:0 0 0 .2rem #7c4dff1a}.md-typeset .example>.admonition-title,.md-typeset .example>summary{background-color:#7c4dff1a}.md-typeset .example>.admonition-title:before,.md-typeset .example>summary:before{background-color:#7c4dff;-webkit-mask-image:var(--md-admonition-icon--example);mask-image:var(--md-admonition-icon--example)}.md-typeset .example>.admonition-title:after,.md-typeset .example>summary:after{color:#7c4dff}.md-typeset .admonition.quote,.md-typeset details.quote{border-color:#9e9e9e}.md-typeset .admonition.quote:focus-within,.md-typeset details.quote:focus-within{box-shadow:0 0 0 .2rem #9e9e9e1a}.md-typeset .quote>.admonition-title,.md-typeset .quote>summary{background-color:#9e9e9e1a}.md-typeset .quote>.admonition-title:before,.md-typeset .quote>summary:before{background-color:#9e9e9e;-webkit-mask-image:var(--md-admonition-icon--quote);mask-image:var(--md-admonition-icon--quote)}.md-typeset .quote>.admonition-title:after,.md-typeset .quote>summary:after{color:#9e9e9e}:root{--md-footnotes-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.42L5.83 13H21V7z"/></svg>')}.md-typeset .footnote{color:var(--md-default-fg-color--light);font-size:.64rem}[dir=ltr] .md-typeset .footnote>ol{margin-left:0}[dir=rtl] .md-typeset .footnote>ol{margin-right:0}.md-typeset .footnote>ol>li{transition:color 125ms}.md-typeset .footnote>ol>li:target{color:var(--md-default-fg-color)}.md-typeset .footnote>ol>li:focus-within .footnote-backref{opacity:1;transform:translateX(0);transition:none}.md-typeset .footnote>ol>li:hover .footnote-backref,.md-typeset .footnote>ol>li:target .footnote-backref{opacity:1;transform:translateX(0)}.md-typeset .footnote>ol>li>:first-child{margin-top:0}.md-typeset .footnote-ref{font-size:.75em;font-weight:700}html .md-typeset .footnote-ref{outline-offset:.1rem}.md-typeset [id^="fnref:"]:target>.footnote-ref{outline:auto}.md-typeset .footnote-backref{color:var(--md-typeset-a-color);display:inline-block;font-size:0;opacity:0;transform:translateX(.25rem);transition:color .25s,transform .25s .25s,opacity 125ms .25s;vertical-align:text-bottom}@media print{.md-typeset .footnote-backref{color:var(--md-typeset-a-color);opacity:1;transform:translateX(0)}}[dir=rtl] .md-typeset .footnote-backref{transform:translateX(-.25rem)}.md-typeset .footnote-backref:hover{color:var(--md-accent-fg-color)}.md-typeset .footnote-backref:before{background-color:currentcolor;content:"";display:inline-block;height:.8rem;-webkit-mask-image:var(--md-footnotes-icon);mask-image:var(--md-footnotes-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:.8rem}[dir=rtl] .md-typeset .footnote-backref:before{transform:scaleX(-1)}[dir=ltr] .md-typeset .headerlink{margin-left:.5rem}[dir=rtl] .md-typeset .headerlink{margin-right:.5rem}.md-typeset .headerlink{color:var(--md-default-fg-color--lighter);display:inline-block;opacity:0;transition:color .25s,opacity 125ms}@media print{.md-typeset .headerlink{display:none}}.md-typeset .headerlink:focus,.md-typeset :hover>.headerlink,.md-typeset :target>.headerlink{opacity:1;transition:color .25s,opacity 125ms}.md-typeset .headerlink:focus,.md-typeset .headerlink:hover,.md-typeset :target>.headerlink{color:var(--md-accent-fg-color)}.md-typeset :target{--md-scroll-margin:3.6rem;--md-scroll-offset:0rem;scroll-margin-top:calc(var(--md-scroll-margin) - var(--md-scroll-offset))}@media screen and (min-width:76.25em){.md-header--lifted~.md-container .md-typeset :target{--md-scroll-margin:6rem}}.md-typeset h1:target,.md-typeset h2:target,.md-typeset h3:target{--md-scroll-offset:0.2rem}.md-typeset h4:target{--md-scroll-offset:0.15rem}.md-typeset div.arithmatex{overflow:auto}@media screen and (max-width:44.984375em){.md-typeset div.arithmatex{margin:0 -.8rem}.md-typeset div.arithmatex>*{width:min-content}}.md-typeset div.arithmatex>*{margin-left:auto!important;margin-right:auto!important;padding:0 .8rem;touch-action:auto}.md-typeset div.arithmatex>* mjx-container{margin:0!important}.md-typeset div.arithmatex mjx-assistive-mml{height:0}.md-typeset del.critic{background-color:var(--md-typeset-del-color)}.md-typeset del.critic,.md-typeset ins.critic{-webkit-box-decoration-break:clone;box-decoration-break:clone}.md-typeset ins.critic{background-color:var(--md-typeset-ins-color)}.md-typeset .critic.comment{-webkit-box-decoration-break:clone;box-decoration-break:clone;color:var(--md-code-hl-comment-color)}.md-typeset .critic.comment:before{content:"/* "}.md-typeset .critic.comment:after{content:" */"}.md-typeset .critic.block{box-shadow:none;display:block;margin:1em 0;overflow:auto;padding-left:.8rem;padding-right:.8rem}.md-typeset .critic.block>:first-child{margin-top:.5em}.md-typeset .critic.block>:last-child{margin-bottom:.5em}:root{--md-details-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>')}.md-typeset details{display:flow-root;overflow:visible;padding-top:0}.md-typeset details[open]>summary:after{transform:rotate(90deg)}.md-typeset details:not([open]){box-shadow:none;padding-bottom:0}.md-typeset details:not([open])>summary{border-radius:.1rem}[dir=ltr] .md-typeset summary{padding-right:1.8rem}[dir=rtl] .md-typeset summary{padding-left:1.8rem}[dir=ltr] .md-typeset summary{border-top-left-radius:.1rem}[dir=ltr] .md-typeset summary,[dir=rtl] .md-typeset summary{border-top-right-radius:.1rem}[dir=rtl] .md-typeset summary{border-top-left-radius:.1rem}.md-typeset summary{cursor:pointer;display:block;min-height:1rem;overflow:hidden}.md-typeset summary.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-typeset summary:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}[dir=ltr] .md-typeset summary:after{right:.4rem}[dir=rtl] .md-typeset summary:after{left:.4rem}.md-typeset summary:after{background-color:currentcolor;content:"";height:1rem;-webkit-mask-image:var(--md-details-icon);mask-image:var(--md-details-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:.625em;transform:rotate(0deg);transition:transform .25s;width:1rem}[dir=rtl] .md-typeset summary:after{transform:rotate(180deg)}.md-typeset summary::marker{display:none}.md-typeset summary::-webkit-details-marker{display:none}.md-typeset .emojione,.md-typeset .gemoji,.md-typeset .twemoji{--md-icon-size:1.125em;display:inline-flex;height:var(--md-icon-size);vertical-align:text-top}.md-typeset .emojione svg,.md-typeset .gemoji svg,.md-typeset .twemoji svg{fill:currentcolor;max-height:100%;width:var(--md-icon-size)}.md-typeset .lg,.md-typeset .xl,.md-typeset .xxl,.md-typeset .xxxl{vertical-align:text-bottom}.md-typeset .middle{vertical-align:middle}.md-typeset .lg{--md-icon-size:1.5em}.md-typeset .xl{--md-icon-size:2.25em}.md-typeset .xxl{--md-icon-size:3em}.md-typeset .xxxl{--md-icon-size:4em}.highlight .o,.highlight .ow{color:var(--md-code-hl-operator-color)}.highlight .p{color:var(--md-code-hl-punctuation-color)}.highlight .cpf,.highlight .l,.highlight .s,.highlight .s1,.highlight .s2,.highlight .sb,.highlight .sc,.highlight .si,.highlight .ss{color:var(--md-code-hl-string-color)}.highlight .cp,.highlight .se,.highlight .sh,.highlight .sr,.highlight .sx{color:var(--md-code-hl-special-color)}.highlight .il,.highlight .m,.highlight .mb,.highlight .mf,.highlight .mh,.highlight .mi,.highlight .mo{color:var(--md-code-hl-number-color)}.highlight .k,.highlight .kd,.highlight .kn,.highlight .kp,.highlight .kr,.highlight .kt{color:var(--md-code-hl-keyword-color)}.highlight .kc,.highlight .n{color:var(--md-code-hl-name-color)}.highlight .bp,.highlight .nb,.highlight .no{color:var(--md-code-hl-constant-color)}.highlight .nc,.highlight .ne,.highlight .nf,.highlight .nn{color:var(--md-code-hl-function-color)}.highlight .nd,.highlight .ni,.highlight .nl,.highlight .nt{color:var(--md-code-hl-keyword-color)}.highlight .c,.highlight .c1,.highlight .ch,.highlight .cm,.highlight .cs,.highlight .sd{color:var(--md-code-hl-comment-color)}.highlight .na,.highlight .nv,.highlight .vc,.highlight .vg,.highlight .vi{color:var(--md-code-hl-variable-color)}.highlight .ge,.highlight .gh,.highlight .go,.highlight .gp,.highlight .gr,.highlight .gs,.highlight .gt,.highlight .gu{color:var(--md-code-hl-generic-color)}.highlight .gd,.highlight .gi{border-radius:.1rem;margin:0 -.125em;padding:0 .125em}.highlight .gd{background-color:var(--md-typeset-del-color)}.highlight .gi{background-color:var(--md-typeset-ins-color)}.highlight .hll{background-color:var(--md-code-hl-color--light);box-shadow:2px 0 0 0 var(--md-code-hl-color) inset;display:block;margin:0 -1.1764705882em;padding:0 1.1764705882em}.highlight span.filename{background-color:var(--md-code-bg-color);border-bottom:.05rem solid var(--md-default-fg-color--lightest);border-top-left-radius:.1rem;border-top-right-radius:.1rem;display:flow-root;font-size:.85em;font-weight:700;margin-top:1em;padding:.6617647059em 1.1764705882em;position:relative}.highlight span.filename+pre{margin-top:0}.highlight span.filename+pre>code{border-top-left-radius:0;border-top-right-radius:0}.highlight [data-linenos]:before{background-color:var(--md-code-bg-color);box-shadow:-.05rem 0 var(--md-default-fg-color--lightest) inset;color:var(--md-default-fg-color--light);content:attr(data-linenos);float:left;left:-1.1764705882em;margin-left:-1.1764705882em;margin-right:1.1764705882em;padding-left:1.1764705882em;position:sticky;-webkit-user-select:none;user-select:none;z-index:3}.highlight code a[id]{position:absolute;visibility:hidden}.highlight code[data-md-copying]{display:initial}.highlight code[data-md-copying] .hll{display:contents}.highlight code[data-md-copying] .md-annotation{display:none}.highlighttable{display:flow-root}.highlighttable tbody,.highlighttable td{display:block;padding:0}.highlighttable tr{display:flex}.highlighttable pre{margin:0}.highlighttable th.filename{flex-grow:1;padding:0;text-align:left}.highlighttable th.filename span.filename{margin-top:0}.highlighttable .linenos{background-color:var(--md-code-bg-color);border-bottom-left-radius:.1rem;border-top-left-radius:.1rem;font-size:.85em;padding:.7720588235em 0 .7720588235em 1.1764705882em;-webkit-user-select:none;user-select:none}.highlighttable .linenodiv{box-shadow:-.05rem 0 var(--md-default-fg-color--lightest) inset}.highlighttable .linenodiv pre{color:var(--md-default-fg-color--light);text-align:right}.highlighttable .linenodiv span[class]{padding-right:.5882352941em}.highlighttable .code{flex:1;min-width:0}.linenodiv a{color:inherit}.md-typeset .highlighttable{direction:ltr;margin:1em 0}.md-typeset .highlighttable>tbody>tr>.code>div>pre>code{border-bottom-left-radius:0;border-top-left-radius:0}.md-typeset .highlight+.result{border:.05rem solid var(--md-code-bg-color);border-bottom-left-radius:.1rem;border-bottom-right-radius:.1rem;border-top-width:.1rem;margin-top:-1.125em;overflow:visible;padding:0 1em}.md-typeset .highlight+.result:after{clear:both;content:"";display:block}@media screen and (max-width:44.984375em){.md-content__inner>.highlight{margin:1em -.8rem}.md-content__inner>.highlight>.filename,.md-content__inner>.highlight>.highlighttable>tbody>tr>.code>div>pre>code,.md-content__inner>.highlight>.highlighttable>tbody>tr>.filename span.filename,.md-content__inner>.highlight>.highlighttable>tbody>tr>.linenos,.md-content__inner>.highlight>pre>code{border-radius:0}.md-content__inner>.highlight+.result{border-left-width:0;border-radius:0;border-right-width:0;margin-left:-.8rem;margin-right:-.8rem}}.md-typeset .keys kbd:after,.md-typeset .keys kbd:before{-moz-osx-font-smoothing:initial;-webkit-font-smoothing:initial;color:inherit;margin:0;position:relative}.md-typeset .keys span{color:var(--md-default-fg-color--light);padding:0 .2em}.md-typeset .keys .key-alt:before,.md-typeset .keys .key-left-alt:before,.md-typeset .keys .key-right-alt:before{content:"⎇";padding-right:.4em}.md-typeset .keys .key-command:before,.md-typeset .keys .key-left-command:before,.md-typeset .keys .key-right-command:before{content:"⌘";padding-right:.4em}.md-typeset .keys .key-control:before,.md-typeset .keys .key-left-control:before,.md-typeset .keys .key-right-control:before{content:"⌃";padding-right:.4em}.md-typeset .keys .key-left-meta:before,.md-typeset .keys .key-meta:before,.md-typeset .keys .key-right-meta:before{content:"◆";padding-right:.4em}.md-typeset .keys .key-left-option:before,.md-typeset .keys .key-option:before,.md-typeset .keys .key-right-option:before{content:"⌥";padding-right:.4em}.md-typeset .keys .key-left-shift:before,.md-typeset .keys .key-right-shift:before,.md-typeset .keys .key-shift:before{content:"⇧";padding-right:.4em}.md-typeset .keys .key-left-super:before,.md-typeset .keys .key-right-super:before,.md-typeset .keys .key-super:before{content:"❖";padding-right:.4em}.md-typeset .keys .key-left-windows:before,.md-typeset .keys .key-right-windows:before,.md-typeset .keys .key-windows:before{content:"⊞";padding-right:.4em}.md-typeset .keys .key-arrow-down:before{content:"↓";padding-right:.4em}.md-typeset .keys .key-arrow-left:before{content:"←";padding-right:.4em}.md-typeset .keys .key-arrow-right:before{content:"→";padding-right:.4em}.md-typeset .keys .key-arrow-up:before{content:"↑";padding-right:.4em}.md-typeset .keys .key-backspace:before{content:"⌫";padding-right:.4em}.md-typeset .keys .key-backtab:before{content:"⇤";padding-right:.4em}.md-typeset .keys .key-caps-lock:before{content:"⇪";padding-right:.4em}.md-typeset .keys .key-clear:before{content:"⌧";padding-right:.4em}.md-typeset .keys .key-context-menu:before{content:"☰";padding-right:.4em}.md-typeset .keys .key-delete:before{content:"⌦";padding-right:.4em}.md-typeset .keys .key-eject:before{content:"⏏";padding-right:.4em}.md-typeset .keys .key-end:before{content:"⤓";padding-right:.4em}.md-typeset .keys .key-escape:before{content:"⎋";padding-right:.4em}.md-typeset .keys .key-home:before{content:"⤒";padding-right:.4em}.md-typeset .keys .key-insert:before{content:"⎀";padding-right:.4em}.md-typeset .keys .key-page-down:before{content:"⇟";padding-right:.4em}.md-typeset .keys .key-page-up:before{content:"⇞";padding-right:.4em}.md-typeset .keys .key-print-screen:before{content:"⎙";padding-right:.4em}.md-typeset .keys .key-tab:after{content:"⇥";padding-left:.4em}.md-typeset .keys .key-num-enter:after{content:"⌤";padding-left:.4em}.md-typeset .keys .key-enter:after{content:"⏎";padding-left:.4em}:root{--md-tabbed-icon--prev:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15.41 16.58 10.83 12l4.58-4.59L14 6l-6 6 6 6z"/></svg>');--md-tabbed-icon--next:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>')}.md-typeset .tabbed-set{border-radius:.1rem;display:flex;flex-flow:column wrap;margin:1em 0;position:relative}.md-typeset .tabbed-set>input{height:0;opacity:0;position:absolute;width:0}.md-typeset .tabbed-set>input:target{--md-scroll-offset:0.625em}.md-typeset .tabbed-set>input.focus-visible~.tabbed-labels:before{background-color:var(--md-accent-fg-color)}.md-typeset .tabbed-labels{-ms-overflow-style:none;box-shadow:0 -.05rem var(--md-default-fg-color--lightest) inset;display:flex;max-width:100%;overflow:auto;scrollbar-width:none}@media print{.md-typeset .tabbed-labels{display:contents}}@media screen{.js .md-typeset .tabbed-labels{position:relative}.js .md-typeset .tabbed-labels:before{background:var(--md-default-fg-color);bottom:0;content:"";display:block;height:2px;left:0;position:absolute;transform:translateX(var(--md-indicator-x));transition:width 225ms,background-color .25s,transform .25s;transition-timing-function:cubic-bezier(.4,0,.2,1);width:var(--md-indicator-width)}}.md-typeset .tabbed-labels::-webkit-scrollbar{display:none}.md-typeset .tabbed-labels>label{border-bottom:.1rem solid #0000;border-radius:.1rem .1rem 0 0;color:var(--md-default-fg-color--light);cursor:pointer;flex-shrink:0;font-size:.64rem;font-weight:700;padding:.78125em 1.25em .625em;scroll-margin-inline-start:1rem;transition:background-color .25s,color .25s;white-space:nowrap;width:auto}@media print{.md-typeset .tabbed-labels>label:first-child{order:1}.md-typeset .tabbed-labels>label:nth-child(2){order:2}.md-typeset .tabbed-labels>label:nth-child(3){order:3}.md-typeset .tabbed-labels>label:nth-child(4){order:4}.md-typeset .tabbed-labels>label:nth-child(5){order:5}.md-typeset .tabbed-labels>label:nth-child(6){order:6}.md-typeset .tabbed-labels>label:nth-child(7){order:7}.md-typeset .tabbed-labels>label:nth-child(8){order:8}.md-typeset .tabbed-labels>label:nth-child(9){order:9}.md-typeset .tabbed-labels>label:nth-child(10){order:10}.md-typeset .tabbed-labels>label:nth-child(11){order:11}.md-typeset .tabbed-labels>label:nth-child(12){order:12}.md-typeset .tabbed-labels>label:nth-child(13){order:13}.md-typeset .tabbed-labels>label:nth-child(14){order:14}.md-typeset .tabbed-labels>label:nth-child(15){order:15}.md-typeset .tabbed-labels>label:nth-child(16){order:16}.md-typeset .tabbed-labels>label:nth-child(17){order:17}.md-typeset .tabbed-labels>label:nth-child(18){order:18}.md-typeset .tabbed-labels>label:nth-child(19){order:19}.md-typeset .tabbed-labels>label:nth-child(20){order:20}}.md-typeset .tabbed-labels>label:hover{color:var(--md-default-fg-color)}.md-typeset .tabbed-labels>label>[href]:first-child{color:inherit}.md-typeset .tabbed-labels--linked>label{padding:0}.md-typeset .tabbed-labels--linked>label>a{display:block;padding:.78125em 1.25em .625em}.md-typeset .tabbed-content{width:100%}@media print{.md-typeset .tabbed-content{display:contents}}.md-typeset .tabbed-block{display:none}@media print{.md-typeset .tabbed-block{display:block}.md-typeset .tabbed-block:first-child{order:1}.md-typeset .tabbed-block:nth-child(2){order:2}.md-typeset .tabbed-block:nth-child(3){order:3}.md-typeset .tabbed-block:nth-child(4){order:4}.md-typeset .tabbed-block:nth-child(5){order:5}.md-typeset .tabbed-block:nth-child(6){order:6}.md-typeset .tabbed-block:nth-child(7){order:7}.md-typeset .tabbed-block:nth-child(8){order:8}.md-typeset .tabbed-block:nth-child(9){order:9}.md-typeset .tabbed-block:nth-child(10){order:10}.md-typeset .tabbed-block:nth-child(11){order:11}.md-typeset .tabbed-block:nth-child(12){order:12}.md-typeset .tabbed-block:nth-child(13){order:13}.md-typeset .tabbed-block:nth-child(14){order:14}.md-typeset .tabbed-block:nth-child(15){order:15}.md-typeset .tabbed-block:nth-child(16){order:16}.md-typeset .tabbed-block:nth-child(17){order:17}.md-typeset .tabbed-block:nth-child(18){order:18}.md-typeset .tabbed-block:nth-child(19){order:19}.md-typeset .tabbed-block:nth-child(20){order:20}}.md-typeset .tabbed-block>.highlight:first-child>pre,.md-typeset .tabbed-block>pre:first-child{margin:0}.md-typeset .tabbed-block>.highlight:first-child>pre>code,.md-typeset .tabbed-block>pre:first-child>code{border-top-left-radius:0;border-top-right-radius:0}.md-typeset .tabbed-block>.highlight:first-child>.filename{border-top-left-radius:0;border-top-right-radius:0;margin:0}.md-typeset .tabbed-block>.highlight:first-child>.highlighttable{margin:0}.md-typeset .tabbed-block>.highlight:first-child>.highlighttable>tbody>tr>.filename span.filename,.md-typeset .tabbed-block>.highlight:first-child>.highlighttable>tbody>tr>.linenos{border-top-left-radius:0;border-top-right-radius:0;margin:0}.md-typeset .tabbed-block>.highlight:first-child>.highlighttable>tbody>tr>.code>div>pre>code{border-top-left-radius:0;border-top-right-radius:0}.md-typeset .tabbed-block>.highlight:first-child+.result{margin-top:-.125em}.md-typeset .tabbed-block>.tabbed-set{margin:0}.md-typeset .tabbed-button{align-self:center;border-radius:100%;color:var(--md-default-fg-color--light);cursor:pointer;display:block;height:.9rem;margin-top:.1rem;pointer-events:auto;transition:background-color .25s;width:.9rem}.md-typeset .tabbed-button:hover{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-typeset .tabbed-button:after{background-color:currentcolor;content:"";display:block;height:100%;-webkit-mask-image:var(--md-tabbed-icon--prev);mask-image:var(--md-tabbed-icon--prev);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:background-color .25s,transform .25s;width:100%}.md-typeset .tabbed-control{background:linear-gradient(to right,var(--md-default-bg-color) 60%,#0000);display:flex;height:1.9rem;justify-content:start;pointer-events:none;position:absolute;transition:opacity 125ms;width:1.2rem}[dir=rtl] .md-typeset .tabbed-control{transform:rotate(180deg)}.md-typeset .tabbed-control[hidden]{opacity:0}.md-typeset .tabbed-control--next{background:linear-gradient(to left,var(--md-default-bg-color) 60%,#0000);justify-content:end;right:0}.md-typeset .tabbed-control--next .tabbed-button:after{-webkit-mask-image:var(--md-tabbed-icon--next);mask-image:var(--md-tabbed-icon--next)}@media screen and (max-width:44.984375em){[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels{padding-left:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels{padding-right:.8rem}.md-content__inner>.tabbed-set .tabbed-labels{margin:0 -.8rem;max-width:100vw;scroll-padding-inline-start:.8rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels:after{padding-right:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels:after{padding-left:.8rem}.md-content__inner>.tabbed-set .tabbed-labels:after{content:""}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{padding-left:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{padding-right:.8rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{margin-left:-.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{margin-right:-.8rem}.md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{width:2rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{padding-right:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{padding-left:.8rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{margin-right:-.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{margin-left:-.8rem}.md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{width:2rem}}@media screen{.md-typeset .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9){color:var(--md-default-fg-color)}.md-typeset .no-js .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.md-typeset .no-js .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.md-typeset .no-js .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.md-typeset .no-js .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.md-typeset .no-js .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.md-typeset .no-js .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.md-typeset .no-js .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.md-typeset .no-js .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.md-typeset .no-js .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.md-typeset .no-js .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.md-typeset .no-js .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.md-typeset .no-js .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.md-typeset .no-js .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.md-typeset .no-js .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.md-typeset .no-js .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.md-typeset .no-js .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.md-typeset .no-js .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.md-typeset .no-js .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.md-typeset .no-js .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.md-typeset .no-js .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9),.md-typeset [role=dialog] .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.md-typeset [role=dialog] .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.md-typeset [role=dialog] .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.md-typeset [role=dialog] .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.md-typeset [role=dialog] .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.md-typeset [role=dialog] .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.md-typeset [role=dialog] .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.md-typeset [role=dialog] .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.md-typeset [role=dialog] .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.md-typeset [role=dialog] .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.md-typeset [role=dialog] .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.md-typeset [role=dialog] .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.md-typeset [role=dialog] .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.md-typeset [role=dialog] .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.md-typeset [role=dialog] .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.md-typeset [role=dialog] .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.md-typeset [role=dialog] .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.md-typeset [role=dialog] .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.md-typeset [role=dialog] .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.md-typeset [role=dialog] .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9),.no-js .md-typeset .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.no-js .md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.no-js .md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.no-js .md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.no-js .md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.no-js .md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.no-js .md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.no-js .md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.no-js .md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.no-js .md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.no-js .md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.no-js .md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.no-js .md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.no-js .md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.no-js .md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.no-js .md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.no-js .md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.no-js .md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.no-js .md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.no-js .md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9),[role=dialog] .md-typeset .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,[role=dialog] .md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),[role=dialog] .md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),[role=dialog] .md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),[role=dialog] .md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),[role=dialog] .md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),[role=dialog] .md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),[role=dialog] .md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),[role=dialog] .md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),[role=dialog] .md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),[role=dialog] .md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),[role=dialog] .md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),[role=dialog] .md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),[role=dialog] .md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),[role=dialog] .md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),[role=dialog] .md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),[role=dialog] .md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),[role=dialog] .md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),[role=dialog] .md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),[role=dialog] .md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9){border-color:var(--md-default-fg-color)}}.md-typeset .tabbed-set>input:first-child.focus-visible~.tabbed-labels>:first-child,.md-typeset .tabbed-set>input:nth-child(10).focus-visible~.tabbed-labels>:nth-child(10),.md-typeset .tabbed-set>input:nth-child(11).focus-visible~.tabbed-labels>:nth-child(11),.md-typeset .tabbed-set>input:nth-child(12).focus-visible~.tabbed-labels>:nth-child(12),.md-typeset .tabbed-set>input:nth-child(13).focus-visible~.tabbed-labels>:nth-child(13),.md-typeset .tabbed-set>input:nth-child(14).focus-visible~.tabbed-labels>:nth-child(14),.md-typeset .tabbed-set>input:nth-child(15).focus-visible~.tabbed-labels>:nth-child(15),.md-typeset .tabbed-set>input:nth-child(16).focus-visible~.tabbed-labels>:nth-child(16),.md-typeset .tabbed-set>input:nth-child(17).focus-visible~.tabbed-labels>:nth-child(17),.md-typeset .tabbed-set>input:nth-child(18).focus-visible~.tabbed-labels>:nth-child(18),.md-typeset .tabbed-set>input:nth-child(19).focus-visible~.tabbed-labels>:nth-child(19),.md-typeset .tabbed-set>input:nth-child(2).focus-visible~.tabbed-labels>:nth-child(2),.md-typeset .tabbed-set>input:nth-child(20).focus-visible~.tabbed-labels>:nth-child(20),.md-typeset .tabbed-set>input:nth-child(3).focus-visible~.tabbed-labels>:nth-child(3),.md-typeset .tabbed-set>input:nth-child(4).focus-visible~.tabbed-labels>:nth-child(4),.md-typeset .tabbed-set>input:nth-child(5).focus-visible~.tabbed-labels>:nth-child(5),.md-typeset .tabbed-set>input:nth-child(6).focus-visible~.tabbed-labels>:nth-child(6),.md-typeset .tabbed-set>input:nth-child(7).focus-visible~.tabbed-labels>:nth-child(7),.md-typeset .tabbed-set>input:nth-child(8).focus-visible~.tabbed-labels>:nth-child(8),.md-typeset .tabbed-set>input:nth-child(9).focus-visible~.tabbed-labels>:nth-child(9){color:var(--md-accent-fg-color)}.md-typeset .tabbed-set>input:first-child:checked~.tabbed-content>:first-child,.md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-content>:nth-child(10),.md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-content>:nth-child(11),.md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-content>:nth-child(12),.md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-content>:nth-child(13),.md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-content>:nth-child(14),.md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-content>:nth-child(15),.md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-content>:nth-child(16),.md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-content>:nth-child(17),.md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-content>:nth-child(18),.md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-content>:nth-child(19),.md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-content>:nth-child(2),.md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-content>:nth-child(20),.md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-content>:nth-child(3),.md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-content>:nth-child(4),.md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-content>:nth-child(5),.md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-content>:nth-child(6),.md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-content>:nth-child(7),.md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-content>:nth-child(8),.md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-content>:nth-child(9){display:block}:root{--md-tasklist-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12m16.28-2.72a.75.75 0 0 0-.018-1.042.75.75 0 0 0-1.042-.018l-5.97 5.97-2.47-2.47a.75.75 0 0 0-1.042.018.75.75 0 0 0-.018 1.042l3 3a.75.75 0 0 0 1.06 0Z"/></svg>');--md-tasklist-icon--checked:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12m16.28-2.72a.75.75 0 0 0-.018-1.042.75.75 0 0 0-1.042-.018l-5.97 5.97-2.47-2.47a.75.75 0 0 0-1.042.018.75.75 0 0 0-.018 1.042l3 3a.75.75 0 0 0 1.06 0Z"/></svg>')}.md-typeset .task-list-item{list-style-type:none;position:relative}[dir=ltr] .md-typeset .task-list-item [type=checkbox]{left:-2em}[dir=rtl] .md-typeset .task-list-item [type=checkbox]{right:-2em}.md-typeset .task-list-item [type=checkbox]{position:absolute;top:.45em}.md-typeset .task-list-control [type=checkbox]{opacity:0;z-index:-1}[dir=ltr] .md-typeset .task-list-indicator:before{left:-1.5em}[dir=rtl] .md-typeset .task-list-indicator:before{right:-1.5em}.md-typeset .task-list-indicator:before{background-color:var(--md-default-fg-color--lightest);content:"";height:1.25em;-webkit-mask-image:var(--md-tasklist-icon);mask-image:var(--md-tasklist-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:.15em;width:1.25em}.md-typeset [type=checkbox]:checked+.task-list-indicator:before{background-color:#00e676;-webkit-mask-image:var(--md-tasklist-icon--checked);mask-image:var(--md-tasklist-icon--checked)}@media print{.giscus,[id=__comments]{display:none}}:root>*{--md-mermaid-font-family:var(--md-text-font-family),sans-serif;--md-mermaid-edge-color:var(--md-code-fg-color);--md-mermaid-node-bg-color:var(--md-accent-fg-color--transparent);--md-mermaid-node-fg-color:var(--md-accent-fg-color);--md-mermaid-label-bg-color:var(--md-default-bg-color);--md-mermaid-label-fg-color:var(--md-code-fg-color);--md-mermaid-sequence-actor-bg-color:var(--md-mermaid-label-bg-color);--md-mermaid-sequence-actor-fg-color:var(--md-mermaid-label-fg-color);--md-mermaid-sequence-actor-border-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-actor-line-color:var(--md-default-fg-color--lighter);--md-mermaid-sequence-actorman-bg-color:var(--md-mermaid-label-bg-color);--md-mermaid-sequence-actorman-line-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-box-bg-color:var(--md-mermaid-node-bg-color);--md-mermaid-sequence-box-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-label-bg-color:var(--md-mermaid-node-bg-color);--md-mermaid-sequence-label-fg-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-loop-bg-color:var(--md-mermaid-node-bg-color);--md-mermaid-sequence-loop-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-loop-border-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-message-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-message-line-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-note-bg-color:var(--md-mermaid-label-bg-color);--md-mermaid-sequence-note-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-note-border-color:var(--md-mermaid-label-fg-color);--md-mermaid-sequence-number-bg-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-number-fg-color:var(--md-accent-bg-color)}.mermaid{line-height:normal;margin:1em 0}.md-typeset .grid{grid-gap:.4rem;display:grid;grid-template-columns:repeat(auto-fit,minmax(min(100%,16rem),1fr));margin:1em 0}.md-typeset .grid.cards>ol,.md-typeset .grid.cards>ul{display:contents}.md-typeset .grid.cards>ol>li,.md-typeset .grid.cards>ul>li,.md-typeset .grid>.card{border:.05rem solid var(--md-default-fg-color--lightest);border-radius:.1rem;display:block;margin:0;padding:.8rem;transition:border .25s,box-shadow .25s}.md-typeset .grid.cards>ol>li:focus-within,.md-typeset .grid.cards>ol>li:hover,.md-typeset .grid.cards>ul>li:focus-within,.md-typeset .grid.cards>ul>li:hover,.md-typeset .grid>.card:focus-within,.md-typeset .grid>.card:hover{border-color:#0000;box-shadow:var(--md-shadow-z2)}.md-typeset .grid.cards>ol>li>hr,.md-typeset .grid.cards>ul>li>hr,.md-typeset .grid>.card>hr{margin-bottom:1em;margin-top:1em}.md-typeset .grid.cards>ol>li>:first-child,.md-typeset .grid.cards>ul>li>:first-child,.md-typeset .grid>.card>:first-child{margin-top:0}.md-typeset .grid.cards>ol>li>:last-child,.md-typeset .grid.cards>ul>li>:last-child,.md-typeset .grid>.card>:last-child{margin-bottom:0}.md-typeset .grid>*,.md-typeset .grid>.admonition,.md-typeset .grid>.highlight>*,.md-typeset .grid>.highlighttable,.md-typeset .grid>.md-typeset details,.md-typeset .grid>details,.md-typeset .grid>pre{margin-bottom:0;margin-top:0}.md-typeset .grid>.highlight>pre:only-child,.md-typeset .grid>.highlight>pre>code,.md-typeset .grid>.highlighttable,.md-typeset .grid>.highlighttable>tbody,.md-typeset .grid>.highlighttable>tbody>tr,.md-typeset .grid>.highlighttable>tbody>tr>.code,.md-typeset .grid>.highlighttable>tbody>tr>.code>.highlight,.md-typeset .grid>.highlighttable>tbody>tr>.code>.highlight>pre,.md-typeset .grid>.highlighttable>tbody>tr>.code>.highlight>pre>code{height:100%}.md-typeset .grid>.tabbed-set{margin-bottom:0;margin-top:0}@media screen and (min-width:45em){[dir=ltr] .md-typeset .inline{float:left}[dir=rtl] .md-typeset .inline{float:right}[dir=ltr] .md-typeset .inline{margin-right:.8rem}[dir=rtl] .md-typeset .inline{margin-left:.8rem}.md-typeset .inline{margin-bottom:.8rem;margin-top:0;width:11.7rem}[dir=ltr] .md-typeset .inline.end{float:right}[dir=rtl] .md-typeset .inline.end{float:left}[dir=ltr] .md-typeset .inline.end{margin-left:.8rem;margin-right:0}[dir=rtl] .md-typeset .inline.end{margin-left:0;margin-right:.8rem}}
</document_content>
</document>

<document index="14">
<source>docs/assets/stylesheets/palette.ab4e12ef.min.css</source>
<document_content>
@media screen{[data-md-color-scheme=slate]{--md-default-fg-color:hsla(var(--md-hue),15%,90%,0.82);--md-default-fg-color--light:hsla(var(--md-hue),15%,90%,0.56);--md-default-fg-color--lighter:hsla(var(--md-hue),15%,90%,0.32);--md-default-fg-color--lightest:hsla(var(--md-hue),15%,90%,0.12);--md-default-bg-color:hsla(var(--md-hue),15%,14%,1);--md-default-bg-color--light:hsla(var(--md-hue),15%,14%,0.54);--md-default-bg-color--lighter:hsla(var(--md-hue),15%,14%,0.26);--md-default-bg-color--lightest:hsla(var(--md-hue),15%,14%,0.07);--md-code-fg-color:hsla(var(--md-hue),18%,86%,0.82);--md-code-bg-color:hsla(var(--md-hue),15%,18%,1);--md-code-bg-color--light:hsla(var(--md-hue),15%,18%,0.9);--md-code-bg-color--lighter:hsla(var(--md-hue),15%,18%,0.54);--md-code-hl-color:#2977ff;--md-code-hl-color--light:#2977ff1a;--md-code-hl-number-color:#e6695b;--md-code-hl-special-color:#f06090;--md-code-hl-function-color:#c973d9;--md-code-hl-constant-color:#9383e2;--md-code-hl-keyword-color:#6791e0;--md-code-hl-string-color:#2fb170;--md-code-hl-name-color:var(--md-code-fg-color);--md-code-hl-operator-color:var(--md-default-fg-color--light);--md-code-hl-punctuation-color:var(--md-default-fg-color--light);--md-code-hl-comment-color:var(--md-default-fg-color--light);--md-code-hl-generic-color:var(--md-default-fg-color--light);--md-code-hl-variable-color:var(--md-default-fg-color--light);--md-typeset-color:var(--md-default-fg-color);--md-typeset-a-color:var(--md-primary-fg-color);--md-typeset-kbd-color:hsla(var(--md-hue),15%,90%,0.12);--md-typeset-kbd-accent-color:hsla(var(--md-hue),15%,90%,0.2);--md-typeset-kbd-border-color:hsla(var(--md-hue),15%,14%,1);--md-typeset-mark-color:#4287ff4d;--md-typeset-table-color:hsla(var(--md-hue),15%,95%,0.12);--md-typeset-table-color--light:hsla(var(--md-hue),15%,95%,0.035);--md-admonition-fg-color:var(--md-default-fg-color);--md-admonition-bg-color:var(--md-default-bg-color);--md-footer-bg-color:hsla(var(--md-hue),15%,10%,0.87);--md-footer-bg-color--dark:hsla(var(--md-hue),15%,8%,1);--md-shadow-z1:0 0.2rem 0.5rem #0000000d,0 0 0.05rem #0000001a;--md-shadow-z2:0 0.2rem 0.5rem #00000040,0 0 0.05rem #00000040;--md-shadow-z3:0 0.2rem 0.5rem #0006,0 0 0.05rem #00000059;color-scheme:dark}[data-md-color-scheme=slate] img[src$="#gh-light-mode-only"],[data-md-color-scheme=slate] img[src$="#only-light"]{display:none}[data-md-color-scheme=slate][data-md-color-primary=pink]{--md-typeset-a-color:#ed5487}[data-md-color-scheme=slate][data-md-color-primary=purple]{--md-typeset-a-color:#c46fd3}[data-md-color-scheme=slate][data-md-color-primary=deep-purple]{--md-typeset-a-color:#a47bea}[data-md-color-scheme=slate][data-md-color-primary=indigo]{--md-typeset-a-color:#5488e8}[data-md-color-scheme=slate][data-md-color-primary=teal]{--md-typeset-a-color:#00ccb8}[data-md-color-scheme=slate][data-md-color-primary=green]{--md-typeset-a-color:#71c174}[data-md-color-scheme=slate][data-md-color-primary=deep-orange]{--md-typeset-a-color:#ff764d}[data-md-color-scheme=slate][data-md-color-primary=brown]{--md-typeset-a-color:#c1775c}[data-md-color-scheme=slate][data-md-color-primary=black],[data-md-color-scheme=slate][data-md-color-primary=blue-grey],[data-md-color-scheme=slate][data-md-color-primary=grey],[data-md-color-scheme=slate][data-md-color-primary=white]{--md-typeset-a-color:#5e8bde}[data-md-color-switching] *,[data-md-color-switching] :after,[data-md-color-switching] :before{transition-duration:0ms!important}}[data-md-color-accent=red]{--md-accent-fg-color:#ff1947;--md-accent-fg-color--transparent:#ff19471a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=pink]{--md-accent-fg-color:#f50056;--md-accent-fg-color--transparent:#f500561a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=purple]{--md-accent-fg-color:#df41fb;--md-accent-fg-color--transparent:#df41fb1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=deep-purple]{--md-accent-fg-color:#7c4dff;--md-accent-fg-color--transparent:#7c4dff1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=indigo]{--md-accent-fg-color:#526cfe;--md-accent-fg-color--transparent:#526cfe1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=blue]{--md-accent-fg-color:#4287ff;--md-accent-fg-color--transparent:#4287ff1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=light-blue]{--md-accent-fg-color:#0091eb;--md-accent-fg-color--transparent:#0091eb1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=cyan]{--md-accent-fg-color:#00bad6;--md-accent-fg-color--transparent:#00bad61a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=teal]{--md-accent-fg-color:#00bda4;--md-accent-fg-color--transparent:#00bda41a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=green]{--md-accent-fg-color:#00c753;--md-accent-fg-color--transparent:#00c7531a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=light-green]{--md-accent-fg-color:#63de17;--md-accent-fg-color--transparent:#63de171a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=lime]{--md-accent-fg-color:#b0eb00;--md-accent-fg-color--transparent:#b0eb001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=yellow]{--md-accent-fg-color:#ffd500;--md-accent-fg-color--transparent:#ffd5001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=amber]{--md-accent-fg-color:#fa0;--md-accent-fg-color--transparent:#ffaa001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=orange]{--md-accent-fg-color:#ff9100;--md-accent-fg-color--transparent:#ff91001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=deep-orange]{--md-accent-fg-color:#ff6e42;--md-accent-fg-color--transparent:#ff6e421a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-primary=red]{--md-primary-fg-color:#ef5552;--md-primary-fg-color--light:#e57171;--md-primary-fg-color--dark:#e53734;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=pink]{--md-primary-fg-color:#e92063;--md-primary-fg-color--light:#ec417a;--md-primary-fg-color--dark:#c3185d;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=purple]{--md-primary-fg-color:#ab47bd;--md-primary-fg-color--light:#bb69c9;--md-primary-fg-color--dark:#8c24a8;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=deep-purple]{--md-primary-fg-color:#7e56c2;--md-primary-fg-color--light:#9574cd;--md-primary-fg-color--dark:#673ab6;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=indigo]{--md-primary-fg-color:#4051b5;--md-primary-fg-color--light:#5d6cc0;--md-primary-fg-color--dark:#303fa1;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=blue]{--md-primary-fg-color:#2094f3;--md-primary-fg-color--light:#42a5f5;--md-primary-fg-color--dark:#1975d2;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=light-blue]{--md-primary-fg-color:#02a6f2;--md-primary-fg-color--light:#28b5f6;--md-primary-fg-color--dark:#0287cf;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=cyan]{--md-primary-fg-color:#00bdd6;--md-primary-fg-color--light:#25c5da;--md-primary-fg-color--dark:#0097a8;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=teal]{--md-primary-fg-color:#009485;--md-primary-fg-color--light:#26a699;--md-primary-fg-color--dark:#007a6c;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=green]{--md-primary-fg-color:#4cae4f;--md-primary-fg-color--light:#68bb6c;--md-primary-fg-color--dark:#398e3d;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=light-green]{--md-primary-fg-color:#8bc34b;--md-primary-fg-color--light:#9ccc66;--md-primary-fg-color--dark:#689f38;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=lime]{--md-primary-fg-color:#cbdc38;--md-primary-fg-color--light:#d3e156;--md-primary-fg-color--dark:#b0b52c;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=yellow]{--md-primary-fg-color:#ffec3d;--md-primary-fg-color--light:#ffee57;--md-primary-fg-color--dark:#fbc02d;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=amber]{--md-primary-fg-color:#ffc105;--md-primary-fg-color--light:#ffc929;--md-primary-fg-color--dark:#ffa200;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=orange]{--md-primary-fg-color:#ffa724;--md-primary-fg-color--light:#ffa724;--md-primary-fg-color--dark:#fa8900;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=deep-orange]{--md-primary-fg-color:#ff6e42;--md-primary-fg-color--light:#ff8a66;--md-primary-fg-color--dark:#f4511f;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=brown]{--md-primary-fg-color:#795649;--md-primary-fg-color--light:#8d6e62;--md-primary-fg-color--dark:#5d4037;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=grey]{--md-primary-fg-color:#757575;--md-primary-fg-color--light:#9e9e9e;--md-primary-fg-color--dark:#616161;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3;--md-typeset-a-color:#4051b5}[data-md-color-primary=blue-grey]{--md-primary-fg-color:#546d78;--md-primary-fg-color--light:#607c8a;--md-primary-fg-color--dark:#455a63;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3;--md-typeset-a-color:#4051b5}[data-md-color-primary=light-green]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#72ad2e}[data-md-color-primary=lime]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#8b990a}[data-md-color-primary=yellow]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#b8a500}[data-md-color-primary=amber]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#d19d00}[data-md-color-primary=orange]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#e68a00}[data-md-color-primary=white]{--md-primary-fg-color:hsla(var(--md-hue),0%,100%,1);--md-primary-fg-color--light:hsla(var(--md-hue),0%,100%,0.7);--md-primary-fg-color--dark:hsla(var(--md-hue),0%,0%,0.07);--md-primary-bg-color:hsla(var(--md-hue),0%,0%,0.87);--md-primary-bg-color--light:hsla(var(--md-hue),0%,0%,0.54);--md-typeset-a-color:#4051b5}[data-md-color-primary=white] .md-button{color:var(--md-typeset-a-color)}[data-md-color-primary=white] .md-button--primary{background-color:var(--md-typeset-a-color);border-color:var(--md-typeset-a-color);color:hsla(var(--md-hue),0%,100%,1)}@media screen and (min-width:60em){[data-md-color-primary=white] .md-search__form{background-color:hsla(var(--md-hue),0%,0%,.07)}[data-md-color-primary=white] .md-search__form:hover{background-color:hsla(var(--md-hue),0%,0%,.32)}[data-md-color-primary=white] .md-search__input+.md-search__icon{color:hsla(var(--md-hue),0%,0%,.87)}}@media screen and (min-width:76.25em){[data-md-color-primary=white] .md-tabs{border-bottom:.05rem solid #00000012}}[data-md-color-primary=black]{--md-primary-fg-color:hsla(var(--md-hue),15%,9%,1);--md-primary-fg-color--light:hsla(var(--md-hue),15%,9%,0.54);--md-primary-fg-color--dark:hsla(var(--md-hue),15%,9%,1);--md-primary-bg-color:hsla(var(--md-hue),15%,100%,1);--md-primary-bg-color--light:hsla(var(--md-hue),15%,100%,0.7);--md-typeset-a-color:#4051b5}[data-md-color-primary=black] .md-button{color:var(--md-typeset-a-color)}[data-md-color-primary=black] .md-button--primary{background-color:var(--md-typeset-a-color);border-color:var(--md-typeset-a-color);color:hsla(var(--md-hue),0%,100%,1)}[data-md-color-primary=black] .md-header{background-color:hsla(var(--md-hue),15%,9%,1)}@media screen and (max-width:59.984375em){[data-md-color-primary=black] .md-nav__source{background-color:hsla(var(--md-hue),15%,11%,.87)}}@media screen and (max-width:76.234375em){html [data-md-color-primary=black] .md-nav--primary .md-nav__title[for=__drawer]{background-color:hsla(var(--md-hue),15%,9%,1)}}@media screen and (min-width:76.25em){[data-md-color-primary=black] .md-tabs{background-color:hsla(var(--md-hue),15%,9%,1)}}
</document_content>
</document>

<document index="15">
<source>docs/index.html</source>
<document_content>

<!doctype html>
<html lang="en" class="no-js">
  <head>
    
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width,initial-scale=1">
      
        <meta name="description" content="A plugin that captures HTML output and creates cousin Markdown files">
      
      
        <meta name="author" content="Vexy">
      
      
        <link rel="canonical" href="https://vexyart.github.io/vexy-mkdocs-output-as-input/">
      
      
      
      
        
      
      
      <link rel="icon" href="assets/images/favicon.png">
      <meta name="generator" content="mkdocs-1.6.1, mkdocs-material-9.6.15+insiders-4.53.16">
    
    
      
        <title>MkDocs Output as Input Plugin - MkDocs Output as Input Plugin</title>
      
    
    
      <link rel="stylesheet" href="assets/stylesheets/main.8cce3a28.min.css">
      
        
        <link rel="stylesheet" href="assets/stylesheets/palette.ab4e12ef.min.css">
      
      


    
    
      
    
    
      
        
        
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,700,700i%7CRoboto+Mono:400,400i,700,700i&display=fallback">
        <style>:root{--md-text-font:"Roboto";--md-code-font:"Roboto Mono"}</style>
      
    
    
    <script>__md_scope=new URL(".",location),__md_hash=e=>[...e].reduce(((e,_)=>(e<<5)-e+_.charCodeAt(0)),0),__md_get=(e,_=localStorage,t=__md_scope)=>JSON.parse(_.getItem(t.pathname+"."+e)),__md_set=(e,_,t=localStorage,a=__md_scope)=>{try{t.setItem(a.pathname+"."+e,JSON.stringify(_))}catch(e){}}</script>
    
      

    
    
  </head>
  
  
    
    
      
    
    
    
    
    <body dir="ltr" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo">
  
    
    <input class="md-toggle" data-md-toggle="drawer" type="checkbox" id="__drawer" autocomplete="off">
    <input class="md-toggle" data-md-toggle="search" type="checkbox" id="__search" autocomplete="off">
    <label class="md-overlay" for="__drawer"></label>
    <div data-md-component="skip">
      
    </div>
    <div data-md-component="announce">
      
    </div>
    
    
      

  

<header class="md-header md-header--shadow" data-md-component="header">
  <nav class="md-header__inner md-grid" aria-label="Header">
    <a href="." title="MkDocs Output as Input Plugin" class="md-header__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    <label class="md-header__button md-icon" for="__drawer">
      
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 6h18v2H3zm0 5h18v2H3zm0 5h18v2H3z"/></svg>
    </label>
    <div class="md-header__title" data-md-component="header-title">
      <div class="md-header__ellipsis">
        <div class="md-header__topic">
          <span class="md-ellipsis">
            MkDocs Output as Input Plugin
          </span>
        </div>
        <div class="md-header__topic" data-md-component="header-topic">
          <span class="md-ellipsis">
            
              MkDocs Output as Input Plugin
            
          </span>
        </div>
      </div>
    </div>
    
      
        <form class="md-header__option" data-md-component="palette">
  
    
    
    
    <input class="md-option" data-md-color-media="" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo"  aria-hidden="true"  type="radio" name="__palette" id="__palette_0">
    
  
</form>
      
    
    
      <script>var palette=__md_get("__palette");if(palette&&palette.color){if("(prefers-color-scheme)"===palette.color.media){var media=matchMedia("(prefers-color-scheme: light)"),input=document.querySelector(media.matches?"[data-md-color-media='(prefers-color-scheme: light)']":"[data-md-color-media='(prefers-color-scheme: dark)']");palette.color.media=input.getAttribute("data-md-color-media"),palette.color.scheme=input.getAttribute("data-md-color-scheme"),palette.color.primary=input.getAttribute("data-md-color-primary"),palette.color.accent=input.getAttribute("data-md-color-accent")}for(var[key,value]of Object.entries(palette.color))document.body.setAttribute("data-md-color-"+key,value)}</script>
    
    
    
      
      
        <label class="md-header__button md-icon" for="__search">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        </label>
        <div class="md-search" data-md-component="search" role="dialog">
  <label class="md-search__overlay" for="__search"></label>
  <div class="md-search__inner" role="search">
    <form class="md-search__form" name="search">
      <input type="text" class="md-search__input" name="query" aria-label="Search" placeholder="Search" autocapitalize="off" autocorrect="off" autocomplete="off" spellcheck="false" data-md-component="search-query" required>
      <label class="md-search__icon md-icon" for="__search">
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20 11v2H8l5.5 5.5-1.42 1.42L4.16 12l7.92-7.92L13.5 5.5 8 11z"/></svg>
      </label>
      <nav class="md-search__options" aria-label="Search">
        
        <button type="reset" class="md-search__icon md-icon" title="Clear" aria-label="Clear" tabindex="-1">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>
        </button>
      </nav>
      
    </form>
    <div class="md-search__output">
      <div class="md-search__scrollwrap" tabindex="0" data-md-scrollfix>
        <div class="md-search-result" data-md-component="search-result">
          <div class="md-search-result__meta">
            Initializing search
          </div>
          <ol class="md-search-result__list" role="presentation"></ol>
        </div>
      </div>
    </div>
  </div>
</div>
      
    
    
  </nav>
  
</header>
    
    <div class="md-container" data-md-component="container">
      
      
        
          
        
      
      <main class="md-main" data-md-component="main">
        <div class="md-main__inner md-grid">
          
            
              
              <div class="md-sidebar md-sidebar--primary" data-md-component="sidebar" data-md-type="navigation" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    



<nav class="md-nav md-nav--primary" aria-label="Navigation" data-md-level="0">
  <label class="md-nav__title" for="__drawer">
    <a href="." title="MkDocs Output as Input Plugin" class="md-nav__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    MkDocs Output as Input Plugin
  </label>
  
  <ul class="md-nav__list" data-md-scrollfix>
    
      
      
  
  
    
  
  
  
    <li class="md-nav__item md-nav__item--active">
      
      <input class="md-nav__toggle md-toggle" type="checkbox" id="__toc">
      
      
      
      <a href="." class="md-nav__link md-nav__link--active">
        
  
  
  <span class="md-ellipsis">
    
  
    Home
  

    
  </span>
  
  

      </a>
      
    </li>
  

    
  </ul>
</nav>
                  </div>
                </div>
              </div>
            
            
              
              <div class="md-sidebar md-sidebar--secondary" data-md-component="sidebar" data-md-type="toc" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    

<nav class="md-nav md-nav--secondary" aria-label="Table of contents">
  
  
  
  
</nav>
                  </div>
                </div>
              </div>
            
          
          
            <div class="md-content" data-md-component="content">
              
              <article class="md-content__inner md-typeset">
                
                  



<div class="md-content__inner md-typeset">
<h1 class="custom-heading" id="vexy-mkdocs-output-as-input">vexy-mkdocs-output-as-input<a class="headerlink" href="#vexy-mkdocs-output-as-input" title="Permanent link">¶</a></h1>
<p><a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="PyPI version" src="https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg"/></a>
<a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml"><img alt="CI" src="https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg"/></a>
<a href="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input"><img alt="codecov" src="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg"/></a>
<a href="https://opensource.org/licenses/MIT"><img alt="License: MIT" src="https://img.shields.io/badge/License-MIT-yellow.svg"/></a>
<a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="Python versions" src="https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg"/></a></p>
<p>A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.</p>
<h2 class="custom-heading" id="features">Features<a class="headerlink" href="#features" title="Permanent link">¶</a></h2>
<p>This plugin enables powerful post-processing workflows by:</p>
<ol>
<li>✅ Preserving your original Markdown structure and frontmatter</li>
<li>✅ Capturing the fully-rendered HTML output from MkDocs</li>
<li>✅ Creating new Markdown files that combine original metadata with processed HTML</li>
<li>✅ Enabling further processing by other static site generators</li>
</ol>
<h2 class="custom-heading" id="installation">Installation<a class="headerlink" href="#installation" title="Permanent link">¶</a></h2>
<p>Install from PyPI:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-0-1" id="__codelineno-0-1" name="__codelineno-0-1"></a>uv<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>--system<span class="w"> </span>--upgrade<span class="w"> </span>vexy-mkdocs-output-as-input
</code></pre></div>
<p>Or install from source:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-1-1" id="__codelineno-1-1" name="__codelineno-1-1"></a>pip<span class="w"> </span>install<span class="w"> </span>git+https://github.com/vexyart/vexy-mkdocs-output-as-input
</code></pre></div>
<h2 class="custom-heading" id="quick-start">Quick Start<a class="headerlink" href="#quick-start" title="Permanent link">¶</a></h2>
<p>Add the plugin to your <code>mkdocs.yml</code>:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-2-1" id="__codelineno-2-1" name="__codelineno-2-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-2-2" id="__codelineno-2-2" name="__codelineno-2-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span><span class="w">  </span><span class="c1"># Other plugins</span>
<a href="#__codelineno-2-3" id="__codelineno-2-3" name="__codelineno-2-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<p>Build your site:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-3-1" id="__codelineno-3-1" name="__codelineno-3-1"></a>mkdocs<span class="w"> </span>build
</code></pre></div>
<p>Find your processed files in the <code>stage/</code> directory (relative to your MkDocs project root).</p>
<h2 class="custom-heading" id="configuration">Configuration<a class="headerlink" href="#configuration" title="Permanent link">¶</a></h2>
<p>All configuration options with their defaults:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-4-1" id="__codelineno-4-1" name="__codelineno-4-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-4-2" id="__codelineno-4-2" name="__codelineno-4-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-4-3" id="__codelineno-4-3" name="__codelineno-4-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">stage</span><span class="w">          </span><span class="c1"># Output directory name (default: 'stage')</span>
<a href="#__codelineno-4-4" id="__codelineno-4-4" name="__codelineno-4-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span><span class="w">        </span><span class="c1"># HTML element to extract (default: 'main')</span>
<a href="#__codelineno-4-5" id="__codelineno-4-5" name="__codelineno-4-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span><span class="w">       </span><span class="c1"># Tag to use in output (default: 'article')</span>
<a href="#__codelineno-4-6" id="__codelineno-4-6" name="__codelineno-4-6"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">false</span><span class="w">            </span><span class="c1"># Enable verbose logging (default: false)</span>
</code></pre></div>
<h3 class="custom-heading" id="options-explained">Options Explained<a class="headerlink" href="#options-explained" title="Permanent link">¶</a></h3>
<table>
<thead>
<tr>
<th>Option</th>
<th>Type</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>stage_dir</code></td>
<td>string</td>
<td><code>"stage"</code></td>
<td>Directory name for output files (relative to project root)</td>
</tr>
<tr>
<td><code>html_element</code></td>
<td>string</td>
<td><code>"main"</code></td>
<td>CSS selector for the HTML element to extract</td>
</tr>
<tr>
<td><code>target_tag</code></td>
<td>string</td>
<td><code>"article"</code></td>
<td>HTML tag to use in the output (replaces extracted element's tag)</td>
</tr>
<tr>
<td><code>verbose</code></td>
<td>boolean</td>
<td><code>false</code></td>
<td>Enable detailed logging for debugging</td>
</tr>
</tbody>
</table>
<h2 class="custom-heading" id="how-it-works">How It Works<a class="headerlink" href="#how-it-works" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="input-process-output">Input → Process → Output<a class="headerlink" href="#input-process-output" title="Permanent link">¶</a></h3>
<ol>
<li>
<p><strong>Input</strong>: Your source Markdown with frontmatter
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-5-1" id="__codelineno-5-1" name="__codelineno-5-1"></a>---
<a href="#__codelineno-5-2" id="__codelineno-5-2" name="__codelineno-5-2"></a>title: My Page
<a href="#__codelineno-5-3" id="__codelineno-5-3" name="__codelineno-5-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-5-4" id="__codelineno-5-4" name="__codelineno-5-4"></a><span class="gu">---</span>
<a href="#__codelineno-5-5" id="__codelineno-5-5" name="__codelineno-5-5"></a>
<a href="#__codelineno-5-6" id="__codelineno-5-6" name="__codelineno-5-6"></a><span class="gh"># My Page</span>
<a href="#__codelineno-5-7" id="__codelineno-5-7" name="__codelineno-5-7"></a>
<a href="#__codelineno-5-8" id="__codelineno-5-8" name="__codelineno-5-8"></a>This is my content with <span class="gs">**markdown**</span>.
</code></pre></div></p>
</li>
<li>
<p><strong>MkDocs Processing</strong>: Renders to HTML as usual
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-6-1" id="__codelineno-6-1" name="__codelineno-6-1"></a><span class="p">&lt;</span><span class="nt">main</span> <span class="na">class</span><span class="o">=</span><span class="s">"md-content"</span><span class="p">&gt;</span>
<a href="#__codelineno-6-2" id="__codelineno-6-2" name="__codelineno-6-2"></a>  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>My Page<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<a href="#__codelineno-6-3" id="__codelineno-6-3" name="__codelineno-6-3"></a>  <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>This is my content with <span class="p">&lt;</span><span class="nt">strong</span><span class="p">&gt;</span>markdown<span class="p">&lt;/</span><span class="nt">strong</span><span class="p">&gt;</span>.<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<a href="#__codelineno-6-4" id="__codelineno-6-4" name="__codelineno-6-4"></a><span class="p">&lt;/</span><span class="nt">main</span><span class="p">&gt;</span>
</code></pre></div></p>
</li>
<li>
<p><strong>Output</strong>: Cousin file with preserved frontmatter + extracted HTML
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-7-1" id="__codelineno-7-1" name="__codelineno-7-1"></a>---
<a href="#__codelineno-7-2" id="__codelineno-7-2" name="__codelineno-7-2"></a>title: My Page
<a href="#__codelineno-7-3" id="__codelineno-7-3" name="__codelineno-7-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-7-4" id="__codelineno-7-4" name="__codelineno-7-4"></a><span class="gu">---</span>
<a href="#__codelineno-7-5" id="__codelineno-7-5" name="__codelineno-7-5"></a>
<a href="#__codelineno-7-6" id="__codelineno-7-6" name="__codelineno-7-6"></a>&lt;article class="md-content"&gt;
<a href="#__codelineno-7-7" id="__codelineno-7-7" name="__codelineno-7-7"></a>  &lt;h1&gt;My Page&lt;/h1&gt;
<a href="#__codelineno-7-8" id="__codelineno-7-8" name="__codelineno-7-8"></a>  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;
<a href="#__codelineno-7-9" id="__codelineno-7-9" name="__codelineno-7-9"></a>&lt;/article&gt;
</code></pre></div></p>
</li>
</ol>
<h2 class="custom-heading" id="use-cases">Use Cases<a class="headerlink" href="#use-cases" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="multi-stage-documentation-pipeline">🔄 Multi-Stage Documentation Pipeline<a class="headerlink" href="#multi-stage-documentation-pipeline" title="Permanent link">¶</a></h3>
<p>Process documentation through MkDocs first, then feed to another SSG:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-8-1" id="__codelineno-8-1" name="__codelineno-8-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-8-2" id="__codelineno-8-2" name="__codelineno-8-2"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-8-3" id="__codelineno-8-3" name="__codelineno-8-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-8-4" id="__codelineno-8-4" name="__codelineno-8-4"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">hugo/content</span>
<a href="#__codelineno-8-5" id="__codelineno-8-5" name="__codelineno-8-5"></a>
<a href="#__codelineno-8-6" id="__codelineno-8-6" name="__codelineno-8-6"></a><span class="c1"># Then run:</span>
<a href="#__codelineno-8-7" id="__codelineno-8-7" name="__codelineno-8-7"></a><span class="c1"># mkdocs build &amp;&amp; hugo build</span>
</code></pre></div>
<h3 class="custom-heading" id="content-extraction">📝 Content Extraction<a class="headerlink" href="#content-extraction" title="Permanent link">¶</a></h3>
<p>Extract just the article content without theme wrapper:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-9-1" id="__codelineno-9-1" name="__codelineno-9-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-9-2" id="__codelineno-9-2" name="__codelineno-9-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-9-3" id="__codelineno-9-3" name="__codelineno-9-3"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span>
<a href="#__codelineno-9-4" id="__codelineno-9-4" name="__codelineno-9-4"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">div</span>
</code></pre></div>
<h3 class="custom-heading" id="custom-post-processing">🎨 Custom Post-Processing<a class="headerlink" href="#custom-post-processing" title="Permanent link">¶</a></h3>
<p>Preserve MkDocs rendering while preparing for custom templates:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-10-1" id="__codelineno-10-1" name="__codelineno-10-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-10-2" id="__codelineno-10-2" name="__codelineno-10-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-10-3" id="__codelineno-10-3" name="__codelineno-10-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">_includes</span>
<a href="#__codelineno-10-4" id="__codelineno-10-4" name="__codelineno-10-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-10-5" id="__codelineno-10-5" name="__codelineno-10-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">section</span>
</code></pre></div>
<h2 class="custom-heading" id="examples">Examples<a class="headerlink" href="#examples" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="basic-example">Basic Example<a class="headerlink" href="#basic-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-11-1" id="__codelineno-11-1" name="__codelineno-11-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-11-2" id="__codelineno-11-2" name="__codelineno-11-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-11-3" id="__codelineno-11-3" name="__codelineno-11-3"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-11-4" id="__codelineno-11-4" name="__codelineno-11-4"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<h3 class="custom-heading" id="advanced-example">Advanced Example<a class="headerlink" href="#advanced-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-12-1" id="__codelineno-12-1" name="__codelineno-12-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-12-2" id="__codelineno-12-2" name="__codelineno-12-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-12-3" id="__codelineno-12-3" name="__codelineno-12-3"></a><span class="nt">theme</span><span class="p">:</span>
<a href="#__codelineno-12-4" id="__codelineno-12-4" name="__codelineno-12-4"></a><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">material</span>
<a href="#__codelineno-12-5" id="__codelineno-12-5" name="__codelineno-12-5"></a>
<a href="#__codelineno-12-6" id="__codelineno-12-6" name="__codelineno-12-6"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-12-7" id="__codelineno-12-7" name="__codelineno-12-7"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span>
<a href="#__codelineno-12-8" id="__codelineno-12-8" name="__codelineno-12-8"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-12-9" id="__codelineno-12-9" name="__codelineno-12-9"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">processed</span>
<a href="#__codelineno-12-10" id="__codelineno-12-10" name="__codelineno-12-10"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article.md-content__inner</span>
<a href="#__codelineno-12-11" id="__codelineno-12-11" name="__codelineno-12-11"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-12-12" id="__codelineno-12-12" name="__codelineno-12-12"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">true</span>
<a href="#__codelineno-12-13" id="__codelineno-12-13" name="__codelineno-12-13"></a>
<a href="#__codelineno-12-14" id="__codelineno-12-14" name="__codelineno-12-14"></a><span class="c1"># Process specific content area from Material theme</span>
</code></pre></div>
<h3 class="custom-heading" id="integration-example">Integration Example<a class="headerlink" href="#integration-example" title="Permanent link">¶</a></h3>
<p>Using with other tools in a documentation pipeline:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-13-1" id="__codelineno-13-1" name="__codelineno-13-1"></a><span class="ch">#!/bin/bash</span>
<a href="#__codelineno-13-2" id="__codelineno-13-2" name="__codelineno-13-2"></a><span class="c1"># build.sh</span>
<a href="#__codelineno-13-3" id="__codelineno-13-3" name="__codelineno-13-3"></a>
<a href="#__codelineno-13-4" id="__codelineno-13-4" name="__codelineno-13-4"></a><span class="c1"># Stage 1: Build with MkDocs + plugins</span>
<a href="#__codelineno-13-5" id="__codelineno-13-5" name="__codelineno-13-5"></a>mkdocs<span class="w"> </span>build
<a href="#__codelineno-13-6" id="__codelineno-13-6" name="__codelineno-13-6"></a>
<a href="#__codelineno-13-7" id="__codelineno-13-7" name="__codelineno-13-7"></a><span class="c1"># Stage 2: Process staged output</span>
<a href="#__codelineno-13-8" id="__codelineno-13-8" name="__codelineno-13-8"></a>python<span class="w"> </span>post_process.py<span class="w"> </span>stage/
<a href="#__codelineno-13-9" id="__codelineno-13-9" name="__codelineno-13-9"></a>
<a href="#__codelineno-13-10" id="__codelineno-13-10" name="__codelineno-13-10"></a><span class="c1"># Stage 3: Build final site</span>
<a href="#__codelineno-13-11" id="__codelineno-13-11" name="__codelineno-13-11"></a>hugo<span class="w"> </span>--contentDir<span class="o">=</span>stage/
</code></pre></div>
<h2 class="custom-heading" id="development">Development<a class="headerlink" href="#development" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="setup-development-environment">Setup Development Environment<a class="headerlink" href="#setup-development-environment" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-14-1" id="__codelineno-14-1" name="__codelineno-14-1"></a><span class="c1"># Clone the repository</span>
<a href="#__codelineno-14-2" id="__codelineno-14-2" name="__codelineno-14-2"></a>git<span class="w"> </span>clone<span class="w"> </span>https://github.com/vexyart/vexy-mkdocs-output-as-input
<a href="#__codelineno-14-3" id="__codelineno-14-3" name="__codelineno-14-3"></a><span class="nb">cd</span><span class="w"> </span>vexy-mkdocs-output-as-input
<a href="#__codelineno-14-4" id="__codelineno-14-4" name="__codelineno-14-4"></a>
<a href="#__codelineno-14-5" id="__codelineno-14-5" name="__codelineno-14-5"></a><span class="c1"># Create virtual environment</span>
<a href="#__codelineno-14-6" id="__codelineno-14-6" name="__codelineno-14-6"></a>python<span class="w"> </span>-m<span class="w"> </span>venv<span class="w"> </span>venv
<a href="#__codelineno-14-7" id="__codelineno-14-7" name="__codelineno-14-7"></a><span class="nb">source</span><span class="w"> </span>venv/bin/activate<span class="w">  </span><span class="c1"># On Windows: venv\Scripts\activate</span>
<a href="#__codelineno-14-8" id="__codelineno-14-8" name="__codelineno-14-8"></a>
<a href="#__codelineno-14-9" id="__codelineno-14-9" name="__codelineno-14-9"></a><span class="c1"># Install in development mode</span>
<a href="#__codelineno-14-10" id="__codelineno-14-10" name="__codelineno-14-10"></a>pip<span class="w"> </span>install<span class="w"> </span>-e<span class="w"> </span>.<span class="o">[</span>dev<span class="o">]</span>
<a href="#__codelineno-14-11" id="__codelineno-14-11" name="__codelineno-14-11"></a>
<a href="#__codelineno-14-12" id="__codelineno-14-12" name="__codelineno-14-12"></a><span class="c1"># Install pre-commit hooks</span>
<a href="#__codelineno-14-13" id="__codelineno-14-13" name="__codelineno-14-13"></a>pre-commit<span class="w"> </span>install
</code></pre></div>
<h3 class="custom-heading" id="running-tests">Running Tests<a class="headerlink" href="#running-tests" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-15-1" id="__codelineno-15-1" name="__codelineno-15-1"></a><span class="c1"># Run all tests</span>
<a href="#__codelineno-15-2" id="__codelineno-15-2" name="__codelineno-15-2"></a>pytest
<a href="#__codelineno-15-3" id="__codelineno-15-3" name="__codelineno-15-3"></a>
<a href="#__codelineno-15-4" id="__codelineno-15-4" name="__codelineno-15-4"></a><span class="c1"># Run with coverage</span>
<a href="#__codelineno-15-5" id="__codelineno-15-5" name="__codelineno-15-5"></a>pytest<span class="w"> </span>--cov<span class="o">=</span>mkdocs_output_as_input<span class="w"> </span>--cov-report<span class="o">=</span>html
<a href="#__codelineno-15-6" id="__codelineno-15-6" name="__codelineno-15-6"></a>
<a href="#__codelineno-15-7" id="__codelineno-15-7" name="__codelineno-15-7"></a><span class="c1"># Run specific test</span>
<a href="#__codelineno-15-8" id="__codelineno-15-8" name="__codelineno-15-8"></a>pytest<span class="w"> </span>tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
</code></pre></div>
<h3 class="custom-heading" id="code-quality">Code Quality<a class="headerlink" href="#code-quality" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-16-1" id="__codelineno-16-1" name="__codelineno-16-1"></a><span class="c1"># Format code</span>
<a href="#__codelineno-16-2" id="__codelineno-16-2" name="__codelineno-16-2"></a>black<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-3" id="__codelineno-16-3" name="__codelineno-16-3"></a>
<a href="#__codelineno-16-4" id="__codelineno-16-4" name="__codelineno-16-4"></a><span class="c1"># Lint code</span>
<a href="#__codelineno-16-5" id="__codelineno-16-5" name="__codelineno-16-5"></a>ruff<span class="w"> </span>check<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-6" id="__codelineno-16-6" name="__codelineno-16-6"></a>
<a href="#__codelineno-16-7" id="__codelineno-16-7" name="__codelineno-16-7"></a><span class="c1"># Type check</span>
<a href="#__codelineno-16-8" id="__codelineno-16-8" name="__codelineno-16-8"></a>mypy<span class="w"> </span>src
</code></pre></div>
<h2 class="custom-heading" id="contributing">Contributing<a class="headerlink" href="#contributing" title="Permanent link">¶</a></h2>
<p>Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.</p>
<ol>
<li>Fork the repository</li>
<li>Create your feature branch (<code>git checkout -b feature/AmazingFeature</code>)</li>
<li>Commit your changes (<code>git commit -m 'Add some AmazingFeature'</code>)</li>
<li>Push to the branch (<code>git push origin feature/AmazingFeature</code>)</li>
<li>Open a Pull Request</li>
</ol>
<h2 class="custom-heading" id="license">License<a class="headerlink" href="#license" title="Permanent link">¶</a></h2>
<p>This project is licensed under the MIT License - see the <a href="LICENSE">LICENSE</a> file for details.</p>
<h2 class="custom-heading" id="support">Support<a class="headerlink" href="#support" title="Permanent link">¶</a></h2>
<ul>
<li>📧 Email: you@example.com</li>
<li>🐛 Issues: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/issues">GitHub Issues</a></li>
<li>💬 Discussions: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions">GitHub Discussions</a></li>
</ul>
</div>







  
  






                
              </article>
            </div>
          
          
<script>var target=document.getElementById(location.hash.slice(1));target&&target.name&&(target.checked=target.name.startsWith("__tabbed_"))</script>
        </div>
        
      </main>
      
        <footer class="md-footer">
  
  <div class="md-footer-meta md-typeset">
    <div class="md-footer-meta__inner md-grid">
      <div class="md-copyright">
  
  
    Made with
    <a href="https://squidfunk.github.io/mkdocs-material/" target="_blank" rel="noopener">
      Material for MkDocs Insiders
    </a>
  
</div>
      
    </div>
  </div>
</footer>
      
    </div>
    <div class="md-dialog" data-md-component="dialog">
      <div class="md-dialog__inner md-typeset"></div>
    </div>
    
    
    
      
      
      <script id="__config" type="application/json">{"annotate": null, "base": ".", "features": ["navigation.instant", "navigation.tracking", "content.code.copy"], "search": "assets/javascripts/workers/search.ad38c271.min.js", "tags": null, "translations": {"clipboard.copied": "Copied to clipboard", "clipboard.copy": "Copy to clipboard", "search.result.more.one": "1 more on this page", "search.result.more.other": "# more on this page", "search.result.none": "No matching documents", "search.result.one": "1 matching document", "search.result.other": "# matching documents", "search.result.placeholder": "Type to start searching", "search.result.term.missing": "Missing", "select.version": "Select version"}, "version": null}</script>
    
    
      <script src="assets/javascripts/bundle.5c86578b.min.js"></script>
      
    
  </body>
</html>
</document_content>
</document>

<document index="16">
<source>docs/search/search_index.json</source>
<document_content>
{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"MkDocs Output as Input Plugin","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#vexy-mkdocs-output-as-input","title":"vexy-mkdocs-output-as-input","text":"<p>A MkDocs plugin that captures HTML output and creates \"cousin\" Markdown files with original frontmatter and extracted HTML content.</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#features","title":"Features","text":"<p>This plugin enables powerful post-processing workflows by:</p> <ol> <li>\u2705 Preserving your original Markdown structure and frontmatter</li> <li>\u2705 Capturing the fully-rendered HTML output from MkDocs</li> <li>\u2705 Creating new Markdown files that combine original metadata with processed HTML</li> <li>\u2705 Enabling further processing by other static site generators</li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#installation","title":"Installation","text":"<p>Install from PyPI:</p> <pre><code>uv pip install --system --upgrade vexy-mkdocs-output-as-input\n</code></pre> <p>Or install from source:</p> <pre><code>pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#quick-start","title":"Quick Start","text":"<p>Add the plugin to your <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - search  # Other plugins\n  - output-as-input\n</code></pre> <p>Build your site:</p> <pre><code>mkdocs build\n</code></pre> <p>Find your processed files in the <code>stage/</code> directory (relative to your MkDocs project root).</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#configuration","title":"Configuration","text":"<p>All configuration options with their defaults:</p> <pre><code>plugins:\n  - output-as-input:\n      stage_dir: stage          # Output directory name (default: 'stage')\n      html_element: main        # HTML element to extract (default: 'main')\n      target_tag: article       # Tag to use in output (default: 'article')\n      verbose: false            # Enable verbose logging (default: false)\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#options-explained","title":"Options Explained","text":"Option Type Default Description <code>stage_dir</code> string <code>\"stage\"</code> Directory name for output files (relative to project root) <code>html_element</code> string <code>\"main\"</code> CSS selector for the HTML element to extract <code>target_tag</code> string <code>\"article\"</code> HTML tag to use in the output (replaces extracted element's tag) <code>verbose</code> boolean <code>false</code> Enable detailed logging for debugging","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#how-it-works","title":"How It Works","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#input-process-output","title":"Input \u2192 Process \u2192 Output","text":"<ol> <li> <p>Input: Your source Markdown with frontmatter    <pre><code>---\ntitle: My Page\nauthor: Jane Doe\n---\n\n# My Page\n\nThis is my content with **markdown**.\n</code></pre></p> </li> <li> <p>MkDocs Processing: Renders to HTML as usual    <pre><code>&lt;main class=\"md-content\"&gt;\n  &lt;h1&gt;My Page&lt;/h1&gt;\n  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;\n&lt;/main&gt;\n</code></pre></p> </li> <li> <p>Output: Cousin file with preserved frontmatter + extracted HTML    <pre><code>---\ntitle: My Page\nauthor: Jane Doe\n---\n\n&lt;article class=\"md-content\"&gt;\n  &lt;h1&gt;My Page&lt;/h1&gt;\n  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;\n&lt;/article&gt;\n</code></pre></p> </li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#use-cases","title":"Use Cases","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#multi-stage-documentation-pipeline","title":"\ud83d\udd04 Multi-Stage Documentation Pipeline","text":"<p>Process documentation through MkDocs first, then feed to another SSG:</p> <pre><code># mkdocs.yml\nplugins:\n  - output-as-input:\n      stage_dir: hugo/content\n\n# Then run:\n# mkdocs build &amp;&amp; hugo build\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#content-extraction","title":"\ud83d\udcdd Content Extraction","text":"<p>Extract just the article content without theme wrapper:</p> <pre><code>plugins:\n  - output-as-input:\n      html_element: article\n      target_tag: div\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#custom-post-processing","title":"\ud83c\udfa8 Custom Post-Processing","text":"<p>Preserve MkDocs rendering while preparing for custom templates:</p> <pre><code>plugins:\n  - output-as-input:\n      stage_dir: _includes\n      html_element: main\n      target_tag: section\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#examples","title":"Examples","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#basic-example","title":"Basic Example","text":"<pre><code># mkdocs.yml\nsite_name: My Documentation\nplugins:\n  - output-as-input\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#advanced-example","title":"Advanced Example","text":"<pre><code># mkdocs.yml\nsite_name: My Documentation\ntheme:\n  name: material\n\nplugins:\n  - search\n  - output-as-input:\n      stage_dir: processed\n      html_element: article.md-content__inner\n      target_tag: main\n      verbose: true\n\n# Process specific content area from Material theme\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#integration-example","title":"Integration Example","text":"<p>Using with other tools in a documentation pipeline:</p> <pre><code>#!/bin/bash\n# build.sh\n\n# Stage 1: Build with MkDocs + plugins\nmkdocs build\n\n# Stage 2: Process staged output\npython post_process.py stage/\n\n# Stage 3: Build final site\nhugo --contentDir=stage/\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#development","title":"Development","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#setup-development-environment","title":"Setup Development Environment","text":"<pre><code># Clone the repository\ngit clone https://github.com/vexyart/vexy-mkdocs-output-as-input\ncd vexy-mkdocs-output-as-input\n\n# Create virtual environment\npython -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n\n# Install in development mode\npip install -e .[dev]\n\n# Install pre-commit hooks\npre-commit install\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#running-tests","title":"Running Tests","text":"<pre><code># Run all tests\npytest\n\n# Run with coverage\npytest --cov=mkdocs_output_as_input --cov-report=html\n\n# Run specific test\npytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#code-quality","title":"Code Quality","text":"<pre><code># Format code\nblack src tests\n\n# Lint code\nruff check src tests\n\n# Type check\nmypy src\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.</p> <ol> <li>Fork the repository</li> <li>Create your feature branch (<code>git checkout -b feature/AmazingFeature</code>)</li> <li>Commit your changes (<code>git commit -m 'Add some AmazingFeature'</code>)</li> <li>Push to the branch (<code>git push origin feature/AmazingFeature</code>)</li> <li>Open a Pull Request</li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#support","title":"Support","text":"<ul> <li>\ud83d\udce7 Email: you@example.com</li> <li>\ud83d\udc1b Issues: GitHub Issues</li> <li>\ud83d\udcac Discussions: GitHub Discussions</li> </ul>","tags":["mkdocs","plugin","documentation","pipeline"]}]}
</document_content>
</document>

<document index="17">
<source>docs/sitemap.xml</source>
<document_content>
<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
    <url>
         <loc>https://vexyart.github.io/vexy-mkdocs-output-as-input/</loc>
         <lastmod>2025-07-14</lastmod>
    </url>
</urlset>
</document_content>
</document>

<document index="18">
<source>llms.txt</source>
<document_content>
Project Structure:
📁 vexy-mkdocs-output-as-input
├── 📁 .github
│   └── 📁 workflows
│       ├── 📄 ci.yml
│       └── 📄 release.yml
├── 📁 docs
│   ├── 📁 assets
│   │   ├── 📁 images
│   │   ├── 📁 javascripts
│   │   │   ├── 📁 lunr
│   │   │   │   ├── 📁 min
│   │   │   │   │   └── ... (depth limit reached)
│   │   │   │   ├── 📄 tinyseg.js
│   │   │   │   └── 📄 wordcut.js
│   │   │   ├── 📁 workers
│   │   │   │   └── 📄 search.ad38c271.min.js
│   │   │   └── 📄 bundle.5c86578b.min.js
│   │   └── 📁 stylesheets
│   │       ├── 📄 main.8cce3a28.min.css
│   │       └── 📄 palette.ab4e12ef.min.css
│   ├── 📁 search
│   │   └── 📄 search_index.json
│   ├── 📄 404.html
│   ├── 📄 index.html
│   ├── 📄 README.md
│   └── 📄 sitemap.xml
├── 📁 src
│   └── 📁 mkdocs_output_as_input
│       ├── 📄 __init__.py
│       ├── 📄 cli.py
│       └── 📄 plugin.py
├── 📁 stage
│   └── 📄 README.md
├── 📁 tests
│   ├── 📄 test_cli.py
│   └── 📄 test_plugin.py
├── 📄 .gitignore
├── 📄 AGENTS.md
├── 📄 build_docs.py
├── 📄 CHANGELOG.md
├── 📄 CLAUDE.md
├── 📄 GEMINI.md
├── 📄 LICENSE
├── 📄 llms.txt
├── 📄 mkdocs.yml
├── 📄 pyproject.toml
├── 📄 README.md
└── 📄 TODO.md


<documents>
<document index="1">
<source>.github/workflows/ci.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run pre-commit
        if: matrix.python-version == '3.11'
        run: pre-commit run --all-files

      - name: Run tests
        run: |
          pytest -v --cov=mkdocs_output_as_input --cov-report=xml --cov-report=term

      - name: Upload coverage
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run ruff
        run: ruff check --output-format=github .

      - name: Run ruff format
        run: ruff format --check --diff .

      - name: Run mypy
        run: mypy src
</document_content>
</document>

<document index="2">
<source>.github/workflows/release.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write  # Required for PyPI trusted publishing

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mkdocs-output-as-input
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # Trusted publishing configured in PyPI project settings

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Extract changelog section
        id: changelog
        run: |
          version=${GITHUB_REF#refs/tags/v}
          awk "/## \[$version\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.changelog.outputs.version }}
          body_path: release_notes.md
          files: dist/*
          draft: false
          prerelease: false
</document_content>
</document>

<document index="3">
<source>.gitignore</source>
<document_content>
# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
venv/
ENV/
env/
.venv
.env

# pyenv
.python-version

# pipenv
Pipfile.lock

# Poetry
poetry.lock

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# pytest
.pytest_cache/
.coverage
htmlcov/
.tox/
coverage.xml
*.cover
.hypothesis/

# Jupyter Notebook
.ipynb_checkpoints

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# MkDocs
site/
.cache/

# setuptools-scm
src/mkdocs_output_as_input/_version.py
</document_content>
</document>

<document index="4">
<source>AGENTS.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="5">
<source>CHANGELOG.md</source>
<document_content>
# Changelog

All notable changes to vexy-mkdocs-output-as-input will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [Unreleased]

### Added
- Complete documentation pages for getting started, configuration, examples, and API reference
- Additional test cases for edge cases, improving coverage to 91%+
- Proper error handling for missing directories (docs_dir, site_dir)
- Configuration option `include_frontmatter` to control whether YAML frontmatter is included in output files (default: true)
- Configuration option `preserve_links` to convert absolute links to relative paths (default: false)
- Configuration options `minify` and `prettify` for HTML output formatting (mutually exclusive)
- Support for multiple HTML selectors - extract multiple elements in one pass
- Support for CSS selectors in addition to tag names (e.g., `.content`, `#main`)
- CLI tool `mkdocs-output-as-input` for standalone HTML processing
- CLI options for preserving relative links, minifying, and prettifying HTML output
- CLI support for multiple selectors using `--html-element` flag multiple times
- Comprehensive test suite for CLI functionality

### Changed
- Replaced Black formatter with Ruff format in CI workflow
- Enhanced type hints with proper type ignore comments for MkDocs compatibility
- Improved error handling and logging throughout the plugin
- Refactored `build_docs.py` to use proper two-stage MkDocs pipeline:
  1. Source → Intermediate (with plugin capturing HTML)
  2. Intermediate → Final (standard MkDocs build with full Material theme)

### Fixed
- Fixed broken plugin implementation - all methods now properly implemented
- Fixed broken test suite - all tests now passing with proper fixtures
- Fixed mypy type checking errors with appropriate type annotations
- Pre-commit configuration updated to remove conflicting Black formatter
- Documentation build now generates proper MkDocs Material site (not manual HTML)
- Removed duplicate README.md from docs directory

## [0.2.0] - 2025-01-14

### Changed
- **BREAKING**: Migrated to src-layout package structure
- **BREAKING**: Minimum Python version is now 3.9
- Switched from Loguru to standard library logging for better integration
- Modernized packaging with PEP 621 compliant pyproject.toml
- Improved type hints throughout the codebase

### Added
- Comprehensive test suite with >90% coverage
- Pre-commit hooks for code quality
- GitHub Actions CI/CD workflows
- Support for Python 3.9, 3.10, 3.11, and 3.12
- Automated release process with trusted PyPI publishing
- Development documentation in README

### Fixed
- Better error handling for missing files
- Graceful handling of invalid YAML frontmatter
- Improved logging messages for debugging

## [0.1.0] - 2025-01-10

### Added
- Initial release of vexy-mkdocs-output-as-input plugin
- Core functionality to capture HTML output and create cousin Markdown files
- Configurable stage directory for output files
- Configurable HTML element extraction (default: `<main>`)
- Configurable target tag transformation (default: `<article>`)
- Preservation of original YAML frontmatter
- Verbose logging mode for debugging
- Basic documentation and examples

[Unreleased]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.2.0...HEAD
[0.2.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.1.0...v0.2.0
[0.1.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/releases/tag/v0.1.0
</document_content>
</document>

<document index="6">
<source>CLAUDE.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="7">
<source>GEMINI.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="8">
<source>LICENSE</source>
<document_content>
MIT License

Copyright (c) 2025 MkDocs Output as Input Contributors

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</document_content>
</document>

<document index="9">
<source>README.md</source>
<document_content>
# vexy-mkdocs-output-as-input

[![PyPI version](https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)
[![CI](https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg)](https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg)](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Python versions](https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)

A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.

## Features

This plugin enables powerful post-processing workflows by:

1. ✅ Preserving your original Markdown structure and frontmatter
2. ✅ Capturing the fully-rendered HTML output from MkDocs
3. ✅ Creating new Markdown files that combine original metadata with processed HTML
4. ✅ Enabling further processing by other static site generators

## Installation

Install from PyPI:

```bash
uv pip install --system --upgrade vexy-mkdocs-output-as-input
```

Or install from source:

```bash
pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input
```

This also installs a CLI tool: `mkdocs-output-as-input`

## Quick Start

Add the plugin to your `mkdocs.yml`:

```yaml
plugins:
  - search  # Other plugins
  - output-as-input
```

Build your site:

```bash
mkdocs build
```

Find your processed files in the `stage/` directory (relative to your MkDocs project root).

## Configuration

All configuration options with their defaults:

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory name (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      include_frontmatter: true # Include YAML frontmatter (default: true)
      preserve_links: false     # Convert absolute to relative links (default: false)
      verbose: false            # Enable verbose logging (default: false)
```

### Advanced Examples

Extract multiple elements:
```yaml
plugins:
  - output-as-input:
      html_element: [main, aside]  # Extract both main content and sidebar
```

Extract using CSS selectors:
```yaml
plugins:
  - output-as-input:
      html_element: .content  # Extract element with class="content"
```

### Options Explained

| Option | Type | Default | Description |
|--------|------|---------|-------------|
| `stage_dir` | string | `"stage"` | Directory name for output files (relative to project root) |
| `html_element` | string or list | `"main"` | CSS selector(s) for HTML elements to extract |
| `target_tag` | string | `"article"` | HTML tag to use in the output (replaces extracted element's tag) |
| `include_frontmatter` | boolean | `true` | Include YAML frontmatter in output files |
| `preserve_links` | boolean | `false` | Convert absolute links to relative (e.g., `/path` → `./path`) |
| `minify` | boolean | `false` | Minify HTML output (remove whitespace) |
| `prettify` | boolean | `false` | Prettify HTML output (add indentation) |
| `verbose` | boolean | `false` | Enable detailed logging for debugging |

## How It Works

### Input → Process → Output

1. **Input**: Your source Markdown with frontmatter
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   # My Page
   
   This is my content with **markdown**.
   ```

2. **MkDocs Processing**: Renders to HTML as usual
   ```html
   <main class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </main>
   ```

3. **Output**: Cousin file with preserved frontmatter + extracted HTML
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   <article class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </article>
   ```

## Use Cases

### 🔄 Multi-Stage Documentation Pipeline

Process documentation through MkDocs first, then feed to another SSG:

```yaml
# mkdocs.yml
plugins:
  - output-as-input:
      stage_dir: hugo/content

# Then run:
# mkdocs build && hugo build
```

### 📝 Content Extraction

Extract just the article content without theme wrapper:

```yaml
plugins:
  - output-as-input:
      html_element: article
      target_tag: div
```

### 🎨 Custom Post-Processing

Preserve MkDocs rendering while preparing for custom templates:

```yaml
plugins:
  - output-as-input:
      stage_dir: _includes
      html_element: main
      target_tag: section
```

## Examples

### Basic Example

```yaml
# mkdocs.yml
site_name: My Documentation
plugins:
  - output-as-input
```

### Advanced Example

```yaml
# mkdocs.yml
site_name: My Documentation
theme:
  name: material

plugins:
  - search
  - output-as-input:
      stage_dir: processed
      html_element: article.md-content__inner
      target_tag: main
      verbose: true

# Process specific content area from Material theme
```

### Integration Example

Using with other tools in a documentation pipeline:

```bash
#!/bin/bash
# build.sh

# Stage 1: Build with MkDocs + plugins
mkdocs build

# Stage 2: Process staged output
python post_process.py stage/

# Stage 3: Build final site
hugo --contentDir=stage/
```

## Development

### Setup Development Environment

```bash
# Clone the repository
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input

# Create virtual environment
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install in development mode
pip install -e .[dev]

# Install pre-commit hooks
pre-commit install
```

### Running Tests

```bash
# Run all tests
pytest

# Run with coverage
pytest --cov=mkdocs_output_as_input --cov-report=html

# Run specific test
pytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
```

### Code Quality

```bash
# Format code
black src tests

# Lint code
ruff check src tests

# Type check
mypy src
```

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Support

- 📧 Email: you@example.com
- 🐛 Issues: [GitHub Issues](https://github.com/vexyart/vexy-mkdocs-output-as-input/issues)
- 💬 Discussions: [GitHub Discussions](https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions)
</document_content>
</document>

<document index="10">
<source>TODO.md</source>
<document_content>
# TODO


</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/build_docs.py
# Language: python

import os
import shutil
import subprocess
import tempfile
from pathlib import Path
import yaml

def run_command((cmd, cwd=None)):
    """Run a command and print output."""

def create_stage_mkdocs_config((temp_dir)):
    """Create mkdocs.yml for stage 1 (source → intermediate)."""

def create_final_mkdocs_config(()):
    """Create mkdocs.yml for final build (intermediate → final site)."""

def step1_create_intermediate(()):
    """Step 1: Build README.md → stage/README.md with plugin."""

def step2_build_final_docs(()):
    """Step 2: Build stage/README.md → docs/ with standard MkDocs."""

def main(()):
    """Run the documentation build pipeline."""


<document index="11">
<source>docs/404.html</source>
<document_content>

<!doctype html>
<html lang="en" class="no-js">
  <head>
    
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width,initial-scale=1">
      
        <meta name="description" content="A plugin that captures HTML output and creates cousin Markdown files">
      
      
      
      
      
      
        
      
      
      <link rel="icon" href="/vexy-mkdocs-output-as-input/assets/images/favicon.png">
      <meta name="generator" content="mkdocs-1.6.1, mkdocs-material-9.6.15+insiders-4.53.16">
    
    
      
        <title>MkDocs Output as Input Plugin</title>
      
    
    
      <link rel="stylesheet" href="/vexy-mkdocs-output-as-input/assets/stylesheets/main.8cce3a28.min.css">
      
        
        <link rel="stylesheet" href="/vexy-mkdocs-output-as-input/assets/stylesheets/palette.ab4e12ef.min.css">
      
      


    
    
      
    
    
      
        
        
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,700,700i%7CRoboto+Mono:400,400i,700,700i&display=fallback">
        <style>:root{--md-text-font:"Roboto";--md-code-font:"Roboto Mono"}</style>
      
    
    
    <script>__md_scope=new URL("/vexy-mkdocs-output-as-input/",location),__md_hash=e=>[...e].reduce(((e,_)=>(e<<5)-e+_.charCodeAt(0)),0),__md_get=(e,_=localStorage,t=__md_scope)=>JSON.parse(_.getItem(t.pathname+"."+e)),__md_set=(e,_,t=localStorage,a=__md_scope)=>{try{t.setItem(a.pathname+"."+e,JSON.stringify(_))}catch(e){}}</script>
    
      

    
    
  </head>
  
  
    
    
      
    
    
    
    
    <body dir="ltr" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo">
  
    
    <input class="md-toggle" data-md-toggle="drawer" type="checkbox" id="__drawer" autocomplete="off">
    <input class="md-toggle" data-md-toggle="search" type="checkbox" id="__search" autocomplete="off">
    <label class="md-overlay" for="__drawer"></label>
    <div data-md-component="skip">
      
    </div>
    <div data-md-component="announce">
      
    </div>
    
    
      

  

<header class="md-header md-header--shadow" data-md-component="header">
  <nav class="md-header__inner md-grid" aria-label="Header">
    <a href="/vexy-mkdocs-output-as-input/." title="MkDocs Output as Input Plugin" class="md-header__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    <label class="md-header__button md-icon" for="__drawer">
      
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 6h18v2H3zm0 5h18v2H3zm0 5h18v2H3z"/></svg>
    </label>
    <div class="md-header__title" data-md-component="header-title">
      <div class="md-header__ellipsis">
        <div class="md-header__topic">
          <span class="md-ellipsis">
            MkDocs Output as Input Plugin
          </span>
        </div>
        <div class="md-header__topic" data-md-component="header-topic">
          <span class="md-ellipsis">
            
              
            
          </span>
        </div>
      </div>
    </div>
    
      
        <form class="md-header__option" data-md-component="palette">
  
    
    
    
    <input class="md-option" data-md-color-media="" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo"  aria-hidden="true"  type="radio" name="__palette" id="__palette_0">
    
  
</form>
      
    
    
      <script>var palette=__md_get("__palette");if(palette&&palette.color){if("(prefers-color-scheme)"===palette.color.media){var media=matchMedia("(prefers-color-scheme: light)"),input=document.querySelector(media.matches?"[data-md-color-media='(prefers-color-scheme: light)']":"[data-md-color-media='(prefers-color-scheme: dark)']");palette.color.media=input.getAttribute("data-md-color-media"),palette.color.scheme=input.getAttribute("data-md-color-scheme"),palette.color.primary=input.getAttribute("data-md-color-primary"),palette.color.accent=input.getAttribute("data-md-color-accent")}for(var[key,value]of Object.entries(palette.color))document.body.setAttribute("data-md-color-"+key,value)}</script>
    
    
    
      
      
        <label class="md-header__button md-icon" for="__search">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        </label>
        <div class="md-search" data-md-component="search" role="dialog">
  <label class="md-search__overlay" for="__search"></label>
  <div class="md-search__inner" role="search">
    <form class="md-search__form" name="search">
      <input type="text" class="md-search__input" name="query" aria-label="Search" placeholder="Search" autocapitalize="off" autocorrect="off" autocomplete="off" spellcheck="false" data-md-component="search-query" required>
      <label class="md-search__icon md-icon" for="__search">
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20 11v2H8l5.5 5.5-1.42 1.42L4.16 12l7.92-7.92L13.5 5.5 8 11z"/></svg>
      </label>
      <nav class="md-search__options" aria-label="Search">
        
        <button type="reset" class="md-search__icon md-icon" title="Clear" aria-label="Clear" tabindex="-1">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>
        </button>
      </nav>
      
    </form>
    <div class="md-search__output">
      <div class="md-search__scrollwrap" tabindex="0" data-md-scrollfix>
        <div class="md-search-result" data-md-component="search-result">
          <div class="md-search-result__meta">
            Initializing search
          </div>
          <ol class="md-search-result__list" role="presentation"></ol>
        </div>
      </div>
    </div>
  </div>
</div>
      
    
    
  </nav>
  
</header>
    
    <div class="md-container" data-md-component="container">
      
      
        
          
        
      
      <main class="md-main" data-md-component="main">
        <div class="md-main__inner md-grid">
          
            
              
              <div class="md-sidebar md-sidebar--primary" data-md-component="sidebar" data-md-type="navigation" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    



<nav class="md-nav md-nav--primary" aria-label="Navigation" data-md-level="0">
  <label class="md-nav__title" for="__drawer">
    <a href="/vexy-mkdocs-output-as-input/." title="MkDocs Output as Input Plugin" class="md-nav__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    MkDocs Output as Input Plugin
  </label>
  
  <ul class="md-nav__list" data-md-scrollfix>
    
      
      
  
  
  
  
    <li class="md-nav__item">
      <a href="/vexy-mkdocs-output-as-input/." class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    
  
    Home
  

    
  </span>
  
  

      </a>
    </li>
  

    
  </ul>
</nav>
                  </div>
                </div>
              </div>
            
            
              
              <div class="md-sidebar md-sidebar--secondary" data-md-component="sidebar" data-md-type="toc" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    

<nav class="md-nav md-nav--secondary" aria-label="Table of contents">
  
  
  
  
</nav>
                  </div>
                </div>
              </div>
            
          
          
            <div class="md-content" data-md-component="content">
              
              <article class="md-content__inner md-typeset">
                
  <h1>404 - Not found</h1>

              </article>
            </div>
          
          
<script>var target=document.getElementById(location.hash.slice(1));target&&target.name&&(target.checked=target.name.startsWith("__tabbed_"))</script>
        </div>
        
      </main>
      
        <footer class="md-footer">
  
  <div class="md-footer-meta md-typeset">
    <div class="md-footer-meta__inner md-grid">
      <div class="md-copyright">
  
  
    Made with
    <a href="https://squidfunk.github.io/mkdocs-material/" target="_blank" rel="noopener">
      Material for MkDocs Insiders
    </a>
  
</div>
      
    </div>
  </div>
</footer>
      
    </div>
    <div class="md-dialog" data-md-component="dialog">
      <div class="md-dialog__inner md-typeset"></div>
    </div>
    
    
    
      
      
      <script id="__config" type="application/json">{"annotate": null, "base": "/vexy-mkdocs-output-as-input/", "features": ["navigation.instant", "navigation.tracking", "content.code.copy"], "search": "/vexy-mkdocs-output-as-input/assets/javascripts/workers/search.ad38c271.min.js", "tags": null, "translations": {"clipboard.copied": "Copied to clipboard", "clipboard.copy": "Copy to clipboard", "search.result.more.one": "1 more on this page", "search.result.more.other": "# more on this page", "search.result.none": "No matching documents", "search.result.one": "1 matching document", "search.result.other": "# matching documents", "search.result.placeholder": "Type to start searching", "search.result.term.missing": "Missing", "select.version": "Select version"}, "version": null}</script>
    
    
      <script src="/vexy-mkdocs-output-as-input/assets/javascripts/bundle.5c86578b.min.js"></script>
      
    
  </body>
</html>
</document_content>
</document>

<document index="12">
<source>docs/README.md</source>
<document_content>
# Documentation

This directory contains the generated documentation for the vexy-mkdocs-output-as-input plugin.

View the documentation at: https://vexyart.github.io/vexy-mkdocs-output-as-input/

## Build Process

The documentation is built using the plugin itself:

1. **Source**: `README.md` (root of repository)
2. **Intermediate**: `stage/README.md` (preserved in git)
3. **Final**: `docs/index.html` (this directory)

To rebuild the documentation, run: `python build_docs.py`

</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/bundle.5c86578b.min.js
# Language: javascript

function e((r))

function a((k))

function c((k))

function p((k))

function l((k))

function f((k))

function u((k))

function d((k))

function v((k))

function S((k))

function X(())

function re(())

function ee((k))

function Ka((e))

function u((q))

function S((q))

function k((q))

function R((q))

function se((q,C))

function ce((q,C))

function he((q,C,_))

function Se((q,C))

function Ue((q,C))

function Qi((q))

function Yi((q,C))

function Bi((q))

function Gi(())

function Qt((q))

function Mr((q,C))

function _((D,N))

function s((a,c))

function a((l,f,u,d,v))

function c((l,f,u,d,v))

function p((l,f,u,d))

function c((u,d,v))

function p((u,d,v))

function l((u,d,v))

function f((u,d,v))

function n((i))

function n(())

function p(())

function r((o))

function ie((e,t))

function r(())

function Eo((e,t,r,o))

function n((i))

function a((l))

function c((l))

function p((l))

function Gt((e,t))

function a((p))

function c((p))

function Oe((e))

function K((e,t))

function B((e,t,r))

function dt((e))

function wo((e,t,r))

function s((d))

function a((d,v))

function c((d,v))

function p((d))

function l((d))

function f((d))

function u((d,v))

function To((e))

function o((i))

function n((i,s,a,c))

function I((e))

function yt((e))

function Ze((e,t))

function e((t))

function Xt((e))

function So((e))

function Zt((e))

function ge(())

function Lo((e))

function Mo((e))

function Pr((e,t,r))

function Et((e))

function _o((e))

function t((r))

function Rr((e,t))

function e((t))

function t((r,o,n))

function er((e))

function aa((e))

function Ir((e,t))

function be((e))

function Ao(())

function Fr((e))

function e((t))

function Co((e))

function ca((e))

function pa((e))

function la((e))

function E((e))

function w((e,t,r,o,n))

function t((r,o,n,i,s,a))

function t(())

function t((r,o))

function t((r))

function t((r,o,n))

function t((r,o))

function t((r,o))

function e((t,r))

function t((r,o))

function t((r,o))

function t(())

function t((r,o))

function t(())

function tr((e))

function Vr((e))

function pt((e))

function Fe((e))

function rr((e,t))

function or((e))

function nr((e))

function ir((e))

function ar((e))

function fa(())

function cr((e))

function pr((e))

function lr((e))

function U((e))

function ua((e))

function da((e))

function ha((e))

function ba((e))

function jo((e))

function va((e))

function ga((e,t))

function _e((e,t,r,o,n))

function xe((e,t))

function et((e,t))

function Uo((e,t))

function Wo((e,t))

function Do((e,t))

function Vo((e,t))

function mr((e,t))

function No((e,t))

function zo((e,t))

function fe((e,t))

function $(())

function Nr((e,t))

function qo((e))

function m((e,t))

function xa((e,t))

function lt((e))

function Ko((e))

function Oa((e))

function Qo((e,t))

function z(())

function zr((e,t,r))

function Yo((e,t,r))

function Bo((e,t,r,o,n,i,s,a))

function J((e,t,r))

function Mt((e))

function Go(())

function Ke(())

function H((e))

function h((e,t,r,o))

function Jo((e,t))

function Aa((e))

function Ca((e))

function ka((e))

function ur((e,t,r))

function He((e,t,r))

function L(())

function dr((e))

function g((e,t))

function rt(())

function Xo((e))

function $e((e,t))

function ot((e,t))

function ve((e))

function Zo((e,t,r,o,n))

function qr(())

function Pe(())

function jt((e))

function Ae((e,t))

function c(())

function Qe((e))

function Ee((e))

function oe(())

function en((e))

function Kr((e,t))

function nt((e,t))

function Qr((e,t))

function Y((e,t))

function $a((e,t))

function ne((e,t))

function tn((e))

function Pa(())

function ae(())

function hr((e,t))

function A((e))

function Re((e,t))

function Yr((e))

function rn(())

function Ve(())

function vt((e))

function Ut((e,t))

function le((e))

function Br((e,t))

function Z((e,t,r))

function Ie((e))

function Gr((e))

function Q(())

function b((e,t))

function W((e))

function Jr((e,t))

function O((e,t,r))

function on((e,t))

function gt((e,t,r))

function te(())

function nn(())

function Xr(())

function an(())

function M((e,t=document))

function j((e,t=document))

function ue((e,t=document))

function Ne(())

function Ye((e))

function it((e,t))

function sn((e,t))

function x((e,t,...r))

function br((e))

function _t((e))

function de((e))

function Le((e))

function At((e))

function vr((e))

function pn((e))

function Be((e))

function ln((e))

function mn((e))

function gr((e))

function Ge((e))

function mt((e))

function un((e,t=16))

function dn((e))

function at((e,t))

function Je((e))

function ja((e,t))

function Ua(())

function hn(())

function we(())

function st((e,t=!1))

function bn(())

function vn(())

function gn((e))

function Zr((e))

function yn((e))

function Wt((e))

function xn(())

function eo((e,t))

function to((e,t))

function ze((e,t))

function xr((e,t))

function En((e,t))

function wn(())

function Tn(())

function Sn(())

function On(())

function Ln(())

function Er((e,{viewport$:t,header$:r}))

function Wa((e))

function Da((e))

function Mn((e,t=new Worker(e)))

function Te(())

function V((e))

function Me((e,t))

function Ce((e,t=document))

function me((e,t=document))

function Na((e))

function _n((e))

function za((e,{target$:t}))

function An((e,t))

function Dt((e,t))

function wr((...e))

function Cn((...e))

function kn((e,t))

function Hn((e))

function $n(())

function Pn(())

function oo((e,t))

function Fn((e))

function jn((e))

function no((e))

function Un((e))

function Qa((e))

function Wn((e,t))

function Ba((e,t=250))

function Vt((e,t,r=250))

function Xe((e,{viewport$:t},r=document.body))

function Ga((e,t))

function Dn((e,t,{target$:r}))

function Ja((e))

function Xa((e))

function Vn((e,t))

function Tr((e,t,{target$:r,print$:o}))

function Nn((e))

function zn((e,t))

function Qn((e))

function es((e))

function Yn((e,t))

function ts((e,{target$:t,print$:r}))

function Bn((e,t))

function rs((e))

function os((e,t))

function Jn((e,t))

function as(())

function Zn((e))

function ti((e))

function ss((e))

function ri((e,{viewport$:t,target$:r}))

function oi((e,t))

function cs((e,{alert$:t}))

function ni((e,t))

function ls((e,t))

function ii((e))

function ms(({viewport$:e}))

function ai((e,t))

function si((e,{header$:t,main$:r}))

function fs((e,{viewport$:t,header$:r}))

function ci((e,t))

function pi((e,{viewport$:t,header$:r}))

function us((e))

function li((e))

function mi((e,{progress$:t}))

function fi((e,t))

function ds((e,t))

function kt((e))

function ui(({document$:e}))

function hs((e))

function di(({alert$:e}))

function hi((e,t))

function bi((e))

function vi((e))

function bs((e))

function gi(({sitemap$:e,location$:t,viewport$:r,progress$:o}))

function xi((e))

function zt((e))

function Sr((e))

function Ei((e,t))

function wi((e))

function po((e,t))

function ys((e,t))

function xs((e,t))

function Es((e))

function Ti(({document$:e}))

function ws((e,{worker$:t}))

function Si((e,{worker$:t}))

function Oi((e,{worker$:t,query$:r}))

function Ts((e,{query$:t}))

function Li((e,t))

function Mi((e,{worker$:t,keyboard$:r}))

function _i((e,{index$:t,keyboard$:r}))

function Ai((e,{index$:t,location$:r}))

function Ss((e,{viewport$:t,main$:r}))

function lo((e,o))

function Ci((e,t))

function ki((e,t))

function Hi((e))

function Ls((e))

function $i((e))

function Ms((e,{viewport$:t,header$:r}))

function Pi((e,t))

function _s((e,{viewport$:t,header$:r}))

function Ri((e,{viewport$:t,header$:r,main$:o,target$:n}))

function As((e,{viewport$:t,main$:r,target$:o}))

function Ii((e,{viewport$:t,header$:r,main$:o,target$:n}))

function Fi(({document$:e,viewport$:t}))

function ji(({document$:e,tablet$:t}))

function Cs(())

function Ui(({document$:e}))

function Wi(({viewport$:e,tablet$:t}))

function ks(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ar.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.da.min.js
# Language: javascript

function e(())

function n(())

function t(())

function s(())

function o(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.de.min.js
# Language: javascript

function e((e,r,n))

function i(())

function s(())

function t(())

function o(())

function c(())

function u(())

function a(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.du.min.js
# Language: javascript

function e(())

function n((e))

function o(())

function t(())

function s(())

function u(())

function c(())

function a(())

function l(())

function m(())

function d(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.el.min.js
# Language: javascript

function e((e))

function t((e))

function r((e))

function n((n))


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.es.min.js
# Language: javascript

function e(())

function n(())

function i(())

function a(())

function t(())

function o(())

function u(())

function w(())

function c(())

function m(())

function l((e,s))

function d((e))

function b(())

function f(())

function _(())

function h(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.fi.min.js
# Language: javascript

function i(())

function n(())

function t(())

function s(())

function o(())

function l(())

function a(())

function u(())

function c(())

function m(())

function w(())

function _(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.fr.min.js
# Language: javascript

function e((e,r,s))

function i((e,r,s))

function n(())

function t(())

function u(())

function o(())

function c(())

function a(())

function l(())

function w(())

function f(())

function m(())

function _(())

function b(())

function d(())

function k(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.he.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.hi.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.hu.min.js
# Language: javascript

function e(())

function i(())

function a(())

function t(())

function s(())

function c(())

function o(())

function w(())

function l(())

function u(())

function m(())

function k(())

function f(())

function b(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.hy.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.it.min.js
# Language: javascript

function e((e,r,n))

function i(())

function o((e))

function t(())

function s(())

function a(())

function u(())

function c(())

function w(())

function l(())

function m(())

function f(())

function v(())

function b(())

function d(())

function _(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ja.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.jp.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.kn.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ko.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.multi.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.nl.min.js
# Language: javascript

function r(())

function n((r))

function o(())

function t(())

function s(())

function u(())

function c(())

function a(())

function l(())

function m(())

function f(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.no.min.js
# Language: javascript

function e(())

function i(())

function t(())

function o(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.pt.min.js
# Language: javascript

function e(())

function n(())

function i(())

function o(())

function t(())

function a(())

function u(())

function w(())

function m(())

function c(())

function l(())

function f(())

function d(())

function v((e,r))

function p(())

function _(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ro.min.js
# Language: javascript

function e((e,i))

function n(())

function t(())

function a(())

function o(())

function u(())

function c(())

function s(())

function w(())

function m(())

function l(())

function f(())

function p(())

function d(())

function b(())

function v(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ru.min.js
# Language: javascript

function e(())

function t(())

function w(())

function i(())

function u((e,n))

function o(())

function s((e,n))

function c(())

function m(())

function f(())

function l(())

function a(())

function p(())

function d(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.sa.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.stemmer.support.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.sv.min.js
# Language: javascript

function e(())

function t(())

function i(())

function s(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ta.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.te.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.th.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.tr.min.js
# Language: javascript

function r((r,i,e))

function n(())

function t((r,i))

function u((r))

function o(())

function s(())

function c(())

function l(())

function a(())

function m(())

function d(())

function f(())

function b(())

function w(())

function _(())

function k(())

function p(())

function g(())

function y(())

function z(())

function v(())

function h(())

function q(())

function C(())

function P(())

function F(())

function S(())

function W(())

function L(())

function x(())

function A(())

function E(())

function j(())

function T(())

function Z(())

function B(())

function D(())

function G(())

function H(())

function I(())

function J(())

function K(())

function M((r))

function N((r))

function O(())

function Q(())

function R(())

function U(())

function V(())

function X((r,i,e))

function Y(())

function $(())

function rr((r,i,e))

function ir(())

function er(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.vi.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.zh.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/tinyseg.js
# Language: javascript

function TinySegmenter(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/wordcut.js
# Language: javascript

function s((o,u))

function isMatch((pat, offset, ch))

function replacer((key, value))

function truncate((s, n))

function getMessage((self))

function fail((actual, expected, message, operator, stackStartFunction))

function ok((value, message))

function _deepEqual((actual, expected))

function isArguments((object))

function objEquiv((a, b))

function expectedException((actual, expected))

function _throws((shouldThrow, block, expected, message))

function balanced((a, b, str))

function maybeMatch((reg, str))

function range((a, b, str))

function numeric((str))

function escapeBraces((str))

function unescapeBraces((str))

function parseCommaParts((str))

function expandTop((str))

function identity((e))

function embrace((str))

function isPadded((el))

function lte((i, y))

function gte((i, y))

function expand((str, isTop))

function EventEmitter(())

function g(())

function isFunction((arg))

function isNumber((arg))

function isObject((arg))

function isUndefined((arg))

function ownProp((obj, field))

function alphasorti((a, b))

function alphasort((a, b))

function setupIgnores((self, options))

function ignoreMap((pattern))

function setopts((self, pattern, options))

function deprecationWarning((options))

function finish((self))

function mark((self, p))

function makeAbs((self, f))

function isIgnored((self, path))

function childrenIgnored((self, path))

function glob((pattern, options, cb))

function Glob((pattern, options, cb))

function done(())

function next(())

function lstatcb_((er, lstat))

function readdirCb((self, abs, cb))

function lstatcb_((er, lstat))

function globSync((pattern, options))

function GlobSync((pattern, options))

function inflight((key, cb))

function makeres((key))

function slice((args))

function charSet((s))

function filter((pattern, options))

function ext((a, b))

function minimatch((p, pattern, options))

function Minimatch((pattern, options))

function make(())

function parseNegate(())

function braceExpand((pattern, options))

function parse((pattern, isSub))

function clearStateChar(())

function makeRe(())

function match((f, partial))

function globUnescape((s))

function regExpEscape((s))

function once((fn))

function onceStrict((fn))

function normalizeArray((parts, allowAboveRoot))

function trim((arr))

function filter((xs, f))

function posix((path))

function win32((path))

function defaultSetTimout(())

function defaultClearTimeout(())

function runTimeout((fun))

function runClearTimeout((marker))

function cleanUpNextTick(())

function drainQueue(())

function Item((fun, array))

function noop(())

function createReduce((dir))

function iterator((obj, iteratee, memo, keys, index, length))

function createPredicateIndexFinder((dir))

function createIndexFinder((dir, predicateFind, sortedIndex))

function collectNonEnumProps((obj, keys))

function deprecated(())

function inspect((obj, opts))

function stylizeWithColor((str, styleType))

function stylizeNoColor((str, styleType))

function arrayToHash((array))

function formatValue((ctx, value, recurseTimes))

function formatPrimitive((ctx, value))

function formatError((value))

function formatArray((ctx, value, recurseTimes, visibleKeys, keys))

function formatProperty((ctx, value, recurseTimes, visibleKeys, key, array))

function reduceToSingleString((output, base, braces))

function isArray((ar))

function isBoolean((arg))

function isNull((arg))

function isNullOrUndefined((arg))

function isNumber((arg))

function isString((arg))

function isSymbol((arg))

function isUndefined((arg))

function isRegExp((re))

function isObject((arg))

function isDate((d))

function isError((e))

function isFunction((arg))

function isPrimitive((arg))

function objectToString((o))

function pad((n))

function timestamp(())

function hasOwnProperty((obj, prop))

function wrappy((fn, cb))

function wrapper(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/workers/search.ad38c271.min.js
# Language: javascript

function ne((t,e=document))

function ke((t,e=document))

function ie((t))

function H((t,e,r))

function se((t,e))

function oe((t,e,r,n=!1))

function q((t,e,r,n=!1))

function ae((t))

function ue((t,e=r=>r))

function ce((t))

function le((t))

function he((t,e))

function fe((t,e))

function Oe((t))

function Re((t,e))

function Ie((t))

function Fe((t))


<document index="13">
<source>docs/assets/stylesheets/main.8cce3a28.min.css</source>
<document_content>
@charset "UTF-8";html{-webkit-text-size-adjust:none;-moz-text-size-adjust:none;text-size-adjust:none;box-sizing:border-box}*,:after,:before{box-sizing:inherit}@media (prefers-reduced-motion){*,:after,:before{transition:none!important}}body{margin:0}a,button,input,label{-webkit-tap-highlight-color:transparent}a{color:inherit;text-decoration:none}hr{border:0;box-sizing:initial;display:block;height:.05rem;overflow:visible;padding:0}small{font-size:80%}sub,sup{line-height:1em}img{border-style:none}table{border-collapse:initial;border-spacing:0}td,th{font-weight:400;vertical-align:top}button{background:#0000;border:0;font-family:inherit;font-size:inherit;margin:0;padding:0}input{border:0;outline:none}:root{--md-primary-fg-color:#4051b5;--md-primary-fg-color--light:#5d6cc0;--md-primary-fg-color--dark:#303fa1;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3;--md-accent-fg-color:#526cfe;--md-accent-fg-color--transparent:#526cfe1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-scheme=default]{color-scheme:light}[data-md-color-scheme=default] img[src$="#gh-dark-mode-only"],[data-md-color-scheme=default] img[src$="#only-dark"]{display:none}:root,[data-md-color-scheme=default]{--md-hue:225deg;--md-default-fg-color:#000000de;--md-default-fg-color--light:#0000008a;--md-default-fg-color--lighter:#00000052;--md-default-fg-color--lightest:#00000012;--md-default-bg-color:#fff;--md-default-bg-color--light:#ffffffb3;--md-default-bg-color--lighter:#ffffff4d;--md-default-bg-color--lightest:#ffffff1f;--md-code-fg-color:#36464e;--md-code-bg-color:#f5f5f5;--md-code-bg-color--light:#f5f5f5b3;--md-code-bg-color--lighter:#f5f5f54d;--md-code-hl-color:#4287ff;--md-code-hl-color--light:#4287ff1a;--md-code-hl-number-color:#d52a2a;--md-code-hl-special-color:#db1457;--md-code-hl-function-color:#a846b9;--md-code-hl-constant-color:#6e59d9;--md-code-hl-keyword-color:#3f6ec6;--md-code-hl-string-color:#1c7d4d;--md-code-hl-name-color:var(--md-code-fg-color);--md-code-hl-operator-color:var(--md-default-fg-color--light);--md-code-hl-punctuation-color:var(--md-default-fg-color--light);--md-code-hl-comment-color:var(--md-default-fg-color--light);--md-code-hl-generic-color:var(--md-default-fg-color--light);--md-code-hl-variable-color:var(--md-default-fg-color--light);--md-typeset-color:var(--md-default-fg-color);--md-typeset-a-color:var(--md-primary-fg-color);--md-typeset-del-color:#f5503d26;--md-typeset-ins-color:#0bd57026;--md-typeset-kbd-color:#fafafa;--md-typeset-kbd-accent-color:#fff;--md-typeset-kbd-border-color:#b8b8b8;--md-typeset-mark-color:#ffff0080;--md-typeset-table-color:#0000001f;--md-typeset-table-color--light:rgba(0,0,0,.035);--md-admonition-fg-color:var(--md-default-fg-color);--md-admonition-bg-color:var(--md-default-bg-color);--md-warning-fg-color:#000000de;--md-warning-bg-color:#ff9;--md-footer-fg-color:#fff;--md-footer-fg-color--light:#ffffffb3;--md-footer-fg-color--lighter:#ffffff73;--md-footer-bg-color:#000000de;--md-footer-bg-color--dark:#00000052;--md-shadow-z1:0 0.2rem 0.5rem #0000000d,0 0 0.05rem #0000001a;--md-shadow-z2:0 0.2rem 0.5rem #0000001a,0 0 0.05rem #00000040;--md-shadow-z3:0 0.2rem 0.5rem #0003,0 0 0.05rem #00000059}.md-icon svg{fill:currentcolor;display:block;height:1.2rem;width:1.2rem}body{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;--md-text-font-family:var(--md-text-font,_),-apple-system,BlinkMacSystemFont,Helvetica,Arial,sans-serif;--md-code-font-family:var(--md-code-font,_),SFMono-Regular,Consolas,Menlo,monospace}aside,body,input{font-feature-settings:"kern","liga";color:var(--md-typeset-color);font-family:var(--md-text-font-family)}code,kbd,pre{font-feature-settings:"kern";font-family:var(--md-code-font-family)}:root{--md-typeset-table-sort-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m18 21-4-4h3V7h-3l4-4 4 4h-3v10h3M2 19v-2h10v2M2 13v-2h7v2M2 7V5h4v2z"/></svg>');--md-typeset-table-sort-icon--asc:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 17h3l-4 4-4-4h3V3h2M2 17h10v2H2M6 5v2H2V5m0 6h7v2H2z"/></svg>');--md-typeset-table-sort-icon--desc:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 7h3l-4-4-4 4h3v14h2M2 17h10v2H2M6 5v2H2V5m0 6h7v2H2z"/></svg>')}.md-typeset{-webkit-print-color-adjust:exact;color-adjust:exact;font-size:.8rem;line-height:1.6;overflow-wrap:break-word}@media print{.md-typeset{font-size:.68rem}}.md-typeset blockquote,.md-typeset dl,.md-typeset figure,.md-typeset ol,.md-typeset pre,.md-typeset ul{margin-bottom:1em;margin-top:1em}.md-typeset h1{color:var(--md-default-fg-color--light);font-size:2em;line-height:1.3;margin:0 0 1.25em}.md-typeset h1,.md-typeset h2{font-weight:300;letter-spacing:-.01em}.md-typeset h2{font-size:1.5625em;line-height:1.4;margin:1.6em 0 .64em}.md-typeset h3{font-size:1.25em;font-weight:400;letter-spacing:-.01em;line-height:1.5;margin:1.6em 0 .8em}.md-typeset h2+h3{margin-top:.8em}.md-typeset h4{font-weight:700;letter-spacing:-.01em;margin:1em 0}.md-typeset h5,.md-typeset h6{color:var(--md-default-fg-color--light);font-size:.8em;font-weight:700;letter-spacing:-.01em;margin:1.25em 0}.md-typeset h5{text-transform:uppercase}.md-typeset h5 code{text-transform:none}.md-typeset hr{border-bottom:.05rem solid var(--md-default-fg-color--lightest);display:flow-root;margin:1.5em 0}.md-typeset a{color:var(--md-typeset-a-color);word-break:break-word}.md-typeset a,.md-typeset a:before{transition:color 125ms}.md-typeset a:focus,.md-typeset a:hover{color:var(--md-accent-fg-color)}.md-typeset a:focus code,.md-typeset a:hover code{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-typeset a code{color:var(--md-typeset-a-color)}.md-typeset a.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-typeset code,.md-typeset kbd,.md-typeset pre{color:var(--md-code-fg-color);direction:ltr;font-variant-ligatures:none;transition:background-color 125ms}@media print{.md-typeset code,.md-typeset kbd,.md-typeset pre{white-space:pre-wrap}}.md-typeset code{background-color:var(--md-code-bg-color);border-radius:.1rem;-webkit-box-decoration-break:clone;box-decoration-break:clone;font-size:.85em;padding:0 .2941176471em;transition:color 125ms,background-color 125ms;word-break:break-word}.md-typeset code:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}.md-typeset pre{display:flow-root;line-height:1.4;position:relative}.md-typeset pre>code{-webkit-box-decoration-break:slice;box-decoration-break:slice;box-shadow:none;display:block;margin:0;outline-color:var(--md-accent-fg-color);overflow:auto;padding:.7720588235em 1.1764705882em;scrollbar-color:var(--md-default-fg-color--lighter) #0000;scrollbar-width:thin;touch-action:auto;word-break:normal}.md-typeset pre>code:hover{scrollbar-color:var(--md-accent-fg-color) #0000}.md-typeset pre>code::-webkit-scrollbar{height:.2rem;width:.2rem}.md-typeset pre>code::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-typeset pre>code::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}.md-typeset kbd{background-color:var(--md-typeset-kbd-color);border-radius:.1rem;box-shadow:0 .1rem 0 .05rem var(--md-typeset-kbd-border-color),0 .1rem 0 var(--md-typeset-kbd-border-color),0 -.1rem .2rem var(--md-typeset-kbd-accent-color) inset;color:var(--md-default-fg-color);display:inline-block;font-size:.75em;padding:0 .6666666667em;vertical-align:text-top;word-break:break-word}.md-typeset mark{background-color:var(--md-typeset-mark-color);-webkit-box-decoration-break:clone;box-decoration-break:clone;color:inherit;word-break:break-word}.md-typeset abbr{cursor:help;text-decoration:none}.md-typeset [data-preview],.md-typeset abbr{border-bottom:.05rem dotted var(--md-default-fg-color--light)}.md-typeset small{opacity:.75}[dir=ltr] .md-typeset sub,[dir=ltr] .md-typeset sup{margin-left:.078125em}[dir=rtl] .md-typeset sub,[dir=rtl] .md-typeset sup{margin-right:.078125em}[dir=ltr] .md-typeset blockquote{padding-left:.6rem}[dir=rtl] .md-typeset blockquote{padding-right:.6rem}[dir=ltr] .md-typeset blockquote{border-left:.2rem solid var(--md-default-fg-color--lighter)}[dir=rtl] .md-typeset blockquote{border-right:.2rem solid var(--md-default-fg-color--lighter)}.md-typeset blockquote{color:var(--md-default-fg-color--light);margin-left:0;margin-right:0}.md-typeset ul{list-style-type:disc}.md-typeset ul[type]{list-style-type:revert-layer}[dir=ltr] .md-typeset ol,[dir=ltr] .md-typeset ul{margin-left:.625em}[dir=rtl] .md-typeset ol,[dir=rtl] .md-typeset ul{margin-right:.625em}.md-typeset ol,.md-typeset ul{padding:0}.md-typeset ol:not([hidden]),.md-typeset ul:not([hidden]){display:flow-root}.md-typeset ol ol,.md-typeset ul ol{list-style-type:lower-alpha}.md-typeset ol ol ol,.md-typeset ul ol ol{list-style-type:lower-roman}.md-typeset ol ol ol ol,.md-typeset ul ol ol ol{list-style-type:upper-alpha}.md-typeset ol ol ol ol ol,.md-typeset ul ol ol ol ol{list-style-type:upper-roman}.md-typeset ol[type],.md-typeset ul[type]{list-style-type:revert-layer}[dir=ltr] .md-typeset ol li,[dir=ltr] .md-typeset ul li{margin-left:1.25em}[dir=rtl] .md-typeset ol li,[dir=rtl] .md-typeset ul li{margin-right:1.25em}.md-typeset ol li,.md-typeset ul li{margin-bottom:.5em}.md-typeset ol li blockquote,.md-typeset ol li p,.md-typeset ul li blockquote,.md-typeset ul li p{margin:.5em 0}.md-typeset ol li:last-child,.md-typeset ul li:last-child{margin-bottom:0}[dir=ltr] .md-typeset ol li ol,[dir=ltr] .md-typeset ol li ul,[dir=ltr] .md-typeset ul li ol,[dir=ltr] .md-typeset ul li ul{margin-left:.625em}[dir=rtl] .md-typeset ol li ol,[dir=rtl] .md-typeset ol li ul,[dir=rtl] .md-typeset ul li ol,[dir=rtl] .md-typeset ul li ul{margin-right:.625em}.md-typeset ol li ol,.md-typeset ol li ul,.md-typeset ul li ol,.md-typeset ul li ul{margin-bottom:.5em;margin-top:.5em}[dir=ltr] .md-typeset dd{margin-left:1.875em}[dir=rtl] .md-typeset dd{margin-right:1.875em}.md-typeset dd{margin-bottom:1.5em;margin-top:1em}.md-typeset img,.md-typeset svg,.md-typeset video{height:auto;max-width:100%}.md-typeset img[align=left]{margin:1em 1em 1em 0}.md-typeset img[align=right]{margin:1em 0 1em 1em}.md-typeset img[align]:only-child{margin-top:0}.md-typeset figure{display:flow-root;margin:1em auto;max-width:100%;text-align:center;width:-moz-fit-content;width:fit-content}.md-typeset figure img{display:block;margin:0 auto}.md-typeset figcaption{font-style:italic;margin:1em auto;max-width:24rem}.md-typeset iframe{max-width:100%}.md-typeset table:not([class]){background-color:var(--md-default-bg-color);border:.05rem solid var(--md-typeset-table-color);border-radius:.1rem;display:inline-block;font-size:.64rem;max-width:100%;overflow:auto;touch-action:auto}@media print{.md-typeset table:not([class]){display:table}}.md-typeset table:not([class])+*{margin-top:1.5em}.md-typeset table:not([class]) td>:first-child,.md-typeset table:not([class]) th>:first-child{margin-top:0}.md-typeset table:not([class]) td>:last-child,.md-typeset table:not([class]) th>:last-child{margin-bottom:0}.md-typeset table:not([class]) td:not([align]),.md-typeset table:not([class]) th:not([align]){text-align:left}[dir=rtl] .md-typeset table:not([class]) td:not([align]),[dir=rtl] .md-typeset table:not([class]) th:not([align]){text-align:right}.md-typeset table:not([class]) th{font-weight:700;min-width:5rem;padding:.9375em 1.25em;vertical-align:top}.md-typeset table:not([class]) td{border-top:.05rem solid var(--md-typeset-table-color);padding:.9375em 1.25em;vertical-align:top}.md-typeset table:not([class]) tbody tr{transition:background-color 125ms}.md-typeset table:not([class]) tbody tr:hover{background-color:var(--md-typeset-table-color--light);box-shadow:0 .05rem 0 var(--md-default-bg-color) inset}.md-typeset table:not([class]) a{word-break:normal}.md-typeset table th[role=columnheader]{cursor:pointer}[dir=ltr] .md-typeset table th[role=columnheader]:after{margin-left:.5em}[dir=rtl] .md-typeset table th[role=columnheader]:after{margin-right:.5em}.md-typeset table th[role=columnheader]:after{content:"";display:inline-block;height:1.2em;-webkit-mask-image:var(--md-typeset-table-sort-icon);mask-image:var(--md-typeset-table-sort-icon);-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:background-color 125ms;vertical-align:text-bottom;width:1.2em}.md-typeset table th[role=columnheader]:hover:after{background-color:var(--md-default-fg-color--lighter)}.md-typeset table th[role=columnheader][aria-sort=ascending]:after{background-color:var(--md-default-fg-color--light);-webkit-mask-image:var(--md-typeset-table-sort-icon--asc);mask-image:var(--md-typeset-table-sort-icon--asc)}.md-typeset table th[role=columnheader][aria-sort=descending]:after{background-color:var(--md-default-fg-color--light);-webkit-mask-image:var(--md-typeset-table-sort-icon--desc);mask-image:var(--md-typeset-table-sort-icon--desc)}.md-typeset__scrollwrap{margin:1em -.8rem;overflow-x:auto;touch-action:auto}.md-typeset__table{display:inline-block;margin-bottom:.5em;padding:0 .8rem}@media print{.md-typeset__table{display:block}}html .md-typeset__table table{display:table;margin:0;overflow:hidden;width:100%}@media screen and (max-width:44.984375em){.md-content__inner>pre{margin:1em -.8rem}.md-content__inner>pre code{border-radius:0}}.md-typeset .md-author{border-radius:100%;display:block;flex-shrink:0;height:1.6rem;overflow:hidden;position:relative;transition:color 125ms,transform 125ms;width:1.6rem}.md-typeset .md-author img{display:block}.md-typeset .md-author--more{background:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--lighter);font-size:.6rem;font-weight:700;line-height:1.6rem;text-align:center}.md-typeset .md-author--long{height:2.4rem;width:2.4rem}.md-typeset a.md-author{transform:scale(1)}.md-typeset a.md-author img{border-radius:100%;filter:grayscale(100%) opacity(75%);transition:filter 125ms}.md-typeset a.md-author:focus,.md-typeset a.md-author:hover{transform:scale(1.1);z-index:1}.md-typeset a.md-author:focus img,.md-typeset a.md-author:hover img{filter:grayscale(0)}.md-banner{background-color:var(--md-footer-bg-color);color:var(--md-footer-fg-color);overflow:auto}@media print{.md-banner{display:none}}.md-banner--warning{background-color:var(--md-warning-bg-color);color:var(--md-warning-fg-color)}.md-banner__inner{font-size:.7rem;margin:.6rem auto;padding:0 .8rem}[dir=ltr] .md-banner__button{float:right}[dir=rtl] .md-banner__button{float:left}.md-banner__button{color:inherit;cursor:pointer;transition:opacity .25s}.no-js .md-banner__button{display:none}.md-banner__button:hover{opacity:.7}html{font-size:125%;height:100%;overflow-x:hidden}@media screen and (min-width:100em){html{font-size:137.5%}}@media screen and (min-width:125em){html{font-size:150%}}body{background-color:var(--md-default-bg-color);display:flex;flex-direction:column;font-size:.5rem;min-height:100%;position:relative;width:100%}@media print{body{display:block}}@media screen and (max-width:59.984375em){body[data-md-scrolllock]{position:fixed}}.md-grid{margin-left:auto;margin-right:auto;max-width:61rem}.md-container{display:flex;flex-direction:column;flex-grow:1}@media print{.md-container{display:block}}.md-main{flex-grow:1}.md-main__inner{display:flex;height:100%;margin-top:1.5rem}.md-ellipsis{overflow:hidden;text-overflow:ellipsis}.md-toggle{display:none}.md-option{height:0;opacity:0;position:absolute;width:0}.md-option:checked+label:not([hidden]){display:block}.md-option.focus-visible+label{outline-color:var(--md-accent-fg-color);outline-style:auto}.md-skip{background-color:var(--md-default-fg-color);border-radius:.1rem;color:var(--md-default-bg-color);font-size:.64rem;margin:.5rem;opacity:0;outline-color:var(--md-accent-fg-color);padding:.3rem .5rem;position:fixed;transform:translateY(.4rem);z-index:-1}.md-skip:focus{opacity:1;transform:translateY(0);transition:transform .25s cubic-bezier(.4,0,.2,1),opacity 175ms 75ms;z-index:10}@page{margin:25mm}:root{--md-clipboard-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 21H8V7h11m0-2H8a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2m-3-4H4a2 2 0 0 0-2 2v14h2V3h12z"/></svg>')}.md-clipboard{border-radius:.1rem;color:var(--md-default-fg-color--lightest);cursor:pointer;height:1.5em;outline-color:var(--md-accent-fg-color);outline-offset:.1rem;transition:color .25s;width:1.5em;z-index:1}@media print{.md-clipboard{display:none}}.md-clipboard:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}:hover>.md-clipboard{color:var(--md-default-fg-color--light)}.md-clipboard:focus,.md-clipboard:hover{color:var(--md-accent-fg-color)}.md-clipboard:after{background-color:currentcolor;content:"";display:block;height:1.125em;margin:0 auto;-webkit-mask-image:var(--md-clipboard-icon);mask-image:var(--md-clipboard-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:1.125em}.md-clipboard--inline{cursor:pointer}.md-clipboard--inline code{transition:color .25s,background-color .25s}.md-clipboard--inline:focus code,.md-clipboard--inline:hover code{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}:root{--md-code-select-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 19h-4v2h4c1.1 0 2-.9 2-2v-4h-2m0-12h-4v2h4v4h2V5c0-1.1-.9-2-2-2M5 5h4V3H5c-1.1 0-2 .9-2 2v4h2m0 6H3v4c0 1.1.9 2 2 2h4v-2H5zm2-4h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2zM7 7h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2zm-8 8h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2z"/></svg>');--md-code-copy-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 21H8V7h11m0-2H8a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2m-3-4H4a2 2 0 0 0-2 2v14h2V3h12z"/></svg>')}.md-typeset .md-code__content{display:grid}.md-code__nav{background-color:var(--md-code-bg-color--lighter);border-radius:.1rem;display:flex;gap:.2rem;padding:.2rem;position:absolute;right:.25em;top:.25em;transition:background-color .25s;z-index:1}:hover>.md-code__nav{background-color:var(--md-code-bg-color--light)}.md-code__button{color:var(--md-default-fg-color--lightest);cursor:pointer;display:block;height:1.5em;outline-color:var(--md-accent-fg-color);outline-offset:.1rem;transition:color .25s;width:1.5em}:hover>*>.md-code__button{color:var(--md-default-fg-color--light)}.md-code__button.focus-visible,.md-code__button:hover{color:var(--md-accent-fg-color)}.md-code__button--active{color:var(--md-default-fg-color)!important}.md-code__button:after{background-color:currentcolor;content:"";display:block;height:1.125em;margin:0 auto;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:1.125em}.md-code__button[data-md-type=select]:after{-webkit-mask-image:var(--md-code-select-icon);mask-image:var(--md-code-select-icon)}.md-code__button[data-md-type=copy]:after{-webkit-mask-image:var(--md-code-copy-icon);mask-image:var(--md-code-copy-icon)}@keyframes consent{0%{opacity:0;transform:translateY(100%)}to{opacity:1;transform:translateY(0)}}@keyframes overlay{0%{opacity:0}to{opacity:1}}.md-consent__overlay{animation:overlay .25s both;-webkit-backdrop-filter:blur(.1rem);backdrop-filter:blur(.1rem);background-color:#0000008a;height:100%;opacity:1;position:fixed;top:0;width:100%;z-index:5}.md-consent__inner{animation:consent .5s cubic-bezier(.1,.7,.1,1) both;background-color:var(--md-default-bg-color);border:0;border-radius:.1rem;bottom:0;box-shadow:0 0 .2rem #0000001a,0 .2rem .4rem #0003;max-height:100%;overflow:auto;padding:0;position:fixed;width:100%;z-index:5}.md-consent__form{padding:.8rem}.md-consent__settings{display:none;margin:1em 0}input:checked+.md-consent__settings{display:block}.md-consent__controls{margin-bottom:.8rem}.md-typeset .md-consent__controls .md-button{display:inline}@media screen and (max-width:44.984375em){.md-typeset .md-consent__controls .md-button{display:block;margin-top:.4rem;text-align:center;width:100%}}.md-consent label{cursor:pointer}.md-content{flex-grow:1;min-width:0}.md-content__inner{margin:0 .8rem 1.2rem;padding-top:.6rem}@media screen and (min-width:76.25em){[dir=ltr] .md-sidebar--primary:not([hidden])~.md-content>.md-content__inner{margin-left:1.2rem}[dir=ltr] .md-sidebar--secondary:not([hidden])~.md-content>.md-content__inner,[dir=rtl] .md-sidebar--primary:not([hidden])~.md-content>.md-content__inner{margin-right:1.2rem}[dir=rtl] .md-sidebar--secondary:not([hidden])~.md-content>.md-content__inner{margin-left:1.2rem}}.md-content__inner:before{content:"";display:block;height:.4rem}.md-content__inner>:last-child{margin-bottom:0}[dir=ltr] .md-content__button{float:right}[dir=rtl] .md-content__button{float:left}[dir=ltr] .md-content__button{margin-left:.4rem}[dir=rtl] .md-content__button{margin-right:.4rem}.md-content__button{margin:.4rem 0;padding:0}@media print{.md-content__button{display:none}}.md-typeset .md-content__button{color:var(--md-default-fg-color--lighter)}.md-content__button svg{display:inline;vertical-align:top}[dir=rtl] .md-content__button svg{transform:scaleX(-1)}[dir=ltr] .md-dialog{right:.8rem}[dir=rtl] .md-dialog{left:.8rem}.md-dialog{background-color:var(--md-default-fg-color);border-radius:.1rem;bottom:.8rem;box-shadow:var(--md-shadow-z3);min-width:11.1rem;opacity:0;padding:.4rem .6rem;pointer-events:none;position:fixed;transform:translateY(100%);transition:transform 0ms .4s,opacity .4s;z-index:4}@media print{.md-dialog{display:none}}.md-dialog--active{opacity:1;pointer-events:auto;transform:translateY(0);transition:transform .4s cubic-bezier(.075,.85,.175,1),opacity .4s}.md-dialog__inner{color:var(--md-default-bg-color);font-size:.7rem}.md-feedback{margin:2em 0 1em;text-align:center}.md-feedback fieldset{border:none;margin:0;padding:0}.md-feedback__title{font-weight:700;margin:1em auto}.md-feedback__inner{position:relative}.md-feedback__list{display:flex;flex-wrap:wrap;place-content:baseline center;position:relative}.md-feedback__list:hover .md-icon:not(:disabled){color:var(--md-default-fg-color--lighter)}:disabled .md-feedback__list{min-height:1.8rem}.md-feedback__icon{color:var(--md-default-fg-color--light);cursor:pointer;flex-shrink:0;margin:0 .1rem;transition:color 125ms}.md-feedback__icon:not(:disabled).md-icon:hover{color:var(--md-accent-fg-color)}.md-feedback__icon:disabled{color:var(--md-default-fg-color--lightest);pointer-events:none}.md-feedback__note{opacity:0;position:relative;transform:translateY(.4rem);transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s}.md-feedback__note>*{margin:0 auto;max-width:16rem}:disabled .md-feedback__note{opacity:1;transform:translateY(0)}@media print{.md-feedback{display:none}}.md-footer{background-color:var(--md-footer-bg-color);color:var(--md-footer-fg-color)}@media print{.md-footer{display:none}}.md-footer__inner{justify-content:space-between;overflow:auto;padding:.2rem}.md-footer__inner:not([hidden]){display:flex}.md-footer__link{align-items:end;display:flex;flex-grow:0.01;margin-bottom:.4rem;margin-top:1rem;max-width:100%;outline-color:var(--md-accent-fg-color);overflow:hidden;transition:opacity .25s}.md-footer__link:focus,.md-footer__link:hover{opacity:.7}[dir=rtl] .md-footer__link svg{transform:scaleX(-1)}@media screen and (max-width:44.984375em){.md-footer__link--prev{flex-shrink:0}.md-footer__link--prev .md-footer__title{display:none}}[dir=ltr] .md-footer__link--next{margin-left:auto}[dir=rtl] .md-footer__link--next{margin-right:auto}.md-footer__link--next{text-align:right}[dir=rtl] .md-footer__link--next{text-align:left}.md-footer__title{flex-grow:1;font-size:.9rem;margin-bottom:.7rem;max-width:calc(100% - 2.4rem);padding:0 1rem;white-space:nowrap}.md-footer__button{margin:.2rem;padding:.4rem}.md-footer__direction{font-size:.64rem;opacity:.7}.md-footer-meta{background-color:var(--md-footer-bg-color--dark)}.md-footer-meta__inner{display:flex;flex-wrap:wrap;justify-content:space-between;padding:.2rem}html .md-footer-meta.md-typeset a{color:var(--md-footer-fg-color--light)}html .md-footer-meta.md-typeset a:focus,html .md-footer-meta.md-typeset a:hover{color:var(--md-footer-fg-color)}.md-copyright{color:var(--md-footer-fg-color--lighter);font-size:.64rem;margin:auto .6rem;padding:.4rem 0;width:100%}@media screen and (min-width:45em){.md-copyright{width:auto}}.md-copyright__highlight{color:var(--md-footer-fg-color--light)}.md-social{display:inline-flex;gap:.2rem;margin:0 .4rem;padding:.2rem 0 .6rem}@media screen and (min-width:45em){.md-social{padding:.6rem 0}}.md-social__link{display:inline-block;height:1.6rem;text-align:center;width:1.6rem}.md-social__link:before{line-height:1.9}.md-social__link svg{fill:currentcolor;max-height:.8rem;vertical-align:-25%}.md-typeset .md-button{border:.1rem solid;border-radius:.1rem;color:var(--md-primary-fg-color);cursor:pointer;display:inline-block;font-weight:700;padding:.625em 2em;transition:color 125ms,background-color 125ms,border-color 125ms}.md-typeset .md-button--primary{background-color:var(--md-primary-fg-color);border-color:var(--md-primary-fg-color);color:var(--md-primary-bg-color)}.md-typeset .md-button:focus,.md-typeset .md-button:hover{background-color:var(--md-accent-fg-color);border-color:var(--md-accent-fg-color);color:var(--md-accent-bg-color)}[dir=ltr] .md-typeset .md-input{border-top-left-radius:.1rem}[dir=ltr] .md-typeset .md-input,[dir=rtl] .md-typeset .md-input{border-top-right-radius:.1rem}[dir=rtl] .md-typeset .md-input{border-top-left-radius:.1rem}.md-typeset .md-input{border-bottom:.1rem solid var(--md-default-fg-color--lighter);box-shadow:var(--md-shadow-z1);font-size:.8rem;height:1.8rem;padding:0 .6rem;transition:border .25s,box-shadow .25s}.md-typeset .md-input:focus,.md-typeset .md-input:hover{border-bottom-color:var(--md-accent-fg-color);box-shadow:var(--md-shadow-z2)}.md-typeset .md-input--stretch{width:100%}.md-header{background-color:var(--md-primary-fg-color);box-shadow:0 0 .2rem #0000,0 .2rem .4rem #0000;color:var(--md-primary-bg-color);display:block;left:0;position:sticky;right:0;top:0;z-index:4}@media print{.md-header{display:none}}.md-header[hidden]{transform:translateY(-100%);transition:transform .25s cubic-bezier(.8,0,.6,1),box-shadow .25s}.md-header--shadow{box-shadow:0 0 .2rem #0000001a,0 .2rem .4rem #0003;transition:transform .25s cubic-bezier(.1,.7,.1,1),box-shadow .25s}.md-header__inner{align-items:center;display:flex;padding:0 .2rem}.md-header__button{color:currentcolor;cursor:pointer;margin:.2rem;outline-color:var(--md-accent-fg-color);padding:.4rem;position:relative;transition:opacity .25s;vertical-align:middle;z-index:1}.md-header__button:hover{opacity:.7}.md-header__button:not([hidden]){display:inline-block}.md-header__button:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}.md-header__button.md-logo{margin:.2rem;padding:.4rem}@media screen and (max-width:76.234375em){.md-header__button.md-logo{display:none}}.md-header__button.md-logo img,.md-header__button.md-logo svg{fill:currentcolor;display:block;height:1.2rem;width:auto}@media screen and (min-width:60em){.md-header__button[for=__search]{display:none}}.no-js .md-header__button[for=__search]{display:none}[dir=rtl] .md-header__button[for=__search] svg{transform:scaleX(-1)}@media screen and (min-width:76.25em){.md-header__button[for=__drawer]{display:none}}.md-header__topic{display:flex;max-width:100%;position:absolute;transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s;white-space:nowrap}.md-header__topic+.md-header__topic{opacity:0;pointer-events:none;transform:translateX(1.25rem);transition:transform .4s cubic-bezier(1,.7,.1,.1),opacity .15s;z-index:-1}[dir=rtl] .md-header__topic+.md-header__topic{transform:translateX(-1.25rem)}.md-header__topic:first-child{font-weight:700}[dir=ltr] .md-header__title{margin-left:1rem;margin-right:.4rem}[dir=rtl] .md-header__title{margin-left:.4rem;margin-right:1rem}.md-header__title{flex-grow:1;font-size:.9rem;height:2.4rem;line-height:2.4rem}.md-header__title--active .md-header__topic{opacity:0;pointer-events:none;transform:translateX(-1.25rem);transition:transform .4s cubic-bezier(1,.7,.1,.1),opacity .15s;z-index:-1}[dir=rtl] .md-header__title--active .md-header__topic{transform:translateX(1.25rem)}.md-header__title--active .md-header__topic+.md-header__topic{opacity:1;pointer-events:auto;transform:translateX(0);transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s;z-index:0}.md-header__title>.md-header__ellipsis{height:100%;position:relative;width:100%}.md-header__option{display:flex;flex-shrink:0;max-width:100%;transition:max-width 0ms .25s,opacity .25s .25s;white-space:nowrap}[data-md-toggle=search]:checked~.md-header .md-header__option{max-width:0;opacity:0;transition:max-width 0ms,opacity 0ms}.md-header__option>input{bottom:0}.md-header__source{display:none}@media screen and (min-width:60em){[dir=ltr] .md-header__source{margin-left:1rem}[dir=rtl] .md-header__source{margin-right:1rem}.md-header__source{display:block;max-width:11.7rem;width:11.7rem}}@media screen and (min-width:76.25em){[dir=ltr] .md-header__source{margin-left:1.4rem}[dir=rtl] .md-header__source{margin-right:1.4rem}}.md-meta{color:var(--md-default-fg-color--light);font-size:.7rem;line-height:1.3}.md-meta__list{display:inline-flex;flex-wrap:wrap;list-style:none;margin:0;padding:0}.md-meta__item:not(:last-child):after{content:"·";margin-left:.2rem;margin-right:.2rem}.md-meta__link{color:var(--md-typeset-a-color)}.md-meta__link:focus,.md-meta__link:hover{color:var(--md-accent-fg-color)}.md-draft{background-color:#ff1744;border-radius:.125em;color:#fff;display:inline-block;font-weight:700;padding-left:.5714285714em;padding-right:.5714285714em}:root{--md-nav-icon--prev:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20 11v2H8l5.5 5.5-1.42 1.42L4.16 12l7.92-7.92L13.5 5.5 8 11z"/></svg>');--md-nav-icon--next:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>');--md-toc-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 9h14V7H3zm0 4h14v-2H3zm0 4h14v-2H3zm16 0h2v-2h-2zm0-10v2h2V7zm0 6h2v-2h-2z"/></svg>')}.md-nav{font-size:.7rem;line-height:1.3}.md-nav__title{color:var(--md-default-fg-color--light);display:block;font-weight:700;overflow:hidden;padding:0 .6rem;text-overflow:ellipsis}.md-nav__title .md-nav__button{display:none}.md-nav__title .md-nav__button img{height:100%;width:auto}.md-nav__title .md-nav__button.md-logo img,.md-nav__title .md-nav__button.md-logo svg{fill:currentcolor;display:block;height:2.4rem;max-width:100%;object-fit:contain;width:auto}.md-nav__list{list-style:none;margin:0;padding:0}.md-nav__link{align-items:flex-start;display:flex;gap:.4rem;margin-top:.625em;scroll-snap-align:start;transition:color 125ms}.md-nav__link--passed,.md-nav__link--passed code{color:var(--md-default-fg-color--light)}.md-nav__item .md-nav__link--active,.md-nav__item .md-nav__link--active code{color:var(--md-typeset-a-color)}.md-nav__link .md-ellipsis{position:relative}.md-nav__link .md-ellipsis code{word-break:normal}[dir=ltr] .md-nav__link .md-icon:last-child{margin-left:auto}[dir=rtl] .md-nav__link .md-icon:last-child{margin-right:auto}.md-nav__link .md-typeset{font-size:.7rem;line-height:1.3}.md-nav__link svg{fill:currentcolor;flex-shrink:0;height:1.3em;position:relative}.md-nav__link[for]:focus,.md-nav__link[for]:hover,.md-nav__link[href]:focus,.md-nav__link[href]:hover{color:var(--md-accent-fg-color);cursor:pointer}.md-nav__link[for]:focus code,.md-nav__link[for]:hover code,.md-nav__link[href]:focus code,.md-nav__link[href]:hover code{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-nav__link.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-nav--primary .md-nav__link[for=__toc]{display:none}.md-nav--primary .md-nav__link[for=__toc] .md-icon:after{background-color:currentcolor;display:block;height:100%;-webkit-mask-image:var(--md-toc-icon);mask-image:var(--md-toc-icon);width:100%}.md-nav--primary .md-nav__link[for=__toc]~.md-nav{display:none}.md-nav__container>.md-nav__link{margin-top:0}.md-nav__container>.md-nav__link:first-child{flex-grow:1;min-width:0}.md-nav__icon{flex-shrink:0}.md-nav__source{display:none}@media screen and (max-width:76.234375em){.md-nav--primary,.md-nav--primary .md-nav{background-color:var(--md-default-bg-color);display:flex;flex-direction:column;height:100%;left:0;position:absolute;right:0;top:0;z-index:1}.md-nav--primary .md-nav__item,.md-nav--primary .md-nav__title{font-size:.8rem;line-height:1.5}.md-nav--primary .md-nav__title{background-color:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--light);cursor:pointer;height:5.6rem;line-height:2.4rem;padding:3rem .8rem .2rem;position:relative;white-space:nowrap}[dir=ltr] .md-nav--primary .md-nav__title .md-nav__icon{left:.4rem}[dir=rtl] .md-nav--primary .md-nav__title .md-nav__icon{right:.4rem}.md-nav--primary .md-nav__title .md-nav__icon{display:block;height:1.2rem;margin:.2rem;position:absolute;top:.4rem;width:1.2rem}.md-nav--primary .md-nav__title .md-nav__icon:after{background-color:currentcolor;content:"";display:block;height:100%;-webkit-mask-image:var(--md-nav-icon--prev);mask-image:var(--md-nav-icon--prev);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:100%}.md-nav--primary .md-nav__title~.md-nav__list{background-color:var(--md-default-bg-color);box-shadow:0 .05rem 0 var(--md-default-fg-color--lightest) inset;overflow-y:auto;scroll-snap-type:y mandatory;touch-action:pan-y}.md-nav--primary .md-nav__title~.md-nav__list>:first-child{border-top:0}.md-nav--primary .md-nav__title[for=__drawer]{background-color:var(--md-primary-fg-color);color:var(--md-primary-bg-color);font-weight:700}.md-nav--primary .md-nav__title .md-logo{display:block;left:.2rem;margin:.2rem;padding:.4rem;position:absolute;right:.2rem;top:.2rem}.md-nav--primary .md-nav__list{flex:1}.md-nav--primary .md-nav__item{border-top:.05rem solid var(--md-default-fg-color--lightest)}.md-nav--primary .md-nav__item--active>.md-nav__link{color:var(--md-typeset-a-color)}.md-nav--primary .md-nav__item--active>.md-nav__link:focus,.md-nav--primary .md-nav__item--active>.md-nav__link:hover{color:var(--md-accent-fg-color)}.md-nav--primary .md-nav__link{margin-top:0;padding:.6rem .8rem}.md-nav--primary .md-nav__link svg{margin-top:.1em}.md-nav--primary .md-nav__link>.md-nav__link{padding:0}[dir=ltr] .md-nav--primary .md-nav__link .md-nav__icon{margin-right:-.2rem}[dir=rtl] .md-nav--primary .md-nav__link .md-nav__icon{margin-left:-.2rem}.md-nav--primary .md-nav__link .md-nav__icon{font-size:1.2rem;height:1.2rem;width:1.2rem}.md-nav--primary .md-nav__link .md-nav__icon:after{background-color:currentcolor;content:"";display:block;height:100%;-webkit-mask-image:var(--md-nav-icon--next);mask-image:var(--md-nav-icon--next);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:100%}[dir=rtl] .md-nav--primary .md-nav__icon:after{transform:scale(-1)}.md-nav--primary .md-nav--secondary .md-nav{background-color:initial;position:static}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav__link{padding-left:1.4rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav__link{padding-right:1.4rem}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav__link{padding-left:2rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav__link{padding-right:2rem}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav__link{padding-left:2.6rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav__link{padding-right:2.6rem}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav .md-nav__link{padding-left:3.2rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav .md-nav__link{padding-right:3.2rem}.md-nav--secondary{background-color:initial}.md-nav__toggle~.md-nav{display:flex;opacity:0;transform:translateX(100%);transition:transform .25s cubic-bezier(.8,0,.6,1),opacity 125ms 50ms}[dir=rtl] .md-nav__toggle~.md-nav{transform:translateX(-100%)}.md-nav__toggle:checked~.md-nav{opacity:1;transform:translateX(0);transition:transform .25s cubic-bezier(.4,0,.2,1),opacity 125ms 125ms}.md-nav__toggle:checked~.md-nav>.md-nav__list{-webkit-backface-visibility:hidden;backface-visibility:hidden}}@media screen and (max-width:59.984375em){.md-nav--primary .md-nav__link[for=__toc]{display:flex}.md-nav--primary .md-nav__link[for=__toc] .md-icon:after{content:""}.md-nav--primary .md-nav__link[for=__toc]+.md-nav__link{display:none}.md-nav--primary .md-nav__link[for=__toc]~.md-nav{display:flex}.md-nav__source{background-color:var(--md-primary-fg-color--dark);color:var(--md-primary-bg-color);display:block;padding:0 .2rem}}@media screen and (min-width:60em) and (max-width:76.234375em){.md-nav--integrated .md-nav__link[for=__toc]{display:flex}.md-nav--integrated .md-nav__link[for=__toc] .md-icon:after{content:""}.md-nav--integrated .md-nav__link[for=__toc]+.md-nav__link{display:none}.md-nav--integrated .md-nav__link[for=__toc]~.md-nav{display:flex}}@media screen and (min-width:60em){.md-nav{margin-bottom:-.4rem}.md-nav--secondary .md-nav__title{background:var(--md-default-bg-color);box-shadow:0 0 .4rem .4rem var(--md-default-bg-color);position:sticky;top:0;z-index:1}.md-nav--secondary .md-nav__title[for=__toc]{scroll-snap-align:start}.md-nav--secondary .md-nav__title .md-nav__icon{display:none}[dir=ltr] .md-nav--secondary .md-nav__list{padding-left:.6rem}[dir=rtl] .md-nav--secondary .md-nav__list{padding-right:.6rem}.md-nav--secondary .md-nav__list{padding-bottom:.4rem}[dir=ltr] .md-nav--secondary .md-nav__item>.md-nav__link{margin-right:.4rem}[dir=rtl] .md-nav--secondary .md-nav__item>.md-nav__link{margin-left:.4rem}}@media screen and (min-width:76.25em){.md-nav{margin-bottom:-.4rem;transition:max-height .25s cubic-bezier(.86,0,.07,1)}.md-nav--primary .md-nav__title{background:var(--md-default-bg-color);box-shadow:0 0 .4rem .4rem var(--md-default-bg-color);position:sticky;top:0;z-index:1}.md-nav--primary .md-nav__title[for=__drawer]{scroll-snap-align:start}.md-nav--primary .md-nav__title .md-nav__icon{display:none}[dir=ltr] .md-nav--primary .md-nav__list{padding-left:.6rem}[dir=rtl] .md-nav--primary .md-nav__list{padding-right:.6rem}.md-nav--primary .md-nav__list{padding-bottom:.4rem}[dir=ltr] .md-nav--primary .md-nav__item>.md-nav__link{margin-right:.4rem}[dir=rtl] .md-nav--primary .md-nav__item>.md-nav__link{margin-left:.4rem}.md-nav__toggle~.md-nav{display:grid;grid-template-rows:minmax(.4rem,0fr);opacity:0;transition:grid-template-rows .25s cubic-bezier(.86,0,.07,1),opacity .25s,visibility 0ms .25s;visibility:collapse}.md-nav__toggle~.md-nav>.md-nav__list{overflow:hidden}.md-nav__toggle.md-toggle--indeterminate~.md-nav,.md-nav__toggle:checked~.md-nav{grid-template-rows:minmax(.4rem,1fr);opacity:1;transition:grid-template-rows .25s cubic-bezier(.86,0,.07,1),opacity .15s .1s,visibility 0ms;visibility:visible}.md-nav__toggle.md-toggle--indeterminate~.md-nav{transition:none}.md-nav__item--nested>.md-nav>.md-nav__title{display:none}.md-nav__item--section{display:block;margin:1.25em 0}.md-nav__item--section:last-child{margin-bottom:0}.md-nav__item--section>.md-nav__link{font-weight:700}.md-nav__item--section>.md-nav__link[for]{color:var(--md-default-fg-color--light)}.md-nav__item--section>.md-nav__link:not(.md-nav__container){pointer-events:none}.md-nav__item--section>.md-nav__link .md-icon,.md-nav__item--section>.md-nav__link>[for]{display:none}[dir=ltr] .md-nav__item--section>.md-nav{margin-left:-.6rem}[dir=rtl] .md-nav__item--section>.md-nav{margin-right:-.6rem}.md-nav__item--section>.md-nav{display:block;opacity:1;visibility:visible}.md-nav__item--section>.md-nav>.md-nav__list>.md-nav__item{padding:0}.md-nav__icon{border-radius:100%;height:.9rem;transition:background-color .25s;width:.9rem}.md-nav__icon:hover{background-color:var(--md-accent-fg-color--transparent)}.md-nav__icon:after{background-color:currentcolor;border-radius:100%;content:"";display:inline-block;height:100%;-webkit-mask-image:var(--md-nav-icon--next);mask-image:var(--md-nav-icon--next);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:transform .25s;vertical-align:-.1rem;width:100%}[dir=rtl] .md-nav__icon:after{transform:rotate(180deg)}.md-nav__item--nested .md-nav__toggle:checked~.md-nav__link .md-nav__icon:after,.md-nav__item--nested .md-toggle--indeterminate~.md-nav__link .md-nav__icon:after{transform:rotate(90deg)}.md-nav--lifted>.md-nav__list>.md-nav__item,.md-nav--lifted>.md-nav__title{display:none}.md-nav--lifted>.md-nav__list>.md-nav__item--active{display:block}.md-nav--lifted>.md-nav__list>.md-nav__item--active>.md-nav__link{background:var(--md-default-bg-color);box-shadow:0 0 .4rem .4rem var(--md-default-bg-color);margin-top:0;position:sticky;top:0;z-index:1}.md-nav--lifted>.md-nav__list>.md-nav__item--active>.md-nav__link:not(.md-nav__container){pointer-events:none}.md-nav--lifted>.md-nav__list>.md-nav__item--active.md-nav__item--section{margin:0}[dir=ltr] .md-nav--lifted>.md-nav__list>.md-nav__item>.md-nav:not(.md-nav--secondary){margin-left:-.6rem}[dir=rtl] .md-nav--lifted>.md-nav__list>.md-nav__item>.md-nav:not(.md-nav--secondary){margin-right:-.6rem}.md-nav--lifted>.md-nav__list>.md-nav__item>[for]{color:var(--md-default-fg-color--light)}.md-nav--lifted .md-nav[data-md-level="1"]{grid-template-rows:minmax(.4rem,1fr);opacity:1;visibility:visible}[dir=ltr] .md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary{border-left:.05rem solid var(--md-primary-fg-color)}[dir=rtl] .md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary{border-right:.05rem solid var(--md-primary-fg-color)}.md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary{display:block;margin-bottom:1.25em;opacity:1;visibility:visible}.md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary>.md-nav__list{overflow:visible;padding-bottom:0}.md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary>.md-nav__title{display:none}}.md-pagination{font-size:.8rem;font-weight:700;gap:.4rem}.md-pagination,.md-pagination>*{align-items:center;display:flex;justify-content:center}.md-pagination>*{border-radius:.2rem;height:1.8rem;min-width:1.8rem;text-align:center}.md-pagination__current{background-color:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--light)}.md-pagination__link{transition:color 125ms,background-color 125ms}.md-pagination__link:focus,.md-pagination__link:hover{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-pagination__link:focus svg,.md-pagination__link:hover svg{color:var(--md-accent-fg-color)}.md-pagination__link.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-pagination__link svg{fill:currentcolor;color:var(--md-default-fg-color--lighter);display:block;max-height:100%;width:1.2rem}:root{--md-path-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>')}.md-path{font-size:.7rem;margin:0 .8rem;overflow:auto;padding-top:1.2rem}.md-path:not([hidden]){display:block}@media screen and (min-width:76.25em){.md-path{margin:0 1.2rem}}.md-path__list{align-items:center;display:flex;gap:.2rem;list-style:none;margin:0;padding:0}.md-path__item:not(:first-child){display:inline-flex;gap:.2rem;white-space:nowrap}.md-path__item:not(:first-child):before{background-color:var(--md-default-fg-color--lighter);content:"";display:inline;height:.8rem;-webkit-mask-image:var(--md-path-icon);mask-image:var(--md-path-icon);width:.8rem}.md-path__link{align-items:center;color:var(--md-default-fg-color--light);display:flex}.md-path__link:focus,.md-path__link:hover{color:var(--md-accent-fg-color)}:root{--md-post-pin-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16 12V4h1V2H7v2h1v8l-2 2v2h5.2v6h1.6v-6H18v-2z"/></svg>')}.md-post__back{border-bottom:.05rem solid var(--md-default-fg-color--lightest);margin-bottom:1.2rem;padding-bottom:1.2rem}@media screen and (max-width:76.234375em){.md-post__back{display:none}}[dir=rtl] .md-post__back svg{transform:scaleX(-1)}.md-post__authors{display:flex;flex-direction:column;gap:.6rem;margin:0 .6rem 1.2rem}.md-post .md-post__meta a{transition:color 125ms}.md-post .md-post__meta a:focus,.md-post .md-post__meta a:hover{color:var(--md-accent-fg-color)}.md-post__title{color:var(--md-default-fg-color--light);font-weight:700}.md-post--excerpt{margin-bottom:3.2rem}.md-post--excerpt .md-post__header{align-items:center;display:flex;gap:.6rem;min-height:1.6rem}.md-post--excerpt .md-post__authors{align-items:center;display:inline-flex;flex-direction:row;gap:.2rem;margin:0;min-height:2.4rem}[dir=ltr] .md-post--excerpt .md-post__meta .md-meta__list{margin-right:.4rem}[dir=rtl] .md-post--excerpt .md-post__meta .md-meta__list{margin-left:.4rem}.md-post--excerpt .md-post__content>:first-child{--md-scroll-margin:6rem;margin-top:0}.md-post>.md-nav--secondary{margin:1em 0}.md-pin{background:var(--md-default-fg-color--lightest);border-radius:1rem;margin-top:-.05rem;padding:.2rem}.md-pin:after{background-color:currentcolor;content:"";display:block;height:.6rem;margin:0 auto;-webkit-mask-image:var(--md-post-pin-icon);mask-image:var(--md-post-pin-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:.6rem}.md-profile{align-items:center;display:flex;font-size:.7rem;gap:.6rem;line-height:1.4;width:100%}.md-profile__description{flex-grow:1}.md-content--post{display:flex}@media screen and (max-width:76.234375em){.md-content--post{flex-flow:column-reverse}}.md-content--post>.md-content__inner{flex-grow:1;min-width:0}@media screen and (min-width:76.25em){[dir=ltr] .md-content--post>.md-content__inner{margin-left:1.2rem}[dir=rtl] .md-content--post>.md-content__inner{margin-right:1.2rem}}@media screen and (max-width:76.234375em){.md-sidebar.md-sidebar--post{padding:0;position:static;width:100%}.md-sidebar.md-sidebar--post .md-sidebar__scrollwrap{overflow:visible}.md-sidebar.md-sidebar--post .md-sidebar__inner{padding:0}.md-sidebar.md-sidebar--post .md-post__meta{margin-left:.6rem;margin-right:.6rem}.md-sidebar.md-sidebar--post .md-nav__item{border:none;display:inline}.md-sidebar.md-sidebar--post .md-nav__list{display:inline-flex;flex-wrap:wrap;gap:.6rem;padding-bottom:.6rem;padding-top:.6rem}.md-sidebar.md-sidebar--post .md-nav__link{padding:0}.md-sidebar.md-sidebar--post .md-nav{height:auto;margin-bottom:0;position:static}}:root{--md-progress-value:0;--md-progress-delay:400ms}.md-progress{background:var(--md-primary-bg-color);height:.075rem;opacity:min(clamp(0,var(--md-progress-value),1),clamp(0,100 - var(--md-progress-value),1));position:fixed;top:0;transform:scaleX(calc(var(--md-progress-value)*1%));transform-origin:left;transition:transform .5s cubic-bezier(.19,1,.22,1),opacity .25s var(--md-progress-delay);width:100%;z-index:4}:root{--md-search-result-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h7c-.41-.25-.8-.56-1.14-.9-.33-.33-.61-.7-.86-1.1H6V4h7v5h5v1.18c.71.16 1.39.43 2 .82V8zm6.31 16.9c1.33-2.11.69-4.9-1.4-6.22-2.11-1.33-4.91-.68-6.22 1.4-1.34 2.11-.69 4.89 1.4 6.22 1.46.93 3.32.93 4.79.02L22 23.39 23.39 22zm-3.81.1a2.5 2.5 0 0 1-2.5-2.5 2.5 2.5 0 0 1 2.5-2.5 2.5 2.5 0 0 1 2.5 2.5 2.5 2.5 0 0 1-2.5 2.5"/></svg>')}.md-search{position:relative}@media screen and (min-width:60em){.md-search{padding:.2rem 0}}.no-js .md-search{display:none}.md-search__overlay{opacity:0;z-index:1}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__overlay{left:-2.2rem}[dir=rtl] .md-search__overlay{right:-2.2rem}.md-search__overlay{background-color:var(--md-default-bg-color);border-radius:1rem;height:2rem;overflow:hidden;pointer-events:none;position:absolute;top:-1rem;transform-origin:center;transition:transform .3s .1s,opacity .2s .2s;width:2rem}[data-md-toggle=search]:checked~.md-header .md-search__overlay{opacity:1;transition:transform .4s,opacity .1s}}@media screen and (min-width:60em){[dir=ltr] .md-search__overlay{left:0}[dir=rtl] .md-search__overlay{right:0}.md-search__overlay{background-color:#0000008a;cursor:pointer;height:0;position:fixed;top:0;transition:width 0ms .25s,height 0ms .25s,opacity .25s;width:0}[data-md-toggle=search]:checked~.md-header .md-search__overlay{height:200vh;opacity:1;transition:width 0ms,height 0ms,opacity .25s;width:100%}}@media screen and (max-width:29.984375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{transform:scale(45)}}@media screen and (min-width:30em) and (max-width:44.984375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{transform:scale(60)}}@media screen and (min-width:45em) and (max-width:59.984375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{transform:scale(75)}}.md-search__inner{-webkit-backface-visibility:hidden;backface-visibility:hidden}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__inner{left:0}[dir=rtl] .md-search__inner{right:0}.md-search__inner{height:0;opacity:0;overflow:hidden;position:fixed;top:0;transform:translateX(5%);transition:width 0ms .3s,height 0ms .3s,transform .15s cubic-bezier(.4,0,.2,1) .15s,opacity .15s .15s;width:0;z-index:2}[dir=rtl] .md-search__inner{transform:translateX(-5%)}[data-md-toggle=search]:checked~.md-header .md-search__inner{height:100%;opacity:1;transform:translateX(0);transition:width 0ms 0ms,height 0ms 0ms,transform .15s cubic-bezier(.1,.7,.1,1) .15s,opacity .15s .15s;width:100%}}@media screen and (min-width:60em){[dir=ltr] .md-search__inner{float:right}[dir=rtl] .md-search__inner{float:left}.md-search__inner{padding:.1rem 0;position:relative;transition:width .25s cubic-bezier(.1,.7,.1,1);width:11.7rem}}@media screen and (min-width:60em) and (max-width:76.234375em){[data-md-toggle=search]:checked~.md-header .md-search__inner{width:23.4rem}}@media screen and (min-width:76.25em){[data-md-toggle=search]:checked~.md-header .md-search__inner{width:34.4rem}}.md-search__form{background-color:var(--md-default-bg-color);box-shadow:0 0 .6rem #0000;height:2.4rem;position:relative;transition:color .25s,background-color .25s;z-index:2}@media screen and (min-width:60em){.md-search__form{background-color:#00000042;border-radius:.1rem;height:1.8rem}.md-search__form:hover{background-color:#ffffff1f}}[data-md-toggle=search]:checked~.md-header .md-search__form{background-color:var(--md-default-bg-color);border-radius:.1rem .1rem 0 0;box-shadow:0 0 .6rem #00000012;color:var(--md-default-fg-color)}[dir=ltr] .md-search__input{padding-left:3.6rem;padding-right:2.2rem}[dir=rtl] .md-search__input{padding-left:2.2rem;padding-right:3.6rem}.md-search__input{background:#0000;font-size:.9rem;height:100%;position:relative;text-overflow:ellipsis;width:100%;z-index:2}.md-search__input::placeholder{transition:color .25s}.md-search__input::placeholder,.md-search__input~.md-search__icon{color:var(--md-default-fg-color--light)}.md-search__input::-ms-clear{display:none}@media screen and (max-width:59.984375em){.md-search__input{font-size:.9rem;height:2.4rem;width:100%}}@media screen and (min-width:60em){[dir=ltr] .md-search__input{padding-left:2.2rem}[dir=rtl] .md-search__input{padding-right:2.2rem}.md-search__input{color:inherit;font-size:.8rem}.md-search__input::placeholder{color:var(--md-primary-bg-color--light)}.md-search__input+.md-search__icon{color:var(--md-primary-bg-color)}[data-md-toggle=search]:checked~.md-header .md-search__input{text-overflow:clip}[data-md-toggle=search]:checked~.md-header .md-search__input+.md-search__icon{color:var(--md-default-fg-color--light)}[data-md-toggle=search]:checked~.md-header .md-search__input::placeholder{color:#0000}}.md-search__icon{cursor:pointer;display:inline-block;height:1.2rem;transition:color .25s,opacity .25s;width:1.2rem}.md-search__icon:hover{opacity:.7}[dir=ltr] .md-search__icon[for=__search]{left:.5rem}[dir=rtl] .md-search__icon[for=__search]{right:.5rem}.md-search__icon[for=__search]{position:absolute;top:.3rem;z-index:2}[dir=rtl] .md-search__icon[for=__search] svg{transform:scaleX(-1)}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__icon[for=__search]{left:.8rem}[dir=rtl] .md-search__icon[for=__search]{right:.8rem}.md-search__icon[for=__search]{top:.6rem}.md-search__icon[for=__search] svg:first-child{display:none}}@media screen and (min-width:60em){.md-search__icon[for=__search]{pointer-events:none}.md-search__icon[for=__search] svg:last-child{display:none}}[dir=ltr] .md-search__options{right:.5rem}[dir=rtl] .md-search__options{left:.5rem}.md-search__options{pointer-events:none;position:absolute;top:.3rem;z-index:2}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__options{right:.8rem}[dir=rtl] .md-search__options{left:.8rem}.md-search__options{top:.6rem}}[dir=ltr] .md-search__options>.md-icon{margin-left:.2rem}[dir=rtl] .md-search__options>.md-icon{margin-right:.2rem}.md-search__options>.md-icon{color:var(--md-default-fg-color--light);opacity:0;transform:scale(.75);transition:transform .15s cubic-bezier(.1,.7,.1,1),opacity .15s}.md-search__options>.md-icon:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}[data-md-toggle=search]:checked~.md-header .md-search__input:valid~.md-search__options>.md-icon{opacity:1;pointer-events:auto;transform:scale(1)}[data-md-toggle=search]:checked~.md-header .md-search__input:valid~.md-search__options>.md-icon:hover{opacity:.7}[dir=ltr] .md-search__suggest{padding-left:3.6rem;padding-right:2.2rem}[dir=rtl] .md-search__suggest{padding-left:2.2rem;padding-right:3.6rem}.md-search__suggest{align-items:center;color:var(--md-default-fg-color--lighter);display:flex;font-size:.9rem;height:100%;opacity:0;position:absolute;top:0;transition:opacity 50ms;white-space:nowrap;width:100%}@media screen and (min-width:60em){[dir=ltr] .md-search__suggest{padding-left:2.2rem}[dir=rtl] .md-search__suggest{padding-right:2.2rem}.md-search__suggest{font-size:.8rem}}[data-md-toggle=search]:checked~.md-header .md-search__suggest{opacity:1;transition:opacity .3s .1s}[dir=ltr] .md-search__output{border-bottom-left-radius:.1rem}[dir=ltr] .md-search__output,[dir=rtl] .md-search__output{border-bottom-right-radius:.1rem}[dir=rtl] .md-search__output{border-bottom-left-radius:.1rem}.md-search__output{overflow:hidden;position:absolute;width:100%;z-index:1}@media screen and (max-width:59.984375em){.md-search__output{bottom:0;top:2.4rem}}@media screen and (min-width:60em){.md-search__output{opacity:0;top:1.9rem;transition:opacity .4s}[data-md-toggle=search]:checked~.md-header .md-search__output{box-shadow:var(--md-shadow-z3);opacity:1}}.md-search__scrollwrap{-webkit-backface-visibility:hidden;backface-visibility:hidden;background-color:var(--md-default-bg-color);height:100%;overflow-y:auto;touch-action:pan-y}@media (-webkit-max-device-pixel-ratio:1),(max-resolution:1dppx){.md-search__scrollwrap{transform:translateZ(0)}}@media screen and (min-width:60em) and (max-width:76.234375em){.md-search__scrollwrap{width:23.4rem}}@media screen and (min-width:76.25em){.md-search__scrollwrap{width:34.4rem}}@media screen and (min-width:60em){.md-search__scrollwrap{max-height:0;scrollbar-color:var(--md-default-fg-color--lighter) #0000;scrollbar-width:thin}[data-md-toggle=search]:checked~.md-header .md-search__scrollwrap{max-height:75vh}.md-search__scrollwrap:hover{scrollbar-color:var(--md-accent-fg-color) #0000}.md-search__scrollwrap::-webkit-scrollbar{height:.2rem;width:.2rem}.md-search__scrollwrap::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-search__scrollwrap::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}}.md-search-result{color:var(--md-default-fg-color);word-break:break-word}.md-search-result__meta{background-color:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--light);font-size:.64rem;line-height:1.8rem;padding:0 .8rem;scroll-snap-align:start}@media screen and (min-width:60em){[dir=ltr] .md-search-result__meta{padding-left:2.2rem}[dir=rtl] .md-search-result__meta{padding-right:2.2rem}}.md-search-result__list{list-style:none;margin:0;padding:0;-webkit-user-select:none;user-select:none}.md-search-result__item{box-shadow:0 -.05rem var(--md-default-fg-color--lightest)}.md-search-result__item:first-child{box-shadow:none}.md-search-result__link{display:block;outline:none;scroll-snap-align:start;transition:background-color .25s}.md-search-result__link:focus,.md-search-result__link:hover{background-color:var(--md-accent-fg-color--transparent)}.md-search-result__link:last-child p:last-child{margin-bottom:.6rem}.md-search-result__more>summary{cursor:pointer;display:block;outline:none;position:sticky;scroll-snap-align:start;top:0;z-index:1}.md-search-result__more>summary::marker{display:none}.md-search-result__more>summary::-webkit-details-marker{display:none}.md-search-result__more>summary>div{color:var(--md-typeset-a-color);font-size:.64rem;padding:.75em .8rem;transition:color .25s,background-color .25s}@media screen and (min-width:60em){[dir=ltr] .md-search-result__more>summary>div{padding-left:2.2rem}[dir=rtl] .md-search-result__more>summary>div{padding-right:2.2rem}}.md-search-result__more>summary:focus>div,.md-search-result__more>summary:hover>div{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-search-result__more[open]>summary{background-color:var(--md-default-bg-color)}.md-search-result__article{overflow:hidden;padding:0 .8rem;position:relative}@media screen and (min-width:60em){[dir=ltr] .md-search-result__article{padding-left:2.2rem}[dir=rtl] .md-search-result__article{padding-right:2.2rem}}[dir=ltr] .md-search-result__icon{left:0}[dir=rtl] .md-search-result__icon{right:0}.md-search-result__icon{color:var(--md-default-fg-color--light);height:1.2rem;margin:.5rem;position:absolute;width:1.2rem}@media screen and (max-width:59.984375em){.md-search-result__icon{display:none}}.md-search-result__icon:after{background-color:currentcolor;content:"";display:inline-block;height:100%;-webkit-mask-image:var(--md-search-result-icon);mask-image:var(--md-search-result-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:100%}[dir=rtl] .md-search-result__icon:after{transform:scaleX(-1)}.md-search-result .md-typeset{color:var(--md-default-fg-color--light);font-size:.64rem;line-height:1.6}.md-search-result .md-typeset h1{color:var(--md-default-fg-color);font-size:.8rem;font-weight:400;line-height:1.4;margin:.55rem 0}.md-search-result .md-typeset h1 mark{text-decoration:none}.md-search-result .md-typeset h2{color:var(--md-default-fg-color);font-size:.64rem;font-weight:700;line-height:1.6;margin:.5em 0}.md-search-result .md-typeset h2 mark{text-decoration:none}.md-search-result__terms{color:var(--md-default-fg-color);display:block;font-size:.64rem;font-style:italic;margin:.5em 0}.md-search-result mark{background-color:initial;color:var(--md-accent-fg-color);text-decoration:underline}.md-select{position:relative;z-index:1}.md-select__inner{background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color);left:50%;margin-top:.2rem;max-height:0;opacity:0;position:absolute;top:calc(100% - .2rem);transform:translate3d(-50%,.3rem,0);transition:transform .25s 375ms,opacity .25s .25s,max-height 0ms .5s}.md-select:focus-within .md-select__inner,.md-select:hover .md-select__inner{max-height:10rem;opacity:1;transform:translate3d(-50%,0,0);transition:transform .25s cubic-bezier(.1,.7,.1,1),opacity .25s,max-height 0ms}.md-select__inner:after{border-bottom:.2rem solid #0000;border-bottom-color:var(--md-default-bg-color);border-left:.2rem solid #0000;border-right:.2rem solid #0000;border-top:0;content:"";height:0;left:50%;margin-left:-.2rem;margin-top:-.2rem;position:absolute;top:0;width:0}.md-select__list{border-radius:.1rem;font-size:.8rem;list-style-type:none;margin:0;max-height:inherit;overflow:auto;padding:0}.md-select__item{line-height:1.8rem}[dir=ltr] .md-select__link{padding-left:.6rem;padding-right:1.2rem}[dir=rtl] .md-select__link{padding-left:1.2rem;padding-right:.6rem}.md-select__link{cursor:pointer;display:block;outline:none;scroll-snap-align:start;transition:background-color .25s,color .25s;width:100%}.md-select__link:focus,.md-select__link:hover{color:var(--md-accent-fg-color)}.md-select__link:focus{background-color:var(--md-default-fg-color--lightest)}.md-sidebar{align-self:flex-start;flex-shrink:0;padding:1.2rem 0;position:sticky;top:2.4rem;width:12.1rem}@media print{.md-sidebar{display:none}}@media screen and (max-width:76.234375em){[dir=ltr] .md-sidebar--primary{left:-12.1rem}[dir=rtl] .md-sidebar--primary{right:-12.1rem}.md-sidebar--primary{background-color:var(--md-default-bg-color);display:block;height:100%;position:fixed;top:0;transform:translateX(0);transition:transform .25s cubic-bezier(.4,0,.2,1),box-shadow .25s;width:12.1rem;z-index:5}[data-md-toggle=drawer]:checked~.md-container .md-sidebar--primary{box-shadow:var(--md-shadow-z3);transform:translateX(12.1rem)}[dir=rtl] [data-md-toggle=drawer]:checked~.md-container .md-sidebar--primary{transform:translateX(-12.1rem)}.md-sidebar--primary .md-sidebar__scrollwrap{bottom:0;left:0;margin:0;overflow:hidden;position:absolute;right:0;scroll-snap-type:none;top:0}}@media screen and (min-width:76.25em){.md-sidebar{height:0}.no-js .md-sidebar{height:auto}.md-header--lifted~.md-container .md-sidebar{top:4.8rem}}.md-sidebar--secondary{display:none;order:2}@media screen and (min-width:60em){.md-sidebar--secondary{height:0}.no-js .md-sidebar--secondary{height:auto}.md-sidebar--secondary:not([hidden]){display:block}.md-sidebar--secondary .md-sidebar__scrollwrap{touch-action:pan-y}}.md-sidebar__scrollwrap{-webkit-backface-visibility:hidden;backface-visibility:hidden;margin:0 .2rem;overflow-y:auto;scrollbar-color:var(--md-default-fg-color--lighter) #0000}@media screen and (min-width:60em){.md-sidebar__scrollwrap{scrollbar-gutter:stable;scrollbar-width:thin}}.md-sidebar__scrollwrap::-webkit-scrollbar{height:.2rem;width:.2rem}.md-sidebar__scrollwrap:focus-within,.md-sidebar__scrollwrap:hover{scrollbar-color:var(--md-accent-fg-color) #0000}.md-sidebar__scrollwrap:focus-within::-webkit-scrollbar-thumb,.md-sidebar__scrollwrap:hover::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-sidebar__scrollwrap:focus-within::-webkit-scrollbar-thumb:hover,.md-sidebar__scrollwrap:hover::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}@supports selector(::-webkit-scrollbar){.md-sidebar__scrollwrap{scrollbar-gutter:auto}[dir=ltr] .md-sidebar__inner{padding-right:calc(100% - 11.5rem)}[dir=rtl] .md-sidebar__inner{padding-left:calc(100% - 11.5rem)}}@media screen and (max-width:76.234375em){.md-overlay{background-color:#0000008a;height:0;opacity:0;position:fixed;top:0;transition:width 0ms .25s,height 0ms .25s,opacity .25s;width:0;z-index:5}[data-md-toggle=drawer]:checked~.md-overlay{height:100%;opacity:1;transition:width 0ms,height 0ms,opacity .25s;width:100%}}@keyframes facts{0%{height:0}to{height:.65rem}}@keyframes fact{0%{opacity:0;transform:translateY(100%)}50%{opacity:0}to{opacity:1;transform:translateY(0)}}:root{--md-source-forks-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0M5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0m6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5m-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0"/></svg>');--md-source-repositories-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M2 2.5A2.5 2.5 0 0 1 4.5 0h8.75a.75.75 0 0 1 .75.75v12.5a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h1.75v-2h-8a1 1 0 0 0-.714 1.7.75.75 0 1 1-1.072 1.05A2.5 2.5 0 0 1 2 11.5Zm10.5-1h-8a1 1 0 0 0-1 1v6.708A2.5 2.5 0 0 1 4.5 9h8ZM5 12.25a.25.25 0 0 1 .25-.25h3.5a.25.25 0 0 1 .25.25v3.25a.25.25 0 0 1-.4.2l-1.45-1.087a.25.25 0 0 0-.3 0L5.4 15.7a.25.25 0 0 1-.4-.2Z"/></svg>');--md-source-stars-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25m0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41z"/></svg>');--md-source-version-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.75 1.75 0 0 1 1 7.775m1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2"/></svg>')}.md-source{-webkit-backface-visibility:hidden;backface-visibility:hidden;display:block;font-size:.65rem;line-height:1.2;outline-color:var(--md-accent-fg-color);transition:opacity .25s;white-space:nowrap}.md-source:hover{opacity:.7}.md-source__icon{display:inline-block;height:2.4rem;vertical-align:middle;width:2rem}[dir=ltr] .md-source__icon svg{margin-left:.6rem}[dir=rtl] .md-source__icon svg{margin-right:.6rem}.md-source__icon svg{margin-top:.6rem}[dir=ltr] .md-source__icon+.md-source__repository{padding-left:2rem}[dir=rtl] .md-source__icon+.md-source__repository{padding-right:2rem}[dir=ltr] .md-source__icon+.md-source__repository{margin-left:-2rem}[dir=rtl] .md-source__icon+.md-source__repository{margin-right:-2rem}[dir=ltr] .md-source__repository{margin-left:.6rem}[dir=rtl] .md-source__repository{margin-right:.6rem}.md-source__repository{display:inline-block;max-width:calc(100% - 1.2rem);overflow:hidden;text-overflow:ellipsis;vertical-align:middle}.md-source__facts{display:flex;font-size:.55rem;gap:.4rem;list-style-type:none;margin:.1rem 0 0;opacity:.75;overflow:hidden;padding:0;width:100%}.md-source__repository--active .md-source__facts{animation:facts .25s ease-in}.md-source__fact{overflow:hidden;text-overflow:ellipsis}.md-source__repository--active .md-source__fact{animation:fact .4s ease-out}[dir=ltr] .md-source__fact:before{margin-right:.1rem}[dir=rtl] .md-source__fact:before{margin-left:.1rem}.md-source__fact:before{background-color:currentcolor;content:"";display:inline-block;height:.6rem;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;vertical-align:text-top;width:.6rem}.md-source__fact:nth-child(1n+2){flex-shrink:0}.md-source__fact--version:before{-webkit-mask-image:var(--md-source-version-icon);mask-image:var(--md-source-version-icon)}.md-source__fact--stars:before{-webkit-mask-image:var(--md-source-stars-icon);mask-image:var(--md-source-stars-icon)}.md-source__fact--forks:before{-webkit-mask-image:var(--md-source-forks-icon);mask-image:var(--md-source-forks-icon)}.md-source__fact--repositories:before{-webkit-mask-image:var(--md-source-repositories-icon);mask-image:var(--md-source-repositories-icon)}.md-source-file{margin:1em 0}[dir=ltr] .md-source-file__fact{margin-right:.6rem}[dir=rtl] .md-source-file__fact{margin-left:.6rem}.md-source-file__fact{align-items:center;color:var(--md-default-fg-color--light);display:inline-flex;font-size:.68rem;gap:.3rem}.md-source-file__fact .md-icon{flex-shrink:0;margin-bottom:.05rem}[dir=ltr] .md-source-file__fact .md-author{float:left}[dir=rtl] .md-source-file__fact .md-author{float:right}.md-source-file__fact .md-author{margin-right:.2rem}.md-source-file__fact svg{width:.9rem}:root{--md-status:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11 9h2V7h-2m1 13c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8m0-18A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2m-1 15h2v-6h-2z"/></svg>');--md-status--new:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m23 12-2.44-2.78.34-3.68-3.61-.82-1.89-3.18L12 3 8.6 1.54 6.71 4.72l-3.61.81.34 3.68L1 12l2.44 2.78-.34 3.69 3.61.82 1.89 3.18L12 21l3.4 1.46 1.89-3.18 3.61-.82-.34-3.68zm-10 5h-2v-2h2zm0-4h-2V7h2z"/></svg>');--md-status--deprecated:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9 3v1H4v2h1v13a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V6h1V4h-5V3zm0 5h2v9H9zm4 0h2v9h-2z"/></svg>');--md-status--encrypted:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5zm0 6c1.4 0 2.8 1.1 2.8 2.5V11c.6 0 1.2.6 1.2 1.3v3.5c0 .6-.6 1.2-1.3 1.2H9.2c-.6 0-1.2-.6-1.2-1.3v-3.5c0-.6.6-1.2 1.2-1.2V9.5C9.2 8.1 10.6 7 12 7m0 1.2c-.8 0-1.5.5-1.5 1.3V11h3V9.5c0-.8-.7-1.3-1.5-1.3"/></svg>')}.md-status:after{background-color:var(--md-default-fg-color--light);content:"";display:inline-block;height:1.125em;-webkit-mask-image:var(--md-status);mask-image:var(--md-status);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;vertical-align:text-bottom;width:1.125em}.md-status:hover:after{background-color:currentcolor}.md-status--new:after{-webkit-mask-image:var(--md-status--new);mask-image:var(--md-status--new)}.md-status--deprecated:after{-webkit-mask-image:var(--md-status--deprecated);mask-image:var(--md-status--deprecated)}.md-status--encrypted:after{-webkit-mask-image:var(--md-status--encrypted);mask-image:var(--md-status--encrypted)}.md-tabs{background-color:var(--md-primary-fg-color);color:var(--md-primary-bg-color);display:block;line-height:1.3;overflow:auto;width:100%;z-index:3}@media print{.md-tabs{display:none}}@media screen and (max-width:76.234375em){.md-tabs{display:none}}.md-tabs[hidden]{pointer-events:none}[dir=ltr] .md-tabs__list{margin-left:.2rem}[dir=rtl] .md-tabs__list{margin-right:.2rem}.md-tabs__list{contain:content;display:flex;list-style:none;margin:0;overflow:auto;padding:0;scrollbar-width:none;white-space:nowrap}.md-tabs__list::-webkit-scrollbar{display:none}.md-tabs__item{height:2.4rem;padding-left:.6rem;padding-right:.6rem}.md-tabs__item--active .md-tabs__link{color:inherit;opacity:1}.md-tabs__link{-webkit-backface-visibility:hidden;backface-visibility:hidden;display:flex;font-size:.7rem;margin-top:.8rem;opacity:.7;outline-color:var(--md-accent-fg-color);outline-offset:.2rem;transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .25s}.md-tabs__link:focus,.md-tabs__link:hover{color:inherit;opacity:1}[dir=ltr] .md-tabs__link svg{margin-right:.4rem}[dir=rtl] .md-tabs__link svg{margin-left:.4rem}.md-tabs__link svg{fill:currentcolor;height:1.3em}.md-tabs__item:nth-child(2) .md-tabs__link{transition-delay:20ms}.md-tabs__item:nth-child(3) .md-tabs__link{transition-delay:40ms}.md-tabs__item:nth-child(4) .md-tabs__link{transition-delay:60ms}.md-tabs__item:nth-child(5) .md-tabs__link{transition-delay:80ms}.md-tabs__item:nth-child(6) .md-tabs__link{transition-delay:.1s}.md-tabs__item:nth-child(7) .md-tabs__link{transition-delay:.12s}.md-tabs__item:nth-child(8) .md-tabs__link{transition-delay:.14s}.md-tabs__item:nth-child(9) .md-tabs__link{transition-delay:.16s}.md-tabs__item:nth-child(10) .md-tabs__link{transition-delay:.18s}.md-tabs__item:nth-child(11) .md-tabs__link{transition-delay:.2s}.md-tabs__item:nth-child(12) .md-tabs__link{transition-delay:.22s}.md-tabs__item:nth-child(13) .md-tabs__link{transition-delay:.24s}.md-tabs__item:nth-child(14) .md-tabs__link{transition-delay:.26s}.md-tabs__item:nth-child(15) .md-tabs__link{transition-delay:.28s}.md-tabs__item:nth-child(16) .md-tabs__link{transition-delay:.3s}.md-tabs[hidden] .md-tabs__link{opacity:0;transform:translateY(50%);transition:transform 0ms .1s,opacity .1s}:root{--md-tag-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m5.41 21 .71-4h-4l.35-2h4l1.06-6h-4l.35-2h4l.71-4h2l-.71 4h6l.71-4h2l-.71 4h4l-.35 2h-4l-1.06 6h4l-.35 2h-4l-.71 4h-2l.71-4h-6l-.71 4zM9.53 9l-1.06 6h6l1.06-6z"/></svg>')}.md-typeset .md-tags:not([hidden]){display:inline-flex;flex-wrap:wrap;gap:.5em;margin-bottom:.75em;margin-top:-.125em}.md-typeset .md-tag{align-items:center;background:var(--md-default-fg-color--lightest);border-radius:2.4rem;display:inline-flex;font-size:.64rem;font-size:min(.8em,.64rem);font-weight:700;gap:.5em;letter-spacing:normal;line-height:1.6;padding:.3125em .78125em}.md-typeset .md-tag[href]{-webkit-tap-highlight-color:transparent;color:inherit;outline:none;transition:color 125ms,background-color 125ms}.md-typeset .md-tag[href]:focus,.md-typeset .md-tag[href]:hover{background-color:var(--md-accent-fg-color);color:var(--md-accent-bg-color)}[id]>.md-typeset .md-tag{vertical-align:text-top}.md-typeset .md-tag-shadow{opacity:.5}.md-typeset .md-tag-icon:before{background-color:var(--md-default-fg-color--lighter);content:"";display:inline-block;height:1.2em;-webkit-mask-image:var(--md-tag-icon);mask-image:var(--md-tag-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:background-color 125ms;vertical-align:text-bottom;width:1.2em}.md-typeset .md-tag-icon[href]:focus:before,.md-typeset .md-tag-icon[href]:hover:before{background-color:var(--md-accent-bg-color)}@keyframes pulse{0%{transform:scale(.95)}75%{transform:scale(1)}to{transform:scale(.95)}}:root{--md-annotation-bg-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 2A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2"/></svg>');--md-annotation-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M17 13h-4v4h-2v-4H7v-2h4V7h2v4h4m-5-9A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2"/></svg>')}.md-tooltip{-webkit-backface-visibility:hidden;backface-visibility:hidden;background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color);font-family:var(--md-text-font-family);left:clamp(var(--md-tooltip-0,0rem) + .8rem,var(--md-tooltip-x),100vw + var(--md-tooltip-0,0rem) + .8rem - var(--md-tooltip-width) - 2 * .8rem);max-width:calc(100vw - 1.6rem);opacity:0;position:absolute;top:var(--md-tooltip-y);transform:translateY(-.4rem);transition:transform 0ms .25s,opacity .25s,z-index .25s;width:var(--md-tooltip-width);z-index:0}.md-tooltip--active{opacity:1;transform:translateY(0);transition:transform .25s cubic-bezier(.1,.7,.1,1),opacity .25s,z-index 0ms;z-index:2}.md-tooltip--inline{font-weight:700;-webkit-user-select:none;user-select:none;width:auto}.md-tooltip--inline:not(.md-tooltip--active){transform:translateY(.2rem) scale(.9)}.md-tooltip--inline .md-tooltip__inner{font-size:.5rem;padding:.2rem .4rem}[hidden]+.md-tooltip--inline{display:none}.focus-visible>.md-tooltip,.md-tooltip:target{outline:var(--md-accent-fg-color) auto}.md-tooltip__inner{font-size:.64rem;padding:.8rem}.md-tooltip__inner.md-typeset>:first-child{margin-top:0}.md-tooltip__inner.md-typeset>:last-child{margin-bottom:0}.md-annotation{font-style:normal;font-weight:400;outline:none;text-align:initial;vertical-align:text-bottom;white-space:normal}[dir=rtl] .md-annotation{direction:rtl}code .md-annotation{font-family:var(--md-code-font-family);font-size:inherit}.md-annotation:not([hidden]){display:inline-block;line-height:1.25}.md-annotation__index{border-radius:.01px;cursor:pointer;display:inline-block;margin-left:.4ch;margin-right:.4ch;outline:none;overflow:hidden;position:relative;-webkit-user-select:none;user-select:none;vertical-align:text-top;z-index:0}.md-annotation .md-annotation__index{transition:z-index .25s}@media screen{.md-annotation__index{width:2.2ch}[data-md-visible]>.md-annotation__index{animation:pulse 2s infinite}.md-annotation__index:before{background:var(--md-default-bg-color);-webkit-mask-image:var(--md-annotation-bg-icon);mask-image:var(--md-annotation-bg-icon)}.md-annotation__index:after,.md-annotation__index:before{content:"";height:2.2ch;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:-.1ch;width:2.2ch;z-index:-1}.md-annotation__index:after{background-color:var(--md-default-fg-color--lighter);-webkit-mask-image:var(--md-annotation-icon);mask-image:var(--md-annotation-icon);transform:scale(1.0001);transition:background-color .25s,transform .25s}.md-tooltip--active+.md-annotation__index:after{transform:rotate(45deg)}.md-tooltip--active+.md-annotation__index:after,:hover>.md-annotation__index:after{background-color:var(--md-accent-fg-color)}}.md-tooltip--active+.md-annotation__index{animation-play-state:paused;transition-duration:0ms;z-index:2}.md-annotation__index [data-md-annotation-id]{display:inline-block}@media print{.md-annotation__index [data-md-annotation-id]{background:var(--md-default-fg-color--lighter);border-radius:2ch;color:var(--md-default-bg-color);font-weight:700;padding:0 .6ch;white-space:nowrap}.md-annotation__index [data-md-annotation-id]:after{content:attr(data-md-annotation-id)}}.md-typeset .md-annotation-list{counter-reset:annotation;list-style:none!important}.md-typeset .md-annotation-list li{position:relative}[dir=ltr] .md-typeset .md-annotation-list li:before{left:-2.125em}[dir=rtl] .md-typeset .md-annotation-list li:before{right:-2.125em}.md-typeset .md-annotation-list li:before{background:var(--md-default-fg-color--lighter);border-radius:2ch;color:var(--md-default-bg-color);content:counter(annotation);counter-increment:annotation;font-size:.8875em;font-weight:700;height:2ch;line-height:1.25;min-width:2ch;padding:0 .6ch;position:absolute;text-align:center;top:.25em}:root{--md-tooltip-width:20rem;--md-tooltip-tail:0.3rem}.md-tooltip2{-webkit-backface-visibility:hidden;backface-visibility:hidden;color:var(--md-default-fg-color);font-family:var(--md-text-font-family);opacity:0;pointer-events:none;position:absolute;top:calc(var(--md-tooltip-host-y) + var(--md-tooltip-y));transform:translateY(-.4rem);transform-origin:calc(var(--md-tooltip-host-x) + var(--md-tooltip-x)) 0;transition:transform 0ms .25s,opacity .25s,z-index .25s;width:100%;z-index:0}.md-tooltip2:before{border-left:var(--md-tooltip-tail) solid #0000;border-right:var(--md-tooltip-tail) solid #0000;content:"";display:block;left:clamp(1.5 * .8rem,var(--md-tooltip-host-x) + var(--md-tooltip-x) - var(--md-tooltip-tail),100vw - 2 * var(--md-tooltip-tail) - 1.5 * .8rem);position:absolute;z-index:1}.md-tooltip2--top:before{border-top:var(--md-tooltip-tail) solid var(--md-default-bg-color);bottom:calc(var(--md-tooltip-tail)*-1 + .025rem);filter:drop-shadow(0 1px 0 hsla(0,0%,0%,.05))}.md-tooltip2--bottom:before{border-bottom:var(--md-tooltip-tail) solid var(--md-default-bg-color);filter:drop-shadow(0 -1px 0 hsla(0,0%,0%,.05));top:calc(var(--md-tooltip-tail)*-1 + .025rem)}.md-tooltip2--active{opacity:1;transform:translateY(0);transition:transform .4s cubic-bezier(0,1,.5,1),opacity .25s,z-index 0ms;z-index:2}.md-tooltip2__inner{scrollbar-gutter:stable;background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);left:clamp(.8rem,var(--md-tooltip-host-x) - .8rem,100vw - var(--md-tooltip-width) - .8rem);max-height:40vh;max-width:calc(100vw - 1.6rem);position:relative;scrollbar-width:thin}.md-tooltip2__inner::-webkit-scrollbar{height:.2rem;width:.2rem}.md-tooltip2__inner::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-tooltip2__inner::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}[role=dialog]>.md-tooltip2__inner{font-size:.64rem;overflow:auto;padding:0 .8rem;pointer-events:auto;width:var(--md-tooltip-width)}[role=dialog]>.md-tooltip2__inner:after,[role=dialog]>.md-tooltip2__inner:before{content:"";display:block;height:.8rem;position:sticky;width:100%;z-index:10}[role=dialog]>.md-tooltip2__inner:before{background:linear-gradient(var(--md-default-bg-color),#0000 75%);top:0}[role=dialog]>.md-tooltip2__inner:after{background:linear-gradient(#0000,var(--md-default-bg-color) 75%);bottom:0}[role=tooltip]>.md-tooltip2__inner{font-size:.5rem;font-weight:700;left:clamp(.8rem,var(--md-tooltip-host-x) + var(--md-tooltip-x) - var(--md-tooltip-width)/2,100vw - var(--md-tooltip-width) - .8rem);max-width:min(100vw - 2 * .8rem,400px);padding:.2rem .4rem;-webkit-user-select:none;user-select:none;width:-moz-fit-content;width:fit-content}.md-tooltip2__inner.md-typeset>:first-child{margin-top:0}.md-tooltip2__inner.md-typeset>:last-child{margin-bottom:0}[dir=ltr] .md-top{margin-left:50%}[dir=rtl] .md-top{margin-right:50%}.md-top{background-color:var(--md-default-bg-color);border-radius:1.6rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color--light);cursor:pointer;display:block;font-size:.7rem;outline:none;padding:.4rem .8rem;position:fixed;top:3.2rem;transform:translate(-50%);transition:color 125ms,background-color 125ms,transform 125ms cubic-bezier(.4,0,.2,1),opacity 125ms;z-index:2}@media print{.md-top{display:none}}[dir=rtl] .md-top{transform:translate(50%)}.md-top[hidden]{opacity:0;pointer-events:none;transform:translate(-50%,.2rem);transition-duration:0ms}[dir=rtl] .md-top[hidden]{transform:translate(50%,.2rem)}.md-top:focus,.md-top:hover{background-color:var(--md-accent-fg-color);color:var(--md-accent-bg-color)}.md-top svg{display:inline-block;vertical-align:-.5em}@keyframes hoverfix{0%{pointer-events:none}}:root{--md-version-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!--! Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2024 Fonticons, Inc.--><path d="M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9S301 191.9 288 191.9L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z"/></svg>')}.md-version{flex-shrink:0;font-size:.8rem;height:2.4rem}[dir=ltr] .md-version__current{margin-left:1.4rem;margin-right:.4rem}[dir=rtl] .md-version__current{margin-left:.4rem;margin-right:1.4rem}.md-version__current{color:inherit;cursor:pointer;outline:none;position:relative;top:.05rem}[dir=ltr] .md-version__current:after{margin-left:.4rem}[dir=rtl] .md-version__current:after{margin-right:.4rem}.md-version__current:after{background-color:currentcolor;content:"";display:inline-block;height:.6rem;-webkit-mask-image:var(--md-version-icon);mask-image:var(--md-version-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:.4rem}.md-version__alias{margin-left:.3rem;opacity:.7}.md-version__list{background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color);list-style-type:none;margin:.2rem .8rem;max-height:0;opacity:0;overflow:auto;padding:0;position:absolute;scroll-snap-type:y mandatory;top:.15rem;transition:max-height 0ms .5s,opacity .25s .25s;z-index:3}.md-version:focus-within .md-version__list,.md-version:hover .md-version__list{max-height:10rem;opacity:1;transition:max-height 0ms,opacity .25s}@media (hover:none),(pointer:coarse){.md-version:hover .md-version__list{animation:hoverfix .25s forwards}.md-version:focus-within .md-version__list{animation:none}}.md-version__item{line-height:1.8rem}[dir=ltr] .md-version__link{padding-left:.6rem;padding-right:1.2rem}[dir=rtl] .md-version__link{padding-left:1.2rem;padding-right:.6rem}.md-version__link{cursor:pointer;display:block;outline:none;scroll-snap-align:start;transition:color .25s,background-color .25s;white-space:nowrap;width:100%}.md-version__link:focus,.md-version__link:hover{color:var(--md-accent-fg-color)}.md-version__link:focus{background-color:var(--md-default-fg-color--lightest)}:root{--md-admonition-icon--note:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m3.1 5.07c.14 0 .28.05.4.16l1.27 1.27c.23.22.23.57 0 .78l-1 1-2.05-2.05 1-1c.1-.11.24-.16.38-.16m-1.97 1.74 2.06 2.06-6.06 6.06H7.07v-2.06z"/></svg>');--md-admonition-icon--abstract:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M17 9H7V7h10m0 6H7v-2h10m-3 6H7v-2h7M12 3a1 1 0 0 1 1 1 1 1 0 0 1-1 1 1 1 0 0 1-1-1 1 1 0 0 1 1-1m7 0h-4.18C14.4 1.84 13.3 1 12 1s-2.4.84-2.82 2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2"/></svg>');--md-admonition-icon--info:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13 9h-2V7h2m0 10h-2v-6h2m-1-9A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2"/></svg>');--md-admonition-icon--tip:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M17.66 11.2c-.23-.3-.51-.56-.77-.82-.67-.6-1.43-1.03-2.07-1.66C13.33 7.26 13 4.85 13.95 3c-.95.23-1.78.75-2.49 1.32-2.59 2.08-3.61 5.75-2.39 8.9.04.1.08.2.08.33 0 .22-.15.42-.35.5-.23.1-.47.04-.66-.12a.6.6 0 0 1-.14-.17c-1.13-1.43-1.31-3.48-.55-5.12C5.78 10 4.87 12.3 5 14.47c.06.5.12 1 .29 1.5.14.6.41 1.2.71 1.73 1.08 1.73 2.95 2.97 4.96 3.22 2.14.27 4.43-.12 6.07-1.6 1.83-1.66 2.47-4.32 1.53-6.6l-.13-.26c-.21-.46-.77-1.26-.77-1.26m-3.16 6.3c-.28.24-.74.5-1.1.6-1.12.4-2.24-.16-2.9-.82 1.19-.28 1.9-1.16 2.11-2.05.17-.8-.15-1.46-.28-2.23-.12-.74-.1-1.37.17-2.06.19.38.39.76.63 1.06.77 1 1.98 1.44 2.24 2.8.04.14.06.28.06.43.03.82-.33 1.72-.93 2.27"/></svg>');--md-admonition-icon--success:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M21 7 9 19l-5.5-5.5 1.41-1.41L9 16.17 19.59 5.59z"/></svg>');--md-admonition-icon--question:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m15.07 11.25-.9.92C13.45 12.89 13 13.5 13 15h-2v-.5c0-1.11.45-2.11 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41a2 2 0 0 0-2-2 2 2 0 0 0-2 2H8a4 4 0 0 1 4-4 4 4 0 0 1 4 4 3.2 3.2 0 0 1-.93 2.25M13 19h-2v-2h2M12 2A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10c0-5.53-4.5-10-10-10"/></svg>');--md-admonition-icon--warning:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13 14h-2V9h2m0 9h-2v-2h2M1 21h22L12 2z"/></svg>');--md-admonition-icon--failure:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>');--md-admonition-icon--danger:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m11.5 20 4.86-9.73H13V4l-5 9.73h3.5zM12 2c2.75 0 5.1 1 7.05 2.95S22 9.25 22 12s-1 5.1-2.95 7.05S14.75 22 12 22s-5.1-1-7.05-2.95S2 14.75 2 12s1-5.1 2.95-7.05S9.25 2 12 2"/></svg>');--md-admonition-icon--bug:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11 13h2v1h-2zm10-8v6c0 5.5-3.8 10.7-9 12-5.2-1.3-9-6.5-9-12V5l9-4zm-4 5h-2.2c-.2-.6-.6-1.1-1.1-1.5l1.2-1.2-.7-.7L12.8 8H12c-.2 0-.5 0-.7.1L9.9 6.6l-.8.8 1.2 1.2c-.5.3-.9.8-1.1 1.4H7v1h2v1H7v1h2v1H7v1h2.2c.4 1.2 1.5 2 2.8 2s2.4-.8 2.8-2H17v-1h-2v-1h2v-1h-2v-1h2zm-6 2h2v-1h-2z"/></svg>');--md-admonition-icon--example:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M7 2v2h1v14a4 4 0 0 0 4 4 4 4 0 0 0 4-4V4h1V2zm4 14c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1m2-4c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1m1-5h-4V4h4z"/></svg>');--md-admonition-icon--quote:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14 17h3l2-4V7h-6v6h3M6 17h3l2-4V7H5v6h3z"/></svg>')}.md-typeset .admonition,.md-typeset details{background-color:var(--md-admonition-bg-color);border:.075rem solid #448aff;border-radius:.2rem;box-shadow:var(--md-shadow-z1);color:var(--md-admonition-fg-color);display:flow-root;font-size:.64rem;margin:1.5625em 0;padding:0 .6rem;page-break-inside:avoid;transition:box-shadow 125ms}@media print{.md-typeset .admonition,.md-typeset details{box-shadow:none}}.md-typeset .admonition:focus-within,.md-typeset details:focus-within{box-shadow:0 0 0 .2rem #448aff1a}.md-typeset .admonition>*,.md-typeset details>*{box-sizing:border-box}.md-typeset .admonition .admonition,.md-typeset .admonition details,.md-typeset details .admonition,.md-typeset details details{margin-bottom:1em;margin-top:1em}.md-typeset .admonition .md-typeset__scrollwrap,.md-typeset details .md-typeset__scrollwrap{margin:1em -.6rem}.md-typeset .admonition .md-typeset__table,.md-typeset details .md-typeset__table{padding:0 .6rem}.md-typeset .admonition>.tabbed-set:only-child,.md-typeset details>.tabbed-set:only-child{margin-top:0}html .md-typeset .admonition>:last-child,html .md-typeset details>:last-child{margin-bottom:.6rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary{padding-left:2rem;padding-right:.6rem}[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{padding-left:.6rem;padding-right:2rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary{border-left-width:.2rem}[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{border-right-width:.2rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary{border-top-left-radius:.1rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary,[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{border-top-right-radius:.1rem}[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{border-top-left-radius:.1rem}.md-typeset .admonition-title,.md-typeset summary{background-color:#448aff1a;border:none;font-weight:700;margin:0 -.6rem;padding-bottom:.4rem;padding-top:.4rem;position:relative}html .md-typeset .admonition-title:last-child,html .md-typeset summary:last-child{margin-bottom:0}[dir=ltr] .md-typeset .admonition-title:before,[dir=ltr] .md-typeset summary:before{left:.6rem}[dir=rtl] .md-typeset .admonition-title:before,[dir=rtl] .md-typeset summary:before{right:.6rem}.md-typeset .admonition-title:before,.md-typeset summary:before{background-color:#448aff;content:"";height:1rem;-webkit-mask-image:var(--md-admonition-icon--note);mask-image:var(--md-admonition-icon--note);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:.625em;width:1rem}.md-typeset .admonition-title code,.md-typeset summary code{box-shadow:0 0 0 .05rem var(--md-default-fg-color--lightest)}.md-typeset .admonition.note,.md-typeset details.note{border-color:#448aff}.md-typeset .admonition.note:focus-within,.md-typeset details.note:focus-within{box-shadow:0 0 0 .2rem #448aff1a}.md-typeset .note>.admonition-title,.md-typeset .note>summary{background-color:#448aff1a}.md-typeset .note>.admonition-title:before,.md-typeset .note>summary:before{background-color:#448aff;-webkit-mask-image:var(--md-admonition-icon--note);mask-image:var(--md-admonition-icon--note)}.md-typeset .note>.admonition-title:after,.md-typeset .note>summary:after{color:#448aff}.md-typeset .admonition.abstract,.md-typeset details.abstract{border-color:#00b0ff}.md-typeset .admonition.abstract:focus-within,.md-typeset details.abstract:focus-within{box-shadow:0 0 0 .2rem #00b0ff1a}.md-typeset .abstract>.admonition-title,.md-typeset .abstract>summary{background-color:#00b0ff1a}.md-typeset .abstract>.admonition-title:before,.md-typeset .abstract>summary:before{background-color:#00b0ff;-webkit-mask-image:var(--md-admonition-icon--abstract);mask-image:var(--md-admonition-icon--abstract)}.md-typeset .abstract>.admonition-title:after,.md-typeset .abstract>summary:after{color:#00b0ff}.md-typeset .admonition.info,.md-typeset details.info{border-color:#00b8d4}.md-typeset .admonition.info:focus-within,.md-typeset details.info:focus-within{box-shadow:0 0 0 .2rem #00b8d41a}.md-typeset .info>.admonition-title,.md-typeset .info>summary{background-color:#00b8d41a}.md-typeset .info>.admonition-title:before,.md-typeset .info>summary:before{background-color:#00b8d4;-webkit-mask-image:var(--md-admonition-icon--info);mask-image:var(--md-admonition-icon--info)}.md-typeset .info>.admonition-title:after,.md-typeset .info>summary:after{color:#00b8d4}.md-typeset .admonition.tip,.md-typeset details.tip{border-color:#00bfa5}.md-typeset .admonition.tip:focus-within,.md-typeset details.tip:focus-within{box-shadow:0 0 0 .2rem #00bfa51a}.md-typeset .tip>.admonition-title,.md-typeset .tip>summary{background-color:#00bfa51a}.md-typeset .tip>.admonition-title:before,.md-typeset .tip>summary:before{background-color:#00bfa5;-webkit-mask-image:var(--md-admonition-icon--tip);mask-image:var(--md-admonition-icon--tip)}.md-typeset .tip>.admonition-title:after,.md-typeset .tip>summary:after{color:#00bfa5}.md-typeset .admonition.success,.md-typeset details.success{border-color:#00c853}.md-typeset .admonition.success:focus-within,.md-typeset details.success:focus-within{box-shadow:0 0 0 .2rem #00c8531a}.md-typeset .success>.admonition-title,.md-typeset .success>summary{background-color:#00c8531a}.md-typeset .success>.admonition-title:before,.md-typeset .success>summary:before{background-color:#00c853;-webkit-mask-image:var(--md-admonition-icon--success);mask-image:var(--md-admonition-icon--success)}.md-typeset .success>.admonition-title:after,.md-typeset .success>summary:after{color:#00c853}.md-typeset .admonition.question,.md-typeset details.question{border-color:#64dd17}.md-typeset .admonition.question:focus-within,.md-typeset details.question:focus-within{box-shadow:0 0 0 .2rem #64dd171a}.md-typeset .question>.admonition-title,.md-typeset .question>summary{background-color:#64dd171a}.md-typeset .question>.admonition-title:before,.md-typeset .question>summary:before{background-color:#64dd17;-webkit-mask-image:var(--md-admonition-icon--question);mask-image:var(--md-admonition-icon--question)}.md-typeset .question>.admonition-title:after,.md-typeset .question>summary:after{color:#64dd17}.md-typeset .admonition.warning,.md-typeset details.warning{border-color:#ff9100}.md-typeset .admonition.warning:focus-within,.md-typeset details.warning:focus-within{box-shadow:0 0 0 .2rem #ff91001a}.md-typeset .warning>.admonition-title,.md-typeset .warning>summary{background-color:#ff91001a}.md-typeset .warning>.admonition-title:before,.md-typeset .warning>summary:before{background-color:#ff9100;-webkit-mask-image:var(--md-admonition-icon--warning);mask-image:var(--md-admonition-icon--warning)}.md-typeset .warning>.admonition-title:after,.md-typeset .warning>summary:after{color:#ff9100}.md-typeset .admonition.failure,.md-typeset details.failure{border-color:#ff5252}.md-typeset .admonition.failure:focus-within,.md-typeset details.failure:focus-within{box-shadow:0 0 0 .2rem #ff52521a}.md-typeset .failure>.admonition-title,.md-typeset .failure>summary{background-color:#ff52521a}.md-typeset .failure>.admonition-title:before,.md-typeset .failure>summary:before{background-color:#ff5252;-webkit-mask-image:var(--md-admonition-icon--failure);mask-image:var(--md-admonition-icon--failure)}.md-typeset .failure>.admonition-title:after,.md-typeset .failure>summary:after{color:#ff5252}.md-typeset .admonition.danger,.md-typeset details.danger{border-color:#ff1744}.md-typeset .admonition.danger:focus-within,.md-typeset details.danger:focus-within{box-shadow:0 0 0 .2rem #ff17441a}.md-typeset .danger>.admonition-title,.md-typeset .danger>summary{background-color:#ff17441a}.md-typeset .danger>.admonition-title:before,.md-typeset .danger>summary:before{background-color:#ff1744;-webkit-mask-image:var(--md-admonition-icon--danger);mask-image:var(--md-admonition-icon--danger)}.md-typeset .danger>.admonition-title:after,.md-typeset .danger>summary:after{color:#ff1744}.md-typeset .admonition.bug,.md-typeset details.bug{border-color:#f50057}.md-typeset .admonition.bug:focus-within,.md-typeset details.bug:focus-within{box-shadow:0 0 0 .2rem #f500571a}.md-typeset .bug>.admonition-title,.md-typeset .bug>summary{background-color:#f500571a}.md-typeset .bug>.admonition-title:before,.md-typeset .bug>summary:before{background-color:#f50057;-webkit-mask-image:var(--md-admonition-icon--bug);mask-image:var(--md-admonition-icon--bug)}.md-typeset .bug>.admonition-title:after,.md-typeset .bug>summary:after{color:#f50057}.md-typeset .admonition.example,.md-typeset details.example{border-color:#7c4dff}.md-typeset .admonition.example:focus-within,.md-typeset details.example:focus-within{box-shadow:0 0 0 .2rem #7c4dff1a}.md-typeset .example>.admonition-title,.md-typeset .example>summary{background-color:#7c4dff1a}.md-typeset .example>.admonition-title:before,.md-typeset .example>summary:before{background-color:#7c4dff;-webkit-mask-image:var(--md-admonition-icon--example);mask-image:var(--md-admonition-icon--example)}.md-typeset .example>.admonition-title:after,.md-typeset .example>summary:after{color:#7c4dff}.md-typeset .admonition.quote,.md-typeset details.quote{border-color:#9e9e9e}.md-typeset .admonition.quote:focus-within,.md-typeset details.quote:focus-within{box-shadow:0 0 0 .2rem #9e9e9e1a}.md-typeset .quote>.admonition-title,.md-typeset .quote>summary{background-color:#9e9e9e1a}.md-typeset .quote>.admonition-title:before,.md-typeset .quote>summary:before{background-color:#9e9e9e;-webkit-mask-image:var(--md-admonition-icon--quote);mask-image:var(--md-admonition-icon--quote)}.md-typeset .quote>.admonition-title:after,.md-typeset .quote>summary:after{color:#9e9e9e}:root{--md-footnotes-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.42L5.83 13H21V7z"/></svg>')}.md-typeset .footnote{color:var(--md-default-fg-color--light);font-size:.64rem}[dir=ltr] .md-typeset .footnote>ol{margin-left:0}[dir=rtl] .md-typeset .footnote>ol{margin-right:0}.md-typeset .footnote>ol>li{transition:color 125ms}.md-typeset .footnote>ol>li:target{color:var(--md-default-fg-color)}.md-typeset .footnote>ol>li:focus-within .footnote-backref{opacity:1;transform:translateX(0);transition:none}.md-typeset .footnote>ol>li:hover .footnote-backref,.md-typeset .footnote>ol>li:target .footnote-backref{opacity:1;transform:translateX(0)}.md-typeset .footnote>ol>li>:first-child{margin-top:0}.md-typeset .footnote-ref{font-size:.75em;font-weight:700}html .md-typeset .footnote-ref{outline-offset:.1rem}.md-typeset [id^="fnref:"]:target>.footnote-ref{outline:auto}.md-typeset .footnote-backref{color:var(--md-typeset-a-color);display:inline-block;font-size:0;opacity:0;transform:translateX(.25rem);transition:color .25s,transform .25s .25s,opacity 125ms .25s;vertical-align:text-bottom}@media print{.md-typeset .footnote-backref{color:var(--md-typeset-a-color);opacity:1;transform:translateX(0)}}[dir=rtl] .md-typeset .footnote-backref{transform:translateX(-.25rem)}.md-typeset .footnote-backref:hover{color:var(--md-accent-fg-color)}.md-typeset .footnote-backref:before{background-color:currentcolor;content:"";display:inline-block;height:.8rem;-webkit-mask-image:var(--md-footnotes-icon);mask-image:var(--md-footnotes-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:.8rem}[dir=rtl] .md-typeset .footnote-backref:before{transform:scaleX(-1)}[dir=ltr] .md-typeset .headerlink{margin-left:.5rem}[dir=rtl] .md-typeset .headerlink{margin-right:.5rem}.md-typeset .headerlink{color:var(--md-default-fg-color--lighter);display:inline-block;opacity:0;transition:color .25s,opacity 125ms}@media print{.md-typeset .headerlink{display:none}}.md-typeset .headerlink:focus,.md-typeset :hover>.headerlink,.md-typeset :target>.headerlink{opacity:1;transition:color .25s,opacity 125ms}.md-typeset .headerlink:focus,.md-typeset .headerlink:hover,.md-typeset :target>.headerlink{color:var(--md-accent-fg-color)}.md-typeset :target{--md-scroll-margin:3.6rem;--md-scroll-offset:0rem;scroll-margin-top:calc(var(--md-scroll-margin) - var(--md-scroll-offset))}@media screen and (min-width:76.25em){.md-header--lifted~.md-container .md-typeset :target{--md-scroll-margin:6rem}}.md-typeset h1:target,.md-typeset h2:target,.md-typeset h3:target{--md-scroll-offset:0.2rem}.md-typeset h4:target{--md-scroll-offset:0.15rem}.md-typeset div.arithmatex{overflow:auto}@media screen and (max-width:44.984375em){.md-typeset div.arithmatex{margin:0 -.8rem}.md-typeset div.arithmatex>*{width:min-content}}.md-typeset div.arithmatex>*{margin-left:auto!important;margin-right:auto!important;padding:0 .8rem;touch-action:auto}.md-typeset div.arithmatex>* mjx-container{margin:0!important}.md-typeset div.arithmatex mjx-assistive-mml{height:0}.md-typeset del.critic{background-color:var(--md-typeset-del-color)}.md-typeset del.critic,.md-typeset ins.critic{-webkit-box-decoration-break:clone;box-decoration-break:clone}.md-typeset ins.critic{background-color:var(--md-typeset-ins-color)}.md-typeset .critic.comment{-webkit-box-decoration-break:clone;box-decoration-break:clone;color:var(--md-code-hl-comment-color)}.md-typeset .critic.comment:before{content:"/* "}.md-typeset .critic.comment:after{content:" */"}.md-typeset .critic.block{box-shadow:none;display:block;margin:1em 0;overflow:auto;padding-left:.8rem;padding-right:.8rem}.md-typeset .critic.block>:first-child{margin-top:.5em}.md-typeset .critic.block>:last-child{margin-bottom:.5em}:root{--md-details-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>')}.md-typeset details{display:flow-root;overflow:visible;padding-top:0}.md-typeset details[open]>summary:after{transform:rotate(90deg)}.md-typeset details:not([open]){box-shadow:none;padding-bottom:0}.md-typeset details:not([open])>summary{border-radius:.1rem}[dir=ltr] .md-typeset summary{padding-right:1.8rem}[dir=rtl] .md-typeset summary{padding-left:1.8rem}[dir=ltr] .md-typeset summary{border-top-left-radius:.1rem}[dir=ltr] .md-typeset summary,[dir=rtl] .md-typeset summary{border-top-right-radius:.1rem}[dir=rtl] .md-typeset summary{border-top-left-radius:.1rem}.md-typeset summary{cursor:pointer;display:block;min-height:1rem;overflow:hidden}.md-typeset summary.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-typeset summary:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}[dir=ltr] .md-typeset summary:after{right:.4rem}[dir=rtl] .md-typeset summary:after{left:.4rem}.md-typeset summary:after{background-color:currentcolor;content:"";height:1rem;-webkit-mask-image:var(--md-details-icon);mask-image:var(--md-details-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:.625em;transform:rotate(0deg);transition:transform .25s;width:1rem}[dir=rtl] .md-typeset summary:after{transform:rotate(180deg)}.md-typeset summary::marker{display:none}.md-typeset summary::-webkit-details-marker{display:none}.md-typeset .emojione,.md-typeset .gemoji,.md-typeset .twemoji{--md-icon-size:1.125em;display:inline-flex;height:var(--md-icon-size);vertical-align:text-top}.md-typeset .emojione svg,.md-typeset .gemoji svg,.md-typeset .twemoji svg{fill:currentcolor;max-height:100%;width:var(--md-icon-size)}.md-typeset .lg,.md-typeset .xl,.md-typeset .xxl,.md-typeset .xxxl{vertical-align:text-bottom}.md-typeset .middle{vertical-align:middle}.md-typeset .lg{--md-icon-size:1.5em}.md-typeset .xl{--md-icon-size:2.25em}.md-typeset .xxl{--md-icon-size:3em}.md-typeset .xxxl{--md-icon-size:4em}.highlight .o,.highlight .ow{color:var(--md-code-hl-operator-color)}.highlight .p{color:var(--md-code-hl-punctuation-color)}.highlight .cpf,.highlight .l,.highlight .s,.highlight .s1,.highlight .s2,.highlight .sb,.highlight .sc,.highlight .si,.highlight .ss{color:var(--md-code-hl-string-color)}.highlight .cp,.highlight .se,.highlight .sh,.highlight .sr,.highlight .sx{color:var(--md-code-hl-special-color)}.highlight .il,.highlight .m,.highlight .mb,.highlight .mf,.highlight .mh,.highlight .mi,.highlight .mo{color:var(--md-code-hl-number-color)}.highlight .k,.highlight .kd,.highlight .kn,.highlight .kp,.highlight .kr,.highlight .kt{color:var(--md-code-hl-keyword-color)}.highlight .kc,.highlight .n{color:var(--md-code-hl-name-color)}.highlight .bp,.highlight .nb,.highlight .no{color:var(--md-code-hl-constant-color)}.highlight .nc,.highlight .ne,.highlight .nf,.highlight .nn{color:var(--md-code-hl-function-color)}.highlight .nd,.highlight .ni,.highlight .nl,.highlight .nt{color:var(--md-code-hl-keyword-color)}.highlight .c,.highlight .c1,.highlight .ch,.highlight .cm,.highlight .cs,.highlight .sd{color:var(--md-code-hl-comment-color)}.highlight .na,.highlight .nv,.highlight .vc,.highlight .vg,.highlight .vi{color:var(--md-code-hl-variable-color)}.highlight .ge,.highlight .gh,.highlight .go,.highlight .gp,.highlight .gr,.highlight .gs,.highlight .gt,.highlight .gu{color:var(--md-code-hl-generic-color)}.highlight .gd,.highlight .gi{border-radius:.1rem;margin:0 -.125em;padding:0 .125em}.highlight .gd{background-color:var(--md-typeset-del-color)}.highlight .gi{background-color:var(--md-typeset-ins-color)}.highlight .hll{background-color:var(--md-code-hl-color--light);box-shadow:2px 0 0 0 var(--md-code-hl-color) inset;display:block;margin:0 -1.1764705882em;padding:0 1.1764705882em}.highlight span.filename{background-color:var(--md-code-bg-color);border-bottom:.05rem solid var(--md-default-fg-color--lightest);border-top-left-radius:.1rem;border-top-right-radius:.1rem;display:flow-root;font-size:.85em;font-weight:700;margin-top:1em;padding:.6617647059em 1.1764705882em;position:relative}.highlight span.filename+pre{margin-top:0}.highlight span.filename+pre>code{border-top-left-radius:0;border-top-right-radius:0}.highlight [data-linenos]:before{background-color:var(--md-code-bg-color);box-shadow:-.05rem 0 var(--md-default-fg-color--lightest) inset;color:var(--md-default-fg-color--light);content:attr(data-linenos);float:left;left:-1.1764705882em;margin-left:-1.1764705882em;margin-right:1.1764705882em;padding-left:1.1764705882em;position:sticky;-webkit-user-select:none;user-select:none;z-index:3}.highlight code a[id]{position:absolute;visibility:hidden}.highlight code[data-md-copying]{display:initial}.highlight code[data-md-copying] .hll{display:contents}.highlight code[data-md-copying] .md-annotation{display:none}.highlighttable{display:flow-root}.highlighttable tbody,.highlighttable td{display:block;padding:0}.highlighttable tr{display:flex}.highlighttable pre{margin:0}.highlighttable th.filename{flex-grow:1;padding:0;text-align:left}.highlighttable th.filename span.filename{margin-top:0}.highlighttable .linenos{background-color:var(--md-code-bg-color);border-bottom-left-radius:.1rem;border-top-left-radius:.1rem;font-size:.85em;padding:.7720588235em 0 .7720588235em 1.1764705882em;-webkit-user-select:none;user-select:none}.highlighttable .linenodiv{box-shadow:-.05rem 0 var(--md-default-fg-color--lightest) inset}.highlighttable .linenodiv pre{color:var(--md-default-fg-color--light);text-align:right}.highlighttable .linenodiv span[class]{padding-right:.5882352941em}.highlighttable .code{flex:1;min-width:0}.linenodiv a{color:inherit}.md-typeset .highlighttable{direction:ltr;margin:1em 0}.md-typeset .highlighttable>tbody>tr>.code>div>pre>code{border-bottom-left-radius:0;border-top-left-radius:0}.md-typeset .highlight+.result{border:.05rem solid var(--md-code-bg-color);border-bottom-left-radius:.1rem;border-bottom-right-radius:.1rem;border-top-width:.1rem;margin-top:-1.125em;overflow:visible;padding:0 1em}.md-typeset .highlight+.result:after{clear:both;content:"";display:block}@media screen and (max-width:44.984375em){.md-content__inner>.highlight{margin:1em -.8rem}.md-content__inner>.highlight>.filename,.md-content__inner>.highlight>.highlighttable>tbody>tr>.code>div>pre>code,.md-content__inner>.highlight>.highlighttable>tbody>tr>.filename span.filename,.md-content__inner>.highlight>.highlighttable>tbody>tr>.linenos,.md-content__inner>.highlight>pre>code{border-radius:0}.md-content__inner>.highlight+.result{border-left-width:0;border-radius:0;border-right-width:0;margin-left:-.8rem;margin-right:-.8rem}}.md-typeset .keys kbd:after,.md-typeset .keys kbd:before{-moz-osx-font-smoothing:initial;-webkit-font-smoothing:initial;color:inherit;margin:0;position:relative}.md-typeset .keys span{color:var(--md-default-fg-color--light);padding:0 .2em}.md-typeset .keys .key-alt:before,.md-typeset .keys .key-left-alt:before,.md-typeset .keys .key-right-alt:before{content:"⎇";padding-right:.4em}.md-typeset .keys .key-command:before,.md-typeset .keys .key-left-command:before,.md-typeset .keys .key-right-command:before{content:"⌘";padding-right:.4em}.md-typeset .keys .key-control:before,.md-typeset .keys .key-left-control:before,.md-typeset .keys .key-right-control:before{content:"⌃";padding-right:.4em}.md-typeset .keys .key-left-meta:before,.md-typeset .keys .key-meta:before,.md-typeset .keys .key-right-meta:before{content:"◆";padding-right:.4em}.md-typeset .keys .key-left-option:before,.md-typeset .keys .key-option:before,.md-typeset .keys .key-right-option:before{content:"⌥";padding-right:.4em}.md-typeset .keys .key-left-shift:before,.md-typeset .keys .key-right-shift:before,.md-typeset .keys .key-shift:before{content:"⇧";padding-right:.4em}.md-typeset .keys .key-left-super:before,.md-typeset .keys .key-right-super:before,.md-typeset .keys .key-super:before{content:"❖";padding-right:.4em}.md-typeset .keys .key-left-windows:before,.md-typeset .keys .key-right-windows:before,.md-typeset .keys .key-windows:before{content:"⊞";padding-right:.4em}.md-typeset .keys .key-arrow-down:before{content:"↓";padding-right:.4em}.md-typeset .keys .key-arrow-left:before{content:"←";padding-right:.4em}.md-typeset .keys .key-arrow-right:before{content:"→";padding-right:.4em}.md-typeset .keys .key-arrow-up:before{content:"↑";padding-right:.4em}.md-typeset .keys .key-backspace:before{content:"⌫";padding-right:.4em}.md-typeset .keys .key-backtab:before{content:"⇤";padding-right:.4em}.md-typeset .keys .key-caps-lock:before{content:"⇪";padding-right:.4em}.md-typeset .keys .key-clear:before{content:"⌧";padding-right:.4em}.md-typeset .keys .key-context-menu:before{content:"☰";padding-right:.4em}.md-typeset .keys .key-delete:before{content:"⌦";padding-right:.4em}.md-typeset .keys .key-eject:before{content:"⏏";padding-right:.4em}.md-typeset .keys .key-end:before{content:"⤓";padding-right:.4em}.md-typeset .keys .key-escape:before{content:"⎋";padding-right:.4em}.md-typeset .keys .key-home:before{content:"⤒";padding-right:.4em}.md-typeset .keys .key-insert:before{content:"⎀";padding-right:.4em}.md-typeset .keys .key-page-down:before{content:"⇟";padding-right:.4em}.md-typeset .keys .key-page-up:before{content:"⇞";padding-right:.4em}.md-typeset .keys .key-print-screen:before{content:"⎙";padding-right:.4em}.md-typeset .keys .key-tab:after{content:"⇥";padding-left:.4em}.md-typeset .keys .key-num-enter:after{content:"⌤";padding-left:.4em}.md-typeset .keys .key-enter:after{content:"⏎";padding-left:.4em}:root{--md-tabbed-icon--prev:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15.41 16.58 10.83 12l4.58-4.59L14 6l-6 6 6 6z"/></svg>');--md-tabbed-icon--next:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>')}.md-typeset .tabbed-set{border-radius:.1rem;display:flex;flex-flow:column wrap;margin:1em 0;position:relative}.md-typeset .tabbed-set>input{height:0;opacity:0;position:absolute;width:0}.md-typeset .tabbed-set>input:target{--md-scroll-offset:0.625em}.md-typeset .tabbed-set>input.focus-visible~.tabbed-labels:before{background-color:var(--md-accent-fg-color)}.md-typeset .tabbed-labels{-ms-overflow-style:none;box-shadow:0 -.05rem var(--md-default-fg-color--lightest) inset;display:flex;max-width:100%;overflow:auto;scrollbar-width:none}@media print{.md-typeset .tabbed-labels{display:contents}}@media screen{.js .md-typeset .tabbed-labels{position:relative}.js .md-typeset .tabbed-labels:before{background:var(--md-default-fg-color);bottom:0;content:"";display:block;height:2px;left:0;position:absolute;transform:translateX(var(--md-indicator-x));transition:width 225ms,background-color .25s,transform .25s;transition-timing-function:cubic-bezier(.4,0,.2,1);width:var(--md-indicator-width)}}.md-typeset .tabbed-labels::-webkit-scrollbar{display:none}.md-typeset .tabbed-labels>label{border-bottom:.1rem solid #0000;border-radius:.1rem .1rem 0 0;color:var(--md-default-fg-color--light);cursor:pointer;flex-shrink:0;font-size:.64rem;font-weight:700;padding:.78125em 1.25em .625em;scroll-margin-inline-start:1rem;transition:background-color .25s,color .25s;white-space:nowrap;width:auto}@media print{.md-typeset .tabbed-labels>label:first-child{order:1}.md-typeset .tabbed-labels>label:nth-child(2){order:2}.md-typeset .tabbed-labels>label:nth-child(3){order:3}.md-typeset .tabbed-labels>label:nth-child(4){order:4}.md-typeset .tabbed-labels>label:nth-child(5){order:5}.md-typeset .tabbed-labels>label:nth-child(6){order:6}.md-typeset .tabbed-labels>label:nth-child(7){order:7}.md-typeset .tabbed-labels>label:nth-child(8){order:8}.md-typeset .tabbed-labels>label:nth-child(9){order:9}.md-typeset .tabbed-labels>label:nth-child(10){order:10}.md-typeset .tabbed-labels>label:nth-child(11){order:11}.md-typeset .tabbed-labels>label:nth-child(12){order:12}.md-typeset .tabbed-labels>label:nth-child(13){order:13}.md-typeset .tabbed-labels>label:nth-child(14){order:14}.md-typeset .tabbed-labels>label:nth-child(15){order:15}.md-typeset .tabbed-labels>label:nth-child(16){order:16}.md-typeset .tabbed-labels>label:nth-child(17){order:17}.md-typeset .tabbed-labels>label:nth-child(18){order:18}.md-typeset .tabbed-labels>label:nth-child(19){order:19}.md-typeset .tabbed-labels>label:nth-child(20){order:20}}.md-typeset .tabbed-labels>label:hover{color:var(--md-default-fg-color)}.md-typeset .tabbed-labels>label>[href]:first-child{color:inherit}.md-typeset .tabbed-labels--linked>label{padding:0}.md-typeset .tabbed-labels--linked>label>a{display:block;padding:.78125em 1.25em .625em}.md-typeset .tabbed-content{width:100%}@media print{.md-typeset .tabbed-content{display:contents}}.md-typeset .tabbed-block{display:none}@media print{.md-typeset .tabbed-block{display:block}.md-typeset .tabbed-block:first-child{order:1}.md-typeset .tabbed-block:nth-child(2){order:2}.md-typeset .tabbed-block:nth-child(3){order:3}.md-typeset .tabbed-block:nth-child(4){order:4}.md-typeset .tabbed-block:nth-child(5){order:5}.md-typeset .tabbed-block:nth-child(6){order:6}.md-typeset .tabbed-block:nth-child(7){order:7}.md-typeset .tabbed-block:nth-child(8){order:8}.md-typeset .tabbed-block:nth-child(9){order:9}.md-typeset .tabbed-block:nth-child(10){order:10}.md-typeset .tabbed-block:nth-child(11){order:11}.md-typeset .tabbed-block:nth-child(12){order:12}.md-typeset .tabbed-block:nth-child(13){order:13}.md-typeset .tabbed-block:nth-child(14){order:14}.md-typeset .tabbed-block:nth-child(15){order:15}.md-typeset .tabbed-block:nth-child(16){order:16}.md-typeset .tabbed-block:nth-child(17){order:17}.md-typeset .tabbed-block:nth-child(18){order:18}.md-typeset .tabbed-block:nth-child(19){order:19}.md-typeset .tabbed-block:nth-child(20){order:20}}.md-typeset .tabbed-block>.highlight:first-child>pre,.md-typeset .tabbed-block>pre:first-child{margin:0}.md-typeset .tabbed-block>.highlight:first-child>pre>code,.md-typeset .tabbed-block>pre:first-child>code{border-top-left-radius:0;border-top-right-radius:0}.md-typeset .tabbed-block>.highlight:first-child>.filename{border-top-left-radius:0;border-top-right-radius:0;margin:0}.md-typeset .tabbed-block>.highlight:first-child>.highlighttable{margin:0}.md-typeset .tabbed-block>.highlight:first-child>.highlighttable>tbody>tr>.filename span.filename,.md-typeset .tabbed-block>.highlight:first-child>.highlighttable>tbody>tr>.linenos{border-top-left-radius:0;border-top-right-radius:0;margin:0}.md-typeset .tabbed-block>.highlight:first-child>.highlighttable>tbody>tr>.code>div>pre>code{border-top-left-radius:0;border-top-right-radius:0}.md-typeset .tabbed-block>.highlight:first-child+.result{margin-top:-.125em}.md-typeset .tabbed-block>.tabbed-set{margin:0}.md-typeset .tabbed-button{align-self:center;border-radius:100%;color:var(--md-default-fg-color--light);cursor:pointer;display:block;height:.9rem;margin-top:.1rem;pointer-events:auto;transition:background-color .25s;width:.9rem}.md-typeset .tabbed-button:hover{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-typeset .tabbed-button:after{background-color:currentcolor;content:"";display:block;height:100%;-webkit-mask-image:var(--md-tabbed-icon--prev);mask-image:var(--md-tabbed-icon--prev);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:background-color .25s,transform .25s;width:100%}.md-typeset .tabbed-control{background:linear-gradient(to right,var(--md-default-bg-color) 60%,#0000);display:flex;height:1.9rem;justify-content:start;pointer-events:none;position:absolute;transition:opacity 125ms;width:1.2rem}[dir=rtl] .md-typeset .tabbed-control{transform:rotate(180deg)}.md-typeset .tabbed-control[hidden]{opacity:0}.md-typeset .tabbed-control--next{background:linear-gradient(to left,var(--md-default-bg-color) 60%,#0000);justify-content:end;right:0}.md-typeset .tabbed-control--next .tabbed-button:after{-webkit-mask-image:var(--md-tabbed-icon--next);mask-image:var(--md-tabbed-icon--next)}@media screen and (max-width:44.984375em){[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels{padding-left:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels{padding-right:.8rem}.md-content__inner>.tabbed-set .tabbed-labels{margin:0 -.8rem;max-width:100vw;scroll-padding-inline-start:.8rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels:after{padding-right:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels:after{padding-left:.8rem}.md-content__inner>.tabbed-set .tabbed-labels:after{content:""}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{padding-left:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{padding-right:.8rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{margin-left:-.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{margin-right:-.8rem}.md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{width:2rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{padding-right:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{padding-left:.8rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{margin-right:-.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{margin-left:-.8rem}.md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{width:2rem}}@media screen{.md-typeset .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9){color:var(--md-default-fg-color)}.md-typeset .no-js .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.md-typeset .no-js .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.md-typeset .no-js .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.md-typeset .no-js .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.md-typeset .no-js .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.md-typeset .no-js .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.md-typeset .no-js .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.md-typeset .no-js .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.md-typeset .no-js .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.md-typeset .no-js .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.md-typeset .no-js .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.md-typeset .no-js .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.md-typeset .no-js .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.md-typeset .no-js .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.md-typeset .no-js .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.md-typeset .no-js .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.md-typeset .no-js .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.md-typeset .no-js .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.md-typeset .no-js .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.md-typeset .no-js .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9),.md-typeset [role=dialog] .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.md-typeset [role=dialog] .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.md-typeset [role=dialog] .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.md-typeset [role=dialog] .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.md-typeset [role=dialog] .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.md-typeset [role=dialog] .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.md-typeset [role=dialog] .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.md-typeset [role=dialog] .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.md-typeset [role=dialog] .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.md-typeset [role=dialog] .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.md-typeset [role=dialog] .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.md-typeset [role=dialog] .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.md-typeset [role=dialog] .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.md-typeset [role=dialog] .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.md-typeset [role=dialog] .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.md-typeset [role=dialog] .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.md-typeset [role=dialog] .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.md-typeset [role=dialog] .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.md-typeset [role=dialog] .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.md-typeset [role=dialog] .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9),.no-js .md-typeset .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.no-js .md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.no-js .md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.no-js .md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.no-js .md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.no-js .md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.no-js .md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.no-js .md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.no-js .md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.no-js .md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.no-js .md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.no-js .md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.no-js .md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.no-js .md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.no-js .md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.no-js .md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.no-js .md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.no-js .md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.no-js .md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.no-js .md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9),[role=dialog] .md-typeset .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,[role=dialog] .md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),[role=dialog] .md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),[role=dialog] .md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),[role=dialog] .md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),[role=dialog] .md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),[role=dialog] .md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),[role=dialog] .md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),[role=dialog] .md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),[role=dialog] .md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),[role=dialog] .md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),[role=dialog] .md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),[role=dialog] .md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),[role=dialog] .md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),[role=dialog] .md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),[role=dialog] .md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),[role=dialog] .md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),[role=dialog] .md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),[role=dialog] .md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),[role=dialog] .md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9){border-color:var(--md-default-fg-color)}}.md-typeset .tabbed-set>input:first-child.focus-visible~.tabbed-labels>:first-child,.md-typeset .tabbed-set>input:nth-child(10).focus-visible~.tabbed-labels>:nth-child(10),.md-typeset .tabbed-set>input:nth-child(11).focus-visible~.tabbed-labels>:nth-child(11),.md-typeset .tabbed-set>input:nth-child(12).focus-visible~.tabbed-labels>:nth-child(12),.md-typeset .tabbed-set>input:nth-child(13).focus-visible~.tabbed-labels>:nth-child(13),.md-typeset .tabbed-set>input:nth-child(14).focus-visible~.tabbed-labels>:nth-child(14),.md-typeset .tabbed-set>input:nth-child(15).focus-visible~.tabbed-labels>:nth-child(15),.md-typeset .tabbed-set>input:nth-child(16).focus-visible~.tabbed-labels>:nth-child(16),.md-typeset .tabbed-set>input:nth-child(17).focus-visible~.tabbed-labels>:nth-child(17),.md-typeset .tabbed-set>input:nth-child(18).focus-visible~.tabbed-labels>:nth-child(18),.md-typeset .tabbed-set>input:nth-child(19).focus-visible~.tabbed-labels>:nth-child(19),.md-typeset .tabbed-set>input:nth-child(2).focus-visible~.tabbed-labels>:nth-child(2),.md-typeset .tabbed-set>input:nth-child(20).focus-visible~.tabbed-labels>:nth-child(20),.md-typeset .tabbed-set>input:nth-child(3).focus-visible~.tabbed-labels>:nth-child(3),.md-typeset .tabbed-set>input:nth-child(4).focus-visible~.tabbed-labels>:nth-child(4),.md-typeset .tabbed-set>input:nth-child(5).focus-visible~.tabbed-labels>:nth-child(5),.md-typeset .tabbed-set>input:nth-child(6).focus-visible~.tabbed-labels>:nth-child(6),.md-typeset .tabbed-set>input:nth-child(7).focus-visible~.tabbed-labels>:nth-child(7),.md-typeset .tabbed-set>input:nth-child(8).focus-visible~.tabbed-labels>:nth-child(8),.md-typeset .tabbed-set>input:nth-child(9).focus-visible~.tabbed-labels>:nth-child(9){color:var(--md-accent-fg-color)}.md-typeset .tabbed-set>input:first-child:checked~.tabbed-content>:first-child,.md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-content>:nth-child(10),.md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-content>:nth-child(11),.md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-content>:nth-child(12),.md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-content>:nth-child(13),.md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-content>:nth-child(14),.md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-content>:nth-child(15),.md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-content>:nth-child(16),.md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-content>:nth-child(17),.md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-content>:nth-child(18),.md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-content>:nth-child(19),.md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-content>:nth-child(2),.md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-content>:nth-child(20),.md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-content>:nth-child(3),.md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-content>:nth-child(4),.md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-content>:nth-child(5),.md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-content>:nth-child(6),.md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-content>:nth-child(7),.md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-content>:nth-child(8),.md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-content>:nth-child(9){display:block}:root{--md-tasklist-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12m16.28-2.72a.75.75 0 0 0-.018-1.042.75.75 0 0 0-1.042-.018l-5.97 5.97-2.47-2.47a.75.75 0 0 0-1.042.018.75.75 0 0 0-.018 1.042l3 3a.75.75 0 0 0 1.06 0Z"/></svg>');--md-tasklist-icon--checked:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12m16.28-2.72a.75.75 0 0 0-.018-1.042.75.75 0 0 0-1.042-.018l-5.97 5.97-2.47-2.47a.75.75 0 0 0-1.042.018.75.75 0 0 0-.018 1.042l3 3a.75.75 0 0 0 1.06 0Z"/></svg>')}.md-typeset .task-list-item{list-style-type:none;position:relative}[dir=ltr] .md-typeset .task-list-item [type=checkbox]{left:-2em}[dir=rtl] .md-typeset .task-list-item [type=checkbox]{right:-2em}.md-typeset .task-list-item [type=checkbox]{position:absolute;top:.45em}.md-typeset .task-list-control [type=checkbox]{opacity:0;z-index:-1}[dir=ltr] .md-typeset .task-list-indicator:before{left:-1.5em}[dir=rtl] .md-typeset .task-list-indicator:before{right:-1.5em}.md-typeset .task-list-indicator:before{background-color:var(--md-default-fg-color--lightest);content:"";height:1.25em;-webkit-mask-image:var(--md-tasklist-icon);mask-image:var(--md-tasklist-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:.15em;width:1.25em}.md-typeset [type=checkbox]:checked+.task-list-indicator:before{background-color:#00e676;-webkit-mask-image:var(--md-tasklist-icon--checked);mask-image:var(--md-tasklist-icon--checked)}@media print{.giscus,[id=__comments]{display:none}}:root>*{--md-mermaid-font-family:var(--md-text-font-family),sans-serif;--md-mermaid-edge-color:var(--md-code-fg-color);--md-mermaid-node-bg-color:var(--md-accent-fg-color--transparent);--md-mermaid-node-fg-color:var(--md-accent-fg-color);--md-mermaid-label-bg-color:var(--md-default-bg-color);--md-mermaid-label-fg-color:var(--md-code-fg-color);--md-mermaid-sequence-actor-bg-color:var(--md-mermaid-label-bg-color);--md-mermaid-sequence-actor-fg-color:var(--md-mermaid-label-fg-color);--md-mermaid-sequence-actor-border-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-actor-line-color:var(--md-default-fg-color--lighter);--md-mermaid-sequence-actorman-bg-color:var(--md-mermaid-label-bg-color);--md-mermaid-sequence-actorman-line-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-box-bg-color:var(--md-mermaid-node-bg-color);--md-mermaid-sequence-box-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-label-bg-color:var(--md-mermaid-node-bg-color);--md-mermaid-sequence-label-fg-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-loop-bg-color:var(--md-mermaid-node-bg-color);--md-mermaid-sequence-loop-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-loop-border-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-message-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-message-line-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-note-bg-color:var(--md-mermaid-label-bg-color);--md-mermaid-sequence-note-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-note-border-color:var(--md-mermaid-label-fg-color);--md-mermaid-sequence-number-bg-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-number-fg-color:var(--md-accent-bg-color)}.mermaid{line-height:normal;margin:1em 0}.md-typeset .grid{grid-gap:.4rem;display:grid;grid-template-columns:repeat(auto-fit,minmax(min(100%,16rem),1fr));margin:1em 0}.md-typeset .grid.cards>ol,.md-typeset .grid.cards>ul{display:contents}.md-typeset .grid.cards>ol>li,.md-typeset .grid.cards>ul>li,.md-typeset .grid>.card{border:.05rem solid var(--md-default-fg-color--lightest);border-radius:.1rem;display:block;margin:0;padding:.8rem;transition:border .25s,box-shadow .25s}.md-typeset .grid.cards>ol>li:focus-within,.md-typeset .grid.cards>ol>li:hover,.md-typeset .grid.cards>ul>li:focus-within,.md-typeset .grid.cards>ul>li:hover,.md-typeset .grid>.card:focus-within,.md-typeset .grid>.card:hover{border-color:#0000;box-shadow:var(--md-shadow-z2)}.md-typeset .grid.cards>ol>li>hr,.md-typeset .grid.cards>ul>li>hr,.md-typeset .grid>.card>hr{margin-bottom:1em;margin-top:1em}.md-typeset .grid.cards>ol>li>:first-child,.md-typeset .grid.cards>ul>li>:first-child,.md-typeset .grid>.card>:first-child{margin-top:0}.md-typeset .grid.cards>ol>li>:last-child,.md-typeset .grid.cards>ul>li>:last-child,.md-typeset .grid>.card>:last-child{margin-bottom:0}.md-typeset .grid>*,.md-typeset .grid>.admonition,.md-typeset .grid>.highlight>*,.md-typeset .grid>.highlighttable,.md-typeset .grid>.md-typeset details,.md-typeset .grid>details,.md-typeset .grid>pre{margin-bottom:0;margin-top:0}.md-typeset .grid>.highlight>pre:only-child,.md-typeset .grid>.highlight>pre>code,.md-typeset .grid>.highlighttable,.md-typeset .grid>.highlighttable>tbody,.md-typeset .grid>.highlighttable>tbody>tr,.md-typeset .grid>.highlighttable>tbody>tr>.code,.md-typeset .grid>.highlighttable>tbody>tr>.code>.highlight,.md-typeset .grid>.highlighttable>tbody>tr>.code>.highlight>pre,.md-typeset .grid>.highlighttable>tbody>tr>.code>.highlight>pre>code{height:100%}.md-typeset .grid>.tabbed-set{margin-bottom:0;margin-top:0}@media screen and (min-width:45em){[dir=ltr] .md-typeset .inline{float:left}[dir=rtl] .md-typeset .inline{float:right}[dir=ltr] .md-typeset .inline{margin-right:.8rem}[dir=rtl] .md-typeset .inline{margin-left:.8rem}.md-typeset .inline{margin-bottom:.8rem;margin-top:0;width:11.7rem}[dir=ltr] .md-typeset .inline.end{float:right}[dir=rtl] .md-typeset .inline.end{float:left}[dir=ltr] .md-typeset .inline.end{margin-left:.8rem;margin-right:0}[dir=rtl] .md-typeset .inline.end{margin-left:0;margin-right:.8rem}}
</document_content>
</document>

<document index="14">
<source>docs/assets/stylesheets/palette.ab4e12ef.min.css</source>
<document_content>
@media screen{[data-md-color-scheme=slate]{--md-default-fg-color:hsla(var(--md-hue),15%,90%,0.82);--md-default-fg-color--light:hsla(var(--md-hue),15%,90%,0.56);--md-default-fg-color--lighter:hsla(var(--md-hue),15%,90%,0.32);--md-default-fg-color--lightest:hsla(var(--md-hue),15%,90%,0.12);--md-default-bg-color:hsla(var(--md-hue),15%,14%,1);--md-default-bg-color--light:hsla(var(--md-hue),15%,14%,0.54);--md-default-bg-color--lighter:hsla(var(--md-hue),15%,14%,0.26);--md-default-bg-color--lightest:hsla(var(--md-hue),15%,14%,0.07);--md-code-fg-color:hsla(var(--md-hue),18%,86%,0.82);--md-code-bg-color:hsla(var(--md-hue),15%,18%,1);--md-code-bg-color--light:hsla(var(--md-hue),15%,18%,0.9);--md-code-bg-color--lighter:hsla(var(--md-hue),15%,18%,0.54);--md-code-hl-color:#2977ff;--md-code-hl-color--light:#2977ff1a;--md-code-hl-number-color:#e6695b;--md-code-hl-special-color:#f06090;--md-code-hl-function-color:#c973d9;--md-code-hl-constant-color:#9383e2;--md-code-hl-keyword-color:#6791e0;--md-code-hl-string-color:#2fb170;--md-code-hl-name-color:var(--md-code-fg-color);--md-code-hl-operator-color:var(--md-default-fg-color--light);--md-code-hl-punctuation-color:var(--md-default-fg-color--light);--md-code-hl-comment-color:var(--md-default-fg-color--light);--md-code-hl-generic-color:var(--md-default-fg-color--light);--md-code-hl-variable-color:var(--md-default-fg-color--light);--md-typeset-color:var(--md-default-fg-color);--md-typeset-a-color:var(--md-primary-fg-color);--md-typeset-kbd-color:hsla(var(--md-hue),15%,90%,0.12);--md-typeset-kbd-accent-color:hsla(var(--md-hue),15%,90%,0.2);--md-typeset-kbd-border-color:hsla(var(--md-hue),15%,14%,1);--md-typeset-mark-color:#4287ff4d;--md-typeset-table-color:hsla(var(--md-hue),15%,95%,0.12);--md-typeset-table-color--light:hsla(var(--md-hue),15%,95%,0.035);--md-admonition-fg-color:var(--md-default-fg-color);--md-admonition-bg-color:var(--md-default-bg-color);--md-footer-bg-color:hsla(var(--md-hue),15%,10%,0.87);--md-footer-bg-color--dark:hsla(var(--md-hue),15%,8%,1);--md-shadow-z1:0 0.2rem 0.5rem #0000000d,0 0 0.05rem #0000001a;--md-shadow-z2:0 0.2rem 0.5rem #00000040,0 0 0.05rem #00000040;--md-shadow-z3:0 0.2rem 0.5rem #0006,0 0 0.05rem #00000059;color-scheme:dark}[data-md-color-scheme=slate] img[src$="#gh-light-mode-only"],[data-md-color-scheme=slate] img[src$="#only-light"]{display:none}[data-md-color-scheme=slate][data-md-color-primary=pink]{--md-typeset-a-color:#ed5487}[data-md-color-scheme=slate][data-md-color-primary=purple]{--md-typeset-a-color:#c46fd3}[data-md-color-scheme=slate][data-md-color-primary=deep-purple]{--md-typeset-a-color:#a47bea}[data-md-color-scheme=slate][data-md-color-primary=indigo]{--md-typeset-a-color:#5488e8}[data-md-color-scheme=slate][data-md-color-primary=teal]{--md-typeset-a-color:#00ccb8}[data-md-color-scheme=slate][data-md-color-primary=green]{--md-typeset-a-color:#71c174}[data-md-color-scheme=slate][data-md-color-primary=deep-orange]{--md-typeset-a-color:#ff764d}[data-md-color-scheme=slate][data-md-color-primary=brown]{--md-typeset-a-color:#c1775c}[data-md-color-scheme=slate][data-md-color-primary=black],[data-md-color-scheme=slate][data-md-color-primary=blue-grey],[data-md-color-scheme=slate][data-md-color-primary=grey],[data-md-color-scheme=slate][data-md-color-primary=white]{--md-typeset-a-color:#5e8bde}[data-md-color-switching] *,[data-md-color-switching] :after,[data-md-color-switching] :before{transition-duration:0ms!important}}[data-md-color-accent=red]{--md-accent-fg-color:#ff1947;--md-accent-fg-color--transparent:#ff19471a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=pink]{--md-accent-fg-color:#f50056;--md-accent-fg-color--transparent:#f500561a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=purple]{--md-accent-fg-color:#df41fb;--md-accent-fg-color--transparent:#df41fb1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=deep-purple]{--md-accent-fg-color:#7c4dff;--md-accent-fg-color--transparent:#7c4dff1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=indigo]{--md-accent-fg-color:#526cfe;--md-accent-fg-color--transparent:#526cfe1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=blue]{--md-accent-fg-color:#4287ff;--md-accent-fg-color--transparent:#4287ff1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=light-blue]{--md-accent-fg-color:#0091eb;--md-accent-fg-color--transparent:#0091eb1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=cyan]{--md-accent-fg-color:#00bad6;--md-accent-fg-color--transparent:#00bad61a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=teal]{--md-accent-fg-color:#00bda4;--md-accent-fg-color--transparent:#00bda41a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=green]{--md-accent-fg-color:#00c753;--md-accent-fg-color--transparent:#00c7531a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=light-green]{--md-accent-fg-color:#63de17;--md-accent-fg-color--transparent:#63de171a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=lime]{--md-accent-fg-color:#b0eb00;--md-accent-fg-color--transparent:#b0eb001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=yellow]{--md-accent-fg-color:#ffd500;--md-accent-fg-color--transparent:#ffd5001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=amber]{--md-accent-fg-color:#fa0;--md-accent-fg-color--transparent:#ffaa001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=orange]{--md-accent-fg-color:#ff9100;--md-accent-fg-color--transparent:#ff91001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=deep-orange]{--md-accent-fg-color:#ff6e42;--md-accent-fg-color--transparent:#ff6e421a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-primary=red]{--md-primary-fg-color:#ef5552;--md-primary-fg-color--light:#e57171;--md-primary-fg-color--dark:#e53734;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=pink]{--md-primary-fg-color:#e92063;--md-primary-fg-color--light:#ec417a;--md-primary-fg-color--dark:#c3185d;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=purple]{--md-primary-fg-color:#ab47bd;--md-primary-fg-color--light:#bb69c9;--md-primary-fg-color--dark:#8c24a8;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=deep-purple]{--md-primary-fg-color:#7e56c2;--md-primary-fg-color--light:#9574cd;--md-primary-fg-color--dark:#673ab6;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=indigo]{--md-primary-fg-color:#4051b5;--md-primary-fg-color--light:#5d6cc0;--md-primary-fg-color--dark:#303fa1;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=blue]{--md-primary-fg-color:#2094f3;--md-primary-fg-color--light:#42a5f5;--md-primary-fg-color--dark:#1975d2;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=light-blue]{--md-primary-fg-color:#02a6f2;--md-primary-fg-color--light:#28b5f6;--md-primary-fg-color--dark:#0287cf;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=cyan]{--md-primary-fg-color:#00bdd6;--md-primary-fg-color--light:#25c5da;--md-primary-fg-color--dark:#0097a8;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=teal]{--md-primary-fg-color:#009485;--md-primary-fg-color--light:#26a699;--md-primary-fg-color--dark:#007a6c;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=green]{--md-primary-fg-color:#4cae4f;--md-primary-fg-color--light:#68bb6c;--md-primary-fg-color--dark:#398e3d;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=light-green]{--md-primary-fg-color:#8bc34b;--md-primary-fg-color--light:#9ccc66;--md-primary-fg-color--dark:#689f38;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=lime]{--md-primary-fg-color:#cbdc38;--md-primary-fg-color--light:#d3e156;--md-primary-fg-color--dark:#b0b52c;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=yellow]{--md-primary-fg-color:#ffec3d;--md-primary-fg-color--light:#ffee57;--md-primary-fg-color--dark:#fbc02d;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=amber]{--md-primary-fg-color:#ffc105;--md-primary-fg-color--light:#ffc929;--md-primary-fg-color--dark:#ffa200;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=orange]{--md-primary-fg-color:#ffa724;--md-primary-fg-color--light:#ffa724;--md-primary-fg-color--dark:#fa8900;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=deep-orange]{--md-primary-fg-color:#ff6e42;--md-primary-fg-color--light:#ff8a66;--md-primary-fg-color--dark:#f4511f;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=brown]{--md-primary-fg-color:#795649;--md-primary-fg-color--light:#8d6e62;--md-primary-fg-color--dark:#5d4037;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=grey]{--md-primary-fg-color:#757575;--md-primary-fg-color--light:#9e9e9e;--md-primary-fg-color--dark:#616161;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3;--md-typeset-a-color:#4051b5}[data-md-color-primary=blue-grey]{--md-primary-fg-color:#546d78;--md-primary-fg-color--light:#607c8a;--md-primary-fg-color--dark:#455a63;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3;--md-typeset-a-color:#4051b5}[data-md-color-primary=light-green]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#72ad2e}[data-md-color-primary=lime]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#8b990a}[data-md-color-primary=yellow]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#b8a500}[data-md-color-primary=amber]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#d19d00}[data-md-color-primary=orange]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#e68a00}[data-md-color-primary=white]{--md-primary-fg-color:hsla(var(--md-hue),0%,100%,1);--md-primary-fg-color--light:hsla(var(--md-hue),0%,100%,0.7);--md-primary-fg-color--dark:hsla(var(--md-hue),0%,0%,0.07);--md-primary-bg-color:hsla(var(--md-hue),0%,0%,0.87);--md-primary-bg-color--light:hsla(var(--md-hue),0%,0%,0.54);--md-typeset-a-color:#4051b5}[data-md-color-primary=white] .md-button{color:var(--md-typeset-a-color)}[data-md-color-primary=white] .md-button--primary{background-color:var(--md-typeset-a-color);border-color:var(--md-typeset-a-color);color:hsla(var(--md-hue),0%,100%,1)}@media screen and (min-width:60em){[data-md-color-primary=white] .md-search__form{background-color:hsla(var(--md-hue),0%,0%,.07)}[data-md-color-primary=white] .md-search__form:hover{background-color:hsla(var(--md-hue),0%,0%,.32)}[data-md-color-primary=white] .md-search__input+.md-search__icon{color:hsla(var(--md-hue),0%,0%,.87)}}@media screen and (min-width:76.25em){[data-md-color-primary=white] .md-tabs{border-bottom:.05rem solid #00000012}}[data-md-color-primary=black]{--md-primary-fg-color:hsla(var(--md-hue),15%,9%,1);--md-primary-fg-color--light:hsla(var(--md-hue),15%,9%,0.54);--md-primary-fg-color--dark:hsla(var(--md-hue),15%,9%,1);--md-primary-bg-color:hsla(var(--md-hue),15%,100%,1);--md-primary-bg-color--light:hsla(var(--md-hue),15%,100%,0.7);--md-typeset-a-color:#4051b5}[data-md-color-primary=black] .md-button{color:var(--md-typeset-a-color)}[data-md-color-primary=black] .md-button--primary{background-color:var(--md-typeset-a-color);border-color:var(--md-typeset-a-color);color:hsla(var(--md-hue),0%,100%,1)}[data-md-color-primary=black] .md-header{background-color:hsla(var(--md-hue),15%,9%,1)}@media screen and (max-width:59.984375em){[data-md-color-primary=black] .md-nav__source{background-color:hsla(var(--md-hue),15%,11%,.87)}}@media screen and (max-width:76.234375em){html [data-md-color-primary=black] .md-nav--primary .md-nav__title[for=__drawer]{background-color:hsla(var(--md-hue),15%,9%,1)}}@media screen and (min-width:76.25em){[data-md-color-primary=black] .md-tabs{background-color:hsla(var(--md-hue),15%,9%,1)}}
</document_content>
</document>

<document index="15">
<source>docs/index.html</source>
<document_content>

<!doctype html>
<html lang="en" class="no-js">
  <head>
    
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width,initial-scale=1">
      
        <meta name="description" content="A plugin that captures HTML output and creates cousin Markdown files">
      
      
        <meta name="author" content="Vexy">
      
      
        <link rel="canonical" href="https://vexyart.github.io/vexy-mkdocs-output-as-input/">
      
      
      
      
        
      
      
      <link rel="icon" href="assets/images/favicon.png">
      <meta name="generator" content="mkdocs-1.6.1, mkdocs-material-9.6.15+insiders-4.53.16">
    
    
      
        <title>MkDocs Output as Input Plugin - MkDocs Output as Input Plugin</title>
      
    
    
      <link rel="stylesheet" href="assets/stylesheets/main.8cce3a28.min.css">
      
        
        <link rel="stylesheet" href="assets/stylesheets/palette.ab4e12ef.min.css">
      
      


    
    
      
    
    
      
        
        
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,700,700i%7CRoboto+Mono:400,400i,700,700i&display=fallback">
        <style>:root{--md-text-font:"Roboto";--md-code-font:"Roboto Mono"}</style>
      
    
    
    <script>__md_scope=new URL(".",location),__md_hash=e=>[...e].reduce(((e,_)=>(e<<5)-e+_.charCodeAt(0)),0),__md_get=(e,_=localStorage,t=__md_scope)=>JSON.parse(_.getItem(t.pathname+"."+e)),__md_set=(e,_,t=localStorage,a=__md_scope)=>{try{t.setItem(a.pathname+"."+e,JSON.stringify(_))}catch(e){}}</script>
    
      

    
    
  </head>
  
  
    
    
      
    
    
    
    
    <body dir="ltr" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo">
  
    
    <input class="md-toggle" data-md-toggle="drawer" type="checkbox" id="__drawer" autocomplete="off">
    <input class="md-toggle" data-md-toggle="search" type="checkbox" id="__search" autocomplete="off">
    <label class="md-overlay" for="__drawer"></label>
    <div data-md-component="skip">
      
    </div>
    <div data-md-component="announce">
      
    </div>
    
    
      

  

<header class="md-header md-header--shadow" data-md-component="header">
  <nav class="md-header__inner md-grid" aria-label="Header">
    <a href="." title="MkDocs Output as Input Plugin" class="md-header__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    <label class="md-header__button md-icon" for="__drawer">
      
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 6h18v2H3zm0 5h18v2H3zm0 5h18v2H3z"/></svg>
    </label>
    <div class="md-header__title" data-md-component="header-title">
      <div class="md-header__ellipsis">
        <div class="md-header__topic">
          <span class="md-ellipsis">
            MkDocs Output as Input Plugin
          </span>
        </div>
        <div class="md-header__topic" data-md-component="header-topic">
          <span class="md-ellipsis">
            
              MkDocs Output as Input Plugin
            
          </span>
        </div>
      </div>
    </div>
    
      
        <form class="md-header__option" data-md-component="palette">
  
    
    
    
    <input class="md-option" data-md-color-media="" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo"  aria-hidden="true"  type="radio" name="__palette" id="__palette_0">
    
  
</form>
      
    
    
      <script>var palette=__md_get("__palette");if(palette&&palette.color){if("(prefers-color-scheme)"===palette.color.media){var media=matchMedia("(prefers-color-scheme: light)"),input=document.querySelector(media.matches?"[data-md-color-media='(prefers-color-scheme: light)']":"[data-md-color-media='(prefers-color-scheme: dark)']");palette.color.media=input.getAttribute("data-md-color-media"),palette.color.scheme=input.getAttribute("data-md-color-scheme"),palette.color.primary=input.getAttribute("data-md-color-primary"),palette.color.accent=input.getAttribute("data-md-color-accent")}for(var[key,value]of Object.entries(palette.color))document.body.setAttribute("data-md-color-"+key,value)}</script>
    
    
    
      
      
        <label class="md-header__button md-icon" for="__search">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        </label>
        <div class="md-search" data-md-component="search" role="dialog">
  <label class="md-search__overlay" for="__search"></label>
  <div class="md-search__inner" role="search">
    <form class="md-search__form" name="search">
      <input type="text" class="md-search__input" name="query" aria-label="Search" placeholder="Search" autocapitalize="off" autocorrect="off" autocomplete="off" spellcheck="false" data-md-component="search-query" required>
      <label class="md-search__icon md-icon" for="__search">
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20 11v2H8l5.5 5.5-1.42 1.42L4.16 12l7.92-7.92L13.5 5.5 8 11z"/></svg>
      </label>
      <nav class="md-search__options" aria-label="Search">
        
        <button type="reset" class="md-search__icon md-icon" title="Clear" aria-label="Clear" tabindex="-1">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>
        </button>
      </nav>
      
    </form>
    <div class="md-search__output">
      <div class="md-search__scrollwrap" tabindex="0" data-md-scrollfix>
        <div class="md-search-result" data-md-component="search-result">
          <div class="md-search-result__meta">
            Initializing search
          </div>
          <ol class="md-search-result__list" role="presentation"></ol>
        </div>
      </div>
    </div>
  </div>
</div>
      
    
    
  </nav>
  
</header>
    
    <div class="md-container" data-md-component="container">
      
      
        
          
        
      
      <main class="md-main" data-md-component="main">
        <div class="md-main__inner md-grid">
          
            
              
              <div class="md-sidebar md-sidebar--primary" data-md-component="sidebar" data-md-type="navigation" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    



<nav class="md-nav md-nav--primary" aria-label="Navigation" data-md-level="0">
  <label class="md-nav__title" for="__drawer">
    <a href="." title="MkDocs Output as Input Plugin" class="md-nav__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    MkDocs Output as Input Plugin
  </label>
  
  <ul class="md-nav__list" data-md-scrollfix>
    
      
      
  
  
    
  
  
  
    <li class="md-nav__item md-nav__item--active">
      
      <input class="md-nav__toggle md-toggle" type="checkbox" id="__toc">
      
      
      
      <a href="." class="md-nav__link md-nav__link--active">
        
  
  
  <span class="md-ellipsis">
    
  
    Home
  

    
  </span>
  
  

      </a>
      
    </li>
  

    
  </ul>
</nav>
                  </div>
                </div>
              </div>
            
            
              
              <div class="md-sidebar md-sidebar--secondary" data-md-component="sidebar" data-md-type="toc" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    

<nav class="md-nav md-nav--secondary" aria-label="Table of contents">
  
  
  
  
</nav>
                  </div>
                </div>
              </div>
            
          
          
            <div class="md-content" data-md-component="content">
              
              <article class="md-content__inner md-typeset">
                
                  



<div class="md-content__inner md-typeset">
<h1 class="custom-heading" id="vexy-mkdocs-output-as-input">vexy-mkdocs-output-as-input<a class="headerlink" href="#vexy-mkdocs-output-as-input" title="Permanent link">¶</a></h1>
<p><a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="PyPI version" src="https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg"/></a>
<a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml"><img alt="CI" src="https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg"/></a>
<a href="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input"><img alt="codecov" src="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg"/></a>
<a href="https://opensource.org/licenses/MIT"><img alt="License: MIT" src="https://img.shields.io/badge/License-MIT-yellow.svg"/></a>
<a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="Python versions" src="https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg"/></a></p>
<p>A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.</p>
<h2 class="custom-heading" id="features">Features<a class="headerlink" href="#features" title="Permanent link">¶</a></h2>
<p>This plugin enables powerful post-processing workflows by:</p>
<ol>
<li>✅ Preserving your original Markdown structure and frontmatter</li>
<li>✅ Capturing the fully-rendered HTML output from MkDocs</li>
<li>✅ Creating new Markdown files that combine original metadata with processed HTML</li>
<li>✅ Enabling further processing by other static site generators</li>
</ol>
<h2 class="custom-heading" id="installation">Installation<a class="headerlink" href="#installation" title="Permanent link">¶</a></h2>
<p>Install from PyPI:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-0-1" id="__codelineno-0-1" name="__codelineno-0-1"></a>uv<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>--system<span class="w"> </span>--upgrade<span class="w"> </span>vexy-mkdocs-output-as-input
</code></pre></div>
<p>Or install from source:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-1-1" id="__codelineno-1-1" name="__codelineno-1-1"></a>pip<span class="w"> </span>install<span class="w"> </span>git+https://github.com/vexyart/vexy-mkdocs-output-as-input
</code></pre></div>
<h2 class="custom-heading" id="quick-start">Quick Start<a class="headerlink" href="#quick-start" title="Permanent link">¶</a></h2>
<p>Add the plugin to your <code>mkdocs.yml</code>:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-2-1" id="__codelineno-2-1" name="__codelineno-2-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-2-2" id="__codelineno-2-2" name="__codelineno-2-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span><span class="w">  </span><span class="c1"># Other plugins</span>
<a href="#__codelineno-2-3" id="__codelineno-2-3" name="__codelineno-2-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<p>Build your site:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-3-1" id="__codelineno-3-1" name="__codelineno-3-1"></a>mkdocs<span class="w"> </span>build
</code></pre></div>
<p>Find your processed files in the <code>stage/</code> directory (relative to your MkDocs project root).</p>
<h2 class="custom-heading" id="configuration">Configuration<a class="headerlink" href="#configuration" title="Permanent link">¶</a></h2>
<p>All configuration options with their defaults:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-4-1" id="__codelineno-4-1" name="__codelineno-4-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-4-2" id="__codelineno-4-2" name="__codelineno-4-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-4-3" id="__codelineno-4-3" name="__codelineno-4-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">stage</span><span class="w">          </span><span class="c1"># Output directory name (default: 'stage')</span>
<a href="#__codelineno-4-4" id="__codelineno-4-4" name="__codelineno-4-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span><span class="w">        </span><span class="c1"># HTML element to extract (default: 'main')</span>
<a href="#__codelineno-4-5" id="__codelineno-4-5" name="__codelineno-4-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span><span class="w">       </span><span class="c1"># Tag to use in output (default: 'article')</span>
<a href="#__codelineno-4-6" id="__codelineno-4-6" name="__codelineno-4-6"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">false</span><span class="w">            </span><span class="c1"># Enable verbose logging (default: false)</span>
</code></pre></div>
<h3 class="custom-heading" id="options-explained">Options Explained<a class="headerlink" href="#options-explained" title="Permanent link">¶</a></h3>
<table>
<thead>
<tr>
<th>Option</th>
<th>Type</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>stage_dir</code></td>
<td>string</td>
<td><code>"stage"</code></td>
<td>Directory name for output files (relative to project root)</td>
</tr>
<tr>
<td><code>html_element</code></td>
<td>string</td>
<td><code>"main"</code></td>
<td>CSS selector for the HTML element to extract</td>
</tr>
<tr>
<td><code>target_tag</code></td>
<td>string</td>
<td><code>"article"</code></td>
<td>HTML tag to use in the output (replaces extracted element's tag)</td>
</tr>
<tr>
<td><code>verbose</code></td>
<td>boolean</td>
<td><code>false</code></td>
<td>Enable detailed logging for debugging</td>
</tr>
</tbody>
</table>
<h2 class="custom-heading" id="how-it-works">How It Works<a class="headerlink" href="#how-it-works" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="input-process-output">Input → Process → Output<a class="headerlink" href="#input-process-output" title="Permanent link">¶</a></h3>
<ol>
<li>
<p><strong>Input</strong>: Your source Markdown with frontmatter
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-5-1" id="__codelineno-5-1" name="__codelineno-5-1"></a>---
<a href="#__codelineno-5-2" id="__codelineno-5-2" name="__codelineno-5-2"></a>title: My Page
<a href="#__codelineno-5-3" id="__codelineno-5-3" name="__codelineno-5-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-5-4" id="__codelineno-5-4" name="__codelineno-5-4"></a><span class="gu">---</span>
<a href="#__codelineno-5-5" id="__codelineno-5-5" name="__codelineno-5-5"></a>
<a href="#__codelineno-5-6" id="__codelineno-5-6" name="__codelineno-5-6"></a><span class="gh"># My Page</span>
<a href="#__codelineno-5-7" id="__codelineno-5-7" name="__codelineno-5-7"></a>
<a href="#__codelineno-5-8" id="__codelineno-5-8" name="__codelineno-5-8"></a>This is my content with <span class="gs">**markdown**</span>.
</code></pre></div></p>
</li>
<li>
<p><strong>MkDocs Processing</strong>: Renders to HTML as usual
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-6-1" id="__codelineno-6-1" name="__codelineno-6-1"></a><span class="p">&lt;</span><span class="nt">main</span> <span class="na">class</span><span class="o">=</span><span class="s">"md-content"</span><span class="p">&gt;</span>
<a href="#__codelineno-6-2" id="__codelineno-6-2" name="__codelineno-6-2"></a>  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>My Page<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<a href="#__codelineno-6-3" id="__codelineno-6-3" name="__codelineno-6-3"></a>  <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>This is my content with <span class="p">&lt;</span><span class="nt">strong</span><span class="p">&gt;</span>markdown<span class="p">&lt;/</span><span class="nt">strong</span><span class="p">&gt;</span>.<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<a href="#__codelineno-6-4" id="__codelineno-6-4" name="__codelineno-6-4"></a><span class="p">&lt;/</span><span class="nt">main</span><span class="p">&gt;</span>
</code></pre></div></p>
</li>
<li>
<p><strong>Output</strong>: Cousin file with preserved frontmatter + extracted HTML
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-7-1" id="__codelineno-7-1" name="__codelineno-7-1"></a>---
<a href="#__codelineno-7-2" id="__codelineno-7-2" name="__codelineno-7-2"></a>title: My Page
<a href="#__codelineno-7-3" id="__codelineno-7-3" name="__codelineno-7-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-7-4" id="__codelineno-7-4" name="__codelineno-7-4"></a><span class="gu">---</span>
<a href="#__codelineno-7-5" id="__codelineno-7-5" name="__codelineno-7-5"></a>
<a href="#__codelineno-7-6" id="__codelineno-7-6" name="__codelineno-7-6"></a>&lt;article class="md-content"&gt;
<a href="#__codelineno-7-7" id="__codelineno-7-7" name="__codelineno-7-7"></a>  &lt;h1&gt;My Page&lt;/h1&gt;
<a href="#__codelineno-7-8" id="__codelineno-7-8" name="__codelineno-7-8"></a>  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;
<a href="#__codelineno-7-9" id="__codelineno-7-9" name="__codelineno-7-9"></a>&lt;/article&gt;
</code></pre></div></p>
</li>
</ol>
<h2 class="custom-heading" id="use-cases">Use Cases<a class="headerlink" href="#use-cases" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="multi-stage-documentation-pipeline">🔄 Multi-Stage Documentation Pipeline<a class="headerlink" href="#multi-stage-documentation-pipeline" title="Permanent link">¶</a></h3>
<p>Process documentation through MkDocs first, then feed to another SSG:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-8-1" id="__codelineno-8-1" name="__codelineno-8-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-8-2" id="__codelineno-8-2" name="__codelineno-8-2"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-8-3" id="__codelineno-8-3" name="__codelineno-8-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-8-4" id="__codelineno-8-4" name="__codelineno-8-4"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">hugo/content</span>
<a href="#__codelineno-8-5" id="__codelineno-8-5" name="__codelineno-8-5"></a>
<a href="#__codelineno-8-6" id="__codelineno-8-6" name="__codelineno-8-6"></a><span class="c1"># Then run:</span>
<a href="#__codelineno-8-7" id="__codelineno-8-7" name="__codelineno-8-7"></a><span class="c1"># mkdocs build &amp;&amp; hugo build</span>
</code></pre></div>
<h3 class="custom-heading" id="content-extraction">📝 Content Extraction<a class="headerlink" href="#content-extraction" title="Permanent link">¶</a></h3>
<p>Extract just the article content without theme wrapper:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-9-1" id="__codelineno-9-1" name="__codelineno-9-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-9-2" id="__codelineno-9-2" name="__codelineno-9-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-9-3" id="__codelineno-9-3" name="__codelineno-9-3"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span>
<a href="#__codelineno-9-4" id="__codelineno-9-4" name="__codelineno-9-4"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">div</span>
</code></pre></div>
<h3 class="custom-heading" id="custom-post-processing">🎨 Custom Post-Processing<a class="headerlink" href="#custom-post-processing" title="Permanent link">¶</a></h3>
<p>Preserve MkDocs rendering while preparing for custom templates:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-10-1" id="__codelineno-10-1" name="__codelineno-10-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-10-2" id="__codelineno-10-2" name="__codelineno-10-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-10-3" id="__codelineno-10-3" name="__codelineno-10-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">_includes</span>
<a href="#__codelineno-10-4" id="__codelineno-10-4" name="__codelineno-10-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-10-5" id="__codelineno-10-5" name="__codelineno-10-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">section</span>
</code></pre></div>
<h2 class="custom-heading" id="examples">Examples<a class="headerlink" href="#examples" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="basic-example">Basic Example<a class="headerlink" href="#basic-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-11-1" id="__codelineno-11-1" name="__codelineno-11-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-11-2" id="__codelineno-11-2" name="__codelineno-11-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-11-3" id="__codelineno-11-3" name="__codelineno-11-3"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-11-4" id="__codelineno-11-4" name="__codelineno-11-4"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<h3 class="custom-heading" id="advanced-example">Advanced Example<a class="headerlink" href="#advanced-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-12-1" id="__codelineno-12-1" name="__codelineno-12-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-12-2" id="__codelineno-12-2" name="__codelineno-12-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-12-3" id="__codelineno-12-3" name="__codelineno-12-3"></a><span class="nt">theme</span><span class="p">:</span>
<a href="#__codelineno-12-4" id="__codelineno-12-4" name="__codelineno-12-4"></a><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">material</span>
<a href="#__codelineno-12-5" id="__codelineno-12-5" name="__codelineno-12-5"></a>
<a href="#__codelineno-12-6" id="__codelineno-12-6" name="__codelineno-12-6"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-12-7" id="__codelineno-12-7" name="__codelineno-12-7"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span>
<a href="#__codelineno-12-8" id="__codelineno-12-8" name="__codelineno-12-8"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-12-9" id="__codelineno-12-9" name="__codelineno-12-9"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">processed</span>
<a href="#__codelineno-12-10" id="__codelineno-12-10" name="__codelineno-12-10"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article.md-content__inner</span>
<a href="#__codelineno-12-11" id="__codelineno-12-11" name="__codelineno-12-11"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-12-12" id="__codelineno-12-12" name="__codelineno-12-12"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">true</span>
<a href="#__codelineno-12-13" id="__codelineno-12-13" name="__codelineno-12-13"></a>
<a href="#__codelineno-12-14" id="__codelineno-12-14" name="__codelineno-12-14"></a><span class="c1"># Process specific content area from Material theme</span>
</code></pre></div>
<h3 class="custom-heading" id="integration-example">Integration Example<a class="headerlink" href="#integration-example" title="Permanent link">¶</a></h3>
<p>Using with other tools in a documentation pipeline:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-13-1" id="__codelineno-13-1" name="__codelineno-13-1"></a><span class="ch">#!/bin/bash</span>
<a href="#__codelineno-13-2" id="__codelineno-13-2" name="__codelineno-13-2"></a><span class="c1"># build.sh</span>
<a href="#__codelineno-13-3" id="__codelineno-13-3" name="__codelineno-13-3"></a>
<a href="#__codelineno-13-4" id="__codelineno-13-4" name="__codelineno-13-4"></a><span class="c1"># Stage 1: Build with MkDocs + plugins</span>
<a href="#__codelineno-13-5" id="__codelineno-13-5" name="__codelineno-13-5"></a>mkdocs<span class="w"> </span>build
<a href="#__codelineno-13-6" id="__codelineno-13-6" name="__codelineno-13-6"></a>
<a href="#__codelineno-13-7" id="__codelineno-13-7" name="__codelineno-13-7"></a><span class="c1"># Stage 2: Process staged output</span>
<a href="#__codelineno-13-8" id="__codelineno-13-8" name="__codelineno-13-8"></a>python<span class="w"> </span>post_process.py<span class="w"> </span>stage/
<a href="#__codelineno-13-9" id="__codelineno-13-9" name="__codelineno-13-9"></a>
<a href="#__codelineno-13-10" id="__codelineno-13-10" name="__codelineno-13-10"></a><span class="c1"># Stage 3: Build final site</span>
<a href="#__codelineno-13-11" id="__codelineno-13-11" name="__codelineno-13-11"></a>hugo<span class="w"> </span>--contentDir<span class="o">=</span>stage/
</code></pre></div>
<h2 class="custom-heading" id="development">Development<a class="headerlink" href="#development" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="setup-development-environment">Setup Development Environment<a class="headerlink" href="#setup-development-environment" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-14-1" id="__codelineno-14-1" name="__codelineno-14-1"></a><span class="c1"># Clone the repository</span>
<a href="#__codelineno-14-2" id="__codelineno-14-2" name="__codelineno-14-2"></a>git<span class="w"> </span>clone<span class="w"> </span>https://github.com/vexyart/vexy-mkdocs-output-as-input
<a href="#__codelineno-14-3" id="__codelineno-14-3" name="__codelineno-14-3"></a><span class="nb">cd</span><span class="w"> </span>vexy-mkdocs-output-as-input
<a href="#__codelineno-14-4" id="__codelineno-14-4" name="__codelineno-14-4"></a>
<a href="#__codelineno-14-5" id="__codelineno-14-5" name="__codelineno-14-5"></a><span class="c1"># Create virtual environment</span>
<a href="#__codelineno-14-6" id="__codelineno-14-6" name="__codelineno-14-6"></a>python<span class="w"> </span>-m<span class="w"> </span>venv<span class="w"> </span>venv
<a href="#__codelineno-14-7" id="__codelineno-14-7" name="__codelineno-14-7"></a><span class="nb">source</span><span class="w"> </span>venv/bin/activate<span class="w">  </span><span class="c1"># On Windows: venv\Scripts\activate</span>
<a href="#__codelineno-14-8" id="__codelineno-14-8" name="__codelineno-14-8"></a>
<a href="#__codelineno-14-9" id="__codelineno-14-9" name="__codelineno-14-9"></a><span class="c1"># Install in development mode</span>
<a href="#__codelineno-14-10" id="__codelineno-14-10" name="__codelineno-14-10"></a>pip<span class="w"> </span>install<span class="w"> </span>-e<span class="w"> </span>.<span class="o">[</span>dev<span class="o">]</span>
<a href="#__codelineno-14-11" id="__codelineno-14-11" name="__codelineno-14-11"></a>
<a href="#__codelineno-14-12" id="__codelineno-14-12" name="__codelineno-14-12"></a><span class="c1"># Install pre-commit hooks</span>
<a href="#__codelineno-14-13" id="__codelineno-14-13" name="__codelineno-14-13"></a>pre-commit<span class="w"> </span>install
</code></pre></div>
<h3 class="custom-heading" id="running-tests">Running Tests<a class="headerlink" href="#running-tests" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-15-1" id="__codelineno-15-1" name="__codelineno-15-1"></a><span class="c1"># Run all tests</span>
<a href="#__codelineno-15-2" id="__codelineno-15-2" name="__codelineno-15-2"></a>pytest
<a href="#__codelineno-15-3" id="__codelineno-15-3" name="__codelineno-15-3"></a>
<a href="#__codelineno-15-4" id="__codelineno-15-4" name="__codelineno-15-4"></a><span class="c1"># Run with coverage</span>
<a href="#__codelineno-15-5" id="__codelineno-15-5" name="__codelineno-15-5"></a>pytest<span class="w"> </span>--cov<span class="o">=</span>mkdocs_output_as_input<span class="w"> </span>--cov-report<span class="o">=</span>html
<a href="#__codelineno-15-6" id="__codelineno-15-6" name="__codelineno-15-6"></a>
<a href="#__codelineno-15-7" id="__codelineno-15-7" name="__codelineno-15-7"></a><span class="c1"># Run specific test</span>
<a href="#__codelineno-15-8" id="__codelineno-15-8" name="__codelineno-15-8"></a>pytest<span class="w"> </span>tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
</code></pre></div>
<h3 class="custom-heading" id="code-quality">Code Quality<a class="headerlink" href="#code-quality" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-16-1" id="__codelineno-16-1" name="__codelineno-16-1"></a><span class="c1"># Format code</span>
<a href="#__codelineno-16-2" id="__codelineno-16-2" name="__codelineno-16-2"></a>black<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-3" id="__codelineno-16-3" name="__codelineno-16-3"></a>
<a href="#__codelineno-16-4" id="__codelineno-16-4" name="__codelineno-16-4"></a><span class="c1"># Lint code</span>
<a href="#__codelineno-16-5" id="__codelineno-16-5" name="__codelineno-16-5"></a>ruff<span class="w"> </span>check<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-6" id="__codelineno-16-6" name="__codelineno-16-6"></a>
<a href="#__codelineno-16-7" id="__codelineno-16-7" name="__codelineno-16-7"></a><span class="c1"># Type check</span>
<a href="#__codelineno-16-8" id="__codelineno-16-8" name="__codelineno-16-8"></a>mypy<span class="w"> </span>src
</code></pre></div>
<h2 class="custom-heading" id="contributing">Contributing<a class="headerlink" href="#contributing" title="Permanent link">¶</a></h2>
<p>Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.</p>
<ol>
<li>Fork the repository</li>
<li>Create your feature branch (<code>git checkout -b feature/AmazingFeature</code>)</li>
<li>Commit your changes (<code>git commit -m 'Add some AmazingFeature'</code>)</li>
<li>Push to the branch (<code>git push origin feature/AmazingFeature</code>)</li>
<li>Open a Pull Request</li>
</ol>
<h2 class="custom-heading" id="license">License<a class="headerlink" href="#license" title="Permanent link">¶</a></h2>
<p>This project is licensed under the MIT License - see the <a href="LICENSE">LICENSE</a> file for details.</p>
<h2 class="custom-heading" id="support">Support<a class="headerlink" href="#support" title="Permanent link">¶</a></h2>
<ul>
<li>📧 Email: you@example.com</li>
<li>🐛 Issues: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/issues">GitHub Issues</a></li>
<li>💬 Discussions: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions">GitHub Discussions</a></li>
</ul>
</div>







  
  






                
              </article>
            </div>
          
          
<script>var target=document.getElementById(location.hash.slice(1));target&&target.name&&(target.checked=target.name.startsWith("__tabbed_"))</script>
        </div>
        
      </main>
      
        <footer class="md-footer">
  
  <div class="md-footer-meta md-typeset">
    <div class="md-footer-meta__inner md-grid">
      <div class="md-copyright">
  
  
    Made with
    <a href="https://squidfunk.github.io/mkdocs-material/" target="_blank" rel="noopener">
      Material for MkDocs Insiders
    </a>
  
</div>
      
    </div>
  </div>
</footer>
      
    </div>
    <div class="md-dialog" data-md-component="dialog">
      <div class="md-dialog__inner md-typeset"></div>
    </div>
    
    
    
      
      
      <script id="__config" type="application/json">{"annotate": null, "base": ".", "features": ["navigation.instant", "navigation.tracking", "content.code.copy"], "search": "assets/javascripts/workers/search.ad38c271.min.js", "tags": null, "translations": {"clipboard.copied": "Copied to clipboard", "clipboard.copy": "Copy to clipboard", "search.result.more.one": "1 more on this page", "search.result.more.other": "# more on this page", "search.result.none": "No matching documents", "search.result.one": "1 matching document", "search.result.other": "# matching documents", "search.result.placeholder": "Type to start searching", "search.result.term.missing": "Missing", "select.version": "Select version"}, "version": null}</script>
    
    
      <script src="assets/javascripts/bundle.5c86578b.min.js"></script>
      
    
  </body>
</html>
</document_content>
</document>

<document index="16">
<source>docs/search/search_index.json</source>
<document_content>
{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"MkDocs Output as Input Plugin","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#vexy-mkdocs-output-as-input","title":"vexy-mkdocs-output-as-input","text":"<p>A MkDocs plugin that captures HTML output and creates \"cousin\" Markdown files with original frontmatter and extracted HTML content.</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#features","title":"Features","text":"<p>This plugin enables powerful post-processing workflows by:</p> <ol> <li>\u2705 Preserving your original Markdown structure and frontmatter</li> <li>\u2705 Capturing the fully-rendered HTML output from MkDocs</li> <li>\u2705 Creating new Markdown files that combine original metadata with processed HTML</li> <li>\u2705 Enabling further processing by other static site generators</li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#installation","title":"Installation","text":"<p>Install from PyPI:</p> <pre><code>uv pip install --system --upgrade vexy-mkdocs-output-as-input\n</code></pre> <p>Or install from source:</p> <pre><code>pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#quick-start","title":"Quick Start","text":"<p>Add the plugin to your <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - search  # Other plugins\n  - output-as-input\n</code></pre> <p>Build your site:</p> <pre><code>mkdocs build\n</code></pre> <p>Find your processed files in the <code>stage/</code> directory (relative to your MkDocs project root).</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#configuration","title":"Configuration","text":"<p>All configuration options with their defaults:</p> <pre><code>plugins:\n  - output-as-input:\n      stage_dir: stage          # Output directory name (default: 'stage')\n      html_element: main        # HTML element to extract (default: 'main')\n      target_tag: article       # Tag to use in output (default: 'article')\n      verbose: false            # Enable verbose logging (default: false)\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#options-explained","title":"Options Explained","text":"Option Type Default Description <code>stage_dir</code> string <code>\"stage\"</code> Directory name for output files (relative to project root) <code>html_element</code> string <code>\"main\"</code> CSS selector for the HTML element to extract <code>target_tag</code> string <code>\"article\"</code> HTML tag to use in the output (replaces extracted element's tag) <code>verbose</code> boolean <code>false</code> Enable detailed logging for debugging","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#how-it-works","title":"How It Works","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#input-process-output","title":"Input \u2192 Process \u2192 Output","text":"<ol> <li> <p>Input: Your source Markdown with frontmatter    <pre><code>---\ntitle: My Page\nauthor: Jane Doe\n---\n\n# My Page\n\nThis is my content with **markdown**.\n</code></pre></p> </li> <li> <p>MkDocs Processing: Renders to HTML as usual    <pre><code>&lt;main class=\"md-content\"&gt;\n  &lt;h1&gt;My Page&lt;/h1&gt;\n  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;\n&lt;/main&gt;\n</code></pre></p> </li> <li> <p>Output: Cousin file with preserved frontmatter + extracted HTML    <pre><code>---\ntitle: My Page\nauthor: Jane Doe\n---\n\n&lt;article class=\"md-content\"&gt;\n  &lt;h1&gt;My Page&lt;/h1&gt;\n  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;\n&lt;/article&gt;\n</code></pre></p> </li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#use-cases","title":"Use Cases","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#multi-stage-documentation-pipeline","title":"\ud83d\udd04 Multi-Stage Documentation Pipeline","text":"<p>Process documentation through MkDocs first, then feed to another SSG:</p> <pre><code># mkdocs.yml\nplugins:\n  - output-as-input:\n      stage_dir: hugo/content\n\n# Then run:\n# mkdocs build &amp;&amp; hugo build\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#content-extraction","title":"\ud83d\udcdd Content Extraction","text":"<p>Extract just the article content without theme wrapper:</p> <pre><code>plugins:\n  - output-as-input:\n      html_element: article\n      target_tag: div\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#custom-post-processing","title":"\ud83c\udfa8 Custom Post-Processing","text":"<p>Preserve MkDocs rendering while preparing for custom templates:</p> <pre><code>plugins:\n  - output-as-input:\n      stage_dir: _includes\n      html_element: main\n      target_tag: section\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#examples","title":"Examples","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#basic-example","title":"Basic Example","text":"<pre><code># mkdocs.yml\nsite_name: My Documentation\nplugins:\n  - output-as-input\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#advanced-example","title":"Advanced Example","text":"<pre><code># mkdocs.yml\nsite_name: My Documentation\ntheme:\n  name: material\n\nplugins:\n  - search\n  - output-as-input:\n      stage_dir: processed\n      html_element: article.md-content__inner\n      target_tag: main\n      verbose: true\n\n# Process specific content area from Material theme\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#integration-example","title":"Integration Example","text":"<p>Using with other tools in a documentation pipeline:</p> <pre><code>#!/bin/bash\n# build.sh\n\n# Stage 1: Build with MkDocs + plugins\nmkdocs build\n\n# Stage 2: Process staged output\npython post_process.py stage/\n\n# Stage 3: Build final site\nhugo --contentDir=stage/\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#development","title":"Development","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#setup-development-environment","title":"Setup Development Environment","text":"<pre><code># Clone the repository\ngit clone https://github.com/vexyart/vexy-mkdocs-output-as-input\ncd vexy-mkdocs-output-as-input\n\n# Create virtual environment\npython -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n\n# Install in development mode\npip install -e .[dev]\n\n# Install pre-commit hooks\npre-commit install\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#running-tests","title":"Running Tests","text":"<pre><code># Run all tests\npytest\n\n# Run with coverage\npytest --cov=mkdocs_output_as_input --cov-report=html\n\n# Run specific test\npytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#code-quality","title":"Code Quality","text":"<pre><code># Format code\nblack src tests\n\n# Lint code\nruff check src tests\n\n# Type check\nmypy src\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.</p> <ol> <li>Fork the repository</li> <li>Create your feature branch (<code>git checkout -b feature/AmazingFeature</code>)</li> <li>Commit your changes (<code>git commit -m 'Add some AmazingFeature'</code>)</li> <li>Push to the branch (<code>git push origin feature/AmazingFeature</code>)</li> <li>Open a Pull Request</li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#support","title":"Support","text":"<ul> <li>\ud83d\udce7 Email: you@example.com</li> <li>\ud83d\udc1b Issues: GitHub Issues</li> <li>\ud83d\udcac Discussions: GitHub Discussions</li> </ul>","tags":["mkdocs","plugin","documentation","pipeline"]}]}
</document_content>
</document>

<document index="17">
<source>docs/sitemap.xml</source>
<document_content>
<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
    <url>
         <loc>https://vexyart.github.io/vexy-mkdocs-output-as-input/</loc>
         <lastmod>2025-07-14</lastmod>
    </url>
</urlset>
</document_content>
</document>

<document index="18">
<source>llms.txt</source>
<document_content>
Project Structure:
📁 vexy-mkdocs-output-as-input
├── 📁 .github
│   └── 📁 workflows
│       ├── 📄 ci.yml
│       └── 📄 release.yml
├── 📁 docs
│   ├── 📁 assets
│   │   ├── 📁 images
│   │   ├── 📁 javascripts
│   │   │   ├── 📁 lunr
│   │   │   │   ├── 📁 min
│   │   │   │   │   └── ... (depth limit reached)
│   │   │   │   ├── 📄 tinyseg.js
│   │   │   │   └── 📄 wordcut.js
│   │   │   ├── 📁 workers
│   │   │   │   └── 📄 search.ad38c271.min.js
│   │   │   └── 📄 bundle.5c86578b.min.js
│   │   └── 📁 stylesheets
│   │       ├── 📄 main.8cce3a28.min.css
│   │       └── 📄 palette.ab4e12ef.min.css
│   ├── 📁 search
│   │   └── 📄 search_index.json
│   ├── 📄 404.html
│   ├── 📄 index.html
│   └── 📄 sitemap.xml
├── 📁 src
│   └── 📁 mkdocs_output_as_input
│       ├── 📄 __init__.py
│       ├── 📄 cli.py
│       └── 📄 plugin.py
├── 📁 stage
│   └── 📄 README.md
├── 📁 tests
│   ├── 📄 test_cli.py
│   └── 📄 test_plugin.py
├── 📄 .gitignore
├── 📄 AGENTS.md
├── 📄 build_docs.py
├── 📄 CHANGELOG.md
├── 📄 CLAUDE.md
├── 📄 GEMINI.md
├── 📄 LICENSE
├── 📄 llms.txt
├── 📄 mkdocs.yml
├── 📄 pyproject.toml
├── 📄 README.md
└── 📄 TODO.md


<documents>
<document index="1">
<source>.github/workflows/ci.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run pre-commit
        if: matrix.python-version == '3.11'
        run: pre-commit run --all-files

      - name: Run tests
        run: |
          pytest -v --cov=mkdocs_output_as_input --cov-report=xml --cov-report=term

      - name: Upload coverage
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run ruff
        run: ruff check --output-format=github .

      - name: Run ruff format
        run: ruff format --check --diff .

      - name: Run mypy
        run: mypy src
</document_content>
</document>

<document index="2">
<source>.github/workflows/release.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write  # Required for PyPI trusted publishing

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mkdocs-output-as-input
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # Trusted publishing configured in PyPI project settings

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Extract changelog section
        id: changelog
        run: |
          version=${GITHUB_REF#refs/tags/v}
          awk "/## \[$version\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.changelog.outputs.version }}
          body_path: release_notes.md
          files: dist/*
          draft: false
          prerelease: false
</document_content>
</document>

<document index="3">
<source>.gitignore</source>
<document_content>
# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
venv/
ENV/
env/
.venv
.env

# pyenv
.python-version

# pipenv
Pipfile.lock

# Poetry
poetry.lock

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# pytest
.pytest_cache/
.coverage
htmlcov/
.tox/
coverage.xml
*.cover
.hypothesis/

# Jupyter Notebook
.ipynb_checkpoints

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# MkDocs
site/
.cache/

# setuptools-scm
src/mkdocs_output_as_input/_version.py
</document_content>
</document>

<document index="4">
<source>AGENTS.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="5">
<source>CHANGELOG.md</source>
<document_content>
# Changelog

All notable changes to vexy-mkdocs-output-as-input will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [Unreleased]

### Added
- Complete documentation pages for getting started, configuration, examples, and API reference
- Additional test cases for edge cases, improving coverage to 91%+
- Proper error handling for missing directories (docs_dir, site_dir)
- Configuration option `include_frontmatter` to control whether YAML frontmatter is included in output files (default: true)
- Configuration option `preserve_links` to convert absolute links to relative paths (default: false)
- Configuration options `minify` and `prettify` for HTML output formatting (mutually exclusive)
- Support for multiple HTML selectors - extract multiple elements in one pass
- Support for CSS selectors in addition to tag names (e.g., `.content`, `#main`)
- CLI tool `mkdocs-output-as-input` for standalone HTML processing
- CLI options for preserving relative links, minifying, and prettifying HTML output
- CLI support for multiple selectors using `--html-element` flag multiple times
- Comprehensive test suite for CLI functionality

### Changed
- Replaced Black formatter with Ruff format in CI workflow
- Enhanced type hints with proper type ignore comments for MkDocs compatibility
- Improved error handling and logging throughout the plugin
- Refactored `build_docs.py` to use proper two-stage MkDocs pipeline:
  1. Source → Intermediate (with plugin capturing HTML)
  2. Intermediate → Final (standard MkDocs build with full Material theme)

### Fixed
- Fixed broken plugin implementation - all methods now properly implemented
- Fixed broken test suite - all tests now passing with proper fixtures
- Fixed mypy type checking errors with appropriate type annotations
- Pre-commit configuration updated to remove conflicting Black formatter
- Documentation build now generates proper MkDocs Material site (not manual HTML)
- Removed duplicate README.md from docs directory

## [0.2.0] - 2025-01-14

### Changed
- **BREAKING**: Migrated to src-layout package structure
- **BREAKING**: Minimum Python version is now 3.9
- Switched from Loguru to standard library logging for better integration
- Modernized packaging with PEP 621 compliant pyproject.toml
- Improved type hints throughout the codebase

### Added
- Comprehensive test suite with >90% coverage
- Pre-commit hooks for code quality
- GitHub Actions CI/CD workflows
- Support for Python 3.9, 3.10, 3.11, and 3.12
- Automated release process with trusted PyPI publishing
- Development documentation in README

### Fixed
- Better error handling for missing files
- Graceful handling of invalid YAML frontmatter
- Improved logging messages for debugging

## [0.1.0] - 2025-01-10

### Added
- Initial release of vexy-mkdocs-output-as-input plugin
- Core functionality to capture HTML output and create cousin Markdown files
- Configurable stage directory for output files
- Configurable HTML element extraction (default: `<main>`)
- Configurable target tag transformation (default: `<article>`)
- Preservation of original YAML frontmatter
- Verbose logging mode for debugging
- Basic documentation and examples

[Unreleased]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.2.0...HEAD
[0.2.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.1.0...v0.2.0
[0.1.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/releases/tag/v0.1.0
</document_content>
</document>

<document index="6">
<source>CLAUDE.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="7">
<source>GEMINI.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="8">
<source>LICENSE</source>
<document_content>
MIT License

Copyright (c) 2025 MkDocs Output as Input Contributors

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</document_content>
</document>

<document index="9">
<source>README.md</source>
<document_content>
# vexy-mkdocs-output-as-input

[![PyPI version](https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)
[![CI](https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg)](https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg)](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Python versions](https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)

A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.

## Features

This plugin enables powerful post-processing workflows by:

1. ✅ Preserving your original Markdown structure and frontmatter
2. ✅ Capturing the fully-rendered HTML output from MkDocs
3. ✅ Creating new Markdown files that combine original metadata with processed HTML
4. ✅ Enabling further processing by other static site generators

## Installation

Install from PyPI:

```bash
uv pip install --system --upgrade vexy-mkdocs-output-as-input
```

Or install from source:

```bash
pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input
```

This also installs a CLI tool: `mkdocs-output-as-input`

## Quick Start

Add the plugin to your `mkdocs.yml`:

```yaml
plugins:
  - search  # Other plugins
  - output-as-input
```

Build your site:

```bash
mkdocs build
```

Find your processed files in the `stage/` directory (relative to your MkDocs project root).

## Configuration

All configuration options with their defaults:

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory name (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      include_frontmatter: true # Include YAML frontmatter (default: true)
      preserve_links: false     # Convert absolute to relative links (default: false)
      verbose: false            # Enable verbose logging (default: false)
```

### Advanced Examples

Extract multiple elements:
```yaml
plugins:
  - output-as-input:
      html_element: [main, aside]  # Extract both main content and sidebar
```

Extract using CSS selectors:
```yaml
plugins:
  - output-as-input:
      html_element: .content  # Extract element with class="content"
```

### Options Explained

| Option | Type | Default | Description |
|--------|------|---------|-------------|
| `stage_dir` | string | `"stage"` | Directory name for output files (relative to project root) |
| `html_element` | string or list | `"main"` | CSS selector(s) for HTML elements to extract |
| `target_tag` | string | `"article"` | HTML tag to use in the output (replaces extracted element's tag) |
| `include_frontmatter` | boolean | `true` | Include YAML frontmatter in output files |
| `preserve_links` | boolean | `false` | Convert absolute links to relative (e.g., `/path` → `./path`) |
| `minify` | boolean | `false` | Minify HTML output (remove whitespace) |
| `prettify` | boolean | `false` | Prettify HTML output (add indentation) |
| `verbose` | boolean | `false` | Enable detailed logging for debugging |

## How It Works

### Input → Process → Output

1. **Input**: Your source Markdown with frontmatter
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   # My Page
   
   This is my content with **markdown**.
   ```

2. **MkDocs Processing**: Renders to HTML as usual
   ```html
   <main class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </main>
   ```

3. **Output**: Cousin file with preserved frontmatter + extracted HTML
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   <article class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </article>
   ```

## Use Cases

### 🔄 Multi-Stage Documentation Pipeline

Process documentation through MkDocs first, then feed to another SSG:

```yaml
# mkdocs.yml
plugins:
  - output-as-input:
      stage_dir: hugo/content

# Then run:
# mkdocs build && hugo build
```

### 📝 Content Extraction

Extract just the article content without theme wrapper:

```yaml
plugins:
  - output-as-input:
      html_element: article
      target_tag: div
```

### 🎨 Custom Post-Processing

Preserve MkDocs rendering while preparing for custom templates:

```yaml
plugins:
  - output-as-input:
      stage_dir: _includes
      html_element: main
      target_tag: section
```

## Examples

### Basic Example

```yaml
# mkdocs.yml
site_name: My Documentation
plugins:
  - output-as-input
```

### Advanced Example

```yaml
# mkdocs.yml
site_name: My Documentation
theme:
  name: material

plugins:
  - search
  - output-as-input:
      stage_dir: processed
      html_element: article.md-content__inner
      target_tag: main
      verbose: true

# Process specific content area from Material theme
```

### Integration Example

Using with other tools in a documentation pipeline:

```bash
#!/bin/bash
# build.sh

# Stage 1: Build with MkDocs + plugins
mkdocs build

# Stage 2: Process staged output
python post_process.py stage/

# Stage 3: Build final site
hugo --contentDir=stage/
```

## Development

### Setup Development Environment

```bash
# Clone the repository
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input

# Create virtual environment
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install in development mode
pip install -e .[dev]

# Install pre-commit hooks
pre-commit install
```

### Running Tests

```bash
# Run all tests
pytest

# Run with coverage
pytest --cov=mkdocs_output_as_input --cov-report=html

# Run specific test
pytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
```

### Code Quality

```bash
# Format code
black src tests

# Lint code
ruff check src tests

# Type check
mypy src
```

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Support

- 📧 Email: you@example.com
- 🐛 Issues: [GitHub Issues](https://github.com/vexyart/vexy-mkdocs-output-as-input/issues)
- 💬 Discussions: [GitHub Discussions](https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions)
</document_content>
</document>

<document index="10">
<source>TODO.md</source>
<document_content>
# TODO


</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/build_docs.py
# Language: python

import os
import shutil
import subprocess
import tempfile
from pathlib import Path
import yaml

def run_command((cmd, cwd=None)):
    """Run a command and print output."""

def create_stage_mkdocs_config((temp_dir)):
    """Create mkdocs.yml for stage 1 (source → intermediate)."""

def create_final_mkdocs_config(()):
    """Create mkdocs.yml for final build (intermediate → final site)."""

def step1_create_intermediate(()):
    """Step 1: Build README.md → stage/README.md with plugin."""

def step2_build_final_docs(()):
    """Step 2: Build stage/README.md → docs/ with standard MkDocs."""

def main(()):
    """Run the documentation build pipeline."""


<document index="11">
<source>docs/404.html</source>
<document_content>

<!doctype html>
<html lang="en" class="no-js">
  <head>
    
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width,initial-scale=1">
      
        <meta name="description" content="A plugin that captures HTML output and creates cousin Markdown files">
      
      
      
      
      
      
        
      
      
      <link rel="icon" href="/vexy-mkdocs-output-as-input/assets/images/favicon.png">
      <meta name="generator" content="mkdocs-1.6.1, mkdocs-material-9.6.15+insiders-4.53.16">
    
    
      
        <title>MkDocs Output as Input Plugin</title>
      
    
    
      <link rel="stylesheet" href="/vexy-mkdocs-output-as-input/assets/stylesheets/main.8cce3a28.min.css">
      
        
        <link rel="stylesheet" href="/vexy-mkdocs-output-as-input/assets/stylesheets/palette.ab4e12ef.min.css">
      
      


    
    
      
    
    
      
        
        
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,700,700i%7CRoboto+Mono:400,400i,700,700i&display=fallback">
        <style>:root{--md-text-font:"Roboto";--md-code-font:"Roboto Mono"}</style>
      
    
    
    <script>__md_scope=new URL("/vexy-mkdocs-output-as-input/",location),__md_hash=e=>[...e].reduce(((e,_)=>(e<<5)-e+_.charCodeAt(0)),0),__md_get=(e,_=localStorage,t=__md_scope)=>JSON.parse(_.getItem(t.pathname+"."+e)),__md_set=(e,_,t=localStorage,a=__md_scope)=>{try{t.setItem(a.pathname+"."+e,JSON.stringify(_))}catch(e){}}</script>
    
      

    
    
  </head>
  
  
    
    
      
    
    
    
    
    <body dir="ltr" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo">
  
    
    <input class="md-toggle" data-md-toggle="drawer" type="checkbox" id="__drawer" autocomplete="off">
    <input class="md-toggle" data-md-toggle="search" type="checkbox" id="__search" autocomplete="off">
    <label class="md-overlay" for="__drawer"></label>
    <div data-md-component="skip">
      
    </div>
    <div data-md-component="announce">
      
    </div>
    
    
      

  

<header class="md-header md-header--shadow" data-md-component="header">
  <nav class="md-header__inner md-grid" aria-label="Header">
    <a href="/vexy-mkdocs-output-as-input/." title="MkDocs Output as Input Plugin" class="md-header__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    <label class="md-header__button md-icon" for="__drawer">
      
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 6h18v2H3zm0 5h18v2H3zm0 5h18v2H3z"/></svg>
    </label>
    <div class="md-header__title" data-md-component="header-title">
      <div class="md-header__ellipsis">
        <div class="md-header__topic">
          <span class="md-ellipsis">
            MkDocs Output as Input Plugin
          </span>
        </div>
        <div class="md-header__topic" data-md-component="header-topic">
          <span class="md-ellipsis">
            
              
            
          </span>
        </div>
      </div>
    </div>
    
      
        <form class="md-header__option" data-md-component="palette">
  
    
    
    
    <input class="md-option" data-md-color-media="" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo"  aria-hidden="true"  type="radio" name="__palette" id="__palette_0">
    
  
</form>
      
    
    
      <script>var palette=__md_get("__palette");if(palette&&palette.color){if("(prefers-color-scheme)"===palette.color.media){var media=matchMedia("(prefers-color-scheme: light)"),input=document.querySelector(media.matches?"[data-md-color-media='(prefers-color-scheme: light)']":"[data-md-color-media='(prefers-color-scheme: dark)']");palette.color.media=input.getAttribute("data-md-color-media"),palette.color.scheme=input.getAttribute("data-md-color-scheme"),palette.color.primary=input.getAttribute("data-md-color-primary"),palette.color.accent=input.getAttribute("data-md-color-accent")}for(var[key,value]of Object.entries(palette.color))document.body.setAttribute("data-md-color-"+key,value)}</script>
    
    
    
      
      
        <label class="md-header__button md-icon" for="__search">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        </label>
        <div class="md-search" data-md-component="search" role="dialog">
  <label class="md-search__overlay" for="__search"></label>
  <div class="md-search__inner" role="search">
    <form class="md-search__form" name="search">
      <input type="text" class="md-search__input" name="query" aria-label="Search" placeholder="Search" autocapitalize="off" autocorrect="off" autocomplete="off" spellcheck="false" data-md-component="search-query" required>
      <label class="md-search__icon md-icon" for="__search">
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20 11v2H8l5.5 5.5-1.42 1.42L4.16 12l7.92-7.92L13.5 5.5 8 11z"/></svg>
      </label>
      <nav class="md-search__options" aria-label="Search">
        
        <button type="reset" class="md-search__icon md-icon" title="Clear" aria-label="Clear" tabindex="-1">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>
        </button>
      </nav>
      
    </form>
    <div class="md-search__output">
      <div class="md-search__scrollwrap" tabindex="0" data-md-scrollfix>
        <div class="md-search-result" data-md-component="search-result">
          <div class="md-search-result__meta">
            Initializing search
          </div>
          <ol class="md-search-result__list" role="presentation"></ol>
        </div>
      </div>
    </div>
  </div>
</div>
      
    
    
  </nav>
  
</header>
    
    <div class="md-container" data-md-component="container">
      
      
        
          
        
      
      <main class="md-main" data-md-component="main">
        <div class="md-main__inner md-grid">
          
            
              
              <div class="md-sidebar md-sidebar--primary" data-md-component="sidebar" data-md-type="navigation" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    



<nav class="md-nav md-nav--primary" aria-label="Navigation" data-md-level="0">
  <label class="md-nav__title" for="__drawer">
    <a href="/vexy-mkdocs-output-as-input/." title="MkDocs Output as Input Plugin" class="md-nav__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    MkDocs Output as Input Plugin
  </label>
  
  <ul class="md-nav__list" data-md-scrollfix>
    
      
      
  
  
  
  
    <li class="md-nav__item">
      <a href="/vexy-mkdocs-output-as-input/." class="md-nav__link">
        
  
  
  <span class="md-ellipsis">
    
  
    Home
  

    
  </span>
  
  

      </a>
    </li>
  

    
  </ul>
</nav>
                  </div>
                </div>
              </div>
            
            
              
              <div class="md-sidebar md-sidebar--secondary" data-md-component="sidebar" data-md-type="toc" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    

<nav class="md-nav md-nav--secondary" aria-label="Table of contents">
  
  
  
  
</nav>
                  </div>
                </div>
              </div>
            
          
          
            <div class="md-content" data-md-component="content">
              
              <article class="md-content__inner md-typeset">
                
  <h1>404 - Not found</h1>

              </article>
            </div>
          
          
<script>var target=document.getElementById(location.hash.slice(1));target&&target.name&&(target.checked=target.name.startsWith("__tabbed_"))</script>
        </div>
        
      </main>
      
        <footer class="md-footer">
  
  <div class="md-footer-meta md-typeset">
    <div class="md-footer-meta__inner md-grid">
      <div class="md-copyright">
  
  
    Made with
    <a href="https://squidfunk.github.io/mkdocs-material/" target="_blank" rel="noopener">
      Material for MkDocs Insiders
    </a>
  
</div>
      
    </div>
  </div>
</footer>
      
    </div>
    <div class="md-dialog" data-md-component="dialog">
      <div class="md-dialog__inner md-typeset"></div>
    </div>
    
    
    
      
      
      <script id="__config" type="application/json">{"annotate": null, "base": "/vexy-mkdocs-output-as-input/", "features": ["navigation.instant", "navigation.tracking", "content.code.copy"], "search": "/vexy-mkdocs-output-as-input/assets/javascripts/workers/search.ad38c271.min.js", "tags": null, "translations": {"clipboard.copied": "Copied to clipboard", "clipboard.copy": "Copy to clipboard", "search.result.more.one": "1 more on this page", "search.result.more.other": "# more on this page", "search.result.none": "No matching documents", "search.result.one": "1 matching document", "search.result.other": "# matching documents", "search.result.placeholder": "Type to start searching", "search.result.term.missing": "Missing", "select.version": "Select version"}, "version": null}</script>
    
    
      <script src="/vexy-mkdocs-output-as-input/assets/javascripts/bundle.5c86578b.min.js"></script>
      
    
  </body>
</html>
</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/bundle.5c86578b.min.js
# Language: javascript

function e((r))

function a((k))

function c((k))

function p((k))

function l((k))

function f((k))

function u((k))

function d((k))

function v((k))

function S((k))

function X(())

function re(())

function ee((k))

function Ka((e))

function u((q))

function S((q))

function k((q))

function R((q))

function se((q,C))

function ce((q,C))

function he((q,C,_))

function Se((q,C))

function Ue((q,C))

function Qi((q))

function Yi((q,C))

function Bi((q))

function Gi(())

function Qt((q))

function Mr((q,C))

function _((D,N))

function s((a,c))

function a((l,f,u,d,v))

function c((l,f,u,d,v))

function p((l,f,u,d))

function c((u,d,v))

function p((u,d,v))

function l((u,d,v))

function f((u,d,v))

function n((i))

function n(())

function p(())

function r((o))

function ie((e,t))

function r(())

function Eo((e,t,r,o))

function n((i))

function a((l))

function c((l))

function p((l))

function Gt((e,t))

function a((p))

function c((p))

function Oe((e))

function K((e,t))

function B((e,t,r))

function dt((e))

function wo((e,t,r))

function s((d))

function a((d,v))

function c((d,v))

function p((d))

function l((d))

function f((d))

function u((d,v))

function To((e))

function o((i))

function n((i,s,a,c))

function I((e))

function yt((e))

function Ze((e,t))

function e((t))

function Xt((e))

function So((e))

function Zt((e))

function ge(())

function Lo((e))

function Mo((e))

function Pr((e,t,r))

function Et((e))

function _o((e))

function t((r))

function Rr((e,t))

function e((t))

function t((r,o,n))

function er((e))

function aa((e))

function Ir((e,t))

function be((e))

function Ao(())

function Fr((e))

function e((t))

function Co((e))

function ca((e))

function pa((e))

function la((e))

function E((e))

function w((e,t,r,o,n))

function t((r,o,n,i,s,a))

function t(())

function t((r,o))

function t((r))

function t((r,o,n))

function t((r,o))

function t((r,o))

function e((t,r))

function t((r,o))

function t((r,o))

function t(())

function t((r,o))

function t(())

function tr((e))

function Vr((e))

function pt((e))

function Fe((e))

function rr((e,t))

function or((e))

function nr((e))

function ir((e))

function ar((e))

function fa(())

function cr((e))

function pr((e))

function lr((e))

function U((e))

function ua((e))

function da((e))

function ha((e))

function ba((e))

function jo((e))

function va((e))

function ga((e,t))

function _e((e,t,r,o,n))

function xe((e,t))

function et((e,t))

function Uo((e,t))

function Wo((e,t))

function Do((e,t))

function Vo((e,t))

function mr((e,t))

function No((e,t))

function zo((e,t))

function fe((e,t))

function $(())

function Nr((e,t))

function qo((e))

function m((e,t))

function xa((e,t))

function lt((e))

function Ko((e))

function Oa((e))

function Qo((e,t))

function z(())

function zr((e,t,r))

function Yo((e,t,r))

function Bo((e,t,r,o,n,i,s,a))

function J((e,t,r))

function Mt((e))

function Go(())

function Ke(())

function H((e))

function h((e,t,r,o))

function Jo((e,t))

function Aa((e))

function Ca((e))

function ka((e))

function ur((e,t,r))

function He((e,t,r))

function L(())

function dr((e))

function g((e,t))

function rt(())

function Xo((e))

function $e((e,t))

function ot((e,t))

function ve((e))

function Zo((e,t,r,o,n))

function qr(())

function Pe(())

function jt((e))

function Ae((e,t))

function c(())

function Qe((e))

function Ee((e))

function oe(())

function en((e))

function Kr((e,t))

function nt((e,t))

function Qr((e,t))

function Y((e,t))

function $a((e,t))

function ne((e,t))

function tn((e))

function Pa(())

function ae(())

function hr((e,t))

function A((e))

function Re((e,t))

function Yr((e))

function rn(())

function Ve(())

function vt((e))

function Ut((e,t))

function le((e))

function Br((e,t))

function Z((e,t,r))

function Ie((e))

function Gr((e))

function Q(())

function b((e,t))

function W((e))

function Jr((e,t))

function O((e,t,r))

function on((e,t))

function gt((e,t,r))

function te(())

function nn(())

function Xr(())

function an(())

function M((e,t=document))

function j((e,t=document))

function ue((e,t=document))

function Ne(())

function Ye((e))

function it((e,t))

function sn((e,t))

function x((e,t,...r))

function br((e))

function _t((e))

function de((e))

function Le((e))

function At((e))

function vr((e))

function pn((e))

function Be((e))

function ln((e))

function mn((e))

function gr((e))

function Ge((e))

function mt((e))

function un((e,t=16))

function dn((e))

function at((e,t))

function Je((e))

function ja((e,t))

function Ua(())

function hn(())

function we(())

function st((e,t=!1))

function bn(())

function vn(())

function gn((e))

function Zr((e))

function yn((e))

function Wt((e))

function xn(())

function eo((e,t))

function to((e,t))

function ze((e,t))

function xr((e,t))

function En((e,t))

function wn(())

function Tn(())

function Sn(())

function On(())

function Ln(())

function Er((e,{viewport$:t,header$:r}))

function Wa((e))

function Da((e))

function Mn((e,t=new Worker(e)))

function Te(())

function V((e))

function Me((e,t))

function Ce((e,t=document))

function me((e,t=document))

function Na((e))

function _n((e))

function za((e,{target$:t}))

function An((e,t))

function Dt((e,t))

function wr((...e))

function Cn((...e))

function kn((e,t))

function Hn((e))

function $n(())

function Pn(())

function oo((e,t))

function Fn((e))

function jn((e))

function no((e))

function Un((e))

function Qa((e))

function Wn((e,t))

function Ba((e,t=250))

function Vt((e,t,r=250))

function Xe((e,{viewport$:t},r=document.body))

function Ga((e,t))

function Dn((e,t,{target$:r}))

function Ja((e))

function Xa((e))

function Vn((e,t))

function Tr((e,t,{target$:r,print$:o}))

function Nn((e))

function zn((e,t))

function Qn((e))

function es((e))

function Yn((e,t))

function ts((e,{target$:t,print$:r}))

function Bn((e,t))

function rs((e))

function os((e,t))

function Jn((e,t))

function as(())

function Zn((e))

function ti((e))

function ss((e))

function ri((e,{viewport$:t,target$:r}))

function oi((e,t))

function cs((e,{alert$:t}))

function ni((e,t))

function ls((e,t))

function ii((e))

function ms(({viewport$:e}))

function ai((e,t))

function si((e,{header$:t,main$:r}))

function fs((e,{viewport$:t,header$:r}))

function ci((e,t))

function pi((e,{viewport$:t,header$:r}))

function us((e))

function li((e))

function mi((e,{progress$:t}))

function fi((e,t))

function ds((e,t))

function kt((e))

function ui(({document$:e}))

function hs((e))

function di(({alert$:e}))

function hi((e,t))

function bi((e))

function vi((e))

function bs((e))

function gi(({sitemap$:e,location$:t,viewport$:r,progress$:o}))

function xi((e))

function zt((e))

function Sr((e))

function Ei((e,t))

function wi((e))

function po((e,t))

function ys((e,t))

function xs((e,t))

function Es((e))

function Ti(({document$:e}))

function ws((e,{worker$:t}))

function Si((e,{worker$:t}))

function Oi((e,{worker$:t,query$:r}))

function Ts((e,{query$:t}))

function Li((e,t))

function Mi((e,{worker$:t,keyboard$:r}))

function _i((e,{index$:t,keyboard$:r}))

function Ai((e,{index$:t,location$:r}))

function Ss((e,{viewport$:t,main$:r}))

function lo((e,o))

function Ci((e,t))

function ki((e,t))

function Hi((e))

function Ls((e))

function $i((e))

function Ms((e,{viewport$:t,header$:r}))

function Pi((e,t))

function _s((e,{viewport$:t,header$:r}))

function Ri((e,{viewport$:t,header$:r,main$:o,target$:n}))

function As((e,{viewport$:t,main$:r,target$:o}))

function Ii((e,{viewport$:t,header$:r,main$:o,target$:n}))

function Fi(({document$:e,viewport$:t}))

function ji(({document$:e,tablet$:t}))

function Cs(())

function Ui(({document$:e}))

function Wi(({viewport$:e,tablet$:t}))

function ks(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ar.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.da.min.js
# Language: javascript

function e(())

function n(())

function t(())

function s(())

function o(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.de.min.js
# Language: javascript

function e((e,r,n))

function i(())

function s(())

function t(())

function o(())

function c(())

function u(())

function a(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.du.min.js
# Language: javascript

function e(())

function n((e))

function o(())

function t(())

function s(())

function u(())

function c(())

function a(())

function l(())

function m(())

function d(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.el.min.js
# Language: javascript

function e((e))

function t((e))

function r((e))

function n((n))


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.es.min.js
# Language: javascript

function e(())

function n(())

function i(())

function a(())

function t(())

function o(())

function u(())

function w(())

function c(())

function m(())

function l((e,s))

function d((e))

function b(())

function f(())

function _(())

function h(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.fi.min.js
# Language: javascript

function i(())

function n(())

function t(())

function s(())

function o(())

function l(())

function a(())

function u(())

function c(())

function m(())

function w(())

function _(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.fr.min.js
# Language: javascript

function e((e,r,s))

function i((e,r,s))

function n(())

function t(())

function u(())

function o(())

function c(())

function a(())

function l(())

function w(())

function f(())

function m(())

function _(())

function b(())

function d(())

function k(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.he.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.hi.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.hu.min.js
# Language: javascript

function e(())

function i(())

function a(())

function t(())

function s(())

function c(())

function o(())

function w(())

function l(())

function u(())

function m(())

function k(())

function f(())

function b(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.hy.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.it.min.js
# Language: javascript

function e((e,r,n))

function i(())

function o((e))

function t(())

function s(())

function a(())

function u(())

function c(())

function w(())

function l(())

function m(())

function f(())

function v(())

function b(())

function d(())

function _(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ja.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.jp.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.kn.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ko.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.multi.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.nl.min.js
# Language: javascript

function r(())

function n((r))

function o(())

function t(())

function s(())

function u(())

function c(())

function a(())

function l(())

function m(())

function f(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.no.min.js
# Language: javascript

function e(())

function i(())

function t(())

function o(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.pt.min.js
# Language: javascript

function e(())

function n(())

function i(())

function o(())

function t(())

function a(())

function u(())

function w(())

function m(())

function c(())

function l(())

function f(())

function d(())

function v((e,r))

function p(())

function _(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ro.min.js
# Language: javascript

function e((e,i))

function n(())

function t(())

function a(())

function o(())

function u(())

function c(())

function s(())

function w(())

function m(())

function l(())

function f(())

function p(())

function d(())

function b(())

function v(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ru.min.js
# Language: javascript

function e(())

function t(())

function w(())

function i(())

function u((e,n))

function o(())

function s((e,n))

function c(())

function m(())

function f(())

function l(())

function a(())

function p(())

function d(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.sa.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.stemmer.support.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.sv.min.js
# Language: javascript

function e(())

function t(())

function i(())

function s(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.ta.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.te.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.th.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.tr.min.js
# Language: javascript

function r((r,i,e))

function n(())

function t((r,i))

function u((r))

function o(())

function s(())

function c(())

function l(())

function a(())

function m(())

function d(())

function f(())

function b(())

function w(())

function _(())

function k(())

function p(())

function g(())

function y(())

function z(())

function v(())

function h(())

function q(())

function C(())

function P(())

function F(())

function S(())

function W(())

function L(())

function x(())

function A(())

function E(())

function j(())

function T(())

function Z(())

function B(())

function D(())

function G(())

function H(())

function I(())

function J(())

function K(())

function M((r))

function N((r))

function O(())

function Q(())

function R(())

function U(())

function V(())

function X((r,i,e))

function Y(())

function $(())

function rr((r,i,e))

function ir(())

function er(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.vi.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/min/lunr.zh.min.js
# Language: javascript



# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/tinyseg.js
# Language: javascript

function TinySegmenter(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/lunr/wordcut.js
# Language: javascript

function s((o,u))

function isMatch((pat, offset, ch))

function replacer((key, value))

function truncate((s, n))

function getMessage((self))

function fail((actual, expected, message, operator, stackStartFunction))

function ok((value, message))

function _deepEqual((actual, expected))

function isArguments((object))

function objEquiv((a, b))

function expectedException((actual, expected))

function _throws((shouldThrow, block, expected, message))

function balanced((a, b, str))

function maybeMatch((reg, str))

function range((a, b, str))

function numeric((str))

function escapeBraces((str))

function unescapeBraces((str))

function parseCommaParts((str))

function expandTop((str))

function identity((e))

function embrace((str))

function isPadded((el))

function lte((i, y))

function gte((i, y))

function expand((str, isTop))

function EventEmitter(())

function g(())

function isFunction((arg))

function isNumber((arg))

function isObject((arg))

function isUndefined((arg))

function ownProp((obj, field))

function alphasorti((a, b))

function alphasort((a, b))

function setupIgnores((self, options))

function ignoreMap((pattern))

function setopts((self, pattern, options))

function deprecationWarning((options))

function finish((self))

function mark((self, p))

function makeAbs((self, f))

function isIgnored((self, path))

function childrenIgnored((self, path))

function glob((pattern, options, cb))

function Glob((pattern, options, cb))

function done(())

function next(())

function lstatcb_((er, lstat))

function readdirCb((self, abs, cb))

function lstatcb_((er, lstat))

function globSync((pattern, options))

function GlobSync((pattern, options))

function inflight((key, cb))

function makeres((key))

function slice((args))

function charSet((s))

function filter((pattern, options))

function ext((a, b))

function minimatch((p, pattern, options))

function Minimatch((pattern, options))

function make(())

function parseNegate(())

function braceExpand((pattern, options))

function parse((pattern, isSub))

function clearStateChar(())

function makeRe(())

function match((f, partial))

function globUnescape((s))

function regExpEscape((s))

function once((fn))

function onceStrict((fn))

function normalizeArray((parts, allowAboveRoot))

function trim((arr))

function filter((xs, f))

function posix((path))

function win32((path))

function defaultSetTimout(())

function defaultClearTimeout(())

function runTimeout((fun))

function runClearTimeout((marker))

function cleanUpNextTick(())

function drainQueue(())

function Item((fun, array))

function noop(())

function createReduce((dir))

function iterator((obj, iteratee, memo, keys, index, length))

function createPredicateIndexFinder((dir))

function createIndexFinder((dir, predicateFind, sortedIndex))

function collectNonEnumProps((obj, keys))

function deprecated(())

function inspect((obj, opts))

function stylizeWithColor((str, styleType))

function stylizeNoColor((str, styleType))

function arrayToHash((array))

function formatValue((ctx, value, recurseTimes))

function formatPrimitive((ctx, value))

function formatError((value))

function formatArray((ctx, value, recurseTimes, visibleKeys, keys))

function formatProperty((ctx, value, recurseTimes, visibleKeys, key, array))

function reduceToSingleString((output, base, braces))

function isArray((ar))

function isBoolean((arg))

function isNull((arg))

function isNullOrUndefined((arg))

function isNumber((arg))

function isString((arg))

function isSymbol((arg))

function isUndefined((arg))

function isRegExp((re))

function isObject((arg))

function isDate((d))

function isError((e))

function isFunction((arg))

function isPrimitive((arg))

function objectToString((o))

function pad((n))

function timestamp(())

function hasOwnProperty((obj, prop))

function wrappy((fn, cb))

function wrapper(())


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/docs/assets/javascripts/workers/search.ad38c271.min.js
# Language: javascript

function ne((t,e=document))

function ke((t,e=document))

function ie((t))

function H((t,e,r))

function se((t,e))

function oe((t,e,r,n=!1))

function q((t,e,r,n=!1))

function ae((t))

function ue((t,e=r=>r))

function ce((t))

function le((t))

function he((t,e))

function fe((t,e))

function Oe((t))

function Re((t,e))

function Ie((t))

function Fe((t))


<document index="12">
<source>docs/assets/stylesheets/main.8cce3a28.min.css</source>
<document_content>
@charset "UTF-8";html{-webkit-text-size-adjust:none;-moz-text-size-adjust:none;text-size-adjust:none;box-sizing:border-box}*,:after,:before{box-sizing:inherit}@media (prefers-reduced-motion){*,:after,:before{transition:none!important}}body{margin:0}a,button,input,label{-webkit-tap-highlight-color:transparent}a{color:inherit;text-decoration:none}hr{border:0;box-sizing:initial;display:block;height:.05rem;overflow:visible;padding:0}small{font-size:80%}sub,sup{line-height:1em}img{border-style:none}table{border-collapse:initial;border-spacing:0}td,th{font-weight:400;vertical-align:top}button{background:#0000;border:0;font-family:inherit;font-size:inherit;margin:0;padding:0}input{border:0;outline:none}:root{--md-primary-fg-color:#4051b5;--md-primary-fg-color--light:#5d6cc0;--md-primary-fg-color--dark:#303fa1;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3;--md-accent-fg-color:#526cfe;--md-accent-fg-color--transparent:#526cfe1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-scheme=default]{color-scheme:light}[data-md-color-scheme=default] img[src$="#gh-dark-mode-only"],[data-md-color-scheme=default] img[src$="#only-dark"]{display:none}:root,[data-md-color-scheme=default]{--md-hue:225deg;--md-default-fg-color:#000000de;--md-default-fg-color--light:#0000008a;--md-default-fg-color--lighter:#00000052;--md-default-fg-color--lightest:#00000012;--md-default-bg-color:#fff;--md-default-bg-color--light:#ffffffb3;--md-default-bg-color--lighter:#ffffff4d;--md-default-bg-color--lightest:#ffffff1f;--md-code-fg-color:#36464e;--md-code-bg-color:#f5f5f5;--md-code-bg-color--light:#f5f5f5b3;--md-code-bg-color--lighter:#f5f5f54d;--md-code-hl-color:#4287ff;--md-code-hl-color--light:#4287ff1a;--md-code-hl-number-color:#d52a2a;--md-code-hl-special-color:#db1457;--md-code-hl-function-color:#a846b9;--md-code-hl-constant-color:#6e59d9;--md-code-hl-keyword-color:#3f6ec6;--md-code-hl-string-color:#1c7d4d;--md-code-hl-name-color:var(--md-code-fg-color);--md-code-hl-operator-color:var(--md-default-fg-color--light);--md-code-hl-punctuation-color:var(--md-default-fg-color--light);--md-code-hl-comment-color:var(--md-default-fg-color--light);--md-code-hl-generic-color:var(--md-default-fg-color--light);--md-code-hl-variable-color:var(--md-default-fg-color--light);--md-typeset-color:var(--md-default-fg-color);--md-typeset-a-color:var(--md-primary-fg-color);--md-typeset-del-color:#f5503d26;--md-typeset-ins-color:#0bd57026;--md-typeset-kbd-color:#fafafa;--md-typeset-kbd-accent-color:#fff;--md-typeset-kbd-border-color:#b8b8b8;--md-typeset-mark-color:#ffff0080;--md-typeset-table-color:#0000001f;--md-typeset-table-color--light:rgba(0,0,0,.035);--md-admonition-fg-color:var(--md-default-fg-color);--md-admonition-bg-color:var(--md-default-bg-color);--md-warning-fg-color:#000000de;--md-warning-bg-color:#ff9;--md-footer-fg-color:#fff;--md-footer-fg-color--light:#ffffffb3;--md-footer-fg-color--lighter:#ffffff73;--md-footer-bg-color:#000000de;--md-footer-bg-color--dark:#00000052;--md-shadow-z1:0 0.2rem 0.5rem #0000000d,0 0 0.05rem #0000001a;--md-shadow-z2:0 0.2rem 0.5rem #0000001a,0 0 0.05rem #00000040;--md-shadow-z3:0 0.2rem 0.5rem #0003,0 0 0.05rem #00000059}.md-icon svg{fill:currentcolor;display:block;height:1.2rem;width:1.2rem}body{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;--md-text-font-family:var(--md-text-font,_),-apple-system,BlinkMacSystemFont,Helvetica,Arial,sans-serif;--md-code-font-family:var(--md-code-font,_),SFMono-Regular,Consolas,Menlo,monospace}aside,body,input{font-feature-settings:"kern","liga";color:var(--md-typeset-color);font-family:var(--md-text-font-family)}code,kbd,pre{font-feature-settings:"kern";font-family:var(--md-code-font-family)}:root{--md-typeset-table-sort-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m18 21-4-4h3V7h-3l4-4 4 4h-3v10h3M2 19v-2h10v2M2 13v-2h7v2M2 7V5h4v2z"/></svg>');--md-typeset-table-sort-icon--asc:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 17h3l-4 4-4-4h3V3h2M2 17h10v2H2M6 5v2H2V5m0 6h7v2H2z"/></svg>');--md-typeset-table-sort-icon--desc:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 7h3l-4-4-4 4h3v14h2M2 17h10v2H2M6 5v2H2V5m0 6h7v2H2z"/></svg>')}.md-typeset{-webkit-print-color-adjust:exact;color-adjust:exact;font-size:.8rem;line-height:1.6;overflow-wrap:break-word}@media print{.md-typeset{font-size:.68rem}}.md-typeset blockquote,.md-typeset dl,.md-typeset figure,.md-typeset ol,.md-typeset pre,.md-typeset ul{margin-bottom:1em;margin-top:1em}.md-typeset h1{color:var(--md-default-fg-color--light);font-size:2em;line-height:1.3;margin:0 0 1.25em}.md-typeset h1,.md-typeset h2{font-weight:300;letter-spacing:-.01em}.md-typeset h2{font-size:1.5625em;line-height:1.4;margin:1.6em 0 .64em}.md-typeset h3{font-size:1.25em;font-weight:400;letter-spacing:-.01em;line-height:1.5;margin:1.6em 0 .8em}.md-typeset h2+h3{margin-top:.8em}.md-typeset h4{font-weight:700;letter-spacing:-.01em;margin:1em 0}.md-typeset h5,.md-typeset h6{color:var(--md-default-fg-color--light);font-size:.8em;font-weight:700;letter-spacing:-.01em;margin:1.25em 0}.md-typeset h5{text-transform:uppercase}.md-typeset h5 code{text-transform:none}.md-typeset hr{border-bottom:.05rem solid var(--md-default-fg-color--lightest);display:flow-root;margin:1.5em 0}.md-typeset a{color:var(--md-typeset-a-color);word-break:break-word}.md-typeset a,.md-typeset a:before{transition:color 125ms}.md-typeset a:focus,.md-typeset a:hover{color:var(--md-accent-fg-color)}.md-typeset a:focus code,.md-typeset a:hover code{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-typeset a code{color:var(--md-typeset-a-color)}.md-typeset a.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-typeset code,.md-typeset kbd,.md-typeset pre{color:var(--md-code-fg-color);direction:ltr;font-variant-ligatures:none;transition:background-color 125ms}@media print{.md-typeset code,.md-typeset kbd,.md-typeset pre{white-space:pre-wrap}}.md-typeset code{background-color:var(--md-code-bg-color);border-radius:.1rem;-webkit-box-decoration-break:clone;box-decoration-break:clone;font-size:.85em;padding:0 .2941176471em;transition:color 125ms,background-color 125ms;word-break:break-word}.md-typeset code:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}.md-typeset pre{display:flow-root;line-height:1.4;position:relative}.md-typeset pre>code{-webkit-box-decoration-break:slice;box-decoration-break:slice;box-shadow:none;display:block;margin:0;outline-color:var(--md-accent-fg-color);overflow:auto;padding:.7720588235em 1.1764705882em;scrollbar-color:var(--md-default-fg-color--lighter) #0000;scrollbar-width:thin;touch-action:auto;word-break:normal}.md-typeset pre>code:hover{scrollbar-color:var(--md-accent-fg-color) #0000}.md-typeset pre>code::-webkit-scrollbar{height:.2rem;width:.2rem}.md-typeset pre>code::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-typeset pre>code::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}.md-typeset kbd{background-color:var(--md-typeset-kbd-color);border-radius:.1rem;box-shadow:0 .1rem 0 .05rem var(--md-typeset-kbd-border-color),0 .1rem 0 var(--md-typeset-kbd-border-color),0 -.1rem .2rem var(--md-typeset-kbd-accent-color) inset;color:var(--md-default-fg-color);display:inline-block;font-size:.75em;padding:0 .6666666667em;vertical-align:text-top;word-break:break-word}.md-typeset mark{background-color:var(--md-typeset-mark-color);-webkit-box-decoration-break:clone;box-decoration-break:clone;color:inherit;word-break:break-word}.md-typeset abbr{cursor:help;text-decoration:none}.md-typeset [data-preview],.md-typeset abbr{border-bottom:.05rem dotted var(--md-default-fg-color--light)}.md-typeset small{opacity:.75}[dir=ltr] .md-typeset sub,[dir=ltr] .md-typeset sup{margin-left:.078125em}[dir=rtl] .md-typeset sub,[dir=rtl] .md-typeset sup{margin-right:.078125em}[dir=ltr] .md-typeset blockquote{padding-left:.6rem}[dir=rtl] .md-typeset blockquote{padding-right:.6rem}[dir=ltr] .md-typeset blockquote{border-left:.2rem solid var(--md-default-fg-color--lighter)}[dir=rtl] .md-typeset blockquote{border-right:.2rem solid var(--md-default-fg-color--lighter)}.md-typeset blockquote{color:var(--md-default-fg-color--light);margin-left:0;margin-right:0}.md-typeset ul{list-style-type:disc}.md-typeset ul[type]{list-style-type:revert-layer}[dir=ltr] .md-typeset ol,[dir=ltr] .md-typeset ul{margin-left:.625em}[dir=rtl] .md-typeset ol,[dir=rtl] .md-typeset ul{margin-right:.625em}.md-typeset ol,.md-typeset ul{padding:0}.md-typeset ol:not([hidden]),.md-typeset ul:not([hidden]){display:flow-root}.md-typeset ol ol,.md-typeset ul ol{list-style-type:lower-alpha}.md-typeset ol ol ol,.md-typeset ul ol ol{list-style-type:lower-roman}.md-typeset ol ol ol ol,.md-typeset ul ol ol ol{list-style-type:upper-alpha}.md-typeset ol ol ol ol ol,.md-typeset ul ol ol ol ol{list-style-type:upper-roman}.md-typeset ol[type],.md-typeset ul[type]{list-style-type:revert-layer}[dir=ltr] .md-typeset ol li,[dir=ltr] .md-typeset ul li{margin-left:1.25em}[dir=rtl] .md-typeset ol li,[dir=rtl] .md-typeset ul li{margin-right:1.25em}.md-typeset ol li,.md-typeset ul li{margin-bottom:.5em}.md-typeset ol li blockquote,.md-typeset ol li p,.md-typeset ul li blockquote,.md-typeset ul li p{margin:.5em 0}.md-typeset ol li:last-child,.md-typeset ul li:last-child{margin-bottom:0}[dir=ltr] .md-typeset ol li ol,[dir=ltr] .md-typeset ol li ul,[dir=ltr] .md-typeset ul li ol,[dir=ltr] .md-typeset ul li ul{margin-left:.625em}[dir=rtl] .md-typeset ol li ol,[dir=rtl] .md-typeset ol li ul,[dir=rtl] .md-typeset ul li ol,[dir=rtl] .md-typeset ul li ul{margin-right:.625em}.md-typeset ol li ol,.md-typeset ol li ul,.md-typeset ul li ol,.md-typeset ul li ul{margin-bottom:.5em;margin-top:.5em}[dir=ltr] .md-typeset dd{margin-left:1.875em}[dir=rtl] .md-typeset dd{margin-right:1.875em}.md-typeset dd{margin-bottom:1.5em;margin-top:1em}.md-typeset img,.md-typeset svg,.md-typeset video{height:auto;max-width:100%}.md-typeset img[align=left]{margin:1em 1em 1em 0}.md-typeset img[align=right]{margin:1em 0 1em 1em}.md-typeset img[align]:only-child{margin-top:0}.md-typeset figure{display:flow-root;margin:1em auto;max-width:100%;text-align:center;width:-moz-fit-content;width:fit-content}.md-typeset figure img{display:block;margin:0 auto}.md-typeset figcaption{font-style:italic;margin:1em auto;max-width:24rem}.md-typeset iframe{max-width:100%}.md-typeset table:not([class]){background-color:var(--md-default-bg-color);border:.05rem solid var(--md-typeset-table-color);border-radius:.1rem;display:inline-block;font-size:.64rem;max-width:100%;overflow:auto;touch-action:auto}@media print{.md-typeset table:not([class]){display:table}}.md-typeset table:not([class])+*{margin-top:1.5em}.md-typeset table:not([class]) td>:first-child,.md-typeset table:not([class]) th>:first-child{margin-top:0}.md-typeset table:not([class]) td>:last-child,.md-typeset table:not([class]) th>:last-child{margin-bottom:0}.md-typeset table:not([class]) td:not([align]),.md-typeset table:not([class]) th:not([align]){text-align:left}[dir=rtl] .md-typeset table:not([class]) td:not([align]),[dir=rtl] .md-typeset table:not([class]) th:not([align]){text-align:right}.md-typeset table:not([class]) th{font-weight:700;min-width:5rem;padding:.9375em 1.25em;vertical-align:top}.md-typeset table:not([class]) td{border-top:.05rem solid var(--md-typeset-table-color);padding:.9375em 1.25em;vertical-align:top}.md-typeset table:not([class]) tbody tr{transition:background-color 125ms}.md-typeset table:not([class]) tbody tr:hover{background-color:var(--md-typeset-table-color--light);box-shadow:0 .05rem 0 var(--md-default-bg-color) inset}.md-typeset table:not([class]) a{word-break:normal}.md-typeset table th[role=columnheader]{cursor:pointer}[dir=ltr] .md-typeset table th[role=columnheader]:after{margin-left:.5em}[dir=rtl] .md-typeset table th[role=columnheader]:after{margin-right:.5em}.md-typeset table th[role=columnheader]:after{content:"";display:inline-block;height:1.2em;-webkit-mask-image:var(--md-typeset-table-sort-icon);mask-image:var(--md-typeset-table-sort-icon);-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:background-color 125ms;vertical-align:text-bottom;width:1.2em}.md-typeset table th[role=columnheader]:hover:after{background-color:var(--md-default-fg-color--lighter)}.md-typeset table th[role=columnheader][aria-sort=ascending]:after{background-color:var(--md-default-fg-color--light);-webkit-mask-image:var(--md-typeset-table-sort-icon--asc);mask-image:var(--md-typeset-table-sort-icon--asc)}.md-typeset table th[role=columnheader][aria-sort=descending]:after{background-color:var(--md-default-fg-color--light);-webkit-mask-image:var(--md-typeset-table-sort-icon--desc);mask-image:var(--md-typeset-table-sort-icon--desc)}.md-typeset__scrollwrap{margin:1em -.8rem;overflow-x:auto;touch-action:auto}.md-typeset__table{display:inline-block;margin-bottom:.5em;padding:0 .8rem}@media print{.md-typeset__table{display:block}}html .md-typeset__table table{display:table;margin:0;overflow:hidden;width:100%}@media screen and (max-width:44.984375em){.md-content__inner>pre{margin:1em -.8rem}.md-content__inner>pre code{border-radius:0}}.md-typeset .md-author{border-radius:100%;display:block;flex-shrink:0;height:1.6rem;overflow:hidden;position:relative;transition:color 125ms,transform 125ms;width:1.6rem}.md-typeset .md-author img{display:block}.md-typeset .md-author--more{background:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--lighter);font-size:.6rem;font-weight:700;line-height:1.6rem;text-align:center}.md-typeset .md-author--long{height:2.4rem;width:2.4rem}.md-typeset a.md-author{transform:scale(1)}.md-typeset a.md-author img{border-radius:100%;filter:grayscale(100%) opacity(75%);transition:filter 125ms}.md-typeset a.md-author:focus,.md-typeset a.md-author:hover{transform:scale(1.1);z-index:1}.md-typeset a.md-author:focus img,.md-typeset a.md-author:hover img{filter:grayscale(0)}.md-banner{background-color:var(--md-footer-bg-color);color:var(--md-footer-fg-color);overflow:auto}@media print{.md-banner{display:none}}.md-banner--warning{background-color:var(--md-warning-bg-color);color:var(--md-warning-fg-color)}.md-banner__inner{font-size:.7rem;margin:.6rem auto;padding:0 .8rem}[dir=ltr] .md-banner__button{float:right}[dir=rtl] .md-banner__button{float:left}.md-banner__button{color:inherit;cursor:pointer;transition:opacity .25s}.no-js .md-banner__button{display:none}.md-banner__button:hover{opacity:.7}html{font-size:125%;height:100%;overflow-x:hidden}@media screen and (min-width:100em){html{font-size:137.5%}}@media screen and (min-width:125em){html{font-size:150%}}body{background-color:var(--md-default-bg-color);display:flex;flex-direction:column;font-size:.5rem;min-height:100%;position:relative;width:100%}@media print{body{display:block}}@media screen and (max-width:59.984375em){body[data-md-scrolllock]{position:fixed}}.md-grid{margin-left:auto;margin-right:auto;max-width:61rem}.md-container{display:flex;flex-direction:column;flex-grow:1}@media print{.md-container{display:block}}.md-main{flex-grow:1}.md-main__inner{display:flex;height:100%;margin-top:1.5rem}.md-ellipsis{overflow:hidden;text-overflow:ellipsis}.md-toggle{display:none}.md-option{height:0;opacity:0;position:absolute;width:0}.md-option:checked+label:not([hidden]){display:block}.md-option.focus-visible+label{outline-color:var(--md-accent-fg-color);outline-style:auto}.md-skip{background-color:var(--md-default-fg-color);border-radius:.1rem;color:var(--md-default-bg-color);font-size:.64rem;margin:.5rem;opacity:0;outline-color:var(--md-accent-fg-color);padding:.3rem .5rem;position:fixed;transform:translateY(.4rem);z-index:-1}.md-skip:focus{opacity:1;transform:translateY(0);transition:transform .25s cubic-bezier(.4,0,.2,1),opacity 175ms 75ms;z-index:10}@page{margin:25mm}:root{--md-clipboard-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 21H8V7h11m0-2H8a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2m-3-4H4a2 2 0 0 0-2 2v14h2V3h12z"/></svg>')}.md-clipboard{border-radius:.1rem;color:var(--md-default-fg-color--lightest);cursor:pointer;height:1.5em;outline-color:var(--md-accent-fg-color);outline-offset:.1rem;transition:color .25s;width:1.5em;z-index:1}@media print{.md-clipboard{display:none}}.md-clipboard:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}:hover>.md-clipboard{color:var(--md-default-fg-color--light)}.md-clipboard:focus,.md-clipboard:hover{color:var(--md-accent-fg-color)}.md-clipboard:after{background-color:currentcolor;content:"";display:block;height:1.125em;margin:0 auto;-webkit-mask-image:var(--md-clipboard-icon);mask-image:var(--md-clipboard-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:1.125em}.md-clipboard--inline{cursor:pointer}.md-clipboard--inline code{transition:color .25s,background-color .25s}.md-clipboard--inline:focus code,.md-clipboard--inline:hover code{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}:root{--md-code-select-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 19h-4v2h4c1.1 0 2-.9 2-2v-4h-2m0-12h-4v2h4v4h2V5c0-1.1-.9-2-2-2M5 5h4V3H5c-1.1 0-2 .9-2 2v4h2m0 6H3v4c0 1.1.9 2 2 2h4v-2H5zm2-4h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2zM7 7h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2zm-8 8h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2z"/></svg>');--md-code-copy-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 21H8V7h11m0-2H8a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2m-3-4H4a2 2 0 0 0-2 2v14h2V3h12z"/></svg>')}.md-typeset .md-code__content{display:grid}.md-code__nav{background-color:var(--md-code-bg-color--lighter);border-radius:.1rem;display:flex;gap:.2rem;padding:.2rem;position:absolute;right:.25em;top:.25em;transition:background-color .25s;z-index:1}:hover>.md-code__nav{background-color:var(--md-code-bg-color--light)}.md-code__button{color:var(--md-default-fg-color--lightest);cursor:pointer;display:block;height:1.5em;outline-color:var(--md-accent-fg-color);outline-offset:.1rem;transition:color .25s;width:1.5em}:hover>*>.md-code__button{color:var(--md-default-fg-color--light)}.md-code__button.focus-visible,.md-code__button:hover{color:var(--md-accent-fg-color)}.md-code__button--active{color:var(--md-default-fg-color)!important}.md-code__button:after{background-color:currentcolor;content:"";display:block;height:1.125em;margin:0 auto;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:1.125em}.md-code__button[data-md-type=select]:after{-webkit-mask-image:var(--md-code-select-icon);mask-image:var(--md-code-select-icon)}.md-code__button[data-md-type=copy]:after{-webkit-mask-image:var(--md-code-copy-icon);mask-image:var(--md-code-copy-icon)}@keyframes consent{0%{opacity:0;transform:translateY(100%)}to{opacity:1;transform:translateY(0)}}@keyframes overlay{0%{opacity:0}to{opacity:1}}.md-consent__overlay{animation:overlay .25s both;-webkit-backdrop-filter:blur(.1rem);backdrop-filter:blur(.1rem);background-color:#0000008a;height:100%;opacity:1;position:fixed;top:0;width:100%;z-index:5}.md-consent__inner{animation:consent .5s cubic-bezier(.1,.7,.1,1) both;background-color:var(--md-default-bg-color);border:0;border-radius:.1rem;bottom:0;box-shadow:0 0 .2rem #0000001a,0 .2rem .4rem #0003;max-height:100%;overflow:auto;padding:0;position:fixed;width:100%;z-index:5}.md-consent__form{padding:.8rem}.md-consent__settings{display:none;margin:1em 0}input:checked+.md-consent__settings{display:block}.md-consent__controls{margin-bottom:.8rem}.md-typeset .md-consent__controls .md-button{display:inline}@media screen and (max-width:44.984375em){.md-typeset .md-consent__controls .md-button{display:block;margin-top:.4rem;text-align:center;width:100%}}.md-consent label{cursor:pointer}.md-content{flex-grow:1;min-width:0}.md-content__inner{margin:0 .8rem 1.2rem;padding-top:.6rem}@media screen and (min-width:76.25em){[dir=ltr] .md-sidebar--primary:not([hidden])~.md-content>.md-content__inner{margin-left:1.2rem}[dir=ltr] .md-sidebar--secondary:not([hidden])~.md-content>.md-content__inner,[dir=rtl] .md-sidebar--primary:not([hidden])~.md-content>.md-content__inner{margin-right:1.2rem}[dir=rtl] .md-sidebar--secondary:not([hidden])~.md-content>.md-content__inner{margin-left:1.2rem}}.md-content__inner:before{content:"";display:block;height:.4rem}.md-content__inner>:last-child{margin-bottom:0}[dir=ltr] .md-content__button{float:right}[dir=rtl] .md-content__button{float:left}[dir=ltr] .md-content__button{margin-left:.4rem}[dir=rtl] .md-content__button{margin-right:.4rem}.md-content__button{margin:.4rem 0;padding:0}@media print{.md-content__button{display:none}}.md-typeset .md-content__button{color:var(--md-default-fg-color--lighter)}.md-content__button svg{display:inline;vertical-align:top}[dir=rtl] .md-content__button svg{transform:scaleX(-1)}[dir=ltr] .md-dialog{right:.8rem}[dir=rtl] .md-dialog{left:.8rem}.md-dialog{background-color:var(--md-default-fg-color);border-radius:.1rem;bottom:.8rem;box-shadow:var(--md-shadow-z3);min-width:11.1rem;opacity:0;padding:.4rem .6rem;pointer-events:none;position:fixed;transform:translateY(100%);transition:transform 0ms .4s,opacity .4s;z-index:4}@media print{.md-dialog{display:none}}.md-dialog--active{opacity:1;pointer-events:auto;transform:translateY(0);transition:transform .4s cubic-bezier(.075,.85,.175,1),opacity .4s}.md-dialog__inner{color:var(--md-default-bg-color);font-size:.7rem}.md-feedback{margin:2em 0 1em;text-align:center}.md-feedback fieldset{border:none;margin:0;padding:0}.md-feedback__title{font-weight:700;margin:1em auto}.md-feedback__inner{position:relative}.md-feedback__list{display:flex;flex-wrap:wrap;place-content:baseline center;position:relative}.md-feedback__list:hover .md-icon:not(:disabled){color:var(--md-default-fg-color--lighter)}:disabled .md-feedback__list{min-height:1.8rem}.md-feedback__icon{color:var(--md-default-fg-color--light);cursor:pointer;flex-shrink:0;margin:0 .1rem;transition:color 125ms}.md-feedback__icon:not(:disabled).md-icon:hover{color:var(--md-accent-fg-color)}.md-feedback__icon:disabled{color:var(--md-default-fg-color--lightest);pointer-events:none}.md-feedback__note{opacity:0;position:relative;transform:translateY(.4rem);transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s}.md-feedback__note>*{margin:0 auto;max-width:16rem}:disabled .md-feedback__note{opacity:1;transform:translateY(0)}@media print{.md-feedback{display:none}}.md-footer{background-color:var(--md-footer-bg-color);color:var(--md-footer-fg-color)}@media print{.md-footer{display:none}}.md-footer__inner{justify-content:space-between;overflow:auto;padding:.2rem}.md-footer__inner:not([hidden]){display:flex}.md-footer__link{align-items:end;display:flex;flex-grow:0.01;margin-bottom:.4rem;margin-top:1rem;max-width:100%;outline-color:var(--md-accent-fg-color);overflow:hidden;transition:opacity .25s}.md-footer__link:focus,.md-footer__link:hover{opacity:.7}[dir=rtl] .md-footer__link svg{transform:scaleX(-1)}@media screen and (max-width:44.984375em){.md-footer__link--prev{flex-shrink:0}.md-footer__link--prev .md-footer__title{display:none}}[dir=ltr] .md-footer__link--next{margin-left:auto}[dir=rtl] .md-footer__link--next{margin-right:auto}.md-footer__link--next{text-align:right}[dir=rtl] .md-footer__link--next{text-align:left}.md-footer__title{flex-grow:1;font-size:.9rem;margin-bottom:.7rem;max-width:calc(100% - 2.4rem);padding:0 1rem;white-space:nowrap}.md-footer__button{margin:.2rem;padding:.4rem}.md-footer__direction{font-size:.64rem;opacity:.7}.md-footer-meta{background-color:var(--md-footer-bg-color--dark)}.md-footer-meta__inner{display:flex;flex-wrap:wrap;justify-content:space-between;padding:.2rem}html .md-footer-meta.md-typeset a{color:var(--md-footer-fg-color--light)}html .md-footer-meta.md-typeset a:focus,html .md-footer-meta.md-typeset a:hover{color:var(--md-footer-fg-color)}.md-copyright{color:var(--md-footer-fg-color--lighter);font-size:.64rem;margin:auto .6rem;padding:.4rem 0;width:100%}@media screen and (min-width:45em){.md-copyright{width:auto}}.md-copyright__highlight{color:var(--md-footer-fg-color--light)}.md-social{display:inline-flex;gap:.2rem;margin:0 .4rem;padding:.2rem 0 .6rem}@media screen and (min-width:45em){.md-social{padding:.6rem 0}}.md-social__link{display:inline-block;height:1.6rem;text-align:center;width:1.6rem}.md-social__link:before{line-height:1.9}.md-social__link svg{fill:currentcolor;max-height:.8rem;vertical-align:-25%}.md-typeset .md-button{border:.1rem solid;border-radius:.1rem;color:var(--md-primary-fg-color);cursor:pointer;display:inline-block;font-weight:700;padding:.625em 2em;transition:color 125ms,background-color 125ms,border-color 125ms}.md-typeset .md-button--primary{background-color:var(--md-primary-fg-color);border-color:var(--md-primary-fg-color);color:var(--md-primary-bg-color)}.md-typeset .md-button:focus,.md-typeset .md-button:hover{background-color:var(--md-accent-fg-color);border-color:var(--md-accent-fg-color);color:var(--md-accent-bg-color)}[dir=ltr] .md-typeset .md-input{border-top-left-radius:.1rem}[dir=ltr] .md-typeset .md-input,[dir=rtl] .md-typeset .md-input{border-top-right-radius:.1rem}[dir=rtl] .md-typeset .md-input{border-top-left-radius:.1rem}.md-typeset .md-input{border-bottom:.1rem solid var(--md-default-fg-color--lighter);box-shadow:var(--md-shadow-z1);font-size:.8rem;height:1.8rem;padding:0 .6rem;transition:border .25s,box-shadow .25s}.md-typeset .md-input:focus,.md-typeset .md-input:hover{border-bottom-color:var(--md-accent-fg-color);box-shadow:var(--md-shadow-z2)}.md-typeset .md-input--stretch{width:100%}.md-header{background-color:var(--md-primary-fg-color);box-shadow:0 0 .2rem #0000,0 .2rem .4rem #0000;color:var(--md-primary-bg-color);display:block;left:0;position:sticky;right:0;top:0;z-index:4}@media print{.md-header{display:none}}.md-header[hidden]{transform:translateY(-100%);transition:transform .25s cubic-bezier(.8,0,.6,1),box-shadow .25s}.md-header--shadow{box-shadow:0 0 .2rem #0000001a,0 .2rem .4rem #0003;transition:transform .25s cubic-bezier(.1,.7,.1,1),box-shadow .25s}.md-header__inner{align-items:center;display:flex;padding:0 .2rem}.md-header__button{color:currentcolor;cursor:pointer;margin:.2rem;outline-color:var(--md-accent-fg-color);padding:.4rem;position:relative;transition:opacity .25s;vertical-align:middle;z-index:1}.md-header__button:hover{opacity:.7}.md-header__button:not([hidden]){display:inline-block}.md-header__button:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}.md-header__button.md-logo{margin:.2rem;padding:.4rem}@media screen and (max-width:76.234375em){.md-header__button.md-logo{display:none}}.md-header__button.md-logo img,.md-header__button.md-logo svg{fill:currentcolor;display:block;height:1.2rem;width:auto}@media screen and (min-width:60em){.md-header__button[for=__search]{display:none}}.no-js .md-header__button[for=__search]{display:none}[dir=rtl] .md-header__button[for=__search] svg{transform:scaleX(-1)}@media screen and (min-width:76.25em){.md-header__button[for=__drawer]{display:none}}.md-header__topic{display:flex;max-width:100%;position:absolute;transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s;white-space:nowrap}.md-header__topic+.md-header__topic{opacity:0;pointer-events:none;transform:translateX(1.25rem);transition:transform .4s cubic-bezier(1,.7,.1,.1),opacity .15s;z-index:-1}[dir=rtl] .md-header__topic+.md-header__topic{transform:translateX(-1.25rem)}.md-header__topic:first-child{font-weight:700}[dir=ltr] .md-header__title{margin-left:1rem;margin-right:.4rem}[dir=rtl] .md-header__title{margin-left:.4rem;margin-right:1rem}.md-header__title{flex-grow:1;font-size:.9rem;height:2.4rem;line-height:2.4rem}.md-header__title--active .md-header__topic{opacity:0;pointer-events:none;transform:translateX(-1.25rem);transition:transform .4s cubic-bezier(1,.7,.1,.1),opacity .15s;z-index:-1}[dir=rtl] .md-header__title--active .md-header__topic{transform:translateX(1.25rem)}.md-header__title--active .md-header__topic+.md-header__topic{opacity:1;pointer-events:auto;transform:translateX(0);transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .15s;z-index:0}.md-header__title>.md-header__ellipsis{height:100%;position:relative;width:100%}.md-header__option{display:flex;flex-shrink:0;max-width:100%;transition:max-width 0ms .25s,opacity .25s .25s;white-space:nowrap}[data-md-toggle=search]:checked~.md-header .md-header__option{max-width:0;opacity:0;transition:max-width 0ms,opacity 0ms}.md-header__option>input{bottom:0}.md-header__source{display:none}@media screen and (min-width:60em){[dir=ltr] .md-header__source{margin-left:1rem}[dir=rtl] .md-header__source{margin-right:1rem}.md-header__source{display:block;max-width:11.7rem;width:11.7rem}}@media screen and (min-width:76.25em){[dir=ltr] .md-header__source{margin-left:1.4rem}[dir=rtl] .md-header__source{margin-right:1.4rem}}.md-meta{color:var(--md-default-fg-color--light);font-size:.7rem;line-height:1.3}.md-meta__list{display:inline-flex;flex-wrap:wrap;list-style:none;margin:0;padding:0}.md-meta__item:not(:last-child):after{content:"·";margin-left:.2rem;margin-right:.2rem}.md-meta__link{color:var(--md-typeset-a-color)}.md-meta__link:focus,.md-meta__link:hover{color:var(--md-accent-fg-color)}.md-draft{background-color:#ff1744;border-radius:.125em;color:#fff;display:inline-block;font-weight:700;padding-left:.5714285714em;padding-right:.5714285714em}:root{--md-nav-icon--prev:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20 11v2H8l5.5 5.5-1.42 1.42L4.16 12l7.92-7.92L13.5 5.5 8 11z"/></svg>');--md-nav-icon--next:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>');--md-toc-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 9h14V7H3zm0 4h14v-2H3zm0 4h14v-2H3zm16 0h2v-2h-2zm0-10v2h2V7zm0 6h2v-2h-2z"/></svg>')}.md-nav{font-size:.7rem;line-height:1.3}.md-nav__title{color:var(--md-default-fg-color--light);display:block;font-weight:700;overflow:hidden;padding:0 .6rem;text-overflow:ellipsis}.md-nav__title .md-nav__button{display:none}.md-nav__title .md-nav__button img{height:100%;width:auto}.md-nav__title .md-nav__button.md-logo img,.md-nav__title .md-nav__button.md-logo svg{fill:currentcolor;display:block;height:2.4rem;max-width:100%;object-fit:contain;width:auto}.md-nav__list{list-style:none;margin:0;padding:0}.md-nav__link{align-items:flex-start;display:flex;gap:.4rem;margin-top:.625em;scroll-snap-align:start;transition:color 125ms}.md-nav__link--passed,.md-nav__link--passed code{color:var(--md-default-fg-color--light)}.md-nav__item .md-nav__link--active,.md-nav__item .md-nav__link--active code{color:var(--md-typeset-a-color)}.md-nav__link .md-ellipsis{position:relative}.md-nav__link .md-ellipsis code{word-break:normal}[dir=ltr] .md-nav__link .md-icon:last-child{margin-left:auto}[dir=rtl] .md-nav__link .md-icon:last-child{margin-right:auto}.md-nav__link .md-typeset{font-size:.7rem;line-height:1.3}.md-nav__link svg{fill:currentcolor;flex-shrink:0;height:1.3em;position:relative}.md-nav__link[for]:focus,.md-nav__link[for]:hover,.md-nav__link[href]:focus,.md-nav__link[href]:hover{color:var(--md-accent-fg-color);cursor:pointer}.md-nav__link[for]:focus code,.md-nav__link[for]:hover code,.md-nav__link[href]:focus code,.md-nav__link[href]:hover code{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-nav__link.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-nav--primary .md-nav__link[for=__toc]{display:none}.md-nav--primary .md-nav__link[for=__toc] .md-icon:after{background-color:currentcolor;display:block;height:100%;-webkit-mask-image:var(--md-toc-icon);mask-image:var(--md-toc-icon);width:100%}.md-nav--primary .md-nav__link[for=__toc]~.md-nav{display:none}.md-nav__container>.md-nav__link{margin-top:0}.md-nav__container>.md-nav__link:first-child{flex-grow:1;min-width:0}.md-nav__icon{flex-shrink:0}.md-nav__source{display:none}@media screen and (max-width:76.234375em){.md-nav--primary,.md-nav--primary .md-nav{background-color:var(--md-default-bg-color);display:flex;flex-direction:column;height:100%;left:0;position:absolute;right:0;top:0;z-index:1}.md-nav--primary .md-nav__item,.md-nav--primary .md-nav__title{font-size:.8rem;line-height:1.5}.md-nav--primary .md-nav__title{background-color:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--light);cursor:pointer;height:5.6rem;line-height:2.4rem;padding:3rem .8rem .2rem;position:relative;white-space:nowrap}[dir=ltr] .md-nav--primary .md-nav__title .md-nav__icon{left:.4rem}[dir=rtl] .md-nav--primary .md-nav__title .md-nav__icon{right:.4rem}.md-nav--primary .md-nav__title .md-nav__icon{display:block;height:1.2rem;margin:.2rem;position:absolute;top:.4rem;width:1.2rem}.md-nav--primary .md-nav__title .md-nav__icon:after{background-color:currentcolor;content:"";display:block;height:100%;-webkit-mask-image:var(--md-nav-icon--prev);mask-image:var(--md-nav-icon--prev);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:100%}.md-nav--primary .md-nav__title~.md-nav__list{background-color:var(--md-default-bg-color);box-shadow:0 .05rem 0 var(--md-default-fg-color--lightest) inset;overflow-y:auto;scroll-snap-type:y mandatory;touch-action:pan-y}.md-nav--primary .md-nav__title~.md-nav__list>:first-child{border-top:0}.md-nav--primary .md-nav__title[for=__drawer]{background-color:var(--md-primary-fg-color);color:var(--md-primary-bg-color);font-weight:700}.md-nav--primary .md-nav__title .md-logo{display:block;left:.2rem;margin:.2rem;padding:.4rem;position:absolute;right:.2rem;top:.2rem}.md-nav--primary .md-nav__list{flex:1}.md-nav--primary .md-nav__item{border-top:.05rem solid var(--md-default-fg-color--lightest)}.md-nav--primary .md-nav__item--active>.md-nav__link{color:var(--md-typeset-a-color)}.md-nav--primary .md-nav__item--active>.md-nav__link:focus,.md-nav--primary .md-nav__item--active>.md-nav__link:hover{color:var(--md-accent-fg-color)}.md-nav--primary .md-nav__link{margin-top:0;padding:.6rem .8rem}.md-nav--primary .md-nav__link svg{margin-top:.1em}.md-nav--primary .md-nav__link>.md-nav__link{padding:0}[dir=ltr] .md-nav--primary .md-nav__link .md-nav__icon{margin-right:-.2rem}[dir=rtl] .md-nav--primary .md-nav__link .md-nav__icon{margin-left:-.2rem}.md-nav--primary .md-nav__link .md-nav__icon{font-size:1.2rem;height:1.2rem;width:1.2rem}.md-nav--primary .md-nav__link .md-nav__icon:after{background-color:currentcolor;content:"";display:block;height:100%;-webkit-mask-image:var(--md-nav-icon--next);mask-image:var(--md-nav-icon--next);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:100%}[dir=rtl] .md-nav--primary .md-nav__icon:after{transform:scale(-1)}.md-nav--primary .md-nav--secondary .md-nav{background-color:initial;position:static}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav__link{padding-left:1.4rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav__link{padding-right:1.4rem}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav__link{padding-left:2rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav__link{padding-right:2rem}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav__link{padding-left:2.6rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav__link{padding-right:2.6rem}[dir=ltr] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav .md-nav__link{padding-left:3.2rem}[dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav .md-nav__link{padding-right:3.2rem}.md-nav--secondary{background-color:initial}.md-nav__toggle~.md-nav{display:flex;opacity:0;transform:translateX(100%);transition:transform .25s cubic-bezier(.8,0,.6,1),opacity 125ms 50ms}[dir=rtl] .md-nav__toggle~.md-nav{transform:translateX(-100%)}.md-nav__toggle:checked~.md-nav{opacity:1;transform:translateX(0);transition:transform .25s cubic-bezier(.4,0,.2,1),opacity 125ms 125ms}.md-nav__toggle:checked~.md-nav>.md-nav__list{-webkit-backface-visibility:hidden;backface-visibility:hidden}}@media screen and (max-width:59.984375em){.md-nav--primary .md-nav__link[for=__toc]{display:flex}.md-nav--primary .md-nav__link[for=__toc] .md-icon:after{content:""}.md-nav--primary .md-nav__link[for=__toc]+.md-nav__link{display:none}.md-nav--primary .md-nav__link[for=__toc]~.md-nav{display:flex}.md-nav__source{background-color:var(--md-primary-fg-color--dark);color:var(--md-primary-bg-color);display:block;padding:0 .2rem}}@media screen and (min-width:60em) and (max-width:76.234375em){.md-nav--integrated .md-nav__link[for=__toc]{display:flex}.md-nav--integrated .md-nav__link[for=__toc] .md-icon:after{content:""}.md-nav--integrated .md-nav__link[for=__toc]+.md-nav__link{display:none}.md-nav--integrated .md-nav__link[for=__toc]~.md-nav{display:flex}}@media screen and (min-width:60em){.md-nav{margin-bottom:-.4rem}.md-nav--secondary .md-nav__title{background:var(--md-default-bg-color);box-shadow:0 0 .4rem .4rem var(--md-default-bg-color);position:sticky;top:0;z-index:1}.md-nav--secondary .md-nav__title[for=__toc]{scroll-snap-align:start}.md-nav--secondary .md-nav__title .md-nav__icon{display:none}[dir=ltr] .md-nav--secondary .md-nav__list{padding-left:.6rem}[dir=rtl] .md-nav--secondary .md-nav__list{padding-right:.6rem}.md-nav--secondary .md-nav__list{padding-bottom:.4rem}[dir=ltr] .md-nav--secondary .md-nav__item>.md-nav__link{margin-right:.4rem}[dir=rtl] .md-nav--secondary .md-nav__item>.md-nav__link{margin-left:.4rem}}@media screen and (min-width:76.25em){.md-nav{margin-bottom:-.4rem;transition:max-height .25s cubic-bezier(.86,0,.07,1)}.md-nav--primary .md-nav__title{background:var(--md-default-bg-color);box-shadow:0 0 .4rem .4rem var(--md-default-bg-color);position:sticky;top:0;z-index:1}.md-nav--primary .md-nav__title[for=__drawer]{scroll-snap-align:start}.md-nav--primary .md-nav__title .md-nav__icon{display:none}[dir=ltr] .md-nav--primary .md-nav__list{padding-left:.6rem}[dir=rtl] .md-nav--primary .md-nav__list{padding-right:.6rem}.md-nav--primary .md-nav__list{padding-bottom:.4rem}[dir=ltr] .md-nav--primary .md-nav__item>.md-nav__link{margin-right:.4rem}[dir=rtl] .md-nav--primary .md-nav__item>.md-nav__link{margin-left:.4rem}.md-nav__toggle~.md-nav{display:grid;grid-template-rows:minmax(.4rem,0fr);opacity:0;transition:grid-template-rows .25s cubic-bezier(.86,0,.07,1),opacity .25s,visibility 0ms .25s;visibility:collapse}.md-nav__toggle~.md-nav>.md-nav__list{overflow:hidden}.md-nav__toggle.md-toggle--indeterminate~.md-nav,.md-nav__toggle:checked~.md-nav{grid-template-rows:minmax(.4rem,1fr);opacity:1;transition:grid-template-rows .25s cubic-bezier(.86,0,.07,1),opacity .15s .1s,visibility 0ms;visibility:visible}.md-nav__toggle.md-toggle--indeterminate~.md-nav{transition:none}.md-nav__item--nested>.md-nav>.md-nav__title{display:none}.md-nav__item--section{display:block;margin:1.25em 0}.md-nav__item--section:last-child{margin-bottom:0}.md-nav__item--section>.md-nav__link{font-weight:700}.md-nav__item--section>.md-nav__link[for]{color:var(--md-default-fg-color--light)}.md-nav__item--section>.md-nav__link:not(.md-nav__container){pointer-events:none}.md-nav__item--section>.md-nav__link .md-icon,.md-nav__item--section>.md-nav__link>[for]{display:none}[dir=ltr] .md-nav__item--section>.md-nav{margin-left:-.6rem}[dir=rtl] .md-nav__item--section>.md-nav{margin-right:-.6rem}.md-nav__item--section>.md-nav{display:block;opacity:1;visibility:visible}.md-nav__item--section>.md-nav>.md-nav__list>.md-nav__item{padding:0}.md-nav__icon{border-radius:100%;height:.9rem;transition:background-color .25s;width:.9rem}.md-nav__icon:hover{background-color:var(--md-accent-fg-color--transparent)}.md-nav__icon:after{background-color:currentcolor;border-radius:100%;content:"";display:inline-block;height:100%;-webkit-mask-image:var(--md-nav-icon--next);mask-image:var(--md-nav-icon--next);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:transform .25s;vertical-align:-.1rem;width:100%}[dir=rtl] .md-nav__icon:after{transform:rotate(180deg)}.md-nav__item--nested .md-nav__toggle:checked~.md-nav__link .md-nav__icon:after,.md-nav__item--nested .md-toggle--indeterminate~.md-nav__link .md-nav__icon:after{transform:rotate(90deg)}.md-nav--lifted>.md-nav__list>.md-nav__item,.md-nav--lifted>.md-nav__title{display:none}.md-nav--lifted>.md-nav__list>.md-nav__item--active{display:block}.md-nav--lifted>.md-nav__list>.md-nav__item--active>.md-nav__link{background:var(--md-default-bg-color);box-shadow:0 0 .4rem .4rem var(--md-default-bg-color);margin-top:0;position:sticky;top:0;z-index:1}.md-nav--lifted>.md-nav__list>.md-nav__item--active>.md-nav__link:not(.md-nav__container){pointer-events:none}.md-nav--lifted>.md-nav__list>.md-nav__item--active.md-nav__item--section{margin:0}[dir=ltr] .md-nav--lifted>.md-nav__list>.md-nav__item>.md-nav:not(.md-nav--secondary){margin-left:-.6rem}[dir=rtl] .md-nav--lifted>.md-nav__list>.md-nav__item>.md-nav:not(.md-nav--secondary){margin-right:-.6rem}.md-nav--lifted>.md-nav__list>.md-nav__item>[for]{color:var(--md-default-fg-color--light)}.md-nav--lifted .md-nav[data-md-level="1"]{grid-template-rows:minmax(.4rem,1fr);opacity:1;visibility:visible}[dir=ltr] .md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary{border-left:.05rem solid var(--md-primary-fg-color)}[dir=rtl] .md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary{border-right:.05rem solid var(--md-primary-fg-color)}.md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary{display:block;margin-bottom:1.25em;opacity:1;visibility:visible}.md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary>.md-nav__list{overflow:visible;padding-bottom:0}.md-nav--integrated>.md-nav__list>.md-nav__item--active .md-nav--secondary>.md-nav__title{display:none}}.md-pagination{font-size:.8rem;font-weight:700;gap:.4rem}.md-pagination,.md-pagination>*{align-items:center;display:flex;justify-content:center}.md-pagination>*{border-radius:.2rem;height:1.8rem;min-width:1.8rem;text-align:center}.md-pagination__current{background-color:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--light)}.md-pagination__link{transition:color 125ms,background-color 125ms}.md-pagination__link:focus,.md-pagination__link:hover{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-pagination__link:focus svg,.md-pagination__link:hover svg{color:var(--md-accent-fg-color)}.md-pagination__link.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-pagination__link svg{fill:currentcolor;color:var(--md-default-fg-color--lighter);display:block;max-height:100%;width:1.2rem}:root{--md-path-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>')}.md-path{font-size:.7rem;margin:0 .8rem;overflow:auto;padding-top:1.2rem}.md-path:not([hidden]){display:block}@media screen and (min-width:76.25em){.md-path{margin:0 1.2rem}}.md-path__list{align-items:center;display:flex;gap:.2rem;list-style:none;margin:0;padding:0}.md-path__item:not(:first-child){display:inline-flex;gap:.2rem;white-space:nowrap}.md-path__item:not(:first-child):before{background-color:var(--md-default-fg-color--lighter);content:"";display:inline;height:.8rem;-webkit-mask-image:var(--md-path-icon);mask-image:var(--md-path-icon);width:.8rem}.md-path__link{align-items:center;color:var(--md-default-fg-color--light);display:flex}.md-path__link:focus,.md-path__link:hover{color:var(--md-accent-fg-color)}:root{--md-post-pin-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16 12V4h1V2H7v2h1v8l-2 2v2h5.2v6h1.6v-6H18v-2z"/></svg>')}.md-post__back{border-bottom:.05rem solid var(--md-default-fg-color--lightest);margin-bottom:1.2rem;padding-bottom:1.2rem}@media screen and (max-width:76.234375em){.md-post__back{display:none}}[dir=rtl] .md-post__back svg{transform:scaleX(-1)}.md-post__authors{display:flex;flex-direction:column;gap:.6rem;margin:0 .6rem 1.2rem}.md-post .md-post__meta a{transition:color 125ms}.md-post .md-post__meta a:focus,.md-post .md-post__meta a:hover{color:var(--md-accent-fg-color)}.md-post__title{color:var(--md-default-fg-color--light);font-weight:700}.md-post--excerpt{margin-bottom:3.2rem}.md-post--excerpt .md-post__header{align-items:center;display:flex;gap:.6rem;min-height:1.6rem}.md-post--excerpt .md-post__authors{align-items:center;display:inline-flex;flex-direction:row;gap:.2rem;margin:0;min-height:2.4rem}[dir=ltr] .md-post--excerpt .md-post__meta .md-meta__list{margin-right:.4rem}[dir=rtl] .md-post--excerpt .md-post__meta .md-meta__list{margin-left:.4rem}.md-post--excerpt .md-post__content>:first-child{--md-scroll-margin:6rem;margin-top:0}.md-post>.md-nav--secondary{margin:1em 0}.md-pin{background:var(--md-default-fg-color--lightest);border-radius:1rem;margin-top:-.05rem;padding:.2rem}.md-pin:after{background-color:currentcolor;content:"";display:block;height:.6rem;margin:0 auto;-webkit-mask-image:var(--md-post-pin-icon);mask-image:var(--md-post-pin-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:.6rem}.md-profile{align-items:center;display:flex;font-size:.7rem;gap:.6rem;line-height:1.4;width:100%}.md-profile__description{flex-grow:1}.md-content--post{display:flex}@media screen and (max-width:76.234375em){.md-content--post{flex-flow:column-reverse}}.md-content--post>.md-content__inner{flex-grow:1;min-width:0}@media screen and (min-width:76.25em){[dir=ltr] .md-content--post>.md-content__inner{margin-left:1.2rem}[dir=rtl] .md-content--post>.md-content__inner{margin-right:1.2rem}}@media screen and (max-width:76.234375em){.md-sidebar.md-sidebar--post{padding:0;position:static;width:100%}.md-sidebar.md-sidebar--post .md-sidebar__scrollwrap{overflow:visible}.md-sidebar.md-sidebar--post .md-sidebar__inner{padding:0}.md-sidebar.md-sidebar--post .md-post__meta{margin-left:.6rem;margin-right:.6rem}.md-sidebar.md-sidebar--post .md-nav__item{border:none;display:inline}.md-sidebar.md-sidebar--post .md-nav__list{display:inline-flex;flex-wrap:wrap;gap:.6rem;padding-bottom:.6rem;padding-top:.6rem}.md-sidebar.md-sidebar--post .md-nav__link{padding:0}.md-sidebar.md-sidebar--post .md-nav{height:auto;margin-bottom:0;position:static}}:root{--md-progress-value:0;--md-progress-delay:400ms}.md-progress{background:var(--md-primary-bg-color);height:.075rem;opacity:min(clamp(0,var(--md-progress-value),1),clamp(0,100 - var(--md-progress-value),1));position:fixed;top:0;transform:scaleX(calc(var(--md-progress-value)*1%));transform-origin:left;transition:transform .5s cubic-bezier(.19,1,.22,1),opacity .25s var(--md-progress-delay);width:100%;z-index:4}:root{--md-search-result-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h7c-.41-.25-.8-.56-1.14-.9-.33-.33-.61-.7-.86-1.1H6V4h7v5h5v1.18c.71.16 1.39.43 2 .82V8zm6.31 16.9c1.33-2.11.69-4.9-1.4-6.22-2.11-1.33-4.91-.68-6.22 1.4-1.34 2.11-.69 4.89 1.4 6.22 1.46.93 3.32.93 4.79.02L22 23.39 23.39 22zm-3.81.1a2.5 2.5 0 0 1-2.5-2.5 2.5 2.5 0 0 1 2.5-2.5 2.5 2.5 0 0 1 2.5 2.5 2.5 2.5 0 0 1-2.5 2.5"/></svg>')}.md-search{position:relative}@media screen and (min-width:60em){.md-search{padding:.2rem 0}}.no-js .md-search{display:none}.md-search__overlay{opacity:0;z-index:1}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__overlay{left:-2.2rem}[dir=rtl] .md-search__overlay{right:-2.2rem}.md-search__overlay{background-color:var(--md-default-bg-color);border-radius:1rem;height:2rem;overflow:hidden;pointer-events:none;position:absolute;top:-1rem;transform-origin:center;transition:transform .3s .1s,opacity .2s .2s;width:2rem}[data-md-toggle=search]:checked~.md-header .md-search__overlay{opacity:1;transition:transform .4s,opacity .1s}}@media screen and (min-width:60em){[dir=ltr] .md-search__overlay{left:0}[dir=rtl] .md-search__overlay{right:0}.md-search__overlay{background-color:#0000008a;cursor:pointer;height:0;position:fixed;top:0;transition:width 0ms .25s,height 0ms .25s,opacity .25s;width:0}[data-md-toggle=search]:checked~.md-header .md-search__overlay{height:200vh;opacity:1;transition:width 0ms,height 0ms,opacity .25s;width:100%}}@media screen and (max-width:29.984375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{transform:scale(45)}}@media screen and (min-width:30em) and (max-width:44.984375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{transform:scale(60)}}@media screen and (min-width:45em) and (max-width:59.984375em){[data-md-toggle=search]:checked~.md-header .md-search__overlay{transform:scale(75)}}.md-search__inner{-webkit-backface-visibility:hidden;backface-visibility:hidden}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__inner{left:0}[dir=rtl] .md-search__inner{right:0}.md-search__inner{height:0;opacity:0;overflow:hidden;position:fixed;top:0;transform:translateX(5%);transition:width 0ms .3s,height 0ms .3s,transform .15s cubic-bezier(.4,0,.2,1) .15s,opacity .15s .15s;width:0;z-index:2}[dir=rtl] .md-search__inner{transform:translateX(-5%)}[data-md-toggle=search]:checked~.md-header .md-search__inner{height:100%;opacity:1;transform:translateX(0);transition:width 0ms 0ms,height 0ms 0ms,transform .15s cubic-bezier(.1,.7,.1,1) .15s,opacity .15s .15s;width:100%}}@media screen and (min-width:60em){[dir=ltr] .md-search__inner{float:right}[dir=rtl] .md-search__inner{float:left}.md-search__inner{padding:.1rem 0;position:relative;transition:width .25s cubic-bezier(.1,.7,.1,1);width:11.7rem}}@media screen and (min-width:60em) and (max-width:76.234375em){[data-md-toggle=search]:checked~.md-header .md-search__inner{width:23.4rem}}@media screen and (min-width:76.25em){[data-md-toggle=search]:checked~.md-header .md-search__inner{width:34.4rem}}.md-search__form{background-color:var(--md-default-bg-color);box-shadow:0 0 .6rem #0000;height:2.4rem;position:relative;transition:color .25s,background-color .25s;z-index:2}@media screen and (min-width:60em){.md-search__form{background-color:#00000042;border-radius:.1rem;height:1.8rem}.md-search__form:hover{background-color:#ffffff1f}}[data-md-toggle=search]:checked~.md-header .md-search__form{background-color:var(--md-default-bg-color);border-radius:.1rem .1rem 0 0;box-shadow:0 0 .6rem #00000012;color:var(--md-default-fg-color)}[dir=ltr] .md-search__input{padding-left:3.6rem;padding-right:2.2rem}[dir=rtl] .md-search__input{padding-left:2.2rem;padding-right:3.6rem}.md-search__input{background:#0000;font-size:.9rem;height:100%;position:relative;text-overflow:ellipsis;width:100%;z-index:2}.md-search__input::placeholder{transition:color .25s}.md-search__input::placeholder,.md-search__input~.md-search__icon{color:var(--md-default-fg-color--light)}.md-search__input::-ms-clear{display:none}@media screen and (max-width:59.984375em){.md-search__input{font-size:.9rem;height:2.4rem;width:100%}}@media screen and (min-width:60em){[dir=ltr] .md-search__input{padding-left:2.2rem}[dir=rtl] .md-search__input{padding-right:2.2rem}.md-search__input{color:inherit;font-size:.8rem}.md-search__input::placeholder{color:var(--md-primary-bg-color--light)}.md-search__input+.md-search__icon{color:var(--md-primary-bg-color)}[data-md-toggle=search]:checked~.md-header .md-search__input{text-overflow:clip}[data-md-toggle=search]:checked~.md-header .md-search__input+.md-search__icon{color:var(--md-default-fg-color--light)}[data-md-toggle=search]:checked~.md-header .md-search__input::placeholder{color:#0000}}.md-search__icon{cursor:pointer;display:inline-block;height:1.2rem;transition:color .25s,opacity .25s;width:1.2rem}.md-search__icon:hover{opacity:.7}[dir=ltr] .md-search__icon[for=__search]{left:.5rem}[dir=rtl] .md-search__icon[for=__search]{right:.5rem}.md-search__icon[for=__search]{position:absolute;top:.3rem;z-index:2}[dir=rtl] .md-search__icon[for=__search] svg{transform:scaleX(-1)}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__icon[for=__search]{left:.8rem}[dir=rtl] .md-search__icon[for=__search]{right:.8rem}.md-search__icon[for=__search]{top:.6rem}.md-search__icon[for=__search] svg:first-child{display:none}}@media screen and (min-width:60em){.md-search__icon[for=__search]{pointer-events:none}.md-search__icon[for=__search] svg:last-child{display:none}}[dir=ltr] .md-search__options{right:.5rem}[dir=rtl] .md-search__options{left:.5rem}.md-search__options{pointer-events:none;position:absolute;top:.3rem;z-index:2}@media screen and (max-width:59.984375em){[dir=ltr] .md-search__options{right:.8rem}[dir=rtl] .md-search__options{left:.8rem}.md-search__options{top:.6rem}}[dir=ltr] .md-search__options>.md-icon{margin-left:.2rem}[dir=rtl] .md-search__options>.md-icon{margin-right:.2rem}.md-search__options>.md-icon{color:var(--md-default-fg-color--light);opacity:0;transform:scale(.75);transition:transform .15s cubic-bezier(.1,.7,.1,1),opacity .15s}.md-search__options>.md-icon:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}[data-md-toggle=search]:checked~.md-header .md-search__input:valid~.md-search__options>.md-icon{opacity:1;pointer-events:auto;transform:scale(1)}[data-md-toggle=search]:checked~.md-header .md-search__input:valid~.md-search__options>.md-icon:hover{opacity:.7}[dir=ltr] .md-search__suggest{padding-left:3.6rem;padding-right:2.2rem}[dir=rtl] .md-search__suggest{padding-left:2.2rem;padding-right:3.6rem}.md-search__suggest{align-items:center;color:var(--md-default-fg-color--lighter);display:flex;font-size:.9rem;height:100%;opacity:0;position:absolute;top:0;transition:opacity 50ms;white-space:nowrap;width:100%}@media screen and (min-width:60em){[dir=ltr] .md-search__suggest{padding-left:2.2rem}[dir=rtl] .md-search__suggest{padding-right:2.2rem}.md-search__suggest{font-size:.8rem}}[data-md-toggle=search]:checked~.md-header .md-search__suggest{opacity:1;transition:opacity .3s .1s}[dir=ltr] .md-search__output{border-bottom-left-radius:.1rem}[dir=ltr] .md-search__output,[dir=rtl] .md-search__output{border-bottom-right-radius:.1rem}[dir=rtl] .md-search__output{border-bottom-left-radius:.1rem}.md-search__output{overflow:hidden;position:absolute;width:100%;z-index:1}@media screen and (max-width:59.984375em){.md-search__output{bottom:0;top:2.4rem}}@media screen and (min-width:60em){.md-search__output{opacity:0;top:1.9rem;transition:opacity .4s}[data-md-toggle=search]:checked~.md-header .md-search__output{box-shadow:var(--md-shadow-z3);opacity:1}}.md-search__scrollwrap{-webkit-backface-visibility:hidden;backface-visibility:hidden;background-color:var(--md-default-bg-color);height:100%;overflow-y:auto;touch-action:pan-y}@media (-webkit-max-device-pixel-ratio:1),(max-resolution:1dppx){.md-search__scrollwrap{transform:translateZ(0)}}@media screen and (min-width:60em) and (max-width:76.234375em){.md-search__scrollwrap{width:23.4rem}}@media screen and (min-width:76.25em){.md-search__scrollwrap{width:34.4rem}}@media screen and (min-width:60em){.md-search__scrollwrap{max-height:0;scrollbar-color:var(--md-default-fg-color--lighter) #0000;scrollbar-width:thin}[data-md-toggle=search]:checked~.md-header .md-search__scrollwrap{max-height:75vh}.md-search__scrollwrap:hover{scrollbar-color:var(--md-accent-fg-color) #0000}.md-search__scrollwrap::-webkit-scrollbar{height:.2rem;width:.2rem}.md-search__scrollwrap::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-search__scrollwrap::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}}.md-search-result{color:var(--md-default-fg-color);word-break:break-word}.md-search-result__meta{background-color:var(--md-default-fg-color--lightest);color:var(--md-default-fg-color--light);font-size:.64rem;line-height:1.8rem;padding:0 .8rem;scroll-snap-align:start}@media screen and (min-width:60em){[dir=ltr] .md-search-result__meta{padding-left:2.2rem}[dir=rtl] .md-search-result__meta{padding-right:2.2rem}}.md-search-result__list{list-style:none;margin:0;padding:0;-webkit-user-select:none;user-select:none}.md-search-result__item{box-shadow:0 -.05rem var(--md-default-fg-color--lightest)}.md-search-result__item:first-child{box-shadow:none}.md-search-result__link{display:block;outline:none;scroll-snap-align:start;transition:background-color .25s}.md-search-result__link:focus,.md-search-result__link:hover{background-color:var(--md-accent-fg-color--transparent)}.md-search-result__link:last-child p:last-child{margin-bottom:.6rem}.md-search-result__more>summary{cursor:pointer;display:block;outline:none;position:sticky;scroll-snap-align:start;top:0;z-index:1}.md-search-result__more>summary::marker{display:none}.md-search-result__more>summary::-webkit-details-marker{display:none}.md-search-result__more>summary>div{color:var(--md-typeset-a-color);font-size:.64rem;padding:.75em .8rem;transition:color .25s,background-color .25s}@media screen and (min-width:60em){[dir=ltr] .md-search-result__more>summary>div{padding-left:2.2rem}[dir=rtl] .md-search-result__more>summary>div{padding-right:2.2rem}}.md-search-result__more>summary:focus>div,.md-search-result__more>summary:hover>div{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-search-result__more[open]>summary{background-color:var(--md-default-bg-color)}.md-search-result__article{overflow:hidden;padding:0 .8rem;position:relative}@media screen and (min-width:60em){[dir=ltr] .md-search-result__article{padding-left:2.2rem}[dir=rtl] .md-search-result__article{padding-right:2.2rem}}[dir=ltr] .md-search-result__icon{left:0}[dir=rtl] .md-search-result__icon{right:0}.md-search-result__icon{color:var(--md-default-fg-color--light);height:1.2rem;margin:.5rem;position:absolute;width:1.2rem}@media screen and (max-width:59.984375em){.md-search-result__icon{display:none}}.md-search-result__icon:after{background-color:currentcolor;content:"";display:inline-block;height:100%;-webkit-mask-image:var(--md-search-result-icon);mask-image:var(--md-search-result-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:100%}[dir=rtl] .md-search-result__icon:after{transform:scaleX(-1)}.md-search-result .md-typeset{color:var(--md-default-fg-color--light);font-size:.64rem;line-height:1.6}.md-search-result .md-typeset h1{color:var(--md-default-fg-color);font-size:.8rem;font-weight:400;line-height:1.4;margin:.55rem 0}.md-search-result .md-typeset h1 mark{text-decoration:none}.md-search-result .md-typeset h2{color:var(--md-default-fg-color);font-size:.64rem;font-weight:700;line-height:1.6;margin:.5em 0}.md-search-result .md-typeset h2 mark{text-decoration:none}.md-search-result__terms{color:var(--md-default-fg-color);display:block;font-size:.64rem;font-style:italic;margin:.5em 0}.md-search-result mark{background-color:initial;color:var(--md-accent-fg-color);text-decoration:underline}.md-select{position:relative;z-index:1}.md-select__inner{background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color);left:50%;margin-top:.2rem;max-height:0;opacity:0;position:absolute;top:calc(100% - .2rem);transform:translate3d(-50%,.3rem,0);transition:transform .25s 375ms,opacity .25s .25s,max-height 0ms .5s}.md-select:focus-within .md-select__inner,.md-select:hover .md-select__inner{max-height:10rem;opacity:1;transform:translate3d(-50%,0,0);transition:transform .25s cubic-bezier(.1,.7,.1,1),opacity .25s,max-height 0ms}.md-select__inner:after{border-bottom:.2rem solid #0000;border-bottom-color:var(--md-default-bg-color);border-left:.2rem solid #0000;border-right:.2rem solid #0000;border-top:0;content:"";height:0;left:50%;margin-left:-.2rem;margin-top:-.2rem;position:absolute;top:0;width:0}.md-select__list{border-radius:.1rem;font-size:.8rem;list-style-type:none;margin:0;max-height:inherit;overflow:auto;padding:0}.md-select__item{line-height:1.8rem}[dir=ltr] .md-select__link{padding-left:.6rem;padding-right:1.2rem}[dir=rtl] .md-select__link{padding-left:1.2rem;padding-right:.6rem}.md-select__link{cursor:pointer;display:block;outline:none;scroll-snap-align:start;transition:background-color .25s,color .25s;width:100%}.md-select__link:focus,.md-select__link:hover{color:var(--md-accent-fg-color)}.md-select__link:focus{background-color:var(--md-default-fg-color--lightest)}.md-sidebar{align-self:flex-start;flex-shrink:0;padding:1.2rem 0;position:sticky;top:2.4rem;width:12.1rem}@media print{.md-sidebar{display:none}}@media screen and (max-width:76.234375em){[dir=ltr] .md-sidebar--primary{left:-12.1rem}[dir=rtl] .md-sidebar--primary{right:-12.1rem}.md-sidebar--primary{background-color:var(--md-default-bg-color);display:block;height:100%;position:fixed;top:0;transform:translateX(0);transition:transform .25s cubic-bezier(.4,0,.2,1),box-shadow .25s;width:12.1rem;z-index:5}[data-md-toggle=drawer]:checked~.md-container .md-sidebar--primary{box-shadow:var(--md-shadow-z3);transform:translateX(12.1rem)}[dir=rtl] [data-md-toggle=drawer]:checked~.md-container .md-sidebar--primary{transform:translateX(-12.1rem)}.md-sidebar--primary .md-sidebar__scrollwrap{bottom:0;left:0;margin:0;overflow:hidden;position:absolute;right:0;scroll-snap-type:none;top:0}}@media screen and (min-width:76.25em){.md-sidebar{height:0}.no-js .md-sidebar{height:auto}.md-header--lifted~.md-container .md-sidebar{top:4.8rem}}.md-sidebar--secondary{display:none;order:2}@media screen and (min-width:60em){.md-sidebar--secondary{height:0}.no-js .md-sidebar--secondary{height:auto}.md-sidebar--secondary:not([hidden]){display:block}.md-sidebar--secondary .md-sidebar__scrollwrap{touch-action:pan-y}}.md-sidebar__scrollwrap{-webkit-backface-visibility:hidden;backface-visibility:hidden;margin:0 .2rem;overflow-y:auto;scrollbar-color:var(--md-default-fg-color--lighter) #0000}@media screen and (min-width:60em){.md-sidebar__scrollwrap{scrollbar-gutter:stable;scrollbar-width:thin}}.md-sidebar__scrollwrap::-webkit-scrollbar{height:.2rem;width:.2rem}.md-sidebar__scrollwrap:focus-within,.md-sidebar__scrollwrap:hover{scrollbar-color:var(--md-accent-fg-color) #0000}.md-sidebar__scrollwrap:focus-within::-webkit-scrollbar-thumb,.md-sidebar__scrollwrap:hover::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-sidebar__scrollwrap:focus-within::-webkit-scrollbar-thumb:hover,.md-sidebar__scrollwrap:hover::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}@supports selector(::-webkit-scrollbar){.md-sidebar__scrollwrap{scrollbar-gutter:auto}[dir=ltr] .md-sidebar__inner{padding-right:calc(100% - 11.5rem)}[dir=rtl] .md-sidebar__inner{padding-left:calc(100% - 11.5rem)}}@media screen and (max-width:76.234375em){.md-overlay{background-color:#0000008a;height:0;opacity:0;position:fixed;top:0;transition:width 0ms .25s,height 0ms .25s,opacity .25s;width:0;z-index:5}[data-md-toggle=drawer]:checked~.md-overlay{height:100%;opacity:1;transition:width 0ms,height 0ms,opacity .25s;width:100%}}@keyframes facts{0%{height:0}to{height:.65rem}}@keyframes fact{0%{opacity:0;transform:translateY(100%)}50%{opacity:0}to{opacity:1;transform:translateY(0)}}:root{--md-source-forks-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0M5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0m6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5m-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0"/></svg>');--md-source-repositories-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M2 2.5A2.5 2.5 0 0 1 4.5 0h8.75a.75.75 0 0 1 .75.75v12.5a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h1.75v-2h-8a1 1 0 0 0-.714 1.7.75.75 0 1 1-1.072 1.05A2.5 2.5 0 0 1 2 11.5Zm10.5-1h-8a1 1 0 0 0-1 1v6.708A2.5 2.5 0 0 1 4.5 9h8ZM5 12.25a.25.25 0 0 1 .25-.25h3.5a.25.25 0 0 1 .25.25v3.25a.25.25 0 0 1-.4.2l-1.45-1.087a.25.25 0 0 0-.3 0L5.4 15.7a.25.25 0 0 1-.4-.2Z"/></svg>');--md-source-stars-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25m0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41z"/></svg>');--md-source-version-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path d="M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.75 1.75 0 0 1 1 7.775m1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2"/></svg>')}.md-source{-webkit-backface-visibility:hidden;backface-visibility:hidden;display:block;font-size:.65rem;line-height:1.2;outline-color:var(--md-accent-fg-color);transition:opacity .25s;white-space:nowrap}.md-source:hover{opacity:.7}.md-source__icon{display:inline-block;height:2.4rem;vertical-align:middle;width:2rem}[dir=ltr] .md-source__icon svg{margin-left:.6rem}[dir=rtl] .md-source__icon svg{margin-right:.6rem}.md-source__icon svg{margin-top:.6rem}[dir=ltr] .md-source__icon+.md-source__repository{padding-left:2rem}[dir=rtl] .md-source__icon+.md-source__repository{padding-right:2rem}[dir=ltr] .md-source__icon+.md-source__repository{margin-left:-2rem}[dir=rtl] .md-source__icon+.md-source__repository{margin-right:-2rem}[dir=ltr] .md-source__repository{margin-left:.6rem}[dir=rtl] .md-source__repository{margin-right:.6rem}.md-source__repository{display:inline-block;max-width:calc(100% - 1.2rem);overflow:hidden;text-overflow:ellipsis;vertical-align:middle}.md-source__facts{display:flex;font-size:.55rem;gap:.4rem;list-style-type:none;margin:.1rem 0 0;opacity:.75;overflow:hidden;padding:0;width:100%}.md-source__repository--active .md-source__facts{animation:facts .25s ease-in}.md-source__fact{overflow:hidden;text-overflow:ellipsis}.md-source__repository--active .md-source__fact{animation:fact .4s ease-out}[dir=ltr] .md-source__fact:before{margin-right:.1rem}[dir=rtl] .md-source__fact:before{margin-left:.1rem}.md-source__fact:before{background-color:currentcolor;content:"";display:inline-block;height:.6rem;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;vertical-align:text-top;width:.6rem}.md-source__fact:nth-child(1n+2){flex-shrink:0}.md-source__fact--version:before{-webkit-mask-image:var(--md-source-version-icon);mask-image:var(--md-source-version-icon)}.md-source__fact--stars:before{-webkit-mask-image:var(--md-source-stars-icon);mask-image:var(--md-source-stars-icon)}.md-source__fact--forks:before{-webkit-mask-image:var(--md-source-forks-icon);mask-image:var(--md-source-forks-icon)}.md-source__fact--repositories:before{-webkit-mask-image:var(--md-source-repositories-icon);mask-image:var(--md-source-repositories-icon)}.md-source-file{margin:1em 0}[dir=ltr] .md-source-file__fact{margin-right:.6rem}[dir=rtl] .md-source-file__fact{margin-left:.6rem}.md-source-file__fact{align-items:center;color:var(--md-default-fg-color--light);display:inline-flex;font-size:.68rem;gap:.3rem}.md-source-file__fact .md-icon{flex-shrink:0;margin-bottom:.05rem}[dir=ltr] .md-source-file__fact .md-author{float:left}[dir=rtl] .md-source-file__fact .md-author{float:right}.md-source-file__fact .md-author{margin-right:.2rem}.md-source-file__fact svg{width:.9rem}:root{--md-status:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11 9h2V7h-2m1 13c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8m0-18A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2m-1 15h2v-6h-2z"/></svg>');--md-status--new:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m23 12-2.44-2.78.34-3.68-3.61-.82-1.89-3.18L12 3 8.6 1.54 6.71 4.72l-3.61.81.34 3.68L1 12l2.44 2.78-.34 3.69 3.61.82 1.89 3.18L12 21l3.4 1.46 1.89-3.18 3.61-.82-.34-3.68zm-10 5h-2v-2h2zm0-4h-2V7h2z"/></svg>');--md-status--deprecated:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9 3v1H4v2h1v13a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V6h1V4h-5V3zm0 5h2v9H9zm4 0h2v9h-2z"/></svg>');--md-status--encrypted:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5zm0 6c1.4 0 2.8 1.1 2.8 2.5V11c.6 0 1.2.6 1.2 1.3v3.5c0 .6-.6 1.2-1.3 1.2H9.2c-.6 0-1.2-.6-1.2-1.3v-3.5c0-.6.6-1.2 1.2-1.2V9.5C9.2 8.1 10.6 7 12 7m0 1.2c-.8 0-1.5.5-1.5 1.3V11h3V9.5c0-.8-.7-1.3-1.5-1.3"/></svg>')}.md-status:after{background-color:var(--md-default-fg-color--light);content:"";display:inline-block;height:1.125em;-webkit-mask-image:var(--md-status);mask-image:var(--md-status);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;vertical-align:text-bottom;width:1.125em}.md-status:hover:after{background-color:currentcolor}.md-status--new:after{-webkit-mask-image:var(--md-status--new);mask-image:var(--md-status--new)}.md-status--deprecated:after{-webkit-mask-image:var(--md-status--deprecated);mask-image:var(--md-status--deprecated)}.md-status--encrypted:after{-webkit-mask-image:var(--md-status--encrypted);mask-image:var(--md-status--encrypted)}.md-tabs{background-color:var(--md-primary-fg-color);color:var(--md-primary-bg-color);display:block;line-height:1.3;overflow:auto;width:100%;z-index:3}@media print{.md-tabs{display:none}}@media screen and (max-width:76.234375em){.md-tabs{display:none}}.md-tabs[hidden]{pointer-events:none}[dir=ltr] .md-tabs__list{margin-left:.2rem}[dir=rtl] .md-tabs__list{margin-right:.2rem}.md-tabs__list{contain:content;display:flex;list-style:none;margin:0;overflow:auto;padding:0;scrollbar-width:none;white-space:nowrap}.md-tabs__list::-webkit-scrollbar{display:none}.md-tabs__item{height:2.4rem;padding-left:.6rem;padding-right:.6rem}.md-tabs__item--active .md-tabs__link{color:inherit;opacity:1}.md-tabs__link{-webkit-backface-visibility:hidden;backface-visibility:hidden;display:flex;font-size:.7rem;margin-top:.8rem;opacity:.7;outline-color:var(--md-accent-fg-color);outline-offset:.2rem;transition:transform .4s cubic-bezier(.1,.7,.1,1),opacity .25s}.md-tabs__link:focus,.md-tabs__link:hover{color:inherit;opacity:1}[dir=ltr] .md-tabs__link svg{margin-right:.4rem}[dir=rtl] .md-tabs__link svg{margin-left:.4rem}.md-tabs__link svg{fill:currentcolor;height:1.3em}.md-tabs__item:nth-child(2) .md-tabs__link{transition-delay:20ms}.md-tabs__item:nth-child(3) .md-tabs__link{transition-delay:40ms}.md-tabs__item:nth-child(4) .md-tabs__link{transition-delay:60ms}.md-tabs__item:nth-child(5) .md-tabs__link{transition-delay:80ms}.md-tabs__item:nth-child(6) .md-tabs__link{transition-delay:.1s}.md-tabs__item:nth-child(7) .md-tabs__link{transition-delay:.12s}.md-tabs__item:nth-child(8) .md-tabs__link{transition-delay:.14s}.md-tabs__item:nth-child(9) .md-tabs__link{transition-delay:.16s}.md-tabs__item:nth-child(10) .md-tabs__link{transition-delay:.18s}.md-tabs__item:nth-child(11) .md-tabs__link{transition-delay:.2s}.md-tabs__item:nth-child(12) .md-tabs__link{transition-delay:.22s}.md-tabs__item:nth-child(13) .md-tabs__link{transition-delay:.24s}.md-tabs__item:nth-child(14) .md-tabs__link{transition-delay:.26s}.md-tabs__item:nth-child(15) .md-tabs__link{transition-delay:.28s}.md-tabs__item:nth-child(16) .md-tabs__link{transition-delay:.3s}.md-tabs[hidden] .md-tabs__link{opacity:0;transform:translateY(50%);transition:transform 0ms .1s,opacity .1s}:root{--md-tag-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m5.41 21 .71-4h-4l.35-2h4l1.06-6h-4l.35-2h4l.71-4h2l-.71 4h6l.71-4h2l-.71 4h4l-.35 2h-4l-1.06 6h4l-.35 2h-4l-.71 4h-2l.71-4h-6l-.71 4zM9.53 9l-1.06 6h6l1.06-6z"/></svg>')}.md-typeset .md-tags:not([hidden]){display:inline-flex;flex-wrap:wrap;gap:.5em;margin-bottom:.75em;margin-top:-.125em}.md-typeset .md-tag{align-items:center;background:var(--md-default-fg-color--lightest);border-radius:2.4rem;display:inline-flex;font-size:.64rem;font-size:min(.8em,.64rem);font-weight:700;gap:.5em;letter-spacing:normal;line-height:1.6;padding:.3125em .78125em}.md-typeset .md-tag[href]{-webkit-tap-highlight-color:transparent;color:inherit;outline:none;transition:color 125ms,background-color 125ms}.md-typeset .md-tag[href]:focus,.md-typeset .md-tag[href]:hover{background-color:var(--md-accent-fg-color);color:var(--md-accent-bg-color)}[id]>.md-typeset .md-tag{vertical-align:text-top}.md-typeset .md-tag-shadow{opacity:.5}.md-typeset .md-tag-icon:before{background-color:var(--md-default-fg-color--lighter);content:"";display:inline-block;height:1.2em;-webkit-mask-image:var(--md-tag-icon);mask-image:var(--md-tag-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:background-color 125ms;vertical-align:text-bottom;width:1.2em}.md-typeset .md-tag-icon[href]:focus:before,.md-typeset .md-tag-icon[href]:hover:before{background-color:var(--md-accent-bg-color)}@keyframes pulse{0%{transform:scale(.95)}75%{transform:scale(1)}to{transform:scale(.95)}}:root{--md-annotation-bg-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 2A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2"/></svg>');--md-annotation-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M17 13h-4v4h-2v-4H7v-2h4V7h2v4h4m-5-9A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2"/></svg>')}.md-tooltip{-webkit-backface-visibility:hidden;backface-visibility:hidden;background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color);font-family:var(--md-text-font-family);left:clamp(var(--md-tooltip-0,0rem) + .8rem,var(--md-tooltip-x),100vw + var(--md-tooltip-0,0rem) + .8rem - var(--md-tooltip-width) - 2 * .8rem);max-width:calc(100vw - 1.6rem);opacity:0;position:absolute;top:var(--md-tooltip-y);transform:translateY(-.4rem);transition:transform 0ms .25s,opacity .25s,z-index .25s;width:var(--md-tooltip-width);z-index:0}.md-tooltip--active{opacity:1;transform:translateY(0);transition:transform .25s cubic-bezier(.1,.7,.1,1),opacity .25s,z-index 0ms;z-index:2}.md-tooltip--inline{font-weight:700;-webkit-user-select:none;user-select:none;width:auto}.md-tooltip--inline:not(.md-tooltip--active){transform:translateY(.2rem) scale(.9)}.md-tooltip--inline .md-tooltip__inner{font-size:.5rem;padding:.2rem .4rem}[hidden]+.md-tooltip--inline{display:none}.focus-visible>.md-tooltip,.md-tooltip:target{outline:var(--md-accent-fg-color) auto}.md-tooltip__inner{font-size:.64rem;padding:.8rem}.md-tooltip__inner.md-typeset>:first-child{margin-top:0}.md-tooltip__inner.md-typeset>:last-child{margin-bottom:0}.md-annotation{font-style:normal;font-weight:400;outline:none;text-align:initial;vertical-align:text-bottom;white-space:normal}[dir=rtl] .md-annotation{direction:rtl}code .md-annotation{font-family:var(--md-code-font-family);font-size:inherit}.md-annotation:not([hidden]){display:inline-block;line-height:1.25}.md-annotation__index{border-radius:.01px;cursor:pointer;display:inline-block;margin-left:.4ch;margin-right:.4ch;outline:none;overflow:hidden;position:relative;-webkit-user-select:none;user-select:none;vertical-align:text-top;z-index:0}.md-annotation .md-annotation__index{transition:z-index .25s}@media screen{.md-annotation__index{width:2.2ch}[data-md-visible]>.md-annotation__index{animation:pulse 2s infinite}.md-annotation__index:before{background:var(--md-default-bg-color);-webkit-mask-image:var(--md-annotation-bg-icon);mask-image:var(--md-annotation-bg-icon)}.md-annotation__index:after,.md-annotation__index:before{content:"";height:2.2ch;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:-.1ch;width:2.2ch;z-index:-1}.md-annotation__index:after{background-color:var(--md-default-fg-color--lighter);-webkit-mask-image:var(--md-annotation-icon);mask-image:var(--md-annotation-icon);transform:scale(1.0001);transition:background-color .25s,transform .25s}.md-tooltip--active+.md-annotation__index:after{transform:rotate(45deg)}.md-tooltip--active+.md-annotation__index:after,:hover>.md-annotation__index:after{background-color:var(--md-accent-fg-color)}}.md-tooltip--active+.md-annotation__index{animation-play-state:paused;transition-duration:0ms;z-index:2}.md-annotation__index [data-md-annotation-id]{display:inline-block}@media print{.md-annotation__index [data-md-annotation-id]{background:var(--md-default-fg-color--lighter);border-radius:2ch;color:var(--md-default-bg-color);font-weight:700;padding:0 .6ch;white-space:nowrap}.md-annotation__index [data-md-annotation-id]:after{content:attr(data-md-annotation-id)}}.md-typeset .md-annotation-list{counter-reset:annotation;list-style:none!important}.md-typeset .md-annotation-list li{position:relative}[dir=ltr] .md-typeset .md-annotation-list li:before{left:-2.125em}[dir=rtl] .md-typeset .md-annotation-list li:before{right:-2.125em}.md-typeset .md-annotation-list li:before{background:var(--md-default-fg-color--lighter);border-radius:2ch;color:var(--md-default-bg-color);content:counter(annotation);counter-increment:annotation;font-size:.8875em;font-weight:700;height:2ch;line-height:1.25;min-width:2ch;padding:0 .6ch;position:absolute;text-align:center;top:.25em}:root{--md-tooltip-width:20rem;--md-tooltip-tail:0.3rem}.md-tooltip2{-webkit-backface-visibility:hidden;backface-visibility:hidden;color:var(--md-default-fg-color);font-family:var(--md-text-font-family);opacity:0;pointer-events:none;position:absolute;top:calc(var(--md-tooltip-host-y) + var(--md-tooltip-y));transform:translateY(-.4rem);transform-origin:calc(var(--md-tooltip-host-x) + var(--md-tooltip-x)) 0;transition:transform 0ms .25s,opacity .25s,z-index .25s;width:100%;z-index:0}.md-tooltip2:before{border-left:var(--md-tooltip-tail) solid #0000;border-right:var(--md-tooltip-tail) solid #0000;content:"";display:block;left:clamp(1.5 * .8rem,var(--md-tooltip-host-x) + var(--md-tooltip-x) - var(--md-tooltip-tail),100vw - 2 * var(--md-tooltip-tail) - 1.5 * .8rem);position:absolute;z-index:1}.md-tooltip2--top:before{border-top:var(--md-tooltip-tail) solid var(--md-default-bg-color);bottom:calc(var(--md-tooltip-tail)*-1 + .025rem);filter:drop-shadow(0 1px 0 hsla(0,0%,0%,.05))}.md-tooltip2--bottom:before{border-bottom:var(--md-tooltip-tail) solid var(--md-default-bg-color);filter:drop-shadow(0 -1px 0 hsla(0,0%,0%,.05));top:calc(var(--md-tooltip-tail)*-1 + .025rem)}.md-tooltip2--active{opacity:1;transform:translateY(0);transition:transform .4s cubic-bezier(0,1,.5,1),opacity .25s,z-index 0ms;z-index:2}.md-tooltip2__inner{scrollbar-gutter:stable;background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);left:clamp(.8rem,var(--md-tooltip-host-x) - .8rem,100vw - var(--md-tooltip-width) - .8rem);max-height:40vh;max-width:calc(100vw - 1.6rem);position:relative;scrollbar-width:thin}.md-tooltip2__inner::-webkit-scrollbar{height:.2rem;width:.2rem}.md-tooltip2__inner::-webkit-scrollbar-thumb{background-color:var(--md-default-fg-color--lighter)}.md-tooltip2__inner::-webkit-scrollbar-thumb:hover{background-color:var(--md-accent-fg-color)}[role=dialog]>.md-tooltip2__inner{font-size:.64rem;overflow:auto;padding:0 .8rem;pointer-events:auto;width:var(--md-tooltip-width)}[role=dialog]>.md-tooltip2__inner:after,[role=dialog]>.md-tooltip2__inner:before{content:"";display:block;height:.8rem;position:sticky;width:100%;z-index:10}[role=dialog]>.md-tooltip2__inner:before{background:linear-gradient(var(--md-default-bg-color),#0000 75%);top:0}[role=dialog]>.md-tooltip2__inner:after{background:linear-gradient(#0000,var(--md-default-bg-color) 75%);bottom:0}[role=tooltip]>.md-tooltip2__inner{font-size:.5rem;font-weight:700;left:clamp(.8rem,var(--md-tooltip-host-x) + var(--md-tooltip-x) - var(--md-tooltip-width)/2,100vw - var(--md-tooltip-width) - .8rem);max-width:min(100vw - 2 * .8rem,400px);padding:.2rem .4rem;-webkit-user-select:none;user-select:none;width:-moz-fit-content;width:fit-content}.md-tooltip2__inner.md-typeset>:first-child{margin-top:0}.md-tooltip2__inner.md-typeset>:last-child{margin-bottom:0}[dir=ltr] .md-top{margin-left:50%}[dir=rtl] .md-top{margin-right:50%}.md-top{background-color:var(--md-default-bg-color);border-radius:1.6rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color--light);cursor:pointer;display:block;font-size:.7rem;outline:none;padding:.4rem .8rem;position:fixed;top:3.2rem;transform:translate(-50%);transition:color 125ms,background-color 125ms,transform 125ms cubic-bezier(.4,0,.2,1),opacity 125ms;z-index:2}@media print{.md-top{display:none}}[dir=rtl] .md-top{transform:translate(50%)}.md-top[hidden]{opacity:0;pointer-events:none;transform:translate(-50%,.2rem);transition-duration:0ms}[dir=rtl] .md-top[hidden]{transform:translate(50%,.2rem)}.md-top:focus,.md-top:hover{background-color:var(--md-accent-fg-color);color:var(--md-accent-bg-color)}.md-top svg{display:inline-block;vertical-align:-.5em}@keyframes hoverfix{0%{pointer-events:none}}:root{--md-version-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!--! Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2024 Fonticons, Inc.--><path d="M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9S301 191.9 288 191.9L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z"/></svg>')}.md-version{flex-shrink:0;font-size:.8rem;height:2.4rem}[dir=ltr] .md-version__current{margin-left:1.4rem;margin-right:.4rem}[dir=rtl] .md-version__current{margin-left:.4rem;margin-right:1.4rem}.md-version__current{color:inherit;cursor:pointer;outline:none;position:relative;top:.05rem}[dir=ltr] .md-version__current:after{margin-left:.4rem}[dir=rtl] .md-version__current:after{margin-right:.4rem}.md-version__current:after{background-color:currentcolor;content:"";display:inline-block;height:.6rem;-webkit-mask-image:var(--md-version-icon);mask-image:var(--md-version-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:.4rem}.md-version__alias{margin-left:.3rem;opacity:.7}.md-version__list{background-color:var(--md-default-bg-color);border-radius:.1rem;box-shadow:var(--md-shadow-z2);color:var(--md-default-fg-color);list-style-type:none;margin:.2rem .8rem;max-height:0;opacity:0;overflow:auto;padding:0;position:absolute;scroll-snap-type:y mandatory;top:.15rem;transition:max-height 0ms .5s,opacity .25s .25s;z-index:3}.md-version:focus-within .md-version__list,.md-version:hover .md-version__list{max-height:10rem;opacity:1;transition:max-height 0ms,opacity .25s}@media (hover:none),(pointer:coarse){.md-version:hover .md-version__list{animation:hoverfix .25s forwards}.md-version:focus-within .md-version__list{animation:none}}.md-version__item{line-height:1.8rem}[dir=ltr] .md-version__link{padding-left:.6rem;padding-right:1.2rem}[dir=rtl] .md-version__link{padding-left:1.2rem;padding-right:.6rem}.md-version__link{cursor:pointer;display:block;outline:none;scroll-snap-align:start;transition:color .25s,background-color .25s;white-space:nowrap;width:100%}.md-version__link:focus,.md-version__link:hover{color:var(--md-accent-fg-color)}.md-version__link:focus{background-color:var(--md-default-fg-color--lightest)}:root{--md-admonition-icon--note:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m3.1 5.07c.14 0 .28.05.4.16l1.27 1.27c.23.22.23.57 0 .78l-1 1-2.05-2.05 1-1c.1-.11.24-.16.38-.16m-1.97 1.74 2.06 2.06-6.06 6.06H7.07v-2.06z"/></svg>');--md-admonition-icon--abstract:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M17 9H7V7h10m0 6H7v-2h10m-3 6H7v-2h7M12 3a1 1 0 0 1 1 1 1 1 0 0 1-1 1 1 1 0 0 1-1-1 1 1 0 0 1 1-1m7 0h-4.18C14.4 1.84 13.3 1 12 1s-2.4.84-2.82 2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2"/></svg>');--md-admonition-icon--info:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13 9h-2V7h2m0 10h-2v-6h2m-1-9A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10A10 10 0 0 0 12 2"/></svg>');--md-admonition-icon--tip:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M17.66 11.2c-.23-.3-.51-.56-.77-.82-.67-.6-1.43-1.03-2.07-1.66C13.33 7.26 13 4.85 13.95 3c-.95.23-1.78.75-2.49 1.32-2.59 2.08-3.61 5.75-2.39 8.9.04.1.08.2.08.33 0 .22-.15.42-.35.5-.23.1-.47.04-.66-.12a.6.6 0 0 1-.14-.17c-1.13-1.43-1.31-3.48-.55-5.12C5.78 10 4.87 12.3 5 14.47c.06.5.12 1 .29 1.5.14.6.41 1.2.71 1.73 1.08 1.73 2.95 2.97 4.96 3.22 2.14.27 4.43-.12 6.07-1.6 1.83-1.66 2.47-4.32 1.53-6.6l-.13-.26c-.21-.46-.77-1.26-.77-1.26m-3.16 6.3c-.28.24-.74.5-1.1.6-1.12.4-2.24-.16-2.9-.82 1.19-.28 1.9-1.16 2.11-2.05.17-.8-.15-1.46-.28-2.23-.12-.74-.1-1.37.17-2.06.19.38.39.76.63 1.06.77 1 1.98 1.44 2.24 2.8.04.14.06.28.06.43.03.82-.33 1.72-.93 2.27"/></svg>');--md-admonition-icon--success:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M21 7 9 19l-5.5-5.5 1.41-1.41L9 16.17 19.59 5.59z"/></svg>');--md-admonition-icon--question:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m15.07 11.25-.9.92C13.45 12.89 13 13.5 13 15h-2v-.5c0-1.11.45-2.11 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41a2 2 0 0 0-2-2 2 2 0 0 0-2 2H8a4 4 0 0 1 4-4 4 4 0 0 1 4 4 3.2 3.2 0 0 1-.93 2.25M13 19h-2v-2h2M12 2A10 10 0 0 0 2 12a10 10 0 0 0 10 10 10 10 0 0 0 10-10c0-5.53-4.5-10-10-10"/></svg>');--md-admonition-icon--warning:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M13 14h-2V9h2m0 9h-2v-2h2M1 21h22L12 2z"/></svg>');--md-admonition-icon--failure:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>');--md-admonition-icon--danger:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m11.5 20 4.86-9.73H13V4l-5 9.73h3.5zM12 2c2.75 0 5.1 1 7.05 2.95S22 9.25 22 12s-1 5.1-2.95 7.05S14.75 22 12 22s-5.1-1-7.05-2.95S2 14.75 2 12s1-5.1 2.95-7.05S9.25 2 12 2"/></svg>');--md-admonition-icon--bug:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11 13h2v1h-2zm10-8v6c0 5.5-3.8 10.7-9 12-5.2-1.3-9-6.5-9-12V5l9-4zm-4 5h-2.2c-.2-.6-.6-1.1-1.1-1.5l1.2-1.2-.7-.7L12.8 8H12c-.2 0-.5 0-.7.1L9.9 6.6l-.8.8 1.2 1.2c-.5.3-.9.8-1.1 1.4H7v1h2v1H7v1h2v1H7v1h2.2c.4 1.2 1.5 2 2.8 2s2.4-.8 2.8-2H17v-1h-2v-1h2v-1h-2v-1h2zm-6 2h2v-1h-2z"/></svg>');--md-admonition-icon--example:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M7 2v2h1v14a4 4 0 0 0 4 4 4 4 0 0 0 4-4V4h1V2zm4 14c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1m2-4c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1m1-5h-4V4h4z"/></svg>');--md-admonition-icon--quote:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14 17h3l2-4V7h-6v6h3M6 17h3l2-4V7H5v6h3z"/></svg>')}.md-typeset .admonition,.md-typeset details{background-color:var(--md-admonition-bg-color);border:.075rem solid #448aff;border-radius:.2rem;box-shadow:var(--md-shadow-z1);color:var(--md-admonition-fg-color);display:flow-root;font-size:.64rem;margin:1.5625em 0;padding:0 .6rem;page-break-inside:avoid;transition:box-shadow 125ms}@media print{.md-typeset .admonition,.md-typeset details{box-shadow:none}}.md-typeset .admonition:focus-within,.md-typeset details:focus-within{box-shadow:0 0 0 .2rem #448aff1a}.md-typeset .admonition>*,.md-typeset details>*{box-sizing:border-box}.md-typeset .admonition .admonition,.md-typeset .admonition details,.md-typeset details .admonition,.md-typeset details details{margin-bottom:1em;margin-top:1em}.md-typeset .admonition .md-typeset__scrollwrap,.md-typeset details .md-typeset__scrollwrap{margin:1em -.6rem}.md-typeset .admonition .md-typeset__table,.md-typeset details .md-typeset__table{padding:0 .6rem}.md-typeset .admonition>.tabbed-set:only-child,.md-typeset details>.tabbed-set:only-child{margin-top:0}html .md-typeset .admonition>:last-child,html .md-typeset details>:last-child{margin-bottom:.6rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary{padding-left:2rem;padding-right:.6rem}[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{padding-left:.6rem;padding-right:2rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary{border-left-width:.2rem}[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{border-right-width:.2rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary{border-top-left-radius:.1rem}[dir=ltr] .md-typeset .admonition-title,[dir=ltr] .md-typeset summary,[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{border-top-right-radius:.1rem}[dir=rtl] .md-typeset .admonition-title,[dir=rtl] .md-typeset summary{border-top-left-radius:.1rem}.md-typeset .admonition-title,.md-typeset summary{background-color:#448aff1a;border:none;font-weight:700;margin:0 -.6rem;padding-bottom:.4rem;padding-top:.4rem;position:relative}html .md-typeset .admonition-title:last-child,html .md-typeset summary:last-child{margin-bottom:0}[dir=ltr] .md-typeset .admonition-title:before,[dir=ltr] .md-typeset summary:before{left:.6rem}[dir=rtl] .md-typeset .admonition-title:before,[dir=rtl] .md-typeset summary:before{right:.6rem}.md-typeset .admonition-title:before,.md-typeset summary:before{background-color:#448aff;content:"";height:1rem;-webkit-mask-image:var(--md-admonition-icon--note);mask-image:var(--md-admonition-icon--note);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:.625em;width:1rem}.md-typeset .admonition-title code,.md-typeset summary code{box-shadow:0 0 0 .05rem var(--md-default-fg-color--lightest)}.md-typeset .admonition.note,.md-typeset details.note{border-color:#448aff}.md-typeset .admonition.note:focus-within,.md-typeset details.note:focus-within{box-shadow:0 0 0 .2rem #448aff1a}.md-typeset .note>.admonition-title,.md-typeset .note>summary{background-color:#448aff1a}.md-typeset .note>.admonition-title:before,.md-typeset .note>summary:before{background-color:#448aff;-webkit-mask-image:var(--md-admonition-icon--note);mask-image:var(--md-admonition-icon--note)}.md-typeset .note>.admonition-title:after,.md-typeset .note>summary:after{color:#448aff}.md-typeset .admonition.abstract,.md-typeset details.abstract{border-color:#00b0ff}.md-typeset .admonition.abstract:focus-within,.md-typeset details.abstract:focus-within{box-shadow:0 0 0 .2rem #00b0ff1a}.md-typeset .abstract>.admonition-title,.md-typeset .abstract>summary{background-color:#00b0ff1a}.md-typeset .abstract>.admonition-title:before,.md-typeset .abstract>summary:before{background-color:#00b0ff;-webkit-mask-image:var(--md-admonition-icon--abstract);mask-image:var(--md-admonition-icon--abstract)}.md-typeset .abstract>.admonition-title:after,.md-typeset .abstract>summary:after{color:#00b0ff}.md-typeset .admonition.info,.md-typeset details.info{border-color:#00b8d4}.md-typeset .admonition.info:focus-within,.md-typeset details.info:focus-within{box-shadow:0 0 0 .2rem #00b8d41a}.md-typeset .info>.admonition-title,.md-typeset .info>summary{background-color:#00b8d41a}.md-typeset .info>.admonition-title:before,.md-typeset .info>summary:before{background-color:#00b8d4;-webkit-mask-image:var(--md-admonition-icon--info);mask-image:var(--md-admonition-icon--info)}.md-typeset .info>.admonition-title:after,.md-typeset .info>summary:after{color:#00b8d4}.md-typeset .admonition.tip,.md-typeset details.tip{border-color:#00bfa5}.md-typeset .admonition.tip:focus-within,.md-typeset details.tip:focus-within{box-shadow:0 0 0 .2rem #00bfa51a}.md-typeset .tip>.admonition-title,.md-typeset .tip>summary{background-color:#00bfa51a}.md-typeset .tip>.admonition-title:before,.md-typeset .tip>summary:before{background-color:#00bfa5;-webkit-mask-image:var(--md-admonition-icon--tip);mask-image:var(--md-admonition-icon--tip)}.md-typeset .tip>.admonition-title:after,.md-typeset .tip>summary:after{color:#00bfa5}.md-typeset .admonition.success,.md-typeset details.success{border-color:#00c853}.md-typeset .admonition.success:focus-within,.md-typeset details.success:focus-within{box-shadow:0 0 0 .2rem #00c8531a}.md-typeset .success>.admonition-title,.md-typeset .success>summary{background-color:#00c8531a}.md-typeset .success>.admonition-title:before,.md-typeset .success>summary:before{background-color:#00c853;-webkit-mask-image:var(--md-admonition-icon--success);mask-image:var(--md-admonition-icon--success)}.md-typeset .success>.admonition-title:after,.md-typeset .success>summary:after{color:#00c853}.md-typeset .admonition.question,.md-typeset details.question{border-color:#64dd17}.md-typeset .admonition.question:focus-within,.md-typeset details.question:focus-within{box-shadow:0 0 0 .2rem #64dd171a}.md-typeset .question>.admonition-title,.md-typeset .question>summary{background-color:#64dd171a}.md-typeset .question>.admonition-title:before,.md-typeset .question>summary:before{background-color:#64dd17;-webkit-mask-image:var(--md-admonition-icon--question);mask-image:var(--md-admonition-icon--question)}.md-typeset .question>.admonition-title:after,.md-typeset .question>summary:after{color:#64dd17}.md-typeset .admonition.warning,.md-typeset details.warning{border-color:#ff9100}.md-typeset .admonition.warning:focus-within,.md-typeset details.warning:focus-within{box-shadow:0 0 0 .2rem #ff91001a}.md-typeset .warning>.admonition-title,.md-typeset .warning>summary{background-color:#ff91001a}.md-typeset .warning>.admonition-title:before,.md-typeset .warning>summary:before{background-color:#ff9100;-webkit-mask-image:var(--md-admonition-icon--warning);mask-image:var(--md-admonition-icon--warning)}.md-typeset .warning>.admonition-title:after,.md-typeset .warning>summary:after{color:#ff9100}.md-typeset .admonition.failure,.md-typeset details.failure{border-color:#ff5252}.md-typeset .admonition.failure:focus-within,.md-typeset details.failure:focus-within{box-shadow:0 0 0 .2rem #ff52521a}.md-typeset .failure>.admonition-title,.md-typeset .failure>summary{background-color:#ff52521a}.md-typeset .failure>.admonition-title:before,.md-typeset .failure>summary:before{background-color:#ff5252;-webkit-mask-image:var(--md-admonition-icon--failure);mask-image:var(--md-admonition-icon--failure)}.md-typeset .failure>.admonition-title:after,.md-typeset .failure>summary:after{color:#ff5252}.md-typeset .admonition.danger,.md-typeset details.danger{border-color:#ff1744}.md-typeset .admonition.danger:focus-within,.md-typeset details.danger:focus-within{box-shadow:0 0 0 .2rem #ff17441a}.md-typeset .danger>.admonition-title,.md-typeset .danger>summary{background-color:#ff17441a}.md-typeset .danger>.admonition-title:before,.md-typeset .danger>summary:before{background-color:#ff1744;-webkit-mask-image:var(--md-admonition-icon--danger);mask-image:var(--md-admonition-icon--danger)}.md-typeset .danger>.admonition-title:after,.md-typeset .danger>summary:after{color:#ff1744}.md-typeset .admonition.bug,.md-typeset details.bug{border-color:#f50057}.md-typeset .admonition.bug:focus-within,.md-typeset details.bug:focus-within{box-shadow:0 0 0 .2rem #f500571a}.md-typeset .bug>.admonition-title,.md-typeset .bug>summary{background-color:#f500571a}.md-typeset .bug>.admonition-title:before,.md-typeset .bug>summary:before{background-color:#f50057;-webkit-mask-image:var(--md-admonition-icon--bug);mask-image:var(--md-admonition-icon--bug)}.md-typeset .bug>.admonition-title:after,.md-typeset .bug>summary:after{color:#f50057}.md-typeset .admonition.example,.md-typeset details.example{border-color:#7c4dff}.md-typeset .admonition.example:focus-within,.md-typeset details.example:focus-within{box-shadow:0 0 0 .2rem #7c4dff1a}.md-typeset .example>.admonition-title,.md-typeset .example>summary{background-color:#7c4dff1a}.md-typeset .example>.admonition-title:before,.md-typeset .example>summary:before{background-color:#7c4dff;-webkit-mask-image:var(--md-admonition-icon--example);mask-image:var(--md-admonition-icon--example)}.md-typeset .example>.admonition-title:after,.md-typeset .example>summary:after{color:#7c4dff}.md-typeset .admonition.quote,.md-typeset details.quote{border-color:#9e9e9e}.md-typeset .admonition.quote:focus-within,.md-typeset details.quote:focus-within{box-shadow:0 0 0 .2rem #9e9e9e1a}.md-typeset .quote>.admonition-title,.md-typeset .quote>summary{background-color:#9e9e9e1a}.md-typeset .quote>.admonition-title:before,.md-typeset .quote>summary:before{background-color:#9e9e9e;-webkit-mask-image:var(--md-admonition-icon--quote);mask-image:var(--md-admonition-icon--quote)}.md-typeset .quote>.admonition-title:after,.md-typeset .quote>summary:after{color:#9e9e9e}:root{--md-footnotes-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.42L5.83 13H21V7z"/></svg>')}.md-typeset .footnote{color:var(--md-default-fg-color--light);font-size:.64rem}[dir=ltr] .md-typeset .footnote>ol{margin-left:0}[dir=rtl] .md-typeset .footnote>ol{margin-right:0}.md-typeset .footnote>ol>li{transition:color 125ms}.md-typeset .footnote>ol>li:target{color:var(--md-default-fg-color)}.md-typeset .footnote>ol>li:focus-within .footnote-backref{opacity:1;transform:translateX(0);transition:none}.md-typeset .footnote>ol>li:hover .footnote-backref,.md-typeset .footnote>ol>li:target .footnote-backref{opacity:1;transform:translateX(0)}.md-typeset .footnote>ol>li>:first-child{margin-top:0}.md-typeset .footnote-ref{font-size:.75em;font-weight:700}html .md-typeset .footnote-ref{outline-offset:.1rem}.md-typeset [id^="fnref:"]:target>.footnote-ref{outline:auto}.md-typeset .footnote-backref{color:var(--md-typeset-a-color);display:inline-block;font-size:0;opacity:0;transform:translateX(.25rem);transition:color .25s,transform .25s .25s,opacity 125ms .25s;vertical-align:text-bottom}@media print{.md-typeset .footnote-backref{color:var(--md-typeset-a-color);opacity:1;transform:translateX(0)}}[dir=rtl] .md-typeset .footnote-backref{transform:translateX(-.25rem)}.md-typeset .footnote-backref:hover{color:var(--md-accent-fg-color)}.md-typeset .footnote-backref:before{background-color:currentcolor;content:"";display:inline-block;height:.8rem;-webkit-mask-image:var(--md-footnotes-icon);mask-image:var(--md-footnotes-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;width:.8rem}[dir=rtl] .md-typeset .footnote-backref:before{transform:scaleX(-1)}[dir=ltr] .md-typeset .headerlink{margin-left:.5rem}[dir=rtl] .md-typeset .headerlink{margin-right:.5rem}.md-typeset .headerlink{color:var(--md-default-fg-color--lighter);display:inline-block;opacity:0;transition:color .25s,opacity 125ms}@media print{.md-typeset .headerlink{display:none}}.md-typeset .headerlink:focus,.md-typeset :hover>.headerlink,.md-typeset :target>.headerlink{opacity:1;transition:color .25s,opacity 125ms}.md-typeset .headerlink:focus,.md-typeset .headerlink:hover,.md-typeset :target>.headerlink{color:var(--md-accent-fg-color)}.md-typeset :target{--md-scroll-margin:3.6rem;--md-scroll-offset:0rem;scroll-margin-top:calc(var(--md-scroll-margin) - var(--md-scroll-offset))}@media screen and (min-width:76.25em){.md-header--lifted~.md-container .md-typeset :target{--md-scroll-margin:6rem}}.md-typeset h1:target,.md-typeset h2:target,.md-typeset h3:target{--md-scroll-offset:0.2rem}.md-typeset h4:target{--md-scroll-offset:0.15rem}.md-typeset div.arithmatex{overflow:auto}@media screen and (max-width:44.984375em){.md-typeset div.arithmatex{margin:0 -.8rem}.md-typeset div.arithmatex>*{width:min-content}}.md-typeset div.arithmatex>*{margin-left:auto!important;margin-right:auto!important;padding:0 .8rem;touch-action:auto}.md-typeset div.arithmatex>* mjx-container{margin:0!important}.md-typeset div.arithmatex mjx-assistive-mml{height:0}.md-typeset del.critic{background-color:var(--md-typeset-del-color)}.md-typeset del.critic,.md-typeset ins.critic{-webkit-box-decoration-break:clone;box-decoration-break:clone}.md-typeset ins.critic{background-color:var(--md-typeset-ins-color)}.md-typeset .critic.comment{-webkit-box-decoration-break:clone;box-decoration-break:clone;color:var(--md-code-hl-comment-color)}.md-typeset .critic.comment:before{content:"/* "}.md-typeset .critic.comment:after{content:" */"}.md-typeset .critic.block{box-shadow:none;display:block;margin:1em 0;overflow:auto;padding-left:.8rem;padding-right:.8rem}.md-typeset .critic.block>:first-child{margin-top:.5em}.md-typeset .critic.block>:last-child{margin-bottom:.5em}:root{--md-details-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>')}.md-typeset details{display:flow-root;overflow:visible;padding-top:0}.md-typeset details[open]>summary:after{transform:rotate(90deg)}.md-typeset details:not([open]){box-shadow:none;padding-bottom:0}.md-typeset details:not([open])>summary{border-radius:.1rem}[dir=ltr] .md-typeset summary{padding-right:1.8rem}[dir=rtl] .md-typeset summary{padding-left:1.8rem}[dir=ltr] .md-typeset summary{border-top-left-radius:.1rem}[dir=ltr] .md-typeset summary,[dir=rtl] .md-typeset summary{border-top-right-radius:.1rem}[dir=rtl] .md-typeset summary{border-top-left-radius:.1rem}.md-typeset summary{cursor:pointer;display:block;min-height:1rem;overflow:hidden}.md-typeset summary.focus-visible{outline-color:var(--md-accent-fg-color);outline-offset:.2rem}.md-typeset summary:not(.focus-visible){-webkit-tap-highlight-color:transparent;outline:none}[dir=ltr] .md-typeset summary:after{right:.4rem}[dir=rtl] .md-typeset summary:after{left:.4rem}.md-typeset summary:after{background-color:currentcolor;content:"";height:1rem;-webkit-mask-image:var(--md-details-icon);mask-image:var(--md-details-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:.625em;transform:rotate(0deg);transition:transform .25s;width:1rem}[dir=rtl] .md-typeset summary:after{transform:rotate(180deg)}.md-typeset summary::marker{display:none}.md-typeset summary::-webkit-details-marker{display:none}.md-typeset .emojione,.md-typeset .gemoji,.md-typeset .twemoji{--md-icon-size:1.125em;display:inline-flex;height:var(--md-icon-size);vertical-align:text-top}.md-typeset .emojione svg,.md-typeset .gemoji svg,.md-typeset .twemoji svg{fill:currentcolor;max-height:100%;width:var(--md-icon-size)}.md-typeset .lg,.md-typeset .xl,.md-typeset .xxl,.md-typeset .xxxl{vertical-align:text-bottom}.md-typeset .middle{vertical-align:middle}.md-typeset .lg{--md-icon-size:1.5em}.md-typeset .xl{--md-icon-size:2.25em}.md-typeset .xxl{--md-icon-size:3em}.md-typeset .xxxl{--md-icon-size:4em}.highlight .o,.highlight .ow{color:var(--md-code-hl-operator-color)}.highlight .p{color:var(--md-code-hl-punctuation-color)}.highlight .cpf,.highlight .l,.highlight .s,.highlight .s1,.highlight .s2,.highlight .sb,.highlight .sc,.highlight .si,.highlight .ss{color:var(--md-code-hl-string-color)}.highlight .cp,.highlight .se,.highlight .sh,.highlight .sr,.highlight .sx{color:var(--md-code-hl-special-color)}.highlight .il,.highlight .m,.highlight .mb,.highlight .mf,.highlight .mh,.highlight .mi,.highlight .mo{color:var(--md-code-hl-number-color)}.highlight .k,.highlight .kd,.highlight .kn,.highlight .kp,.highlight .kr,.highlight .kt{color:var(--md-code-hl-keyword-color)}.highlight .kc,.highlight .n{color:var(--md-code-hl-name-color)}.highlight .bp,.highlight .nb,.highlight .no{color:var(--md-code-hl-constant-color)}.highlight .nc,.highlight .ne,.highlight .nf,.highlight .nn{color:var(--md-code-hl-function-color)}.highlight .nd,.highlight .ni,.highlight .nl,.highlight .nt{color:var(--md-code-hl-keyword-color)}.highlight .c,.highlight .c1,.highlight .ch,.highlight .cm,.highlight .cs,.highlight .sd{color:var(--md-code-hl-comment-color)}.highlight .na,.highlight .nv,.highlight .vc,.highlight .vg,.highlight .vi{color:var(--md-code-hl-variable-color)}.highlight .ge,.highlight .gh,.highlight .go,.highlight .gp,.highlight .gr,.highlight .gs,.highlight .gt,.highlight .gu{color:var(--md-code-hl-generic-color)}.highlight .gd,.highlight .gi{border-radius:.1rem;margin:0 -.125em;padding:0 .125em}.highlight .gd{background-color:var(--md-typeset-del-color)}.highlight .gi{background-color:var(--md-typeset-ins-color)}.highlight .hll{background-color:var(--md-code-hl-color--light);box-shadow:2px 0 0 0 var(--md-code-hl-color) inset;display:block;margin:0 -1.1764705882em;padding:0 1.1764705882em}.highlight span.filename{background-color:var(--md-code-bg-color);border-bottom:.05rem solid var(--md-default-fg-color--lightest);border-top-left-radius:.1rem;border-top-right-radius:.1rem;display:flow-root;font-size:.85em;font-weight:700;margin-top:1em;padding:.6617647059em 1.1764705882em;position:relative}.highlight span.filename+pre{margin-top:0}.highlight span.filename+pre>code{border-top-left-radius:0;border-top-right-radius:0}.highlight [data-linenos]:before{background-color:var(--md-code-bg-color);box-shadow:-.05rem 0 var(--md-default-fg-color--lightest) inset;color:var(--md-default-fg-color--light);content:attr(data-linenos);float:left;left:-1.1764705882em;margin-left:-1.1764705882em;margin-right:1.1764705882em;padding-left:1.1764705882em;position:sticky;-webkit-user-select:none;user-select:none;z-index:3}.highlight code a[id]{position:absolute;visibility:hidden}.highlight code[data-md-copying]{display:initial}.highlight code[data-md-copying] .hll{display:contents}.highlight code[data-md-copying] .md-annotation{display:none}.highlighttable{display:flow-root}.highlighttable tbody,.highlighttable td{display:block;padding:0}.highlighttable tr{display:flex}.highlighttable pre{margin:0}.highlighttable th.filename{flex-grow:1;padding:0;text-align:left}.highlighttable th.filename span.filename{margin-top:0}.highlighttable .linenos{background-color:var(--md-code-bg-color);border-bottom-left-radius:.1rem;border-top-left-radius:.1rem;font-size:.85em;padding:.7720588235em 0 .7720588235em 1.1764705882em;-webkit-user-select:none;user-select:none}.highlighttable .linenodiv{box-shadow:-.05rem 0 var(--md-default-fg-color--lightest) inset}.highlighttable .linenodiv pre{color:var(--md-default-fg-color--light);text-align:right}.highlighttable .linenodiv span[class]{padding-right:.5882352941em}.highlighttable .code{flex:1;min-width:0}.linenodiv a{color:inherit}.md-typeset .highlighttable{direction:ltr;margin:1em 0}.md-typeset .highlighttable>tbody>tr>.code>div>pre>code{border-bottom-left-radius:0;border-top-left-radius:0}.md-typeset .highlight+.result{border:.05rem solid var(--md-code-bg-color);border-bottom-left-radius:.1rem;border-bottom-right-radius:.1rem;border-top-width:.1rem;margin-top:-1.125em;overflow:visible;padding:0 1em}.md-typeset .highlight+.result:after{clear:both;content:"";display:block}@media screen and (max-width:44.984375em){.md-content__inner>.highlight{margin:1em -.8rem}.md-content__inner>.highlight>.filename,.md-content__inner>.highlight>.highlighttable>tbody>tr>.code>div>pre>code,.md-content__inner>.highlight>.highlighttable>tbody>tr>.filename span.filename,.md-content__inner>.highlight>.highlighttable>tbody>tr>.linenos,.md-content__inner>.highlight>pre>code{border-radius:0}.md-content__inner>.highlight+.result{border-left-width:0;border-radius:0;border-right-width:0;margin-left:-.8rem;margin-right:-.8rem}}.md-typeset .keys kbd:after,.md-typeset .keys kbd:before{-moz-osx-font-smoothing:initial;-webkit-font-smoothing:initial;color:inherit;margin:0;position:relative}.md-typeset .keys span{color:var(--md-default-fg-color--light);padding:0 .2em}.md-typeset .keys .key-alt:before,.md-typeset .keys .key-left-alt:before,.md-typeset .keys .key-right-alt:before{content:"⎇";padding-right:.4em}.md-typeset .keys .key-command:before,.md-typeset .keys .key-left-command:before,.md-typeset .keys .key-right-command:before{content:"⌘";padding-right:.4em}.md-typeset .keys .key-control:before,.md-typeset .keys .key-left-control:before,.md-typeset .keys .key-right-control:before{content:"⌃";padding-right:.4em}.md-typeset .keys .key-left-meta:before,.md-typeset .keys .key-meta:before,.md-typeset .keys .key-right-meta:before{content:"◆";padding-right:.4em}.md-typeset .keys .key-left-option:before,.md-typeset .keys .key-option:before,.md-typeset .keys .key-right-option:before{content:"⌥";padding-right:.4em}.md-typeset .keys .key-left-shift:before,.md-typeset .keys .key-right-shift:before,.md-typeset .keys .key-shift:before{content:"⇧";padding-right:.4em}.md-typeset .keys .key-left-super:before,.md-typeset .keys .key-right-super:before,.md-typeset .keys .key-super:before{content:"❖";padding-right:.4em}.md-typeset .keys .key-left-windows:before,.md-typeset .keys .key-right-windows:before,.md-typeset .keys .key-windows:before{content:"⊞";padding-right:.4em}.md-typeset .keys .key-arrow-down:before{content:"↓";padding-right:.4em}.md-typeset .keys .key-arrow-left:before{content:"←";padding-right:.4em}.md-typeset .keys .key-arrow-right:before{content:"→";padding-right:.4em}.md-typeset .keys .key-arrow-up:before{content:"↑";padding-right:.4em}.md-typeset .keys .key-backspace:before{content:"⌫";padding-right:.4em}.md-typeset .keys .key-backtab:before{content:"⇤";padding-right:.4em}.md-typeset .keys .key-caps-lock:before{content:"⇪";padding-right:.4em}.md-typeset .keys .key-clear:before{content:"⌧";padding-right:.4em}.md-typeset .keys .key-context-menu:before{content:"☰";padding-right:.4em}.md-typeset .keys .key-delete:before{content:"⌦";padding-right:.4em}.md-typeset .keys .key-eject:before{content:"⏏";padding-right:.4em}.md-typeset .keys .key-end:before{content:"⤓";padding-right:.4em}.md-typeset .keys .key-escape:before{content:"⎋";padding-right:.4em}.md-typeset .keys .key-home:before{content:"⤒";padding-right:.4em}.md-typeset .keys .key-insert:before{content:"⎀";padding-right:.4em}.md-typeset .keys .key-page-down:before{content:"⇟";padding-right:.4em}.md-typeset .keys .key-page-up:before{content:"⇞";padding-right:.4em}.md-typeset .keys .key-print-screen:before{content:"⎙";padding-right:.4em}.md-typeset .keys .key-tab:after{content:"⇥";padding-left:.4em}.md-typeset .keys .key-num-enter:after{content:"⌤";padding-left:.4em}.md-typeset .keys .key-enter:after{content:"⏎";padding-left:.4em}:root{--md-tabbed-icon--prev:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15.41 16.58 10.83 12l4.58-4.59L14 6l-6 6 6 6z"/></svg>');--md-tabbed-icon--next:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.59 16.58 13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>')}.md-typeset .tabbed-set{border-radius:.1rem;display:flex;flex-flow:column wrap;margin:1em 0;position:relative}.md-typeset .tabbed-set>input{height:0;opacity:0;position:absolute;width:0}.md-typeset .tabbed-set>input:target{--md-scroll-offset:0.625em}.md-typeset .tabbed-set>input.focus-visible~.tabbed-labels:before{background-color:var(--md-accent-fg-color)}.md-typeset .tabbed-labels{-ms-overflow-style:none;box-shadow:0 -.05rem var(--md-default-fg-color--lightest) inset;display:flex;max-width:100%;overflow:auto;scrollbar-width:none}@media print{.md-typeset .tabbed-labels{display:contents}}@media screen{.js .md-typeset .tabbed-labels{position:relative}.js .md-typeset .tabbed-labels:before{background:var(--md-default-fg-color);bottom:0;content:"";display:block;height:2px;left:0;position:absolute;transform:translateX(var(--md-indicator-x));transition:width 225ms,background-color .25s,transform .25s;transition-timing-function:cubic-bezier(.4,0,.2,1);width:var(--md-indicator-width)}}.md-typeset .tabbed-labels::-webkit-scrollbar{display:none}.md-typeset .tabbed-labels>label{border-bottom:.1rem solid #0000;border-radius:.1rem .1rem 0 0;color:var(--md-default-fg-color--light);cursor:pointer;flex-shrink:0;font-size:.64rem;font-weight:700;padding:.78125em 1.25em .625em;scroll-margin-inline-start:1rem;transition:background-color .25s,color .25s;white-space:nowrap;width:auto}@media print{.md-typeset .tabbed-labels>label:first-child{order:1}.md-typeset .tabbed-labels>label:nth-child(2){order:2}.md-typeset .tabbed-labels>label:nth-child(3){order:3}.md-typeset .tabbed-labels>label:nth-child(4){order:4}.md-typeset .tabbed-labels>label:nth-child(5){order:5}.md-typeset .tabbed-labels>label:nth-child(6){order:6}.md-typeset .tabbed-labels>label:nth-child(7){order:7}.md-typeset .tabbed-labels>label:nth-child(8){order:8}.md-typeset .tabbed-labels>label:nth-child(9){order:9}.md-typeset .tabbed-labels>label:nth-child(10){order:10}.md-typeset .tabbed-labels>label:nth-child(11){order:11}.md-typeset .tabbed-labels>label:nth-child(12){order:12}.md-typeset .tabbed-labels>label:nth-child(13){order:13}.md-typeset .tabbed-labels>label:nth-child(14){order:14}.md-typeset .tabbed-labels>label:nth-child(15){order:15}.md-typeset .tabbed-labels>label:nth-child(16){order:16}.md-typeset .tabbed-labels>label:nth-child(17){order:17}.md-typeset .tabbed-labels>label:nth-child(18){order:18}.md-typeset .tabbed-labels>label:nth-child(19){order:19}.md-typeset .tabbed-labels>label:nth-child(20){order:20}}.md-typeset .tabbed-labels>label:hover{color:var(--md-default-fg-color)}.md-typeset .tabbed-labels>label>[href]:first-child{color:inherit}.md-typeset .tabbed-labels--linked>label{padding:0}.md-typeset .tabbed-labels--linked>label>a{display:block;padding:.78125em 1.25em .625em}.md-typeset .tabbed-content{width:100%}@media print{.md-typeset .tabbed-content{display:contents}}.md-typeset .tabbed-block{display:none}@media print{.md-typeset .tabbed-block{display:block}.md-typeset .tabbed-block:first-child{order:1}.md-typeset .tabbed-block:nth-child(2){order:2}.md-typeset .tabbed-block:nth-child(3){order:3}.md-typeset .tabbed-block:nth-child(4){order:4}.md-typeset .tabbed-block:nth-child(5){order:5}.md-typeset .tabbed-block:nth-child(6){order:6}.md-typeset .tabbed-block:nth-child(7){order:7}.md-typeset .tabbed-block:nth-child(8){order:8}.md-typeset .tabbed-block:nth-child(9){order:9}.md-typeset .tabbed-block:nth-child(10){order:10}.md-typeset .tabbed-block:nth-child(11){order:11}.md-typeset .tabbed-block:nth-child(12){order:12}.md-typeset .tabbed-block:nth-child(13){order:13}.md-typeset .tabbed-block:nth-child(14){order:14}.md-typeset .tabbed-block:nth-child(15){order:15}.md-typeset .tabbed-block:nth-child(16){order:16}.md-typeset .tabbed-block:nth-child(17){order:17}.md-typeset .tabbed-block:nth-child(18){order:18}.md-typeset .tabbed-block:nth-child(19){order:19}.md-typeset .tabbed-block:nth-child(20){order:20}}.md-typeset .tabbed-block>.highlight:first-child>pre,.md-typeset .tabbed-block>pre:first-child{margin:0}.md-typeset .tabbed-block>.highlight:first-child>pre>code,.md-typeset .tabbed-block>pre:first-child>code{border-top-left-radius:0;border-top-right-radius:0}.md-typeset .tabbed-block>.highlight:first-child>.filename{border-top-left-radius:0;border-top-right-radius:0;margin:0}.md-typeset .tabbed-block>.highlight:first-child>.highlighttable{margin:0}.md-typeset .tabbed-block>.highlight:first-child>.highlighttable>tbody>tr>.filename span.filename,.md-typeset .tabbed-block>.highlight:first-child>.highlighttable>tbody>tr>.linenos{border-top-left-radius:0;border-top-right-radius:0;margin:0}.md-typeset .tabbed-block>.highlight:first-child>.highlighttable>tbody>tr>.code>div>pre>code{border-top-left-radius:0;border-top-right-radius:0}.md-typeset .tabbed-block>.highlight:first-child+.result{margin-top:-.125em}.md-typeset .tabbed-block>.tabbed-set{margin:0}.md-typeset .tabbed-button{align-self:center;border-radius:100%;color:var(--md-default-fg-color--light);cursor:pointer;display:block;height:.9rem;margin-top:.1rem;pointer-events:auto;transition:background-color .25s;width:.9rem}.md-typeset .tabbed-button:hover{background-color:var(--md-accent-fg-color--transparent);color:var(--md-accent-fg-color)}.md-typeset .tabbed-button:after{background-color:currentcolor;content:"";display:block;height:100%;-webkit-mask-image:var(--md-tabbed-icon--prev);mask-image:var(--md-tabbed-icon--prev);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;transition:background-color .25s,transform .25s;width:100%}.md-typeset .tabbed-control{background:linear-gradient(to right,var(--md-default-bg-color) 60%,#0000);display:flex;height:1.9rem;justify-content:start;pointer-events:none;position:absolute;transition:opacity 125ms;width:1.2rem}[dir=rtl] .md-typeset .tabbed-control{transform:rotate(180deg)}.md-typeset .tabbed-control[hidden]{opacity:0}.md-typeset .tabbed-control--next{background:linear-gradient(to left,var(--md-default-bg-color) 60%,#0000);justify-content:end;right:0}.md-typeset .tabbed-control--next .tabbed-button:after{-webkit-mask-image:var(--md-tabbed-icon--next);mask-image:var(--md-tabbed-icon--next)}@media screen and (max-width:44.984375em){[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels{padding-left:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels{padding-right:.8rem}.md-content__inner>.tabbed-set .tabbed-labels{margin:0 -.8rem;max-width:100vw;scroll-padding-inline-start:.8rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels:after{padding-right:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels:after{padding-left:.8rem}.md-content__inner>.tabbed-set .tabbed-labels:after{content:""}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{padding-left:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{padding-right:.8rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{margin-left:-.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{margin-right:-.8rem}.md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--prev{width:2rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{padding-right:.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{padding-left:.8rem}[dir=ltr] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{margin-right:-.8rem}[dir=rtl] .md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{margin-left:-.8rem}.md-content__inner>.tabbed-set .tabbed-labels~.tabbed-control--next{width:2rem}}@media screen{.md-typeset .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9){color:var(--md-default-fg-color)}.md-typeset .no-js .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.md-typeset .no-js .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.md-typeset .no-js .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.md-typeset .no-js .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.md-typeset .no-js .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.md-typeset .no-js .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.md-typeset .no-js .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.md-typeset .no-js .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.md-typeset .no-js .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.md-typeset .no-js .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.md-typeset .no-js .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.md-typeset .no-js .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.md-typeset .no-js .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.md-typeset .no-js .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.md-typeset .no-js .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.md-typeset .no-js .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.md-typeset .no-js .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.md-typeset .no-js .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.md-typeset .no-js .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.md-typeset .no-js .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9),.md-typeset [role=dialog] .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.md-typeset [role=dialog] .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.md-typeset [role=dialog] .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.md-typeset [role=dialog] .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.md-typeset [role=dialog] .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.md-typeset [role=dialog] .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.md-typeset [role=dialog] .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.md-typeset [role=dialog] .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.md-typeset [role=dialog] .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.md-typeset [role=dialog] .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.md-typeset [role=dialog] .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.md-typeset [role=dialog] .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.md-typeset [role=dialog] .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.md-typeset [role=dialog] .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.md-typeset [role=dialog] .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.md-typeset [role=dialog] .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.md-typeset [role=dialog] .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.md-typeset [role=dialog] .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.md-typeset [role=dialog] .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.md-typeset [role=dialog] .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9),.no-js .md-typeset .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,.no-js .md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),.no-js .md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),.no-js .md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),.no-js .md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),.no-js .md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),.no-js .md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),.no-js .md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),.no-js .md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),.no-js .md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),.no-js .md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),.no-js .md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),.no-js .md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),.no-js .md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),.no-js .md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),.no-js .md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),.no-js .md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),.no-js .md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),.no-js .md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),.no-js .md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9),[role=dialog] .md-typeset .tabbed-set>input:first-child:checked~.tabbed-labels>:first-child,[role=dialog] .md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-labels>:nth-child(10),[role=dialog] .md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-labels>:nth-child(11),[role=dialog] .md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-labels>:nth-child(12),[role=dialog] .md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-labels>:nth-child(13),[role=dialog] .md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-labels>:nth-child(14),[role=dialog] .md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-labels>:nth-child(15),[role=dialog] .md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-labels>:nth-child(16),[role=dialog] .md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-labels>:nth-child(17),[role=dialog] .md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-labels>:nth-child(18),[role=dialog] .md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-labels>:nth-child(19),[role=dialog] .md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-labels>:nth-child(2),[role=dialog] .md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-labels>:nth-child(20),[role=dialog] .md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-labels>:nth-child(3),[role=dialog] .md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-labels>:nth-child(4),[role=dialog] .md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-labels>:nth-child(5),[role=dialog] .md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-labels>:nth-child(6),[role=dialog] .md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-labels>:nth-child(7),[role=dialog] .md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-labels>:nth-child(8),[role=dialog] .md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-labels>:nth-child(9){border-color:var(--md-default-fg-color)}}.md-typeset .tabbed-set>input:first-child.focus-visible~.tabbed-labels>:first-child,.md-typeset .tabbed-set>input:nth-child(10).focus-visible~.tabbed-labels>:nth-child(10),.md-typeset .tabbed-set>input:nth-child(11).focus-visible~.tabbed-labels>:nth-child(11),.md-typeset .tabbed-set>input:nth-child(12).focus-visible~.tabbed-labels>:nth-child(12),.md-typeset .tabbed-set>input:nth-child(13).focus-visible~.tabbed-labels>:nth-child(13),.md-typeset .tabbed-set>input:nth-child(14).focus-visible~.tabbed-labels>:nth-child(14),.md-typeset .tabbed-set>input:nth-child(15).focus-visible~.tabbed-labels>:nth-child(15),.md-typeset .tabbed-set>input:nth-child(16).focus-visible~.tabbed-labels>:nth-child(16),.md-typeset .tabbed-set>input:nth-child(17).focus-visible~.tabbed-labels>:nth-child(17),.md-typeset .tabbed-set>input:nth-child(18).focus-visible~.tabbed-labels>:nth-child(18),.md-typeset .tabbed-set>input:nth-child(19).focus-visible~.tabbed-labels>:nth-child(19),.md-typeset .tabbed-set>input:nth-child(2).focus-visible~.tabbed-labels>:nth-child(2),.md-typeset .tabbed-set>input:nth-child(20).focus-visible~.tabbed-labels>:nth-child(20),.md-typeset .tabbed-set>input:nth-child(3).focus-visible~.tabbed-labels>:nth-child(3),.md-typeset .tabbed-set>input:nth-child(4).focus-visible~.tabbed-labels>:nth-child(4),.md-typeset .tabbed-set>input:nth-child(5).focus-visible~.tabbed-labels>:nth-child(5),.md-typeset .tabbed-set>input:nth-child(6).focus-visible~.tabbed-labels>:nth-child(6),.md-typeset .tabbed-set>input:nth-child(7).focus-visible~.tabbed-labels>:nth-child(7),.md-typeset .tabbed-set>input:nth-child(8).focus-visible~.tabbed-labels>:nth-child(8),.md-typeset .tabbed-set>input:nth-child(9).focus-visible~.tabbed-labels>:nth-child(9){color:var(--md-accent-fg-color)}.md-typeset .tabbed-set>input:first-child:checked~.tabbed-content>:first-child,.md-typeset .tabbed-set>input:nth-child(10):checked~.tabbed-content>:nth-child(10),.md-typeset .tabbed-set>input:nth-child(11):checked~.tabbed-content>:nth-child(11),.md-typeset .tabbed-set>input:nth-child(12):checked~.tabbed-content>:nth-child(12),.md-typeset .tabbed-set>input:nth-child(13):checked~.tabbed-content>:nth-child(13),.md-typeset .tabbed-set>input:nth-child(14):checked~.tabbed-content>:nth-child(14),.md-typeset .tabbed-set>input:nth-child(15):checked~.tabbed-content>:nth-child(15),.md-typeset .tabbed-set>input:nth-child(16):checked~.tabbed-content>:nth-child(16),.md-typeset .tabbed-set>input:nth-child(17):checked~.tabbed-content>:nth-child(17),.md-typeset .tabbed-set>input:nth-child(18):checked~.tabbed-content>:nth-child(18),.md-typeset .tabbed-set>input:nth-child(19):checked~.tabbed-content>:nth-child(19),.md-typeset .tabbed-set>input:nth-child(2):checked~.tabbed-content>:nth-child(2),.md-typeset .tabbed-set>input:nth-child(20):checked~.tabbed-content>:nth-child(20),.md-typeset .tabbed-set>input:nth-child(3):checked~.tabbed-content>:nth-child(3),.md-typeset .tabbed-set>input:nth-child(4):checked~.tabbed-content>:nth-child(4),.md-typeset .tabbed-set>input:nth-child(5):checked~.tabbed-content>:nth-child(5),.md-typeset .tabbed-set>input:nth-child(6):checked~.tabbed-content>:nth-child(6),.md-typeset .tabbed-set>input:nth-child(7):checked~.tabbed-content>:nth-child(7),.md-typeset .tabbed-set>input:nth-child(8):checked~.tabbed-content>:nth-child(8),.md-typeset .tabbed-set>input:nth-child(9):checked~.tabbed-content>:nth-child(9){display:block}:root{--md-tasklist-icon:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12m16.28-2.72a.75.75 0 0 0-.018-1.042.75.75 0 0 0-1.042-.018l-5.97 5.97-2.47-2.47a.75.75 0 0 0-1.042.018.75.75 0 0 0-.018 1.042l3 3a.75.75 0 0 0 1.06 0Z"/></svg>');--md-tasklist-icon--checked:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12m16.28-2.72a.75.75 0 0 0-.018-1.042.75.75 0 0 0-1.042-.018l-5.97 5.97-2.47-2.47a.75.75 0 0 0-1.042.018.75.75 0 0 0-.018 1.042l3 3a.75.75 0 0 0 1.06 0Z"/></svg>')}.md-typeset .task-list-item{list-style-type:none;position:relative}[dir=ltr] .md-typeset .task-list-item [type=checkbox]{left:-2em}[dir=rtl] .md-typeset .task-list-item [type=checkbox]{right:-2em}.md-typeset .task-list-item [type=checkbox]{position:absolute;top:.45em}.md-typeset .task-list-control [type=checkbox]{opacity:0;z-index:-1}[dir=ltr] .md-typeset .task-list-indicator:before{left:-1.5em}[dir=rtl] .md-typeset .task-list-indicator:before{right:-1.5em}.md-typeset .task-list-indicator:before{background-color:var(--md-default-fg-color--lightest);content:"";height:1.25em;-webkit-mask-image:var(--md-tasklist-icon);mask-image:var(--md-tasklist-icon);-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:contain;mask-size:contain;position:absolute;top:.15em;width:1.25em}.md-typeset [type=checkbox]:checked+.task-list-indicator:before{background-color:#00e676;-webkit-mask-image:var(--md-tasklist-icon--checked);mask-image:var(--md-tasklist-icon--checked)}@media print{.giscus,[id=__comments]{display:none}}:root>*{--md-mermaid-font-family:var(--md-text-font-family),sans-serif;--md-mermaid-edge-color:var(--md-code-fg-color);--md-mermaid-node-bg-color:var(--md-accent-fg-color--transparent);--md-mermaid-node-fg-color:var(--md-accent-fg-color);--md-mermaid-label-bg-color:var(--md-default-bg-color);--md-mermaid-label-fg-color:var(--md-code-fg-color);--md-mermaid-sequence-actor-bg-color:var(--md-mermaid-label-bg-color);--md-mermaid-sequence-actor-fg-color:var(--md-mermaid-label-fg-color);--md-mermaid-sequence-actor-border-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-actor-line-color:var(--md-default-fg-color--lighter);--md-mermaid-sequence-actorman-bg-color:var(--md-mermaid-label-bg-color);--md-mermaid-sequence-actorman-line-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-box-bg-color:var(--md-mermaid-node-bg-color);--md-mermaid-sequence-box-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-label-bg-color:var(--md-mermaid-node-bg-color);--md-mermaid-sequence-label-fg-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-loop-bg-color:var(--md-mermaid-node-bg-color);--md-mermaid-sequence-loop-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-loop-border-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-message-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-message-line-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-note-bg-color:var(--md-mermaid-label-bg-color);--md-mermaid-sequence-note-fg-color:var(--md-mermaid-edge-color);--md-mermaid-sequence-note-border-color:var(--md-mermaid-label-fg-color);--md-mermaid-sequence-number-bg-color:var(--md-mermaid-node-fg-color);--md-mermaid-sequence-number-fg-color:var(--md-accent-bg-color)}.mermaid{line-height:normal;margin:1em 0}.md-typeset .grid{grid-gap:.4rem;display:grid;grid-template-columns:repeat(auto-fit,minmax(min(100%,16rem),1fr));margin:1em 0}.md-typeset .grid.cards>ol,.md-typeset .grid.cards>ul{display:contents}.md-typeset .grid.cards>ol>li,.md-typeset .grid.cards>ul>li,.md-typeset .grid>.card{border:.05rem solid var(--md-default-fg-color--lightest);border-radius:.1rem;display:block;margin:0;padding:.8rem;transition:border .25s,box-shadow .25s}.md-typeset .grid.cards>ol>li:focus-within,.md-typeset .grid.cards>ol>li:hover,.md-typeset .grid.cards>ul>li:focus-within,.md-typeset .grid.cards>ul>li:hover,.md-typeset .grid>.card:focus-within,.md-typeset .grid>.card:hover{border-color:#0000;box-shadow:var(--md-shadow-z2)}.md-typeset .grid.cards>ol>li>hr,.md-typeset .grid.cards>ul>li>hr,.md-typeset .grid>.card>hr{margin-bottom:1em;margin-top:1em}.md-typeset .grid.cards>ol>li>:first-child,.md-typeset .grid.cards>ul>li>:first-child,.md-typeset .grid>.card>:first-child{margin-top:0}.md-typeset .grid.cards>ol>li>:last-child,.md-typeset .grid.cards>ul>li>:last-child,.md-typeset .grid>.card>:last-child{margin-bottom:0}.md-typeset .grid>*,.md-typeset .grid>.admonition,.md-typeset .grid>.highlight>*,.md-typeset .grid>.highlighttable,.md-typeset .grid>.md-typeset details,.md-typeset .grid>details,.md-typeset .grid>pre{margin-bottom:0;margin-top:0}.md-typeset .grid>.highlight>pre:only-child,.md-typeset .grid>.highlight>pre>code,.md-typeset .grid>.highlighttable,.md-typeset .grid>.highlighttable>tbody,.md-typeset .grid>.highlighttable>tbody>tr,.md-typeset .grid>.highlighttable>tbody>tr>.code,.md-typeset .grid>.highlighttable>tbody>tr>.code>.highlight,.md-typeset .grid>.highlighttable>tbody>tr>.code>.highlight>pre,.md-typeset .grid>.highlighttable>tbody>tr>.code>.highlight>pre>code{height:100%}.md-typeset .grid>.tabbed-set{margin-bottom:0;margin-top:0}@media screen and (min-width:45em){[dir=ltr] .md-typeset .inline{float:left}[dir=rtl] .md-typeset .inline{float:right}[dir=ltr] .md-typeset .inline{margin-right:.8rem}[dir=rtl] .md-typeset .inline{margin-left:.8rem}.md-typeset .inline{margin-bottom:.8rem;margin-top:0;width:11.7rem}[dir=ltr] .md-typeset .inline.end{float:right}[dir=rtl] .md-typeset .inline.end{float:left}[dir=ltr] .md-typeset .inline.end{margin-left:.8rem;margin-right:0}[dir=rtl] .md-typeset .inline.end{margin-left:0;margin-right:.8rem}}
</document_content>
</document>

<document index="13">
<source>docs/assets/stylesheets/palette.ab4e12ef.min.css</source>
<document_content>
@media screen{[data-md-color-scheme=slate]{--md-default-fg-color:hsla(var(--md-hue),15%,90%,0.82);--md-default-fg-color--light:hsla(var(--md-hue),15%,90%,0.56);--md-default-fg-color--lighter:hsla(var(--md-hue),15%,90%,0.32);--md-default-fg-color--lightest:hsla(var(--md-hue),15%,90%,0.12);--md-default-bg-color:hsla(var(--md-hue),15%,14%,1);--md-default-bg-color--light:hsla(var(--md-hue),15%,14%,0.54);--md-default-bg-color--lighter:hsla(var(--md-hue),15%,14%,0.26);--md-default-bg-color--lightest:hsla(var(--md-hue),15%,14%,0.07);--md-code-fg-color:hsla(var(--md-hue),18%,86%,0.82);--md-code-bg-color:hsla(var(--md-hue),15%,18%,1);--md-code-bg-color--light:hsla(var(--md-hue),15%,18%,0.9);--md-code-bg-color--lighter:hsla(var(--md-hue),15%,18%,0.54);--md-code-hl-color:#2977ff;--md-code-hl-color--light:#2977ff1a;--md-code-hl-number-color:#e6695b;--md-code-hl-special-color:#f06090;--md-code-hl-function-color:#c973d9;--md-code-hl-constant-color:#9383e2;--md-code-hl-keyword-color:#6791e0;--md-code-hl-string-color:#2fb170;--md-code-hl-name-color:var(--md-code-fg-color);--md-code-hl-operator-color:var(--md-default-fg-color--light);--md-code-hl-punctuation-color:var(--md-default-fg-color--light);--md-code-hl-comment-color:var(--md-default-fg-color--light);--md-code-hl-generic-color:var(--md-default-fg-color--light);--md-code-hl-variable-color:var(--md-default-fg-color--light);--md-typeset-color:var(--md-default-fg-color);--md-typeset-a-color:var(--md-primary-fg-color);--md-typeset-kbd-color:hsla(var(--md-hue),15%,90%,0.12);--md-typeset-kbd-accent-color:hsla(var(--md-hue),15%,90%,0.2);--md-typeset-kbd-border-color:hsla(var(--md-hue),15%,14%,1);--md-typeset-mark-color:#4287ff4d;--md-typeset-table-color:hsla(var(--md-hue),15%,95%,0.12);--md-typeset-table-color--light:hsla(var(--md-hue),15%,95%,0.035);--md-admonition-fg-color:var(--md-default-fg-color);--md-admonition-bg-color:var(--md-default-bg-color);--md-footer-bg-color:hsla(var(--md-hue),15%,10%,0.87);--md-footer-bg-color--dark:hsla(var(--md-hue),15%,8%,1);--md-shadow-z1:0 0.2rem 0.5rem #0000000d,0 0 0.05rem #0000001a;--md-shadow-z2:0 0.2rem 0.5rem #00000040,0 0 0.05rem #00000040;--md-shadow-z3:0 0.2rem 0.5rem #0006,0 0 0.05rem #00000059;color-scheme:dark}[data-md-color-scheme=slate] img[src$="#gh-light-mode-only"],[data-md-color-scheme=slate] img[src$="#only-light"]{display:none}[data-md-color-scheme=slate][data-md-color-primary=pink]{--md-typeset-a-color:#ed5487}[data-md-color-scheme=slate][data-md-color-primary=purple]{--md-typeset-a-color:#c46fd3}[data-md-color-scheme=slate][data-md-color-primary=deep-purple]{--md-typeset-a-color:#a47bea}[data-md-color-scheme=slate][data-md-color-primary=indigo]{--md-typeset-a-color:#5488e8}[data-md-color-scheme=slate][data-md-color-primary=teal]{--md-typeset-a-color:#00ccb8}[data-md-color-scheme=slate][data-md-color-primary=green]{--md-typeset-a-color:#71c174}[data-md-color-scheme=slate][data-md-color-primary=deep-orange]{--md-typeset-a-color:#ff764d}[data-md-color-scheme=slate][data-md-color-primary=brown]{--md-typeset-a-color:#c1775c}[data-md-color-scheme=slate][data-md-color-primary=black],[data-md-color-scheme=slate][data-md-color-primary=blue-grey],[data-md-color-scheme=slate][data-md-color-primary=grey],[data-md-color-scheme=slate][data-md-color-primary=white]{--md-typeset-a-color:#5e8bde}[data-md-color-switching] *,[data-md-color-switching] :after,[data-md-color-switching] :before{transition-duration:0ms!important}}[data-md-color-accent=red]{--md-accent-fg-color:#ff1947;--md-accent-fg-color--transparent:#ff19471a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=pink]{--md-accent-fg-color:#f50056;--md-accent-fg-color--transparent:#f500561a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=purple]{--md-accent-fg-color:#df41fb;--md-accent-fg-color--transparent:#df41fb1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=deep-purple]{--md-accent-fg-color:#7c4dff;--md-accent-fg-color--transparent:#7c4dff1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=indigo]{--md-accent-fg-color:#526cfe;--md-accent-fg-color--transparent:#526cfe1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=blue]{--md-accent-fg-color:#4287ff;--md-accent-fg-color--transparent:#4287ff1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=light-blue]{--md-accent-fg-color:#0091eb;--md-accent-fg-color--transparent:#0091eb1a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=cyan]{--md-accent-fg-color:#00bad6;--md-accent-fg-color--transparent:#00bad61a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=teal]{--md-accent-fg-color:#00bda4;--md-accent-fg-color--transparent:#00bda41a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=green]{--md-accent-fg-color:#00c753;--md-accent-fg-color--transparent:#00c7531a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=light-green]{--md-accent-fg-color:#63de17;--md-accent-fg-color--transparent:#63de171a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-accent=lime]{--md-accent-fg-color:#b0eb00;--md-accent-fg-color--transparent:#b0eb001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=yellow]{--md-accent-fg-color:#ffd500;--md-accent-fg-color--transparent:#ffd5001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=amber]{--md-accent-fg-color:#fa0;--md-accent-fg-color--transparent:#ffaa001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=orange]{--md-accent-fg-color:#ff9100;--md-accent-fg-color--transparent:#ff91001a;--md-accent-bg-color:#000000de;--md-accent-bg-color--light:#0000008a}[data-md-color-accent=deep-orange]{--md-accent-fg-color:#ff6e42;--md-accent-fg-color--transparent:#ff6e421a;--md-accent-bg-color:#fff;--md-accent-bg-color--light:#ffffffb3}[data-md-color-primary=red]{--md-primary-fg-color:#ef5552;--md-primary-fg-color--light:#e57171;--md-primary-fg-color--dark:#e53734;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=pink]{--md-primary-fg-color:#e92063;--md-primary-fg-color--light:#ec417a;--md-primary-fg-color--dark:#c3185d;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=purple]{--md-primary-fg-color:#ab47bd;--md-primary-fg-color--light:#bb69c9;--md-primary-fg-color--dark:#8c24a8;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=deep-purple]{--md-primary-fg-color:#7e56c2;--md-primary-fg-color--light:#9574cd;--md-primary-fg-color--dark:#673ab6;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=indigo]{--md-primary-fg-color:#4051b5;--md-primary-fg-color--light:#5d6cc0;--md-primary-fg-color--dark:#303fa1;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=blue]{--md-primary-fg-color:#2094f3;--md-primary-fg-color--light:#42a5f5;--md-primary-fg-color--dark:#1975d2;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=light-blue]{--md-primary-fg-color:#02a6f2;--md-primary-fg-color--light:#28b5f6;--md-primary-fg-color--dark:#0287cf;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=cyan]{--md-primary-fg-color:#00bdd6;--md-primary-fg-color--light:#25c5da;--md-primary-fg-color--dark:#0097a8;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=teal]{--md-primary-fg-color:#009485;--md-primary-fg-color--light:#26a699;--md-primary-fg-color--dark:#007a6c;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=green]{--md-primary-fg-color:#4cae4f;--md-primary-fg-color--light:#68bb6c;--md-primary-fg-color--dark:#398e3d;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=light-green]{--md-primary-fg-color:#8bc34b;--md-primary-fg-color--light:#9ccc66;--md-primary-fg-color--dark:#689f38;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=lime]{--md-primary-fg-color:#cbdc38;--md-primary-fg-color--light:#d3e156;--md-primary-fg-color--dark:#b0b52c;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=yellow]{--md-primary-fg-color:#ffec3d;--md-primary-fg-color--light:#ffee57;--md-primary-fg-color--dark:#fbc02d;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=amber]{--md-primary-fg-color:#ffc105;--md-primary-fg-color--light:#ffc929;--md-primary-fg-color--dark:#ffa200;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=orange]{--md-primary-fg-color:#ffa724;--md-primary-fg-color--light:#ffa724;--md-primary-fg-color--dark:#fa8900;--md-primary-bg-color:#000000de;--md-primary-bg-color--light:#0000008a}[data-md-color-primary=deep-orange]{--md-primary-fg-color:#ff6e42;--md-primary-fg-color--light:#ff8a66;--md-primary-fg-color--dark:#f4511f;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=brown]{--md-primary-fg-color:#795649;--md-primary-fg-color--light:#8d6e62;--md-primary-fg-color--dark:#5d4037;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3}[data-md-color-primary=grey]{--md-primary-fg-color:#757575;--md-primary-fg-color--light:#9e9e9e;--md-primary-fg-color--dark:#616161;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3;--md-typeset-a-color:#4051b5}[data-md-color-primary=blue-grey]{--md-primary-fg-color:#546d78;--md-primary-fg-color--light:#607c8a;--md-primary-fg-color--dark:#455a63;--md-primary-bg-color:#fff;--md-primary-bg-color--light:#ffffffb3;--md-typeset-a-color:#4051b5}[data-md-color-primary=light-green]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#72ad2e}[data-md-color-primary=lime]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#8b990a}[data-md-color-primary=yellow]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#b8a500}[data-md-color-primary=amber]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#d19d00}[data-md-color-primary=orange]:not([data-md-color-scheme=slate]){--md-typeset-a-color:#e68a00}[data-md-color-primary=white]{--md-primary-fg-color:hsla(var(--md-hue),0%,100%,1);--md-primary-fg-color--light:hsla(var(--md-hue),0%,100%,0.7);--md-primary-fg-color--dark:hsla(var(--md-hue),0%,0%,0.07);--md-primary-bg-color:hsla(var(--md-hue),0%,0%,0.87);--md-primary-bg-color--light:hsla(var(--md-hue),0%,0%,0.54);--md-typeset-a-color:#4051b5}[data-md-color-primary=white] .md-button{color:var(--md-typeset-a-color)}[data-md-color-primary=white] .md-button--primary{background-color:var(--md-typeset-a-color);border-color:var(--md-typeset-a-color);color:hsla(var(--md-hue),0%,100%,1)}@media screen and (min-width:60em){[data-md-color-primary=white] .md-search__form{background-color:hsla(var(--md-hue),0%,0%,.07)}[data-md-color-primary=white] .md-search__form:hover{background-color:hsla(var(--md-hue),0%,0%,.32)}[data-md-color-primary=white] .md-search__input+.md-search__icon{color:hsla(var(--md-hue),0%,0%,.87)}}@media screen and (min-width:76.25em){[data-md-color-primary=white] .md-tabs{border-bottom:.05rem solid #00000012}}[data-md-color-primary=black]{--md-primary-fg-color:hsla(var(--md-hue),15%,9%,1);--md-primary-fg-color--light:hsla(var(--md-hue),15%,9%,0.54);--md-primary-fg-color--dark:hsla(var(--md-hue),15%,9%,1);--md-primary-bg-color:hsla(var(--md-hue),15%,100%,1);--md-primary-bg-color--light:hsla(var(--md-hue),15%,100%,0.7);--md-typeset-a-color:#4051b5}[data-md-color-primary=black] .md-button{color:var(--md-typeset-a-color)}[data-md-color-primary=black] .md-button--primary{background-color:var(--md-typeset-a-color);border-color:var(--md-typeset-a-color);color:hsla(var(--md-hue),0%,100%,1)}[data-md-color-primary=black] .md-header{background-color:hsla(var(--md-hue),15%,9%,1)}@media screen and (max-width:59.984375em){[data-md-color-primary=black] .md-nav__source{background-color:hsla(var(--md-hue),15%,11%,.87)}}@media screen and (max-width:76.234375em){html [data-md-color-primary=black] .md-nav--primary .md-nav__title[for=__drawer]{background-color:hsla(var(--md-hue),15%,9%,1)}}@media screen and (min-width:76.25em){[data-md-color-primary=black] .md-tabs{background-color:hsla(var(--md-hue),15%,9%,1)}}
</document_content>
</document>

<document index="14">
<source>docs/index.html</source>
<document_content>

<!doctype html>
<html lang="en" class="no-js">
  <head>
    
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width,initial-scale=1">
      
        <meta name="description" content="A plugin that captures HTML output and creates cousin Markdown files">
      
      
        <meta name="author" content="Vexy">
      
      
        <link rel="canonical" href="https://vexyart.github.io/vexy-mkdocs-output-as-input/">
      
      
      
      
        
      
      
      <link rel="icon" href="assets/images/favicon.png">
      <meta name="generator" content="mkdocs-1.6.1, mkdocs-material-9.6.15+insiders-4.53.16">
    
    
      
        <title>MkDocs Output as Input Plugin - MkDocs Output as Input Plugin</title>
      
    
    
      <link rel="stylesheet" href="assets/stylesheets/main.8cce3a28.min.css">
      
        
        <link rel="stylesheet" href="assets/stylesheets/palette.ab4e12ef.min.css">
      
      


    
    
      
    
    
      
        
        
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,700,700i%7CRoboto+Mono:400,400i,700,700i&display=fallback">
        <style>:root{--md-text-font:"Roboto";--md-code-font:"Roboto Mono"}</style>
      
    
    
    <script>__md_scope=new URL(".",location),__md_hash=e=>[...e].reduce(((e,_)=>(e<<5)-e+_.charCodeAt(0)),0),__md_get=(e,_=localStorage,t=__md_scope)=>JSON.parse(_.getItem(t.pathname+"."+e)),__md_set=(e,_,t=localStorage,a=__md_scope)=>{try{t.setItem(a.pathname+"."+e,JSON.stringify(_))}catch(e){}}</script>
    
      

    
    
  </head>
  
  
    
    
      
    
    
    
    
    <body dir="ltr" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo">
  
    
    <input class="md-toggle" data-md-toggle="drawer" type="checkbox" id="__drawer" autocomplete="off">
    <input class="md-toggle" data-md-toggle="search" type="checkbox" id="__search" autocomplete="off">
    <label class="md-overlay" for="__drawer"></label>
    <div data-md-component="skip">
      
    </div>
    <div data-md-component="announce">
      
    </div>
    
    
      

  

<header class="md-header md-header--shadow" data-md-component="header">
  <nav class="md-header__inner md-grid" aria-label="Header">
    <a href="." title="MkDocs Output as Input Plugin" class="md-header__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    <label class="md-header__button md-icon" for="__drawer">
      
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 6h18v2H3zm0 5h18v2H3zm0 5h18v2H3z"/></svg>
    </label>
    <div class="md-header__title" data-md-component="header-title">
      <div class="md-header__ellipsis">
        <div class="md-header__topic">
          <span class="md-ellipsis">
            MkDocs Output as Input Plugin
          </span>
        </div>
        <div class="md-header__topic" data-md-component="header-topic">
          <span class="md-ellipsis">
            
              MkDocs Output as Input Plugin
            
          </span>
        </div>
      </div>
    </div>
    
      
        <form class="md-header__option" data-md-component="palette">
  
    
    
    
    <input class="md-option" data-md-color-media="" data-md-color-scheme="default" data-md-color-primary="indigo" data-md-color-accent="indigo"  aria-hidden="true"  type="radio" name="__palette" id="__palette_0">
    
  
</form>
      
    
    
      <script>var palette=__md_get("__palette");if(palette&&palette.color){if("(prefers-color-scheme)"===palette.color.media){var media=matchMedia("(prefers-color-scheme: light)"),input=document.querySelector(media.matches?"[data-md-color-media='(prefers-color-scheme: light)']":"[data-md-color-media='(prefers-color-scheme: dark)']");palette.color.media=input.getAttribute("data-md-color-media"),palette.color.scheme=input.getAttribute("data-md-color-scheme"),palette.color.primary=input.getAttribute("data-md-color-primary"),palette.color.accent=input.getAttribute("data-md-color-accent")}for(var[key,value]of Object.entries(palette.color))document.body.setAttribute("data-md-color-"+key,value)}</script>
    
    
    
      
      
        <label class="md-header__button md-icon" for="__search">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        </label>
        <div class="md-search" data-md-component="search" role="dialog">
  <label class="md-search__overlay" for="__search"></label>
  <div class="md-search__inner" role="search">
    <form class="md-search__form" name="search">
      <input type="text" class="md-search__input" name="query" aria-label="Search" placeholder="Search" autocapitalize="off" autocorrect="off" autocomplete="off" spellcheck="false" data-md-component="search-query" required>
      <label class="md-search__icon md-icon" for="__search">
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.5 3A6.5 6.5 0 0 1 16 9.5c0 1.61-.59 3.09-1.56 4.23l.27.27h.79l5 5-1.5 1.5-5-5v-.79l-.27-.27A6.52 6.52 0 0 1 9.5 16 6.5 6.5 0 0 1 3 9.5 6.5 6.5 0 0 1 9.5 3m0 2C7 5 5 7 5 9.5S7 14 9.5 14 14 12 14 9.5 12 5 9.5 5"/></svg>
        
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20 11v2H8l5.5 5.5-1.42 1.42L4.16 12l7.92-7.92L13.5 5.5 8 11z"/></svg>
      </label>
      <nav class="md-search__options" aria-label="Search">
        
        <button type="reset" class="md-search__icon md-icon" title="Clear" aria-label="Clear" tabindex="-1">
          
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/></svg>
        </button>
      </nav>
      
    </form>
    <div class="md-search__output">
      <div class="md-search__scrollwrap" tabindex="0" data-md-scrollfix>
        <div class="md-search-result" data-md-component="search-result">
          <div class="md-search-result__meta">
            Initializing search
          </div>
          <ol class="md-search-result__list" role="presentation"></ol>
        </div>
      </div>
    </div>
  </div>
</div>
      
    
    
  </nav>
  
</header>
    
    <div class="md-container" data-md-component="container">
      
      
        
          
        
      
      <main class="md-main" data-md-component="main">
        <div class="md-main__inner md-grid">
          
            
              
              <div class="md-sidebar md-sidebar--primary" data-md-component="sidebar" data-md-type="navigation" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    



<nav class="md-nav md-nav--primary" aria-label="Navigation" data-md-level="0">
  <label class="md-nav__title" for="__drawer">
    <a href="." title="MkDocs Output as Input Plugin" class="md-nav__button md-logo" aria-label="MkDocs Output as Input Plugin" data-md-component="logo">
      
  
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 8a3 3 0 0 0 3-3 3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3m0 3.54C9.64 9.35 6.5 8 3 8v11c3.5 0 6.64 1.35 9 3.54 2.36-2.19 5.5-3.54 9-3.54V8c-3.5 0-6.64 1.35-9 3.54"/></svg>

    </a>
    MkDocs Output as Input Plugin
  </label>
  
  <ul class="md-nav__list" data-md-scrollfix>
    
      
      
  
  
    
  
  
  
    <li class="md-nav__item md-nav__item--active">
      
      <input class="md-nav__toggle md-toggle" type="checkbox" id="__toc">
      
      
      
      <a href="." class="md-nav__link md-nav__link--active">
        
  
  
  <span class="md-ellipsis">
    
  
    Home
  

    
  </span>
  
  

      </a>
      
    </li>
  

    
  </ul>
</nav>
                  </div>
                </div>
              </div>
            
            
              
              <div class="md-sidebar md-sidebar--secondary" data-md-component="sidebar" data-md-type="toc" >
                <div class="md-sidebar__scrollwrap">
                  <div class="md-sidebar__inner">
                    

<nav class="md-nav md-nav--secondary" aria-label="Table of contents">
  
  
  
  
</nav>
                  </div>
                </div>
              </div>
            
          
          
            <div class="md-content" data-md-component="content">
              
              <article class="md-content__inner md-typeset">
                
                  



<div class="md-content__inner md-typeset">
<h1 class="custom-heading" id="vexy-mkdocs-output-as-input">vexy-mkdocs-output-as-input<a class="headerlink" href="#vexy-mkdocs-output-as-input" title="Permanent link">¶</a></h1>
<p><a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="PyPI version" src="https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg"/></a>
<a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml"><img alt="CI" src="https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg"/></a>
<a href="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input"><img alt="codecov" src="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg"/></a>
<a href="https://opensource.org/licenses/MIT"><img alt="License: MIT" src="https://img.shields.io/badge/License-MIT-yellow.svg"/></a>
<a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="Python versions" src="https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg"/></a></p>
<p>A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.</p>
<h2 class="custom-heading" id="features">Features<a class="headerlink" href="#features" title="Permanent link">¶</a></h2>
<p>This plugin enables powerful post-processing workflows by:</p>
<ol>
<li>✅ Preserving your original Markdown structure and frontmatter</li>
<li>✅ Capturing the fully-rendered HTML output from MkDocs</li>
<li>✅ Creating new Markdown files that combine original metadata with processed HTML</li>
<li>✅ Enabling further processing by other static site generators</li>
</ol>
<h2 class="custom-heading" id="installation">Installation<a class="headerlink" href="#installation" title="Permanent link">¶</a></h2>
<p>Install from PyPI:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-0-1" id="__codelineno-0-1" name="__codelineno-0-1"></a>uv<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>--system<span class="w"> </span>--upgrade<span class="w"> </span>vexy-mkdocs-output-as-input
</code></pre></div>
<p>Or install from source:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-1-1" id="__codelineno-1-1" name="__codelineno-1-1"></a>pip<span class="w"> </span>install<span class="w"> </span>git+https://github.com/vexyart/vexy-mkdocs-output-as-input
</code></pre></div>
<h2 class="custom-heading" id="quick-start">Quick Start<a class="headerlink" href="#quick-start" title="Permanent link">¶</a></h2>
<p>Add the plugin to your <code>mkdocs.yml</code>:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-2-1" id="__codelineno-2-1" name="__codelineno-2-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-2-2" id="__codelineno-2-2" name="__codelineno-2-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span><span class="w">  </span><span class="c1"># Other plugins</span>
<a href="#__codelineno-2-3" id="__codelineno-2-3" name="__codelineno-2-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<p>Build your site:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-3-1" id="__codelineno-3-1" name="__codelineno-3-1"></a>mkdocs<span class="w"> </span>build
</code></pre></div>
<p>Find your processed files in the <code>stage/</code> directory (relative to your MkDocs project root).</p>
<h2 class="custom-heading" id="configuration">Configuration<a class="headerlink" href="#configuration" title="Permanent link">¶</a></h2>
<p>All configuration options with their defaults:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-4-1" id="__codelineno-4-1" name="__codelineno-4-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-4-2" id="__codelineno-4-2" name="__codelineno-4-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-4-3" id="__codelineno-4-3" name="__codelineno-4-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">stage</span><span class="w">          </span><span class="c1"># Output directory name (default: 'stage')</span>
<a href="#__codelineno-4-4" id="__codelineno-4-4" name="__codelineno-4-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span><span class="w">        </span><span class="c1"># HTML element to extract (default: 'main')</span>
<a href="#__codelineno-4-5" id="__codelineno-4-5" name="__codelineno-4-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span><span class="w">       </span><span class="c1"># Tag to use in output (default: 'article')</span>
<a href="#__codelineno-4-6" id="__codelineno-4-6" name="__codelineno-4-6"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">false</span><span class="w">            </span><span class="c1"># Enable verbose logging (default: false)</span>
</code></pre></div>
<h3 class="custom-heading" id="options-explained">Options Explained<a class="headerlink" href="#options-explained" title="Permanent link">¶</a></h3>
<table>
<thead>
<tr>
<th>Option</th>
<th>Type</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>stage_dir</code></td>
<td>string</td>
<td><code>"stage"</code></td>
<td>Directory name for output files (relative to project root)</td>
</tr>
<tr>
<td><code>html_element</code></td>
<td>string</td>
<td><code>"main"</code></td>
<td>CSS selector for the HTML element to extract</td>
</tr>
<tr>
<td><code>target_tag</code></td>
<td>string</td>
<td><code>"article"</code></td>
<td>HTML tag to use in the output (replaces extracted element's tag)</td>
</tr>
<tr>
<td><code>verbose</code></td>
<td>boolean</td>
<td><code>false</code></td>
<td>Enable detailed logging for debugging</td>
</tr>
</tbody>
</table>
<h2 class="custom-heading" id="how-it-works">How It Works<a class="headerlink" href="#how-it-works" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="input-process-output">Input → Process → Output<a class="headerlink" href="#input-process-output" title="Permanent link">¶</a></h3>
<ol>
<li>
<p><strong>Input</strong>: Your source Markdown with frontmatter
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-5-1" id="__codelineno-5-1" name="__codelineno-5-1"></a>---
<a href="#__codelineno-5-2" id="__codelineno-5-2" name="__codelineno-5-2"></a>title: My Page
<a href="#__codelineno-5-3" id="__codelineno-5-3" name="__codelineno-5-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-5-4" id="__codelineno-5-4" name="__codelineno-5-4"></a><span class="gu">---</span>
<a href="#__codelineno-5-5" id="__codelineno-5-5" name="__codelineno-5-5"></a>
<a href="#__codelineno-5-6" id="__codelineno-5-6" name="__codelineno-5-6"></a><span class="gh"># My Page</span>
<a href="#__codelineno-5-7" id="__codelineno-5-7" name="__codelineno-5-7"></a>
<a href="#__codelineno-5-8" id="__codelineno-5-8" name="__codelineno-5-8"></a>This is my content with <span class="gs">**markdown**</span>.
</code></pre></div></p>
</li>
<li>
<p><strong>MkDocs Processing</strong>: Renders to HTML as usual
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-6-1" id="__codelineno-6-1" name="__codelineno-6-1"></a><span class="p">&lt;</span><span class="nt">main</span> <span class="na">class</span><span class="o">=</span><span class="s">"md-content"</span><span class="p">&gt;</span>
<a href="#__codelineno-6-2" id="__codelineno-6-2" name="__codelineno-6-2"></a>  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>My Page<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<a href="#__codelineno-6-3" id="__codelineno-6-3" name="__codelineno-6-3"></a>  <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>This is my content with <span class="p">&lt;</span><span class="nt">strong</span><span class="p">&gt;</span>markdown<span class="p">&lt;/</span><span class="nt">strong</span><span class="p">&gt;</span>.<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<a href="#__codelineno-6-4" id="__codelineno-6-4" name="__codelineno-6-4"></a><span class="p">&lt;/</span><span class="nt">main</span><span class="p">&gt;</span>
</code></pre></div></p>
</li>
<li>
<p><strong>Output</strong>: Cousin file with preserved frontmatter + extracted HTML
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-7-1" id="__codelineno-7-1" name="__codelineno-7-1"></a>---
<a href="#__codelineno-7-2" id="__codelineno-7-2" name="__codelineno-7-2"></a>title: My Page
<a href="#__codelineno-7-3" id="__codelineno-7-3" name="__codelineno-7-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-7-4" id="__codelineno-7-4" name="__codelineno-7-4"></a><span class="gu">---</span>
<a href="#__codelineno-7-5" id="__codelineno-7-5" name="__codelineno-7-5"></a>
<a href="#__codelineno-7-6" id="__codelineno-7-6" name="__codelineno-7-6"></a>&lt;article class="md-content"&gt;
<a href="#__codelineno-7-7" id="__codelineno-7-7" name="__codelineno-7-7"></a>  &lt;h1&gt;My Page&lt;/h1&gt;
<a href="#__codelineno-7-8" id="__codelineno-7-8" name="__codelineno-7-8"></a>  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;
<a href="#__codelineno-7-9" id="__codelineno-7-9" name="__codelineno-7-9"></a>&lt;/article&gt;
</code></pre></div></p>
</li>
</ol>
<h2 class="custom-heading" id="use-cases">Use Cases<a class="headerlink" href="#use-cases" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="multi-stage-documentation-pipeline">🔄 Multi-Stage Documentation Pipeline<a class="headerlink" href="#multi-stage-documentation-pipeline" title="Permanent link">¶</a></h3>
<p>Process documentation through MkDocs first, then feed to another SSG:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-8-1" id="__codelineno-8-1" name="__codelineno-8-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-8-2" id="__codelineno-8-2" name="__codelineno-8-2"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-8-3" id="__codelineno-8-3" name="__codelineno-8-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-8-4" id="__codelineno-8-4" name="__codelineno-8-4"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">hugo/content</span>
<a href="#__codelineno-8-5" id="__codelineno-8-5" name="__codelineno-8-5"></a>
<a href="#__codelineno-8-6" id="__codelineno-8-6" name="__codelineno-8-6"></a><span class="c1"># Then run:</span>
<a href="#__codelineno-8-7" id="__codelineno-8-7" name="__codelineno-8-7"></a><span class="c1"># mkdocs build &amp;&amp; hugo build</span>
</code></pre></div>
<h3 class="custom-heading" id="content-extraction">📝 Content Extraction<a class="headerlink" href="#content-extraction" title="Permanent link">¶</a></h3>
<p>Extract just the article content without theme wrapper:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-9-1" id="__codelineno-9-1" name="__codelineno-9-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-9-2" id="__codelineno-9-2" name="__codelineno-9-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-9-3" id="__codelineno-9-3" name="__codelineno-9-3"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span>
<a href="#__codelineno-9-4" id="__codelineno-9-4" name="__codelineno-9-4"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">div</span>
</code></pre></div>
<h3 class="custom-heading" id="custom-post-processing">🎨 Custom Post-Processing<a class="headerlink" href="#custom-post-processing" title="Permanent link">¶</a></h3>
<p>Preserve MkDocs rendering while preparing for custom templates:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-10-1" id="__codelineno-10-1" name="__codelineno-10-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-10-2" id="__codelineno-10-2" name="__codelineno-10-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-10-3" id="__codelineno-10-3" name="__codelineno-10-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">_includes</span>
<a href="#__codelineno-10-4" id="__codelineno-10-4" name="__codelineno-10-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-10-5" id="__codelineno-10-5" name="__codelineno-10-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">section</span>
</code></pre></div>
<h2 class="custom-heading" id="examples">Examples<a class="headerlink" href="#examples" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="basic-example">Basic Example<a class="headerlink" href="#basic-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-11-1" id="__codelineno-11-1" name="__codelineno-11-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-11-2" id="__codelineno-11-2" name="__codelineno-11-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-11-3" id="__codelineno-11-3" name="__codelineno-11-3"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-11-4" id="__codelineno-11-4" name="__codelineno-11-4"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<h3 class="custom-heading" id="advanced-example">Advanced Example<a class="headerlink" href="#advanced-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-12-1" id="__codelineno-12-1" name="__codelineno-12-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-12-2" id="__codelineno-12-2" name="__codelineno-12-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-12-3" id="__codelineno-12-3" name="__codelineno-12-3"></a><span class="nt">theme</span><span class="p">:</span>
<a href="#__codelineno-12-4" id="__codelineno-12-4" name="__codelineno-12-4"></a><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">material</span>
<a href="#__codelineno-12-5" id="__codelineno-12-5" name="__codelineno-12-5"></a>
<a href="#__codelineno-12-6" id="__codelineno-12-6" name="__codelineno-12-6"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-12-7" id="__codelineno-12-7" name="__codelineno-12-7"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span>
<a href="#__codelineno-12-8" id="__codelineno-12-8" name="__codelineno-12-8"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-12-9" id="__codelineno-12-9" name="__codelineno-12-9"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">processed</span>
<a href="#__codelineno-12-10" id="__codelineno-12-10" name="__codelineno-12-10"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article.md-content__inner</span>
<a href="#__codelineno-12-11" id="__codelineno-12-11" name="__codelineno-12-11"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-12-12" id="__codelineno-12-12" name="__codelineno-12-12"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">true</span>
<a href="#__codelineno-12-13" id="__codelineno-12-13" name="__codelineno-12-13"></a>
<a href="#__codelineno-12-14" id="__codelineno-12-14" name="__codelineno-12-14"></a><span class="c1"># Process specific content area from Material theme</span>
</code></pre></div>
<h3 class="custom-heading" id="integration-example">Integration Example<a class="headerlink" href="#integration-example" title="Permanent link">¶</a></h3>
<p>Using with other tools in a documentation pipeline:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-13-1" id="__codelineno-13-1" name="__codelineno-13-1"></a><span class="ch">#!/bin/bash</span>
<a href="#__codelineno-13-2" id="__codelineno-13-2" name="__codelineno-13-2"></a><span class="c1"># build.sh</span>
<a href="#__codelineno-13-3" id="__codelineno-13-3" name="__codelineno-13-3"></a>
<a href="#__codelineno-13-4" id="__codelineno-13-4" name="__codelineno-13-4"></a><span class="c1"># Stage 1: Build with MkDocs + plugins</span>
<a href="#__codelineno-13-5" id="__codelineno-13-5" name="__codelineno-13-5"></a>mkdocs<span class="w"> </span>build
<a href="#__codelineno-13-6" id="__codelineno-13-6" name="__codelineno-13-6"></a>
<a href="#__codelineno-13-7" id="__codelineno-13-7" name="__codelineno-13-7"></a><span class="c1"># Stage 2: Process staged output</span>
<a href="#__codelineno-13-8" id="__codelineno-13-8" name="__codelineno-13-8"></a>python<span class="w"> </span>post_process.py<span class="w"> </span>stage/
<a href="#__codelineno-13-9" id="__codelineno-13-9" name="__codelineno-13-9"></a>
<a href="#__codelineno-13-10" id="__codelineno-13-10" name="__codelineno-13-10"></a><span class="c1"># Stage 3: Build final site</span>
<a href="#__codelineno-13-11" id="__codelineno-13-11" name="__codelineno-13-11"></a>hugo<span class="w"> </span>--contentDir<span class="o">=</span>stage/
</code></pre></div>
<h2 class="custom-heading" id="development">Development<a class="headerlink" href="#development" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="setup-development-environment">Setup Development Environment<a class="headerlink" href="#setup-development-environment" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-14-1" id="__codelineno-14-1" name="__codelineno-14-1"></a><span class="c1"># Clone the repository</span>
<a href="#__codelineno-14-2" id="__codelineno-14-2" name="__codelineno-14-2"></a>git<span class="w"> </span>clone<span class="w"> </span>https://github.com/vexyart/vexy-mkdocs-output-as-input
<a href="#__codelineno-14-3" id="__codelineno-14-3" name="__codelineno-14-3"></a><span class="nb">cd</span><span class="w"> </span>vexy-mkdocs-output-as-input
<a href="#__codelineno-14-4" id="__codelineno-14-4" name="__codelineno-14-4"></a>
<a href="#__codelineno-14-5" id="__codelineno-14-5" name="__codelineno-14-5"></a><span class="c1"># Create virtual environment</span>
<a href="#__codelineno-14-6" id="__codelineno-14-6" name="__codelineno-14-6"></a>python<span class="w"> </span>-m<span class="w"> </span>venv<span class="w"> </span>venv
<a href="#__codelineno-14-7" id="__codelineno-14-7" name="__codelineno-14-7"></a><span class="nb">source</span><span class="w"> </span>venv/bin/activate<span class="w">  </span><span class="c1"># On Windows: venv\Scripts\activate</span>
<a href="#__codelineno-14-8" id="__codelineno-14-8" name="__codelineno-14-8"></a>
<a href="#__codelineno-14-9" id="__codelineno-14-9" name="__codelineno-14-9"></a><span class="c1"># Install in development mode</span>
<a href="#__codelineno-14-10" id="__codelineno-14-10" name="__codelineno-14-10"></a>pip<span class="w"> </span>install<span class="w"> </span>-e<span class="w"> </span>.<span class="o">[</span>dev<span class="o">]</span>
<a href="#__codelineno-14-11" id="__codelineno-14-11" name="__codelineno-14-11"></a>
<a href="#__codelineno-14-12" id="__codelineno-14-12" name="__codelineno-14-12"></a><span class="c1"># Install pre-commit hooks</span>
<a href="#__codelineno-14-13" id="__codelineno-14-13" name="__codelineno-14-13"></a>pre-commit<span class="w"> </span>install
</code></pre></div>
<h3 class="custom-heading" id="running-tests">Running Tests<a class="headerlink" href="#running-tests" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-15-1" id="__codelineno-15-1" name="__codelineno-15-1"></a><span class="c1"># Run all tests</span>
<a href="#__codelineno-15-2" id="__codelineno-15-2" name="__codelineno-15-2"></a>pytest
<a href="#__codelineno-15-3" id="__codelineno-15-3" name="__codelineno-15-3"></a>
<a href="#__codelineno-15-4" id="__codelineno-15-4" name="__codelineno-15-4"></a><span class="c1"># Run with coverage</span>
<a href="#__codelineno-15-5" id="__codelineno-15-5" name="__codelineno-15-5"></a>pytest<span class="w"> </span>--cov<span class="o">=</span>mkdocs_output_as_input<span class="w"> </span>--cov-report<span class="o">=</span>html
<a href="#__codelineno-15-6" id="__codelineno-15-6" name="__codelineno-15-6"></a>
<a href="#__codelineno-15-7" id="__codelineno-15-7" name="__codelineno-15-7"></a><span class="c1"># Run specific test</span>
<a href="#__codelineno-15-8" id="__codelineno-15-8" name="__codelineno-15-8"></a>pytest<span class="w"> </span>tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
</code></pre></div>
<h3 class="custom-heading" id="code-quality">Code Quality<a class="headerlink" href="#code-quality" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-16-1" id="__codelineno-16-1" name="__codelineno-16-1"></a><span class="c1"># Format code</span>
<a href="#__codelineno-16-2" id="__codelineno-16-2" name="__codelineno-16-2"></a>black<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-3" id="__codelineno-16-3" name="__codelineno-16-3"></a>
<a href="#__codelineno-16-4" id="__codelineno-16-4" name="__codelineno-16-4"></a><span class="c1"># Lint code</span>
<a href="#__codelineno-16-5" id="__codelineno-16-5" name="__codelineno-16-5"></a>ruff<span class="w"> </span>check<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-6" id="__codelineno-16-6" name="__codelineno-16-6"></a>
<a href="#__codelineno-16-7" id="__codelineno-16-7" name="__codelineno-16-7"></a><span class="c1"># Type check</span>
<a href="#__codelineno-16-8" id="__codelineno-16-8" name="__codelineno-16-8"></a>mypy<span class="w"> </span>src
</code></pre></div>
<h2 class="custom-heading" id="contributing">Contributing<a class="headerlink" href="#contributing" title="Permanent link">¶</a></h2>
<p>Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.</p>
<ol>
<li>Fork the repository</li>
<li>Create your feature branch (<code>git checkout -b feature/AmazingFeature</code>)</li>
<li>Commit your changes (<code>git commit -m 'Add some AmazingFeature'</code>)</li>
<li>Push to the branch (<code>git push origin feature/AmazingFeature</code>)</li>
<li>Open a Pull Request</li>
</ol>
<h2 class="custom-heading" id="license">License<a class="headerlink" href="#license" title="Permanent link">¶</a></h2>
<p>This project is licensed under the MIT License - see the <a href="LICENSE">LICENSE</a> file for details.</p>
<h2 class="custom-heading" id="support">Support<a class="headerlink" href="#support" title="Permanent link">¶</a></h2>
<ul>
<li>📧 Email: you@example.com</li>
<li>🐛 Issues: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/issues">GitHub Issues</a></li>
<li>💬 Discussions: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions">GitHub Discussions</a></li>
</ul>
</div>







  
  






                
              </article>
            </div>
          
          
<script>var target=document.getElementById(location.hash.slice(1));target&&target.name&&(target.checked=target.name.startsWith("__tabbed_"))</script>
        </div>
        
      </main>
      
        <footer class="md-footer">
  
  <div class="md-footer-meta md-typeset">
    <div class="md-footer-meta__inner md-grid">
      <div class="md-copyright">
  
  
    Made with
    <a href="https://squidfunk.github.io/mkdocs-material/" target="_blank" rel="noopener">
      Material for MkDocs Insiders
    </a>
  
</div>
      
    </div>
  </div>
</footer>
      
    </div>
    <div class="md-dialog" data-md-component="dialog">
      <div class="md-dialog__inner md-typeset"></div>
    </div>
    
    
    
      
      
      <script id="__config" type="application/json">{"annotate": null, "base": ".", "features": ["navigation.instant", "navigation.tracking", "content.code.copy"], "search": "assets/javascripts/workers/search.ad38c271.min.js", "tags": null, "translations": {"clipboard.copied": "Copied to clipboard", "clipboard.copy": "Copy to clipboard", "search.result.more.one": "1 more on this page", "search.result.more.other": "# more on this page", "search.result.none": "No matching documents", "search.result.one": "1 matching document", "search.result.other": "# matching documents", "search.result.placeholder": "Type to start searching", "search.result.term.missing": "Missing", "select.version": "Select version"}, "version": null}</script>
    
    
      <script src="assets/javascripts/bundle.5c86578b.min.js"></script>
      
    
  </body>
</html>
</document_content>
</document>

<document index="15">
<source>docs/search/search_index.json</source>
<document_content>
{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"MkDocs Output as Input Plugin","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#vexy-mkdocs-output-as-input","title":"vexy-mkdocs-output-as-input","text":"<p>A MkDocs plugin that captures HTML output and creates \"cousin\" Markdown files with original frontmatter and extracted HTML content.</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#features","title":"Features","text":"<p>This plugin enables powerful post-processing workflows by:</p> <ol> <li>\u2705 Preserving your original Markdown structure and frontmatter</li> <li>\u2705 Capturing the fully-rendered HTML output from MkDocs</li> <li>\u2705 Creating new Markdown files that combine original metadata with processed HTML</li> <li>\u2705 Enabling further processing by other static site generators</li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#installation","title":"Installation","text":"<p>Install from PyPI:</p> <pre><code>uv pip install --system --upgrade vexy-mkdocs-output-as-input\n</code></pre> <p>Or install from source:</p> <pre><code>pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#quick-start","title":"Quick Start","text":"<p>Add the plugin to your <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - search  # Other plugins\n  - output-as-input\n</code></pre> <p>Build your site:</p> <pre><code>mkdocs build\n</code></pre> <p>Find your processed files in the <code>stage/</code> directory (relative to your MkDocs project root).</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#configuration","title":"Configuration","text":"<p>All configuration options with their defaults:</p> <pre><code>plugins:\n  - output-as-input:\n      stage_dir: stage          # Output directory name (default: 'stage')\n      html_element: main        # HTML element to extract (default: 'main')\n      target_tag: article       # Tag to use in output (default: 'article')\n      verbose: false            # Enable verbose logging (default: false)\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#options-explained","title":"Options Explained","text":"Option Type Default Description <code>stage_dir</code> string <code>\"stage\"</code> Directory name for output files (relative to project root) <code>html_element</code> string <code>\"main\"</code> CSS selector for the HTML element to extract <code>target_tag</code> string <code>\"article\"</code> HTML tag to use in the output (replaces extracted element's tag) <code>verbose</code> boolean <code>false</code> Enable detailed logging for debugging","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#how-it-works","title":"How It Works","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#input-process-output","title":"Input \u2192 Process \u2192 Output","text":"<ol> <li> <p>Input: Your source Markdown with frontmatter    <pre><code>---\ntitle: My Page\nauthor: Jane Doe\n---\n\n# My Page\n\nThis is my content with **markdown**.\n</code></pre></p> </li> <li> <p>MkDocs Processing: Renders to HTML as usual    <pre><code>&lt;main class=\"md-content\"&gt;\n  &lt;h1&gt;My Page&lt;/h1&gt;\n  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;\n&lt;/main&gt;\n</code></pre></p> </li> <li> <p>Output: Cousin file with preserved frontmatter + extracted HTML    <pre><code>---\ntitle: My Page\nauthor: Jane Doe\n---\n\n&lt;article class=\"md-content\"&gt;\n  &lt;h1&gt;My Page&lt;/h1&gt;\n  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;\n&lt;/article&gt;\n</code></pre></p> </li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#use-cases","title":"Use Cases","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#multi-stage-documentation-pipeline","title":"\ud83d\udd04 Multi-Stage Documentation Pipeline","text":"<p>Process documentation through MkDocs first, then feed to another SSG:</p> <pre><code># mkdocs.yml\nplugins:\n  - output-as-input:\n      stage_dir: hugo/content\n\n# Then run:\n# mkdocs build &amp;&amp; hugo build\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#content-extraction","title":"\ud83d\udcdd Content Extraction","text":"<p>Extract just the article content without theme wrapper:</p> <pre><code>plugins:\n  - output-as-input:\n      html_element: article\n      target_tag: div\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#custom-post-processing","title":"\ud83c\udfa8 Custom Post-Processing","text":"<p>Preserve MkDocs rendering while preparing for custom templates:</p> <pre><code>plugins:\n  - output-as-input:\n      stage_dir: _includes\n      html_element: main\n      target_tag: section\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#examples","title":"Examples","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#basic-example","title":"Basic Example","text":"<pre><code># mkdocs.yml\nsite_name: My Documentation\nplugins:\n  - output-as-input\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#advanced-example","title":"Advanced Example","text":"<pre><code># mkdocs.yml\nsite_name: My Documentation\ntheme:\n  name: material\n\nplugins:\n  - search\n  - output-as-input:\n      stage_dir: processed\n      html_element: article.md-content__inner\n      target_tag: main\n      verbose: true\n\n# Process specific content area from Material theme\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#integration-example","title":"Integration Example","text":"<p>Using with other tools in a documentation pipeline:</p> <pre><code>#!/bin/bash\n# build.sh\n\n# Stage 1: Build with MkDocs + plugins\nmkdocs build\n\n# Stage 2: Process staged output\npython post_process.py stage/\n\n# Stage 3: Build final site\nhugo --contentDir=stage/\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#development","title":"Development","text":"","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#setup-development-environment","title":"Setup Development Environment","text":"<pre><code># Clone the repository\ngit clone https://github.com/vexyart/vexy-mkdocs-output-as-input\ncd vexy-mkdocs-output-as-input\n\n# Create virtual environment\npython -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n\n# Install in development mode\npip install -e .[dev]\n\n# Install pre-commit hooks\npre-commit install\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#running-tests","title":"Running Tests","text":"<pre><code># Run all tests\npytest\n\n# Run with coverage\npytest --cov=mkdocs_output_as_input --cov-report=html\n\n# Run specific test\npytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#code-quality","title":"Code Quality","text":"<pre><code># Format code\nblack src tests\n\n# Lint code\nruff check src tests\n\n# Type check\nmypy src\n</code></pre>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.</p> <ol> <li>Fork the repository</li> <li>Create your feature branch (<code>git checkout -b feature/AmazingFeature</code>)</li> <li>Commit your changes (<code>git commit -m 'Add some AmazingFeature'</code>)</li> <li>Push to the branch (<code>git push origin feature/AmazingFeature</code>)</li> <li>Open a Pull Request</li> </ol>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>","tags":["mkdocs","plugin","documentation","pipeline"]},{"location":"#support","title":"Support","text":"<ul> <li>\ud83d\udce7 Email: you@example.com</li> <li>\ud83d\udc1b Issues: GitHub Issues</li> <li>\ud83d\udcac Discussions: GitHub Discussions</li> </ul>","tags":["mkdocs","plugin","documentation","pipeline"]}]}
</document_content>
</document>

<document index="16">
<source>docs/sitemap.xml</source>
<document_content>
<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
    <url>
         <loc>https://vexyart.github.io/vexy-mkdocs-output-as-input/</loc>
         <lastmod>2025-07-14</lastmod>
    </url>
</urlset>
</document_content>
</document>

<document index="17">
<source>llms.txt</source>
<document_content>
Project Structure:
📁 vexy-mkdocs-output-as-input
├── 📁 .github
│   └── 📁 workflows
│       ├── 📄 ci.yml
│       └── 📄 release.yml
├── 📁 docs
│   ├── 📄 api.md
│   ├── 📄 configuration.md
│   ├── 📄 examples.md
│   ├── 📄 getting-started.md
│   └── 📄 index.md
├── 📁 src
│   └── 📁 mkdocs_output_as_input
│       ├── 📄 __init__.py
│       └── 📄 plugin.py
├── 📁 src_docs
│   └── 📄 mkdocs.yml
├── 📁 tests
│   └── 📄 test_plugin.py
├── 📄 .gitignore
├── 📄 AGENTS.md
├── 📄 CHANGELOG.md
├── 📄 CLAUDE.md
├── 📄 example_pipeline.py
├── 📄 GEMINI.md
├── 📄 LICENSE
├── 📄 llms.txt
├── 📄 mkdocs.yml
├── 📄 pyproject.toml
├── 📄 README.md
└── 📄 TODO.md


<documents>
<document index="1">
<source>.github/workflows/ci.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run pre-commit
        if: matrix.python-version == '3.11'
        run: pre-commit run --all-files

      - name: Run tests
        run: |
          pytest -v --cov=mkdocs_output_as_input --cov-report=xml --cov-report=term

      - name: Upload coverage
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run ruff
        run: ruff check --output-format=github .

      - name: Run ruff format
        run: ruff format --check --diff .

      - name: Run mypy
        run: mypy src
</document_content>
</document>

<document index="2">
<source>.github/workflows/release.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write  # Required for PyPI trusted publishing

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mkdocs-output-as-input
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # Trusted publishing configured in PyPI project settings

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Extract changelog section
        id: changelog
        run: |
          version=${GITHUB_REF#refs/tags/v}
          awk "/## \[$version\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.changelog.outputs.version }}
          body_path: release_notes.md
          files: dist/*
          draft: false
          prerelease: false
</document_content>
</document>

<document index="3">
<source>.gitignore</source>
<document_content>
# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
venv/
ENV/
env/
.venv
.env

# pyenv
.python-version

# pipenv
Pipfile.lock

# Poetry
poetry.lock

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# pytest
.pytest_cache/
.coverage
htmlcov/
.tox/
coverage.xml
*.cover
.hypothesis/

# Jupyter Notebook
.ipynb_checkpoints

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# MkDocs
site/
stage/
.cache/

# setuptools-scm
src/mkdocs_output_as_input/_version.py
</document_content>
</document>

<document index="4">
<source>AGENTS.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="5">
<source>CHANGELOG.md</source>
<document_content>
# Changelog

All notable changes to vexy-mkdocs-output-as-input will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [Unreleased]

### Added
- Complete documentation pages for getting started, configuration, examples, and API reference
- Additional test cases for edge cases, improving coverage to 91%+
- Proper error handling for missing directories (docs_dir, site_dir)

### Changed
- Replaced Black formatter with Ruff format in CI workflow
- Enhanced type hints with proper type ignore comments for MkDocs compatibility
- Improved error handling and logging throughout the plugin

### Fixed
- Fixed broken plugin implementation - all methods now properly implemented
- Fixed broken test suite - all tests now passing with proper fixtures
- Fixed mypy type checking errors with appropriate type annotations
- Pre-commit configuration updated to remove conflicting Black formatter

## [0.2.0] - 2025-01-14

### Changed
- **BREAKING**: Migrated to src-layout package structure
- **BREAKING**: Minimum Python version is now 3.9
- Switched from Loguru to standard library logging for better integration
- Modernized packaging with PEP 621 compliant pyproject.toml
- Improved type hints throughout the codebase

### Added
- Comprehensive test suite with >90% coverage
- Pre-commit hooks for code quality
- GitHub Actions CI/CD workflows
- Support for Python 3.9, 3.10, 3.11, and 3.12
- Automated release process with trusted PyPI publishing
- Development documentation in README

### Fixed
- Better error handling for missing files
- Graceful handling of invalid YAML frontmatter
- Improved logging messages for debugging

## [0.1.0] - 2025-01-10

### Added
- Initial release of vexy-mkdocs-output-as-input plugin
- Core functionality to capture HTML output and create cousin Markdown files
- Configurable stage directory for output files
- Configurable HTML element extraction (default: `<main>`)
- Configurable target tag transformation (default: `<article>`)
- Preservation of original YAML frontmatter
- Verbose logging mode for debugging
- Basic documentation and examples

[Unreleased]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.2.0...HEAD
[0.2.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.1.0...v0.2.0
[0.1.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/releases/tag/v0.1.0
</document_content>
</document>

<document index="6">
<source>CLAUDE.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="7">
<source>GEMINI.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="8">
<source>LICENSE</source>
<document_content>
MIT License

Copyright (c) 2025 MkDocs Output as Input Contributors

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</document_content>
</document>

<document index="9">
<source>README.md</source>
<document_content>
# vexy-mkdocs-output-as-input

[![PyPI version](https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)
[![CI](https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg)](https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg)](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Python versions](https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)

A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.

## Features

This plugin enables powerful post-processing workflows by:

1. ✅ Preserving your original Markdown structure and frontmatter
2. ✅ Capturing the fully-rendered HTML output from MkDocs
3. ✅ Creating new Markdown files that combine original metadata with processed HTML
4. ✅ Enabling further processing by other static site generators

## Installation

Install from PyPI:

```bash
uv pip install --system --upgrade vexy-mkdocs-output-as-input
```

Or install from source:

```bash
pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input
```

## Quick Start

Add the plugin to your `mkdocs.yml`:

```yaml
plugins:
  - search  # Other plugins
  - output-as-input
```

Build your site:

```bash
mkdocs build
```

Find your processed files in the `stage/` directory (relative to your MkDocs project root).

## Configuration

All configuration options with their defaults:

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory name (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      verbose: false            # Enable verbose logging (default: false)
```

### Options Explained

| Option | Type | Default | Description |
|--------|------|---------|-------------|
| `stage_dir` | string | `"stage"` | Directory name for output files (relative to project root) |
| `html_element` | string | `"main"` | CSS selector for the HTML element to extract |
| `target_tag` | string | `"article"` | HTML tag to use in the output (replaces extracted element's tag) |
| `verbose` | boolean | `false` | Enable detailed logging for debugging |

## How It Works

### Input → Process → Output

1. **Input**: Your source Markdown with frontmatter
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   # My Page
   
   This is my content with **markdown**.
   ```

2. **MkDocs Processing**: Renders to HTML as usual
   ```html
   <main class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </main>
   ```

3. **Output**: Cousin file with preserved frontmatter + extracted HTML
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   <article class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </article>
   ```

## Use Cases

### 🔄 Multi-Stage Documentation Pipeline

Process documentation through MkDocs first, then feed to another SSG:

```yaml
# mkdocs.yml
plugins:
  - output-as-input:
      stage_dir: hugo/content

# Then run:
# mkdocs build && hugo build
```

### 📝 Content Extraction

Extract just the article content without theme wrapper:

```yaml
plugins:
  - output-as-input:
      html_element: article
      target_tag: div
```

### 🎨 Custom Post-Processing

Preserve MkDocs rendering while preparing for custom templates:

```yaml
plugins:
  - output-as-input:
      stage_dir: _includes
      html_element: main
      target_tag: section
```

## Examples

### Basic Example

```yaml
# mkdocs.yml
site_name: My Documentation
plugins:
  - output-as-input
```

### Advanced Example

```yaml
# mkdocs.yml
site_name: My Documentation
theme:
  name: material

plugins:
  - search
  - output-as-input:
      stage_dir: processed
      html_element: article.md-content__inner
      target_tag: main
      verbose: true

# Process specific content area from Material theme
```

### Integration Example

Using with other tools in a documentation pipeline:

```bash
#!/bin/bash
# build.sh

# Stage 1: Build with MkDocs + plugins
mkdocs build

# Stage 2: Process staged output
python post_process.py stage/

# Stage 3: Build final site
hugo --contentDir=stage/
```

## Development

### Setup Development Environment

```bash
# Clone the repository
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input

# Create virtual environment
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install in development mode
pip install -e .[dev]

# Install pre-commit hooks
pre-commit install
```

### Running Tests

```bash
# Run all tests
pytest

# Run with coverage
pytest --cov=mkdocs_output_as_input --cov-report=html

# Run specific test
pytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
```

### Code Quality

```bash
# Format code
black src tests

# Lint code
ruff check src tests

# Type check
mypy src
```

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Support

- 📧 Email: you@example.com
- 🐛 Issues: [GitHub Issues](https://github.com/vexyart/vexy-mkdocs-output-as-input/issues)
- 💬 Discussions: [GitHub Discussions](https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions)
</document_content>
</document>

<document index="10">
<source>TODO.md</source>
<document_content>
# TODO

## Future Enhancements

### Testing
- [ ] Add integration tests for real MkDocs builds
- [ ] Add performance benchmarks for large documentation sites
- [ ] Test with various MkDocs themes (Material, ReadTheDocs, etc.)

### Features
- [ ] Add support for custom HTML processors/transformers
- [ ] Add option to preserve relative links in extracted HTML
- [ ] Support for multiple output formats (JSON, YAML, etc.)
- [ ] Add CLI tool for standalone processing

### Documentation
- [ ] Add video tutorial for setup and usage
- [ ] Create example repository with different use cases
- [ ] Add troubleshooting guide for common issues

### CI/CD
- [ ] Add automated dependency updates (Dependabot)
- [ ] Set up security scanning (CodeQL)
- [ ] Add changelog generation automation

</document_content>
</document>

<document index="11">
<source>docs/api.md</source>
<document_content>
---
title: API Reference
description: Complete API reference for the MkDocs Output as Input plugin
---

# API Reference

This page provides detailed API documentation for the MkDocs Output as Input plugin.

## Plugin Class

::: mkdocs_output_as_input.plugin.OutputAsInputPlugin

## Configuration Schema

The plugin accepts the following configuration options:

### stage_dir

**Type**: `str`  
**Default**: `"stage"`

Directory name for output files, relative to the project root.

### html_element

**Type**: `str`  
**Default**: `"main"`

CSS selector for the HTML element to extract from built pages.

### target_tag

**Type**: `str`  
**Default**: `"article"`

HTML tag to use in the output file (replaces the extracted element's tag).

### verbose

**Type**: `bool`  
**Default**: `False`

Enable detailed logging for debugging.

## Plugin Methods

### on_config

**Signature**: `on_config(self, config: dict[str, Any]) -> dict[str, Any]`

Called when MkDocs configuration is loaded. Stores site and docs directories for later use.

**Parameters**:
- `config`: The MkDocs configuration dictionary

**Returns**:
- The unmodified configuration dictionary

### on_page_read_source

**Signature**: `on_page_read_source(self, page: Page, config: dict[str, Any]) -> Optional[str]`

Called when MkDocs reads a source file. Captures the source content and frontmatter.

**Parameters**:
- `page`: The MkDocs Page object
- `config`: The MkDocs configuration dictionary

**Returns**:
- `None` (allows MkDocs to continue with original processing)

### on_post_build

**Signature**: `on_post_build(self, config: dict[str, Any]) -> None`

Called after MkDocs completes the build. Processes HTML files and creates cousin Markdown files.

**Parameters**:
- `config`: The MkDocs configuration dictionary

**Returns**:
- `None`

### _process_file

**Signature**: `_process_file(self, src_path: str, file_info: dict[str, Any], stage_dir: Path) -> None`

Internal method to process a single file: extract HTML and create cousin Markdown.

**Parameters**:
- `src_path`: Path to the source file relative to docs directory
- `file_info`: Dictionary containing frontmatter and source file path
- `stage_dir`: Path to the stage directory

**Returns**:
- `None`

## Usage Examples

### Basic Plugin Usage

```python
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

# Create plugin instance
plugin = OutputAsInputPlugin()

# Configure plugin
plugin.config = {
    "stage_dir": "custom_stage",
    "html_element": "article",
    "target_tag": "div",
    "verbose": True,
}
```

### Manual Processing

```python
from pathlib import Path
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

# Initialize plugin
plugin = OutputAsInputPlugin()
plugin.config = {
    "stage_dir": "stage",
    "html_element": "main",
    "target_tag": "article",
    "verbose": False,
}

# Set up directories
plugin.site_dir = Path("site")
plugin.docs_dir = Path("docs")

# Process a file manually
file_info = {
    "frontmatter": {"title": "Test Page"},
    "abs_src_path": "/path/to/source.md",
}
stage_dir = Path("stage")
stage_dir.mkdir(exist_ok=True)

plugin._process_file("test.md", file_info, stage_dir)
```

## Error Handling

The plugin includes comprehensive error handling:

### File Read Errors

```python
try:
    with open(page.file.abs_src_path, encoding="utf-8") as f:
        content = f.read()
except Exception as e:
    logger.error(f"OutputAsInput: Failed to read {src_path}: {e}")
    return None
```

### YAML Parse Errors

```python
try:
    frontmatter = yaml.safe_load(fm_text) or {}
except yaml.YAMLError as e:
    logger.warning(f"OutputAsInput: Failed to parse frontmatter in {src_path}: {e}")
```

### HTML Processing Errors

```python
try:
    with open(full_html_path, encoding="utf-8") as f:
        html_content = f.read()
except Exception as e:
    logger.error(f"OutputAsInput: Failed to read HTML {full_html_path}: {e}")
    return
```

## Logging

The plugin uses Python's standard logging module. Enable verbose mode to see detailed output:

```yaml
plugins:
  - output-as-input:
      verbose: true
```

**Log levels**:
- `INFO`: General information about processing
- `WARNING`: Non-fatal issues (missing HTML elements, YAML parse errors)
- `ERROR`: Fatal errors that prevent processing

## Dependencies

The plugin requires the following dependencies:

- `mkdocs>=1.6.0`
- `beautifulsoup4>=4.12.0`
- `pyyaml>=6.0`

## Version Information

The plugin version is managed by `setuptools-scm` and available as:

```python
from mkdocs_output_as_input import __version__
print(__version__)
```

## Thread Safety

The plugin is designed to be thread-safe and can handle concurrent MkDocs builds. Each plugin instance maintains its own state in the `source_files` dictionary.

## Performance Considerations

- The plugin processes files sequentially during the `on_post_build` phase
- Memory usage scales with the number of source files
- HTML parsing is done using BeautifulSoup4's built-in parser for consistency
- File I/O is optimized with proper encoding handling

## Extension Points

The plugin can be extended by subclassing `OutputAsInputPlugin`:

```python
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

class CustomOutputPlugin(OutputAsInputPlugin):
    def _process_file(self, src_path, file_info, stage_dir):
        # Custom processing logic
        super()._process_file(src_path, file_info, stage_dir)
        
        # Additional post-processing
        cousin_path = stage_dir / src_path
        if cousin_path.exists():
            content = cousin_path.read_text()
            # Modify content as needed
            cousin_path.write_text(modified_content)
```

</document_content>
</document>

<document index="12">
<source>docs/configuration.md</source>
<document_content>
---
title: Configuration
description: Complete configuration reference for the MkDocs Output as Input plugin
---

# Configuration

The MkDocs Output as Input plugin provides several configuration options to customize its behavior.

## Basic Configuration

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      verbose: false           # Enable verbose logging (default: false)
```

## Configuration Options

### `stage_dir`

- **Type**: `string`
- **Default**: `"stage"`
- **Description**: Directory name for output files, relative to your project root

**Example**:
```yaml
plugins:
  - output-as-input:
      stage_dir: processed
```

This creates cousin files in a `processed/` directory instead of `stage/`.

### `html_element`

- **Type**: `string`
- **Default**: `"main"`
- **Description**: CSS selector for the HTML element to extract from the built pages

**Common values**:
- `"main"` - Extract the main content area
- `"article"` - Extract article elements
- `"div.content"` - Extract divs with class "content"
- `"#content"` - Extract element with id "content"

**Example**:
```yaml
plugins:
  - output-as-input:
      html_element: article.post-content
```

### `target_tag`

- **Type**: `string`
- **Default**: `"article"`
- **Description**: HTML tag to use in the output file (replaces the extracted element's tag)

**Example**:
```yaml
plugins:
  - output-as-input:
      html_element: main
      target_tag: section
```

This extracts `<main>` elements and converts them to `<section>` in the output.

### `verbose`

- **Type**: `boolean`
- **Default**: `false`
- **Description**: Enable detailed logging for debugging

**Example**:
```yaml
plugins:
  - output-as-input:
      verbose: true
```

## Configuration Examples

### Material Theme

For the Material theme, you might want to extract the inner content:

```yaml
plugins:
  - output-as-input:
      html_element: article.md-content__inner
      target_tag: div
```

### Custom Output Directory

```yaml
plugins:
  - output-as-input:
      stage_dir: hugo/content
      html_element: main
      target_tag: article
```

### Debug Mode

```yaml
plugins:
  - output-as-input:
      verbose: true
```

## Advanced Usage

### Multiple Processing Steps

You can use the plugin in a multi-step build process:

1. **MkDocs build** with output-as-input plugin
2. **Custom processing** of the stage directory
3. **Secondary build** with another static site generator

```bash
#!/bin/bash
# Build with MkDocs
mkdocs build

# Post-process the staged files
python process_stage.py

# Build with Hugo
hugo --contentDir=stage/
```

### Theme Compatibility

The plugin should work with any MkDocs theme. For best results:

1. Inspect your theme's HTML structure
2. Identify the main content element
3. Configure `html_element` accordingly

**Finding the right element**:
1. Build your site normally
2. Open a page in your browser
3. Use developer tools to inspect the HTML
4. Look for the element containing your content

## Troubleshooting

### No Output Files

If no cousin files are created:

1. Enable verbose mode
2. Check that HTML files exist in the site directory
3. Verify that the `html_element` selector matches your theme

### Empty Output Files

If cousin files are empty:

1. Check that the `html_element` selector is correct
2. Verify that the element exists in your HTML output
3. Try a more general selector like `"body"` for testing

### Permission Errors

If you get permission errors:

1. Ensure the project directory is writable
2. Try a different `stage_dir` location
3. Check file system permissions

</document_content>
</document>

<document index="13">
<source>docs/examples.md</source>
<document_content>
---
title: Examples
description: Real-world usage examples for the MkDocs Output as Input plugin
---

# Examples

This page provides practical examples of how to use the MkDocs Output as Input plugin in various scenarios.

## Basic Usage

### Simple Blog Post Processing

**Input** (`docs/posts/my-post.md`):
```markdown
---
title: My Blog Post
date: 2025-01-14
author: Jane Doe
tags: [python, documentation]
---

# My Blog Post

This is a **markdown** blog post with some content.
```

**Configuration** (`mkdocs.yml`):
```yaml
plugins:
  - output-as-input
```

**Output** (`stage/posts/my-post.md`):
```markdown
---
title: My Blog Post
date: 2025-01-14
author: Jane Doe
tags: [python, documentation]
---

<article class="md-content">
  <h1>My Blog Post</h1>
  <p>This is a <strong>markdown</strong> blog post with some content.</p>
</article>
```

## Multi-Stage Documentation Pipeline

### MkDocs → Hugo Pipeline

**Scenario**: Use MkDocs for authoring and Hugo for final site generation.

**MkDocs Configuration** (`mkdocs.yml`):
```yaml
site_name: My Documentation
theme:
  name: material

plugins:
  - search
  - output-as-input:
      stage_dir: hugo/content
      html_element: main
      target_tag: div
```

**Hugo Configuration** (`hugo.yaml`):
```yaml
contentDir: hugo/content
baseURL: https://example.com
```

**Build Script** (`build.sh`):
```bash
#!/bin/bash
set -e

echo "Building with MkDocs..."
mkdocs build

echo "Processing with Hugo..."
hugo --contentDir=hugo/content

echo "Done!"
```

### MkDocs → Jekyll Pipeline

**Configuration** (`mkdocs.yml`):
```yaml
plugins:
  - output-as-input:
      stage_dir: _posts
      html_element: article
      target_tag: div
```

**Post-processing** (`process.py`):
```python
import os
import re
from pathlib import Path

# Convert MkDocs output to Jekyll format
for md_file in Path("_posts").glob("**/*.md"):
    content = md_file.read_text()
    
    # Add Jekyll layout to frontmatter
    content = re.sub(
        r'(---\n.*?)\n---',
        r'\1\nlayout: post\n---',
        content,
        flags=re.DOTALL
    )
    
    md_file.write_text(content)
```

## Theme-Specific Examples

### Material Theme

**Extract inner content**:
```yaml
plugins:
  - output-as-input:
      html_element: article.md-content__inner
      target_tag: section
```

### ReadTheDocs Theme

**Extract main content**:
```yaml
plugins:
  - output-as-input:
      html_element: div.rst-content
      target_tag: article
```

### Custom Theme

**For a custom theme with specific structure**:
```yaml
plugins:
  - output-as-input:
      html_element: div.content-wrapper > div.main-content
      target_tag: main
```

## Content Processing Examples

### API Documentation

**Input** (`docs/api/users.md`):
```markdown
---
title: User API
api_version: v1
endpoint: /api/users
---

# User API

The User API allows you to manage users.

## GET /api/users

Returns a list of users.
```

**Configuration**:
```yaml
plugins:
  - mkdocstrings
  - output-as-input:
      stage_dir: api_docs
      html_element: main
      target_tag: section
```

### Tutorial Series

**Input** (`docs/tutorials/setup.md`):
```markdown
---
title: Setup Tutorial
series: getting-started
order: 1
difficulty: beginner
---

# Setup Tutorial

This tutorial will guide you through the setup process.
```

**Post-processing** to group by series:
```python
import yaml
from pathlib import Path
from collections import defaultdict

# Group tutorials by series
series_map = defaultdict(list)

for md_file in Path("stage/tutorials").glob("*.md"):
    with open(md_file) as f:
        content = f.read()
        
    # Extract frontmatter
    if content.startswith('---'):
        _, fm_text, body = content.split('---', 2)
        frontmatter = yaml.safe_load(fm_text)
        series = frontmatter.get('series', 'misc')
        
        series_map[series].append({
            'file': md_file,
            'title': frontmatter.get('title'),
            'order': frontmatter.get('order', 999)
        })

# Create index files for each series
for series, tutorials in series_map.items():
    tutorials.sort(key=lambda x: x['order'])
    
    index_content = f"# {series.title()} Series\n\n"
    for tutorial in tutorials:
        index_content += f"- [{tutorial['title']}]({tutorial['file'].name})\n"
    
    (Path("stage/tutorials") / f"{series}-index.md").write_text(index_content)
```

## Integration Examples

### GitHub Actions Workflow

**`.github/workflows/docs.yml`**:
```yaml
name: Documentation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install mkdocs-material vexy-mkdocs-output-as-input
      
      - name: Build with MkDocs
        run: mkdocs build
      
      - name: Process staged files
        run: python scripts/process_stage.py
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
```

### Docker Multi-Stage Build

**`Dockerfile`**:
```dockerfile
# Stage 1: MkDocs build
FROM python:3.11-slim as mkdocs-builder
WORKDIR /app
COPY requirements.txt .
RUN pip install -r requirements.txt
COPY docs/ docs/
COPY mkdocs.yml .
RUN mkdocs build

# Stage 2: Hugo build
FROM hugomods/hugo:latest as hugo-builder
WORKDIR /app
COPY --from=mkdocs-builder /app/stage ./content
COPY hugo.yaml .
RUN hugo

# Stage 3: Final image
FROM nginx:alpine
COPY --from=hugo-builder /app/public /usr/share/nginx/html
```

## Debugging Examples

### Verbose Mode

**Enable detailed logging**:
```yaml
plugins:
  - output-as-input:
      verbose: true
```

**Sample output**:
```
INFO - OutputAsInput: site_dir=/app/site, docs_dir=/app/docs
INFO - OutputAsInput: Captured source index.md
INFO - OutputAsInput: Captured source getting-started.md
INFO - OutputAsInput: Creating stage directory at /app/stage
INFO - OutputAsInput: Created cousin file /app/stage/index.md
INFO - OutputAsInput: Created cousin file /app/stage/getting-started.md
INFO - OutputAsInput: Processed 2/2 files
```

### Testing Different Selectors

**Test script** (`test_selectors.py`):
```python
from bs4 import BeautifulSoup
from pathlib import Path

html_file = Path("site/index.html")
html_content = html_file.read_text()
soup = BeautifulSoup(html_content, 'html.parser')

selectors = [
    'main',
    'article',
    'div.content',
    'div.md-content',
    '#content',
    'main.md-content'
]

for selector in selectors:
    element = soup.select_one(selector)
    if element:
        print(f"✓ {selector}: Found element with {len(element.get_text())} characters")
    else:
        print(f"✗ {selector}: No element found")
```

## Best Practices

1. **Start simple**: Begin with default settings and adjust as needed
2. **Use verbose mode**: Enable verbose logging during development
3. **Test selectors**: Verify your HTML element selector works across pages
4. **Backup frontmatter**: The plugin preserves frontmatter, but always keep backups
5. **Version control**: Keep both source and stage directories under version control
6. **Document your pipeline**: Create clear documentation for your processing steps

</document_content>
</document>

<document index="14">
<source>docs/getting-started.md</source>
<document_content>
---
title: Getting Started
description: Quick start guide for the MkDocs Output as Input plugin
---

# Getting Started

This guide will help you get up and running with the MkDocs Output as Input plugin.

## Installation

### From PyPI

```bash
pip install vexy-mkdocs-output-as-input
```

### From Source

```bash
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input
pip install -e .
```

## Basic Configuration

Add the plugin to your `mkdocs.yml` file:

```yaml
plugins:
  - search  # Keep your existing plugins
  - output-as-input
```

## Your First Build

1. **Create a simple Markdown file** with frontmatter:

   ```markdown
   ---
   title: My First Page
   author: Your Name
   date: 2025-01-14
   ---
   
   # My First Page
   
   This is some **markdown** content.
   ```

2. **Run MkDocs build**:

   ```bash
   mkdocs build
   ```

3. **Check the stage directory**:

   ```bash
   ls stage/
   ```

   You should see a cousin file with the same name as your source file.

## Verifying the Output

The cousin file will contain:

- **Original frontmatter** preserved exactly
- **Processed HTML content** extracted from the built site
- **Configurable HTML tag** wrapping the content

## Next Steps

- Learn about [configuration options](configuration.md)
- Explore [usage examples](examples.md)
- Check the [API reference](api.md)

## Troubleshooting

### Plugin Not Found

If you get an error about the plugin not being found:

```bash
pip install vexy-mkdocs-output-as-input
```

### No Output Files

Enable verbose mode to see what's happening:

```yaml
plugins:
  - output-as-input:
      verbose: true
```

### Permission Errors

Make sure you have write permissions in your project directory, or specify a different output directory:

```yaml
plugins:
  - output-as-input:
      stage_dir: /path/to/writable/directory
```

</document_content>
</document>

<document index="15">
<source>docs/index.md</source>
<document_content>
---
title: MkDocs Output as Input
description: Capture HTML output and create cousin Markdown files
---

# MkDocs Output as Input Plugin

Welcome to the documentation for the MkDocs Output as Input plugin! This plugin enables powerful post-processing workflows by capturing MkDocs HTML output and creating new Markdown files that preserve your original frontmatter.

## What does it do?

This plugin creates a bridge between MkDocs and other static site generators or processing pipelines:

```mermaid
graph LR
    A[Source Markdown<br/>with Frontmatter] --> B[MkDocs Build]
    B --> C[HTML Output]
    C --> D[Plugin Extracts<br/>Content]
    D --> E[Cousin Markdown<br/>with HTML + Frontmatter]
    E --> F[Further Processing]
```

## Quick Example

=== "Input (source.md)"

    ```markdown
    ---
    title: My Article
    date: 2025-01-14
    tags: [tutorial, mkdocs]
    ---
    
    # My Article
    
    This is my content with **Markdown** formatting.
    ```

=== "Output (stage/source.md)"

    ```markdown
    ---
    title: My Article
    date: 2025-01-14
    tags: [tutorial, mkdocs]
    ---
    
    <article class="md-content">
      <h1>My Article</h1>
      <p>This is my content with <strong>Markdown</strong> formatting.</p>
    </article>
    ```

## Key Features

- 🎯 **Preserves Frontmatter**: All your YAML metadata is maintained
- 🔍 **Selective Extraction**: Choose which HTML element to extract
- 🏷️ **Tag Transformation**: Convert extracted elements to different tags
- 📁 **Flexible Output**: Configure where cousin files are created
- 🐛 **Debug Support**: Verbose logging for troubleshooting

## Installation

```bash
pip install vexy-mkdocs-output-as-input
```

Then add to your `mkdocs.yml`:

```yaml
plugins:
  - output-as-input
```

## Next Steps

- [Getting Started](getting-started.md) - Set up your first configuration
- [Configuration](configuration.md) - Explore all options
- [Examples](examples.md) - See real-world use cases
- [API Reference](api.md) - Detailed plugin documentation
</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/example_pipeline.py
# Language: python

import os
import shutil
import subprocess
from pathlib import Path
import yaml
from bs4 import BeautifulSoup

def run_command((cmd, cwd=None)):
    """Run a command and print output."""

def step1_build_with_mkdocs(()):
    """Step 1: Build documentation with MkDocs and output-as-input plugin."""

def step2_process_staged_files(()):
    """Step 2: Process the staged files to add custom transformations."""

def step3_generate_final_docs(()):
    """Step 3: Generate final documentation from processed files."""

def main(()):
    """Run the complete pipeline."""


<document index="16">
<source>llms.txt</source>
<document_content>
Project Structure:
📁 vexy-mkdocs-output-as-input
├── 📁 .github
│   └── 📁 workflows
│       ├── 📄 ci.yml
│       └── 📄 release.yml
├── 📁 docs
│   ├── 📄 api.md
│   ├── 📄 configuration.md
│   ├── 📄 examples.md
│   ├── 📄 getting-started.md
│   └── 📄 index.md
├── 📁 src
│   └── 📁 mkdocs_output_as_input
│       ├── 📄 __init__.py
│       └── 📄 plugin.py
├── 📁 tests
│   └── 📄 test_plugin.py
├── 📄 .gitignore
├── 📄 AGENTS.md
├── 📄 CHANGELOG.md
├── 📄 CLAUDE.md
├── 📄 GEMINI.md
├── 📄 LICENSE
├── 📄 llms.txt
├── 📄 mkdocs.yml
├── 📄 pyproject.toml
├── 📄 README.md
└── 📄 TODO.md


<documents>
<document index="1">
<source>.github/workflows/ci.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run pre-commit
        if: matrix.python-version == '3.11'
        run: pre-commit run --all-files

      - name: Run tests
        run: |
          pytest -v --cov=mkdocs_output_as_input --cov-report=xml --cov-report=term

      - name: Upload coverage
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run ruff
        run: ruff check --output-format=github .

      - name: Run ruff format
        run: ruff format --check --diff .

      - name: Run mypy
        run: mypy src
</document_content>
</document>

<document index="2">
<source>.github/workflows/release.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write  # Required for PyPI trusted publishing

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mkdocs-output-as-input
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # Trusted publishing configured in PyPI project settings

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Extract changelog section
        id: changelog
        run: |
          version=${GITHUB_REF#refs/tags/v}
          awk "/## \[$version\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.changelog.outputs.version }}
          body_path: release_notes.md
          files: dist/*
          draft: false
          prerelease: false
</document_content>
</document>

<document index="3">
<source>.gitignore</source>
<document_content>
# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
venv/
ENV/
env/
.venv
.env

# pyenv
.python-version

# pipenv
Pipfile.lock

# Poetry
poetry.lock

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# pytest
.pytest_cache/
.coverage
htmlcov/
.tox/
coverage.xml
*.cover
.hypothesis/

# Jupyter Notebook
.ipynb_checkpoints

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# MkDocs
site/
stage/
.cache/

# setuptools-scm
src/mkdocs_output_as_input/_version.py
</document_content>
</document>

<document index="4">
<source>AGENTS.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="5">
<source>CHANGELOG.md</source>
<document_content>
# Changelog

All notable changes to vexy-mkdocs-output-as-input will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [Unreleased]

## [0.2.0] - 2025-01-14

### Changed
- **BREAKING**: Migrated to src-layout package structure
- **BREAKING**: Minimum Python version is now 3.9
- Switched from Loguru to standard library logging for better integration
- Modernized packaging with PEP 621 compliant pyproject.toml
- Improved type hints throughout the codebase

### Added
- Comprehensive test suite with >90% coverage
- Pre-commit hooks for code quality
- GitHub Actions CI/CD workflows
- Support for Python 3.9, 3.10, 3.11, and 3.12
- Automated release process with trusted PyPI publishing
- Development documentation in README

### Fixed
- Better error handling for missing files
- Graceful handling of invalid YAML frontmatter
- Improved logging messages for debugging

## [0.1.0] - 2025-01-10

### Added
- Initial release of vexy-mkdocs-output-as-input plugin
- Core functionality to capture HTML output and create cousin Markdown files
- Configurable stage directory for output files
- Configurable HTML element extraction (default: `<main>`)
- Configurable target tag transformation (default: `<article>`)
- Preservation of original YAML frontmatter
- Verbose logging mode for debugging
- Basic documentation and examples

[Unreleased]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.2.0...HEAD
[0.2.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.1.0...v0.2.0
[0.1.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/releases/tag/v0.1.0
</document_content>
</document>

<document index="6">
<source>CLAUDE.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="7">
<source>GEMINI.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="8">
<source>LICENSE</source>
<document_content>
MIT License

Copyright (c) 2025 MkDocs Output as Input Contributors

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</document_content>
</document>

<document index="9">
<source>README.md</source>
<document_content>
# vexy-mkdocs-output-as-input

[![PyPI version](https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)
[![CI](https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg)](https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg)](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Python versions](https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)

A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.

## Features

This plugin enables powerful post-processing workflows by:

1. ✅ Preserving your original Markdown structure and frontmatter
2. ✅ Capturing the fully-rendered HTML output from MkDocs
3. ✅ Creating new Markdown files that combine original metadata with processed HTML
4. ✅ Enabling further processing by other static site generators

## Installation

Install from PyPI:

```bash
uv pip install --system --upgrade vexy-mkdocs-output-as-input
```

Or install from source:

```bash
pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input
```

## Quick Start

Add the plugin to your `mkdocs.yml`:

```yaml
plugins:
  - search  # Other plugins
  - output-as-input
```

Build your site:

```bash
mkdocs build
```

Find your processed files in the `stage/` directory (relative to your MkDocs project root).

## Configuration

All configuration options with their defaults:

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory name (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      verbose: false            # Enable verbose logging (default: false)
```

### Options Explained

| Option | Type | Default | Description |
|--------|------|---------|-------------|
| `stage_dir` | string | `"stage"` | Directory name for output files (relative to project root) |
| `html_element` | string | `"main"` | CSS selector for the HTML element to extract |
| `target_tag` | string | `"article"` | HTML tag to use in the output (replaces extracted element's tag) |
| `verbose` | boolean | `false` | Enable detailed logging for debugging |

## How It Works

### Input → Process → Output

1. **Input**: Your source Markdown with frontmatter
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   # My Page
   
   This is my content with **markdown**.
   ```

2. **MkDocs Processing**: Renders to HTML as usual
   ```html
   <main class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </main>
   ```

3. **Output**: Cousin file with preserved frontmatter + extracted HTML
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   <article class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </article>
   ```

## Use Cases

### 🔄 Multi-Stage Documentation Pipeline

Process documentation through MkDocs first, then feed to another SSG:

```yaml
# mkdocs.yml
plugins:
  - output-as-input:
      stage_dir: hugo/content

# Then run:
# mkdocs build && hugo build
```

### 📝 Content Extraction

Extract just the article content without theme wrapper:

```yaml
plugins:
  - output-as-input:
      html_element: article
      target_tag: div
```

### 🎨 Custom Post-Processing

Preserve MkDocs rendering while preparing for custom templates:

```yaml
plugins:
  - output-as-input:
      stage_dir: _includes
      html_element: main
      target_tag: section
```

## Examples

### Basic Example

```yaml
# mkdocs.yml
site_name: My Documentation
plugins:
  - output-as-input
```

### Advanced Example

```yaml
# mkdocs.yml
site_name: My Documentation
theme:
  name: material

plugins:
  - search
  - output-as-input:
      stage_dir: processed
      html_element: article.md-content__inner
      target_tag: main
      verbose: true

# Process specific content area from Material theme
```

### Integration Example

Using with other tools in a documentation pipeline:

```bash
#!/bin/bash
# build.sh

# Stage 1: Build with MkDocs + plugins
mkdocs build

# Stage 2: Process staged output
python post_process.py stage/

# Stage 3: Build final site
hugo --contentDir=stage/
```

## Development

### Setup Development Environment

```bash
# Clone the repository
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input

# Create virtual environment
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install in development mode
pip install -e .[dev]

# Install pre-commit hooks
pre-commit install
```

### Running Tests

```bash
# Run all tests
pytest

# Run with coverage
pytest --cov=mkdocs_output_as_input --cov-report=html

# Run specific test
pytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
```

### Code Quality

```bash
# Format code
black src tests

# Lint code
ruff check src tests

# Type check
mypy src
```

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Support

- 📧 Email: you@example.com
- 🐛 Issues: [GitHub Issues](https://github.com/vexyart/vexy-mkdocs-output-as-input/issues)
- 💬 Discussions: [GitHub Discussions](https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions)
</document_content>
</document>

<document index="10">
<source>TODO.md</source>
<document_content>
# TODO

## High Priority - COMPLETED ✅

- [x] Fix broken plugin.py - methods are missing implementation and have syntax errors
- [x] Fix broken test_plugin.py - methods are missing implementation

## Medium Priority - COMPLETED ✅

- [x] Add missing documentation pages referenced in mkdocs.yml nav
- [x] Add pre-commit configuration file
- [x] Ensure git-tag-based VCS versioning with hatch is working
- [x] Improve error handling and logging throughout plugin

## Low Priority - COMPLETED ✅

- [x] Update CI workflow to use ruff format instead of black

## Remaining Tasks

- [ ] Add integration tests for real MkDocs builds

## Summary

The MkDocs plugin is now fully functional with:
- ✅ Working plugin implementation with proper MkDocs hooks
- ✅ Comprehensive test suite with 91%+ coverage
- ✅ Complete documentation (getting-started.md, configuration.md, examples.md, api.md)
- ✅ Working CI/CD pipeline with GitHub Actions
- ✅ Pre-commit hooks for code quality
- ✅ Proper type hints and linting
- ✅ Git-tag based versioning with hatch
- ✅ Error handling and logging

The plugin successfully captures HTML output from MkDocs builds and creates "cousin" Markdown files with preserved frontmatter and extracted HTML content.

</document_content>
</document>

<document index="11">
<source>docs/api.md</source>
<document_content>
---
title: API Reference
description: Complete API reference for the MkDocs Output as Input plugin
---

# API Reference

This page provides detailed API documentation for the MkDocs Output as Input plugin.

## Plugin Class

::: mkdocs_output_as_input.plugin.OutputAsInputPlugin

## Configuration Schema

The plugin accepts the following configuration options:

### stage_dir

**Type**: `str`  
**Default**: `"stage"`

Directory name for output files, relative to the project root.

### html_element

**Type**: `str`  
**Default**: `"main"`

CSS selector for the HTML element to extract from built pages.

### target_tag

**Type**: `str`  
**Default**: `"article"`

HTML tag to use in the output file (replaces the extracted element's tag).

### verbose

**Type**: `bool`  
**Default**: `False`

Enable detailed logging for debugging.

## Plugin Methods

### on_config

**Signature**: `on_config(self, config: dict[str, Any]) -> dict[str, Any]`

Called when MkDocs configuration is loaded. Stores site and docs directories for later use.

**Parameters**:
- `config`: The MkDocs configuration dictionary

**Returns**:
- The unmodified configuration dictionary

### on_page_read_source

**Signature**: `on_page_read_source(self, page: Page, config: dict[str, Any]) -> Optional[str]`

Called when MkDocs reads a source file. Captures the source content and frontmatter.

**Parameters**:
- `page`: The MkDocs Page object
- `config`: The MkDocs configuration dictionary

**Returns**:
- `None` (allows MkDocs to continue with original processing)

### on_post_build

**Signature**: `on_post_build(self, config: dict[str, Any]) -> None`

Called after MkDocs completes the build. Processes HTML files and creates cousin Markdown files.

**Parameters**:
- `config`: The MkDocs configuration dictionary

**Returns**:
- `None`

### _process_file

**Signature**: `_process_file(self, src_path: str, file_info: dict[str, Any], stage_dir: Path) -> None`

Internal method to process a single file: extract HTML and create cousin Markdown.

**Parameters**:
- `src_path`: Path to the source file relative to docs directory
- `file_info`: Dictionary containing frontmatter and source file path
- `stage_dir`: Path to the stage directory

**Returns**:
- `None`

## Usage Examples

### Basic Plugin Usage

```python
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

# Create plugin instance
plugin = OutputAsInputPlugin()

# Configure plugin
plugin.config = {
    "stage_dir": "custom_stage",
    "html_element": "article",
    "target_tag": "div",
    "verbose": True,
}
```

### Manual Processing

```python
from pathlib import Path
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

# Initialize plugin
plugin = OutputAsInputPlugin()
plugin.config = {
    "stage_dir": "stage",
    "html_element": "main",
    "target_tag": "article",
    "verbose": False,
}

# Set up directories
plugin.site_dir = Path("site")
plugin.docs_dir = Path("docs")

# Process a file manually
file_info = {
    "frontmatter": {"title": "Test Page"},
    "abs_src_path": "/path/to/source.md",
}
stage_dir = Path("stage")
stage_dir.mkdir(exist_ok=True)

plugin._process_file("test.md", file_info, stage_dir)
```

## Error Handling

The plugin includes comprehensive error handling:

### File Read Errors

```python
try:
    with open(page.file.abs_src_path, encoding="utf-8") as f:
        content = f.read()
except Exception as e:
    logger.error(f"OutputAsInput: Failed to read {src_path}: {e}")
    return None
```

### YAML Parse Errors

```python
try:
    frontmatter = yaml.safe_load(fm_text) or {}
except yaml.YAMLError as e:
    logger.warning(f"OutputAsInput: Failed to parse frontmatter in {src_path}: {e}")
```

### HTML Processing Errors

```python
try:
    with open(full_html_path, encoding="utf-8") as f:
        html_content = f.read()
except Exception as e:
    logger.error(f"OutputAsInput: Failed to read HTML {full_html_path}: {e}")
    return
```

## Logging

The plugin uses Python's standard logging module. Enable verbose mode to see detailed output:

```yaml
plugins:
  - output-as-input:
      verbose: true
```

**Log levels**:
- `INFO`: General information about processing
- `WARNING`: Non-fatal issues (missing HTML elements, YAML parse errors)
- `ERROR`: Fatal errors that prevent processing

## Dependencies

The plugin requires the following dependencies:

- `mkdocs>=1.6.0`
- `beautifulsoup4>=4.12.0`
- `pyyaml>=6.0`

## Version Information

The plugin version is managed by `setuptools-scm` and available as:

```python
from mkdocs_output_as_input import __version__
print(__version__)
```

## Thread Safety

The plugin is designed to be thread-safe and can handle concurrent MkDocs builds. Each plugin instance maintains its own state in the `source_files` dictionary.

## Performance Considerations

- The plugin processes files sequentially during the `on_post_build` phase
- Memory usage scales with the number of source files
- HTML parsing is done using BeautifulSoup4's built-in parser for consistency
- File I/O is optimized with proper encoding handling

## Extension Points

The plugin can be extended by subclassing `OutputAsInputPlugin`:

```python
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

class CustomOutputPlugin(OutputAsInputPlugin):
    def _process_file(self, src_path, file_info, stage_dir):
        # Custom processing logic
        super()._process_file(src_path, file_info, stage_dir)
        
        # Additional post-processing
        cousin_path = stage_dir / src_path
        if cousin_path.exists():
            content = cousin_path.read_text()
            # Modify content as needed
            cousin_path.write_text(modified_content)
```

</document_content>
</document>

<document index="12">
<source>docs/configuration.md</source>
<document_content>
---
title: Configuration
description: Complete configuration reference for the MkDocs Output as Input plugin
---

# Configuration

The MkDocs Output as Input plugin provides several configuration options to customize its behavior.

## Basic Configuration

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      verbose: false           # Enable verbose logging (default: false)
```

## Configuration Options

### `stage_dir`

- **Type**: `string`
- **Default**: `"stage"`
- **Description**: Directory name for output files, relative to your project root

**Example**:
```yaml
plugins:
  - output-as-input:
      stage_dir: processed
```

This creates cousin files in a `processed/` directory instead of `stage/`.

### `html_element`

- **Type**: `string`
- **Default**: `"main"`
- **Description**: CSS selector for the HTML element to extract from the built pages

**Common values**:
- `"main"` - Extract the main content area
- `"article"` - Extract article elements
- `"div.content"` - Extract divs with class "content"
- `"#content"` - Extract element with id "content"

**Example**:
```yaml
plugins:
  - output-as-input:
      html_element: article.post-content
```

### `target_tag`

- **Type**: `string`
- **Default**: `"article"`
- **Description**: HTML tag to use in the output file (replaces the extracted element's tag)

**Example**:
```yaml
plugins:
  - output-as-input:
      html_element: main
      target_tag: section
```

This extracts `<main>` elements and converts them to `<section>` in the output.

### `verbose`

- **Type**: `boolean`
- **Default**: `false`
- **Description**: Enable detailed logging for debugging

**Example**:
```yaml
plugins:
  - output-as-input:
      verbose: true
```

## Configuration Examples

### Material Theme

For the Material theme, you might want to extract the inner content:

```yaml
plugins:
  - output-as-input:
      html_element: article.md-content__inner
      target_tag: div
```

### Custom Output Directory

```yaml
plugins:
  - output-as-input:
      stage_dir: hugo/content
      html_element: main
      target_tag: article
```

### Debug Mode

```yaml
plugins:
  - output-as-input:
      verbose: true
```

## Advanced Usage

### Multiple Processing Steps

You can use the plugin in a multi-step build process:

1. **MkDocs build** with output-as-input plugin
2. **Custom processing** of the stage directory
3. **Secondary build** with another static site generator

```bash
#!/bin/bash
# Build with MkDocs
mkdocs build

# Post-process the staged files
python process_stage.py

# Build with Hugo
hugo --contentDir=stage/
```

### Theme Compatibility

The plugin should work with any MkDocs theme. For best results:

1. Inspect your theme's HTML structure
2. Identify the main content element
3. Configure `html_element` accordingly

**Finding the right element**:
1. Build your site normally
2. Open a page in your browser
3. Use developer tools to inspect the HTML
4. Look for the element containing your content

## Troubleshooting

### No Output Files

If no cousin files are created:

1. Enable verbose mode
2. Check that HTML files exist in the site directory
3. Verify that the `html_element` selector matches your theme

### Empty Output Files

If cousin files are empty:

1. Check that the `html_element` selector is correct
2. Verify that the element exists in your HTML output
3. Try a more general selector like `"body"` for testing

### Permission Errors

If you get permission errors:

1. Ensure the project directory is writable
2. Try a different `stage_dir` location
3. Check file system permissions

</document_content>
</document>

<document index="13">
<source>docs/examples.md</source>
<document_content>
---
title: Examples
description: Real-world usage examples for the MkDocs Output as Input plugin
---

# Examples

This page provides practical examples of how to use the MkDocs Output as Input plugin in various scenarios.

## Basic Usage

### Simple Blog Post Processing

**Input** (`docs/posts/my-post.md`):
```markdown
---
title: My Blog Post
date: 2025-01-14
author: Jane Doe
tags: [python, documentation]
---

# My Blog Post

This is a **markdown** blog post with some content.
```

**Configuration** (`mkdocs.yml`):
```yaml
plugins:
  - output-as-input
```

**Output** (`stage/posts/my-post.md`):
```markdown
---
title: My Blog Post
date: 2025-01-14
author: Jane Doe
tags: [python, documentation]
---

<article class="md-content">
  <h1>My Blog Post</h1>
  <p>This is a <strong>markdown</strong> blog post with some content.</p>
</article>
```

## Multi-Stage Documentation Pipeline

### MkDocs → Hugo Pipeline

**Scenario**: Use MkDocs for authoring and Hugo for final site generation.

**MkDocs Configuration** (`mkdocs.yml`):
```yaml
site_name: My Documentation
theme:
  name: material

plugins:
  - search
  - output-as-input:
      stage_dir: hugo/content
      html_element: main
      target_tag: div
```

**Hugo Configuration** (`hugo.yaml`):
```yaml
contentDir: hugo/content
baseURL: https://example.com
```

**Build Script** (`build.sh`):
```bash
#!/bin/bash
set -e

echo "Building with MkDocs..."
mkdocs build

echo "Processing with Hugo..."
hugo --contentDir=hugo/content

echo "Done!"
```

### MkDocs → Jekyll Pipeline

**Configuration** (`mkdocs.yml`):
```yaml
plugins:
  - output-as-input:
      stage_dir: _posts
      html_element: article
      target_tag: div
```

**Post-processing** (`process.py`):
```python
import os
import re
from pathlib import Path

# Convert MkDocs output to Jekyll format
for md_file in Path("_posts").glob("**/*.md"):
    content = md_file.read_text()
    
    # Add Jekyll layout to frontmatter
    content = re.sub(
        r'(---\n.*?)\n---',
        r'\1\nlayout: post\n---',
        content,
        flags=re.DOTALL
    )
    
    md_file.write_text(content)
```

## Theme-Specific Examples

### Material Theme

**Extract inner content**:
```yaml
plugins:
  - output-as-input:
      html_element: article.md-content__inner
      target_tag: section
```

### ReadTheDocs Theme

**Extract main content**:
```yaml
plugins:
  - output-as-input:
      html_element: div.rst-content
      target_tag: article
```

### Custom Theme

**For a custom theme with specific structure**:
```yaml
plugins:
  - output-as-input:
      html_element: div.content-wrapper > div.main-content
      target_tag: main
```

## Content Processing Examples

### API Documentation

**Input** (`docs/api/users.md`):
```markdown
---
title: User API
api_version: v1
endpoint: /api/users
---

# User API

The User API allows you to manage users.

## GET /api/users

Returns a list of users.
```

**Configuration**:
```yaml
plugins:
  - mkdocstrings
  - output-as-input:
      stage_dir: api_docs
      html_element: main
      target_tag: section
```

### Tutorial Series

**Input** (`docs/tutorials/setup.md`):
```markdown
---
title: Setup Tutorial
series: getting-started
order: 1
difficulty: beginner
---

# Setup Tutorial

This tutorial will guide you through the setup process.
```

**Post-processing** to group by series:
```python
import yaml
from pathlib import Path
from collections import defaultdict

# Group tutorials by series
series_map = defaultdict(list)

for md_file in Path("stage/tutorials").glob("*.md"):
    with open(md_file) as f:
        content = f.read()
        
    # Extract frontmatter
    if content.startswith('---'):
        _, fm_text, body = content.split('---', 2)
        frontmatter = yaml.safe_load(fm_text)
        series = frontmatter.get('series', 'misc')
        
        series_map[series].append({
            'file': md_file,
            'title': frontmatter.get('title'),
            'order': frontmatter.get('order', 999)
        })

# Create index files for each series
for series, tutorials in series_map.items():
    tutorials.sort(key=lambda x: x['order'])
    
    index_content = f"# {series.title()} Series\n\n"
    for tutorial in tutorials:
        index_content += f"- [{tutorial['title']}]({tutorial['file'].name})\n"
    
    (Path("stage/tutorials") / f"{series}-index.md").write_text(index_content)
```

## Integration Examples

### GitHub Actions Workflow

**`.github/workflows/docs.yml`**:
```yaml
name: Documentation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install mkdocs-material vexy-mkdocs-output-as-input
      
      - name: Build with MkDocs
        run: mkdocs build
      
      - name: Process staged files
        run: python scripts/process_stage.py
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
```

### Docker Multi-Stage Build

**`Dockerfile`**:
```dockerfile
# Stage 1: MkDocs build
FROM python:3.11-slim as mkdocs-builder
WORKDIR /app
COPY requirements.txt .
RUN pip install -r requirements.txt
COPY docs/ docs/
COPY mkdocs.yml .
RUN mkdocs build

# Stage 2: Hugo build
FROM hugomods/hugo:latest as hugo-builder
WORKDIR /app
COPY --from=mkdocs-builder /app/stage ./content
COPY hugo.yaml .
RUN hugo

# Stage 3: Final image
FROM nginx:alpine
COPY --from=hugo-builder /app/public /usr/share/nginx/html
```

## Debugging Examples

### Verbose Mode

**Enable detailed logging**:
```yaml
plugins:
  - output-as-input:
      verbose: true
```

**Sample output**:
```
INFO - OutputAsInput: site_dir=/app/site, docs_dir=/app/docs
INFO - OutputAsInput: Captured source index.md
INFO - OutputAsInput: Captured source getting-started.md
INFO - OutputAsInput: Creating stage directory at /app/stage
INFO - OutputAsInput: Created cousin file /app/stage/index.md
INFO - OutputAsInput: Created cousin file /app/stage/getting-started.md
INFO - OutputAsInput: Processed 2/2 files
```

### Testing Different Selectors

**Test script** (`test_selectors.py`):
```python
from bs4 import BeautifulSoup
from pathlib import Path

html_file = Path("site/index.html")
html_content = html_file.read_text()
soup = BeautifulSoup(html_content, 'html.parser')

selectors = [
    'main',
    'article',
    'div.content',
    'div.md-content',
    '#content',
    'main.md-content'
]

for selector in selectors:
    element = soup.select_one(selector)
    if element:
        print(f"✓ {selector}: Found element with {len(element.get_text())} characters")
    else:
        print(f"✗ {selector}: No element found")
```

## Best Practices

1. **Start simple**: Begin with default settings and adjust as needed
2. **Use verbose mode**: Enable verbose logging during development
3. **Test selectors**: Verify your HTML element selector works across pages
4. **Backup frontmatter**: The plugin preserves frontmatter, but always keep backups
5. **Version control**: Keep both source and stage directories under version control
6. **Document your pipeline**: Create clear documentation for your processing steps

</document_content>
</document>

<document index="14">
<source>docs/getting-started.md</source>
<document_content>
---
title: Getting Started
description: Quick start guide for the MkDocs Output as Input plugin
---

# Getting Started

This guide will help you get up and running with the MkDocs Output as Input plugin.

## Installation

### From PyPI

```bash
pip install vexy-mkdocs-output-as-input
```

### From Source

```bash
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input
pip install -e .
```

## Basic Configuration

Add the plugin to your `mkdocs.yml` file:

```yaml
plugins:
  - search  # Keep your existing plugins
  - output-as-input
```

## Your First Build

1. **Create a simple Markdown file** with frontmatter:

   ```markdown
   ---
   title: My First Page
   author: Your Name
   date: 2025-01-14
   ---
   
   # My First Page
   
   This is some **markdown** content.
   ```

2. **Run MkDocs build**:

   ```bash
   mkdocs build
   ```

3. **Check the stage directory**:

   ```bash
   ls stage/
   ```

   You should see a cousin file with the same name as your source file.

## Verifying the Output

The cousin file will contain:

- **Original frontmatter** preserved exactly
- **Processed HTML content** extracted from the built site
- **Configurable HTML tag** wrapping the content

## Next Steps

- Learn about [configuration options](configuration.md)
- Explore [usage examples](examples.md)
- Check the [API reference](api.md)

## Troubleshooting

### Plugin Not Found

If you get an error about the plugin not being found:

```bash
pip install vexy-mkdocs-output-as-input
```

### No Output Files

Enable verbose mode to see what's happening:

```yaml
plugins:
  - output-as-input:
      verbose: true
```

### Permission Errors

Make sure you have write permissions in your project directory, or specify a different output directory:

```yaml
plugins:
  - output-as-input:
      stage_dir: /path/to/writable/directory
```

</document_content>
</document>

<document index="15">
<source>docs/index.md</source>
<document_content>
---
title: MkDocs Output as Input
description: Capture HTML output and create cousin Markdown files
---

# MkDocs Output as Input Plugin

Welcome to the documentation for the MkDocs Output as Input plugin! This plugin enables powerful post-processing workflows by capturing MkDocs HTML output and creating new Markdown files that preserve your original frontmatter.

## What does it do?

This plugin creates a bridge between MkDocs and other static site generators or processing pipelines:

```mermaid
graph LR
    A[Source Markdown<br/>with Frontmatter] --> B[MkDocs Build]
    B --> C[HTML Output]
    C --> D[Plugin Extracts<br/>Content]
    D --> E[Cousin Markdown<br/>with HTML + Frontmatter]
    E --> F[Further Processing]
```

## Quick Example

=== "Input (source.md)"

    ```markdown
    ---
    title: My Article
    date: 2025-01-14
    tags: [tutorial, mkdocs]
    ---
    
    # My Article
    
    This is my content with **Markdown** formatting.
    ```

=== "Output (stage/source.md)"

    ```markdown
    ---
    title: My Article
    date: 2025-01-14
    tags: [tutorial, mkdocs]
    ---
    
    <article class="md-content">
      <h1>My Article</h1>
      <p>This is my content with <strong>Markdown</strong> formatting.</p>
    </article>
    ```

## Key Features

- 🎯 **Preserves Frontmatter**: All your YAML metadata is maintained
- 🔍 **Selective Extraction**: Choose which HTML element to extract
- 🏷️ **Tag Transformation**: Convert extracted elements to different tags
- 📁 **Flexible Output**: Configure where cousin files are created
- 🐛 **Debug Support**: Verbose logging for troubleshooting

## Installation

```bash
pip install vexy-mkdocs-output-as-input
```

Then add to your `mkdocs.yml`:

```yaml
plugins:
  - output-as-input
```

## Next Steps

- [Getting Started](getting-started.md) - Set up your first configuration
- [Configuration](configuration.md) - Explore all options
- [Examples](examples.md) - See real-world use cases
- [API Reference](api.md) - Detailed plugin documentation
</document_content>
</document>

<document index="16">
<source>llms.txt</source>
<document_content>
Project Structure:
📁 vexy-mkdocs-output-as-input
├── 📁 .github
│   └── 📁 workflows
│       ├── 📄 ci.yml
│       └── 📄 release.yml
├── 📁 docs
│   ├── 📄 api.md
│   ├── 📄 configuration.md
│   ├── 📄 examples.md
│   ├── 📄 getting-started.md
│   └── 📄 index.md
├── 📁 src
│   └── 📁 mkdocs_output_as_input
│       ├── 📄 __init__.py
│       └── 📄 plugin.py
├── 📁 tests
│   └── 📄 test_plugin.py
├── 📄 .gitignore
├── 📄 AGENTS.md
├── 📄 CHANGELOG.md
├── 📄 CLAUDE.md
├── 📄 GEMINI.md
├── 📄 LICENSE
├── 📄 llms.txt
├── 📄 mkdocs.yml
├── 📄 pyproject.toml
├── 📄 README.md
└── 📄 TODO.md


<documents>
<document index="1">
<source>.github/workflows/ci.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run pre-commit
        if: matrix.python-version == '3.11'
        run: pre-commit run --all-files

      - name: Run tests
        run: |
          pytest -v --cov=mkdocs_output_as_input --cov-report=xml --cov-report=term

      - name: Upload coverage
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run ruff
        run: ruff check --output-format=github .

      - name: Run ruff format
        run: ruff format --check --diff .

      - name: Run mypy
        run: mypy src
</document_content>
</document>

<document index="2">
<source>.github/workflows/release.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write  # Required for PyPI trusted publishing

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mkdocs-output-as-input
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # Trusted publishing configured in PyPI project settings

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Extract changelog section
        id: changelog
        run: |
          version=${GITHUB_REF#refs/tags/v}
          awk "/## \[$version\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.changelog.outputs.version }}
          body_path: release_notes.md
          files: dist/*
          draft: false
          prerelease: false
</document_content>
</document>

<document index="3">
<source>.gitignore</source>
<document_content>
# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
venv/
ENV/
env/
.venv
.env

# pyenv
.python-version

# pipenv
Pipfile.lock

# Poetry
poetry.lock

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# pytest
.pytest_cache/
.coverage
htmlcov/
.tox/
coverage.xml
*.cover
.hypothesis/

# Jupyter Notebook
.ipynb_checkpoints

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# MkDocs
site/
stage/
.cache/

# setuptools-scm
src/mkdocs_output_as_input/_version.py
</document_content>
</document>

<document index="4">
<source>AGENTS.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="5">
<source>CHANGELOG.md</source>
<document_content>
# Changelog

All notable changes to vexy-mkdocs-output-as-input will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [Unreleased]

## [0.2.0] - 2025-01-14

### Changed
- **BREAKING**: Migrated to src-layout package structure
- **BREAKING**: Minimum Python version is now 3.9
- Switched from Loguru to standard library logging for better integration
- Modernized packaging with PEP 621 compliant pyproject.toml
- Improved type hints throughout the codebase

### Added
- Comprehensive test suite with >90% coverage
- Pre-commit hooks for code quality
- GitHub Actions CI/CD workflows
- Support for Python 3.9, 3.10, 3.11, and 3.12
- Automated release process with trusted PyPI publishing
- Development documentation in README

### Fixed
- Better error handling for missing files
- Graceful handling of invalid YAML frontmatter
- Improved logging messages for debugging

## [0.1.0] - 2025-01-10

### Added
- Initial release of vexy-mkdocs-output-as-input plugin
- Core functionality to capture HTML output and create cousin Markdown files
- Configurable stage directory for output files
- Configurable HTML element extraction (default: `<main>`)
- Configurable target tag transformation (default: `<article>`)
- Preservation of original YAML frontmatter
- Verbose logging mode for debugging
- Basic documentation and examples

[Unreleased]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.2.0...HEAD
[0.2.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.1.0...v0.2.0
[0.1.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/releases/tag/v0.1.0
</document_content>
</document>

<document index="6">
<source>CLAUDE.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="7">
<source>GEMINI.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="8">
<source>LICENSE</source>
<document_content>
MIT License

Copyright (c) 2025 MkDocs Output as Input Contributors

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</document_content>
</document>

<document index="9">
<source>README.md</source>
<document_content>
# vexy-mkdocs-output-as-input

[![PyPI version](https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)
[![CI](https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg)](https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg)](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Python versions](https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)

A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.

## Features

This plugin enables powerful post-processing workflows by:

1. ✅ Preserving your original Markdown structure and frontmatter
2. ✅ Capturing the fully-rendered HTML output from MkDocs
3. ✅ Creating new Markdown files that combine original metadata with processed HTML
4. ✅ Enabling further processing by other static site generators

## Installation

Install from PyPI:

```bash
uv pip install --system --upgrade vexy-mkdocs-output-as-input
```

Or install from source:

```bash
pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input
```

## Quick Start

Add the plugin to your `mkdocs.yml`:

```yaml
plugins:
  - search  # Other plugins
  - output-as-input
```

Build your site:

```bash
mkdocs build
```

Find your processed files in the `stage/` directory (relative to your MkDocs project root).

## Configuration

All configuration options with their defaults:

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory name (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      verbose: false            # Enable verbose logging (default: false)
```

### Options Explained

| Option | Type | Default | Description |
|--------|------|---------|-------------|
| `stage_dir` | string | `"stage"` | Directory name for output files (relative to project root) |
| `html_element` | string | `"main"` | CSS selector for the HTML element to extract |
| `target_tag` | string | `"article"` | HTML tag to use in the output (replaces extracted element's tag) |
| `verbose` | boolean | `false` | Enable detailed logging for debugging |

## How It Works

### Input → Process → Output

1. **Input**: Your source Markdown with frontmatter
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   # My Page
   
   This is my content with **markdown**.
   ```

2. **MkDocs Processing**: Renders to HTML as usual
   ```html
   <main class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </main>
   ```

3. **Output**: Cousin file with preserved frontmatter + extracted HTML
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   <article class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </article>
   ```

## Use Cases

### 🔄 Multi-Stage Documentation Pipeline

Process documentation through MkDocs first, then feed to another SSG:

```yaml
# mkdocs.yml
plugins:
  - output-as-input:
      stage_dir: hugo/content

# Then run:
# mkdocs build && hugo build
```

### 📝 Content Extraction

Extract just the article content without theme wrapper:

```yaml
plugins:
  - output-as-input:
      html_element: article
      target_tag: div
```

### 🎨 Custom Post-Processing

Preserve MkDocs rendering while preparing for custom templates:

```yaml
plugins:
  - output-as-input:
      stage_dir: _includes
      html_element: main
      target_tag: section
```

## Examples

### Basic Example

```yaml
# mkdocs.yml
site_name: My Documentation
plugins:
  - output-as-input
```

### Advanced Example

```yaml
# mkdocs.yml
site_name: My Documentation
theme:
  name: material

plugins:
  - search
  - output-as-input:
      stage_dir: processed
      html_element: article.md-content__inner
      target_tag: main
      verbose: true

# Process specific content area from Material theme
```

### Integration Example

Using with other tools in a documentation pipeline:

```bash
#!/bin/bash
# build.sh

# Stage 1: Build with MkDocs + plugins
mkdocs build

# Stage 2: Process staged output
python post_process.py stage/

# Stage 3: Build final site
hugo --contentDir=stage/
```

## Development

### Setup Development Environment

```bash
# Clone the repository
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input

# Create virtual environment
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install in development mode
pip install -e .[dev]

# Install pre-commit hooks
pre-commit install
```

### Running Tests

```bash
# Run all tests
pytest

# Run with coverage
pytest --cov=mkdocs_output_as_input --cov-report=html

# Run specific test
pytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
```

### Code Quality

```bash
# Format code
black src tests

# Lint code
ruff check src tests

# Type check
mypy src
```

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Support

- 📧 Email: you@example.com
- 🐛 Issues: [GitHub Issues](https://github.com/vexyart/vexy-mkdocs-output-as-input/issues)
- 💬 Discussions: [GitHub Discussions](https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions)
</document_content>
</document>

<document index="10">
<source>TODO.md</source>
<document_content>
# TODO

## High Priority

- [ ] Fix broken plugin.py - methods are missing implementation and have syntax errors
- [ ] Fix broken test_plugin.py - methods are missing implementation

## Medium Priority

- [ ] Add missing documentation pages referenced in mkdocs.yml nav
- [ ] Add pre-commit configuration file
- [ ] Ensure git-tag-based VCS versioning with hatch is working
- [ ] Improve error handling and logging throughout plugin

## Low Priority

- [ ] Update CI workflow to use ruff format instead of black
- [ ] Add integration tests for real MkDocs builds

</document_content>
</document>

<document index="11">
<source>docs/api.md</source>
<document_content>
---
title: API Reference
description: Complete API reference for the MkDocs Output as Input plugin
---

# API Reference

This page provides detailed API documentation for the MkDocs Output as Input plugin.

## Plugin Class

::: mkdocs_output_as_input.plugin.OutputAsInputPlugin

## Configuration Schema

The plugin accepts the following configuration options:

### stage_dir

**Type**: `str`  
**Default**: `"stage"`

Directory name for output files, relative to the project root.

### html_element

**Type**: `str`  
**Default**: `"main"`

CSS selector for the HTML element to extract from built pages.

### target_tag

**Type**: `str`  
**Default**: `"article"`

HTML tag to use in the output file (replaces the extracted element's tag).

### verbose

**Type**: `bool`  
**Default**: `False`

Enable detailed logging for debugging.

## Plugin Methods

### on_config

**Signature**: `on_config(self, config: dict[str, Any]) -> dict[str, Any]`

Called when MkDocs configuration is loaded. Stores site and docs directories for later use.

**Parameters**:
- `config`: The MkDocs configuration dictionary

**Returns**:
- The unmodified configuration dictionary

### on_page_read_source

**Signature**: `on_page_read_source(self, page: Page, config: dict[str, Any]) -> Optional[str]`

Called when MkDocs reads a source file. Captures the source content and frontmatter.

**Parameters**:
- `page`: The MkDocs Page object
- `config`: The MkDocs configuration dictionary

**Returns**:
- `None` (allows MkDocs to continue with original processing)

### on_post_build

**Signature**: `on_post_build(self, config: dict[str, Any]) -> None`

Called after MkDocs completes the build. Processes HTML files and creates cousin Markdown files.

**Parameters**:
- `config`: The MkDocs configuration dictionary

**Returns**:
- `None`

### _process_file

**Signature**: `_process_file(self, src_path: str, file_info: dict[str, Any], stage_dir: Path) -> None`

Internal method to process a single file: extract HTML and create cousin Markdown.

**Parameters**:
- `src_path`: Path to the source file relative to docs directory
- `file_info`: Dictionary containing frontmatter and source file path
- `stage_dir`: Path to the stage directory

**Returns**:
- `None`

## Usage Examples

### Basic Plugin Usage

```python
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

# Create plugin instance
plugin = OutputAsInputPlugin()

# Configure plugin
plugin.config = {
    "stage_dir": "custom_stage",
    "html_element": "article",
    "target_tag": "div",
    "verbose": True,
}
```

### Manual Processing

```python
from pathlib import Path
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

# Initialize plugin
plugin = OutputAsInputPlugin()
plugin.config = {
    "stage_dir": "stage",
    "html_element": "main",
    "target_tag": "article",
    "verbose": False,
}

# Set up directories
plugin.site_dir = Path("site")
plugin.docs_dir = Path("docs")

# Process a file manually
file_info = {
    "frontmatter": {"title": "Test Page"},
    "abs_src_path": "/path/to/source.md",
}
stage_dir = Path("stage")
stage_dir.mkdir(exist_ok=True)

plugin._process_file("test.md", file_info, stage_dir)
```

## Error Handling

The plugin includes comprehensive error handling:

### File Read Errors

```python
try:
    with open(page.file.abs_src_path, encoding="utf-8") as f:
        content = f.read()
except Exception as e:
    logger.error(f"OutputAsInput: Failed to read {src_path}: {e}")
    return None
```

### YAML Parse Errors

```python
try:
    frontmatter = yaml.safe_load(fm_text) or {}
except yaml.YAMLError as e:
    logger.warning(f"OutputAsInput: Failed to parse frontmatter in {src_path}: {e}")
```

### HTML Processing Errors

```python
try:
    with open(full_html_path, encoding="utf-8") as f:
        html_content = f.read()
except Exception as e:
    logger.error(f"OutputAsInput: Failed to read HTML {full_html_path}: {e}")
    return
```

## Logging

The plugin uses Python's standard logging module. Enable verbose mode to see detailed output:

```yaml
plugins:
  - output-as-input:
      verbose: true
```

**Log levels**:
- `INFO`: General information about processing
- `WARNING`: Non-fatal issues (missing HTML elements, YAML parse errors)
- `ERROR`: Fatal errors that prevent processing

## Dependencies

The plugin requires the following dependencies:

- `mkdocs>=1.6.0`
- `beautifulsoup4>=4.12.0`
- `pyyaml>=6.0`

## Version Information

The plugin version is managed by `setuptools-scm` and available as:

```python
from mkdocs_output_as_input import __version__
print(__version__)
```

## Thread Safety

The plugin is designed to be thread-safe and can handle concurrent MkDocs builds. Each plugin instance maintains its own state in the `source_files` dictionary.

## Performance Considerations

- The plugin processes files sequentially during the `on_post_build` phase
- Memory usage scales with the number of source files
- HTML parsing is done using BeautifulSoup4's built-in parser for consistency
- File I/O is optimized with proper encoding handling

## Extension Points

The plugin can be extended by subclassing `OutputAsInputPlugin`:

```python
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

class CustomOutputPlugin(OutputAsInputPlugin):
    def _process_file(self, src_path, file_info, stage_dir):
        # Custom processing logic
        super()._process_file(src_path, file_info, stage_dir)
        
        # Additional post-processing
        cousin_path = stage_dir / src_path
        if cousin_path.exists():
            content = cousin_path.read_text()
            # Modify content as needed
            cousin_path.write_text(modified_content)
```

</document_content>
</document>

<document index="12">
<source>docs/configuration.md</source>
<document_content>
---
title: Configuration
description: Complete configuration reference for the MkDocs Output as Input plugin
---

# Configuration

The MkDocs Output as Input plugin provides several configuration options to customize its behavior.

## Basic Configuration

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      verbose: false           # Enable verbose logging (default: false)
```

## Configuration Options

### `stage_dir`

- **Type**: `string`
- **Default**: `"stage"`
- **Description**: Directory name for output files, relative to your project root

**Example**:
```yaml
plugins:
  - output-as-input:
      stage_dir: processed
```

This creates cousin files in a `processed/` directory instead of `stage/`.

### `html_element`

- **Type**: `string`
- **Default**: `"main"`
- **Description**: CSS selector for the HTML element to extract from the built pages

**Common values**:
- `"main"` - Extract the main content area
- `"article"` - Extract article elements
- `"div.content"` - Extract divs with class "content"
- `"#content"` - Extract element with id "content"

**Example**:
```yaml
plugins:
  - output-as-input:
      html_element: article.post-content
```

### `target_tag`

- **Type**: `string`
- **Default**: `"article"`
- **Description**: HTML tag to use in the output file (replaces the extracted element's tag)

**Example**:
```yaml
plugins:
  - output-as-input:
      html_element: main
      target_tag: section
```

This extracts `<main>` elements and converts them to `<section>` in the output.

### `verbose`

- **Type**: `boolean`
- **Default**: `false`
- **Description**: Enable detailed logging for debugging

**Example**:
```yaml
plugins:
  - output-as-input:
      verbose: true
```

## Configuration Examples

### Material Theme

For the Material theme, you might want to extract the inner content:

```yaml
plugins:
  - output-as-input:
      html_element: article.md-content__inner
      target_tag: div
```

### Custom Output Directory

```yaml
plugins:
  - output-as-input:
      stage_dir: hugo/content
      html_element: main
      target_tag: article
```

### Debug Mode

```yaml
plugins:
  - output-as-input:
      verbose: true
```

## Advanced Usage

### Multiple Processing Steps

You can use the plugin in a multi-step build process:

1. **MkDocs build** with output-as-input plugin
2. **Custom processing** of the stage directory
3. **Secondary build** with another static site generator

```bash
#!/bin/bash
# Build with MkDocs
mkdocs build

# Post-process the staged files
python process_stage.py

# Build with Hugo
hugo --contentDir=stage/
```

### Theme Compatibility

The plugin should work with any MkDocs theme. For best results:

1. Inspect your theme's HTML structure
2. Identify the main content element
3. Configure `html_element` accordingly

**Finding the right element**:
1. Build your site normally
2. Open a page in your browser
3. Use developer tools to inspect the HTML
4. Look for the element containing your content

## Troubleshooting

### No Output Files

If no cousin files are created:

1. Enable verbose mode
2. Check that HTML files exist in the site directory
3. Verify that the `html_element` selector matches your theme

### Empty Output Files

If cousin files are empty:

1. Check that the `html_element` selector is correct
2. Verify that the element exists in your HTML output
3. Try a more general selector like `"body"` for testing

### Permission Errors

If you get permission errors:

1. Ensure the project directory is writable
2. Try a different `stage_dir` location
3. Check file system permissions

</document_content>
</document>

<document index="13">
<source>docs/examples.md</source>
<document_content>
---
title: Examples
description: Real-world usage examples for the MkDocs Output as Input plugin
---

# Examples

This page provides practical examples of how to use the MkDocs Output as Input plugin in various scenarios.

## Basic Usage

### Simple Blog Post Processing

**Input** (`docs/posts/my-post.md`):
```markdown
---
title: My Blog Post
date: 2025-01-14
author: Jane Doe
tags: [python, documentation]
---

# My Blog Post

This is a **markdown** blog post with some content.
```

**Configuration** (`mkdocs.yml`):
```yaml
plugins:
  - output-as-input
```

**Output** (`stage/posts/my-post.md`):
```markdown
---
title: My Blog Post
date: 2025-01-14
author: Jane Doe
tags: [python, documentation]
---

<article class="md-content">
  <h1>My Blog Post</h1>
  <p>This is a <strong>markdown</strong> blog post with some content.</p>
</article>
```

## Multi-Stage Documentation Pipeline

### MkDocs → Hugo Pipeline

**Scenario**: Use MkDocs for authoring and Hugo for final site generation.

**MkDocs Configuration** (`mkdocs.yml`):
```yaml
site_name: My Documentation
theme:
  name: material

plugins:
  - search
  - output-as-input:
      stage_dir: hugo/content
      html_element: main
      target_tag: div
```

**Hugo Configuration** (`hugo.yaml`):
```yaml
contentDir: hugo/content
baseURL: https://example.com
```

**Build Script** (`build.sh`):
```bash
#!/bin/bash
set -e

echo "Building with MkDocs..."
mkdocs build

echo "Processing with Hugo..."
hugo --contentDir=hugo/content

echo "Done!"
```

### MkDocs → Jekyll Pipeline

**Configuration** (`mkdocs.yml`):
```yaml
plugins:
  - output-as-input:
      stage_dir: _posts
      html_element: article
      target_tag: div
```

**Post-processing** (`process.py`):
```python
import os
import re
from pathlib import Path

# Convert MkDocs output to Jekyll format
for md_file in Path("_posts").glob("**/*.md"):
    content = md_file.read_text()
    
    # Add Jekyll layout to frontmatter
    content = re.sub(
        r'(---\n.*?)\n---',
        r'\1\nlayout: post\n---',
        content,
        flags=re.DOTALL
    )
    
    md_file.write_text(content)
```

## Theme-Specific Examples

### Material Theme

**Extract inner content**:
```yaml
plugins:
  - output-as-input:
      html_element: article.md-content__inner
      target_tag: section
```

### ReadTheDocs Theme

**Extract main content**:
```yaml
plugins:
  - output-as-input:
      html_element: div.rst-content
      target_tag: article
```

### Custom Theme

**For a custom theme with specific structure**:
```yaml
plugins:
  - output-as-input:
      html_element: div.content-wrapper > div.main-content
      target_tag: main
```

## Content Processing Examples

### API Documentation

**Input** (`docs/api/users.md`):
```markdown
---
title: User API
api_version: v1
endpoint: /api/users
---

# User API

The User API allows you to manage users.

## GET /api/users

Returns a list of users.
```

**Configuration**:
```yaml
plugins:
  - mkdocstrings
  - output-as-input:
      stage_dir: api_docs
      html_element: main
      target_tag: section
```

### Tutorial Series

**Input** (`docs/tutorials/setup.md`):
```markdown
---
title: Setup Tutorial
series: getting-started
order: 1
difficulty: beginner
---

# Setup Tutorial

This tutorial will guide you through the setup process.
```

**Post-processing** to group by series:
```python
import yaml
from pathlib import Path
from collections import defaultdict

# Group tutorials by series
series_map = defaultdict(list)

for md_file in Path("stage/tutorials").glob("*.md"):
    with open(md_file) as f:
        content = f.read()
        
    # Extract frontmatter
    if content.startswith('---'):
        _, fm_text, body = content.split('---', 2)
        frontmatter = yaml.safe_load(fm_text)
        series = frontmatter.get('series', 'misc')
        
        series_map[series].append({
            'file': md_file,
            'title': frontmatter.get('title'),
            'order': frontmatter.get('order', 999)
        })

# Create index files for each series
for series, tutorials in series_map.items():
    tutorials.sort(key=lambda x: x['order'])
    
    index_content = f"# {series.title()} Series\n\n"
    for tutorial in tutorials:
        index_content += f"- [{tutorial['title']}]({tutorial['file'].name})\n"
    
    (Path("stage/tutorials") / f"{series}-index.md").write_text(index_content)
```

## Integration Examples

### GitHub Actions Workflow

**`.github/workflows/docs.yml`**:
```yaml
name: Documentation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install mkdocs-material vexy-mkdocs-output-as-input
      
      - name: Build with MkDocs
        run: mkdocs build
      
      - name: Process staged files
        run: python scripts/process_stage.py
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
```

### Docker Multi-Stage Build

**`Dockerfile`**:
```dockerfile
# Stage 1: MkDocs build
FROM python:3.11-slim as mkdocs-builder
WORKDIR /app
COPY requirements.txt .
RUN pip install -r requirements.txt
COPY docs/ docs/
COPY mkdocs.yml .
RUN mkdocs build

# Stage 2: Hugo build
FROM hugomods/hugo:latest as hugo-builder
WORKDIR /app
COPY --from=mkdocs-builder /app/stage ./content
COPY hugo.yaml .
RUN hugo

# Stage 3: Final image
FROM nginx:alpine
COPY --from=hugo-builder /app/public /usr/share/nginx/html
```

## Debugging Examples

### Verbose Mode

**Enable detailed logging**:
```yaml
plugins:
  - output-as-input:
      verbose: true
```

**Sample output**:
```
INFO - OutputAsInput: site_dir=/app/site, docs_dir=/app/docs
INFO - OutputAsInput: Captured source index.md
INFO - OutputAsInput: Captured source getting-started.md
INFO - OutputAsInput: Creating stage directory at /app/stage
INFO - OutputAsInput: Created cousin file /app/stage/index.md
INFO - OutputAsInput: Created cousin file /app/stage/getting-started.md
INFO - OutputAsInput: Processed 2/2 files
```

### Testing Different Selectors

**Test script** (`test_selectors.py`):
```python
from bs4 import BeautifulSoup
from pathlib import Path

html_file = Path("site/index.html")
html_content = html_file.read_text()
soup = BeautifulSoup(html_content, 'html.parser')

selectors = [
    'main',
    'article',
    'div.content',
    'div.md-content',
    '#content',
    'main.md-content'
]

for selector in selectors:
    element = soup.select_one(selector)
    if element:
        print(f"✓ {selector}: Found element with {len(element.get_text())} characters")
    else:
        print(f"✗ {selector}: No element found")
```

## Best Practices

1. **Start simple**: Begin with default settings and adjust as needed
2. **Use verbose mode**: Enable verbose logging during development
3. **Test selectors**: Verify your HTML element selector works across pages
4. **Backup frontmatter**: The plugin preserves frontmatter, but always keep backups
5. **Version control**: Keep both source and stage directories under version control
6. **Document your pipeline**: Create clear documentation for your processing steps

</document_content>
</document>

<document index="14">
<source>docs/getting-started.md</source>
<document_content>
---
title: Getting Started
description: Quick start guide for the MkDocs Output as Input plugin
---

# Getting Started

This guide will help you get up and running with the MkDocs Output as Input plugin.

## Installation

### From PyPI

```bash
pip install vexy-mkdocs-output-as-input
```

### From Source

```bash
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input
pip install -e .
```

## Basic Configuration

Add the plugin to your `mkdocs.yml` file:

```yaml
plugins:
  - search  # Keep your existing plugins
  - output-as-input
```

## Your First Build

1. **Create a simple Markdown file** with frontmatter:

   ```markdown
   ---
   title: My First Page
   author: Your Name
   date: 2025-01-14
   ---
   
   # My First Page
   
   This is some **markdown** content.
   ```

2. **Run MkDocs build**:

   ```bash
   mkdocs build
   ```

3. **Check the stage directory**:

   ```bash
   ls stage/
   ```

   You should see a cousin file with the same name as your source file.

## Verifying the Output

The cousin file will contain:

- **Original frontmatter** preserved exactly
- **Processed HTML content** extracted from the built site
- **Configurable HTML tag** wrapping the content

## Next Steps

- Learn about [configuration options](configuration.md)
- Explore [usage examples](examples.md)
- Check the [API reference](api.md)

## Troubleshooting

### Plugin Not Found

If you get an error about the plugin not being found:

```bash
pip install vexy-mkdocs-output-as-input
```

### No Output Files

Enable verbose mode to see what's happening:

```yaml
plugins:
  - output-as-input:
      verbose: true
```

### Permission Errors

Make sure you have write permissions in your project directory, or specify a different output directory:

```yaml
plugins:
  - output-as-input:
      stage_dir: /path/to/writable/directory
```

</document_content>
</document>

<document index="15">
<source>docs/index.md</source>
<document_content>
---
title: MkDocs Output as Input
description: Capture HTML output and create cousin Markdown files
---

# MkDocs Output as Input Plugin

Welcome to the documentation for the MkDocs Output as Input plugin! This plugin enables powerful post-processing workflows by capturing MkDocs HTML output and creating new Markdown files that preserve your original frontmatter.

## What does it do?

This plugin creates a bridge between MkDocs and other static site generators or processing pipelines:

```mermaid
graph LR
    A[Source Markdown<br/>with Frontmatter] --> B[MkDocs Build]
    B --> C[HTML Output]
    C --> D[Plugin Extracts<br/>Content]
    D --> E[Cousin Markdown<br/>with HTML + Frontmatter]
    E --> F[Further Processing]
```

## Quick Example

=== "Input (source.md)"

    ```markdown
    ---
    title: My Article
    date: 2025-01-14
    tags: [tutorial, mkdocs]
    ---
    
    # My Article
    
    This is my content with **Markdown** formatting.
    ```

=== "Output (stage/source.md)"

    ```markdown
    ---
    title: My Article
    date: 2025-01-14
    tags: [tutorial, mkdocs]
    ---
    
    <article class="md-content">
      <h1>My Article</h1>
      <p>This is my content with <strong>Markdown</strong> formatting.</p>
    </article>
    ```

## Key Features

- 🎯 **Preserves Frontmatter**: All your YAML metadata is maintained
- 🔍 **Selective Extraction**: Choose which HTML element to extract
- 🏷️ **Tag Transformation**: Convert extracted elements to different tags
- 📁 **Flexible Output**: Configure where cousin files are created
- 🐛 **Debug Support**: Verbose logging for troubleshooting

## Installation

```bash
pip install vexy-mkdocs-output-as-input
```

Then add to your `mkdocs.yml`:

```yaml
plugins:
  - output-as-input
```

## Next Steps

- [Getting Started](getting-started.md) - Set up your first configuration
- [Configuration](configuration.md) - Explore all options
- [Examples](examples.md) - See real-world use cases
- [API Reference](api.md) - Detailed plugin documentation
</document_content>
</document>

<document index="16">
<source>llms.txt</source>
<document_content>
Project Structure:
📁 vexy-mkdocs-output-as-input
├── 📁 .github
│   └── 📁 workflows
│       ├── 📄 ci.yml
│       └── 📄 release.yml
├── 📁 docs
│   ├── 📄 api.md
│   ├── 📄 configuration.md
│   ├── 📄 examples.md
│   ├── 📄 getting-started.md
│   └── 📄 index.md
├── 📁 src
│   └── 📁 mkdocs_output_as_input
│       ├── 📄 __init__.py
│       └── 📄 plugin.py
├── 📁 tests
│   └── 📄 test_plugin.py
├── 📄 .gitignore
├── 📄 AGENTS.md
├── 📄 CHANGELOG.md
├── 📄 CLAUDE.md
├── 📄 GEMINI.md
├── 📄 LICENSE
├── 📄 llms.txt
├── 📄 mkdocs.yml
├── 📄 pyproject.toml
├── 📄 README.md
└── 📄 TODO.md


<documents>
<document index="1">
<source>.github/workflows/ci.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run pre-commit
        if: matrix.python-version == '3.11'
        run: pre-commit run --all-files

      - name: Run tests
        run: |
          pytest -v --cov=mkdocs_output_as_input --cov-report=xml --cov-report=term

      - name: Upload coverage
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run ruff
        run: ruff check --output-format=github .

      - name: Run ruff format
        run: ruff format --check --diff .

      - name: Run mypy
        run: mypy src
</document_content>
</document>

<document index="2">
<source>.github/workflows/release.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write  # Required for PyPI trusted publishing

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mkdocs-output-as-input
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # Trusted publishing configured in PyPI project settings

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Extract changelog section
        id: changelog
        run: |
          version=${GITHUB_REF#refs/tags/v}
          awk "/## \[$version\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.changelog.outputs.version }}
          body_path: release_notes.md
          files: dist/*
          draft: false
          prerelease: false
</document_content>
</document>

<document index="3">
<source>.gitignore</source>
<document_content>
# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
venv/
ENV/
env/
.venv
.env

# pyenv
.python-version

# pipenv
Pipfile.lock

# Poetry
poetry.lock

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# pytest
.pytest_cache/
.coverage
htmlcov/
.tox/
coverage.xml
*.cover
.hypothesis/

# Jupyter Notebook
.ipynb_checkpoints

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# MkDocs
site/
stage/
.cache/

# setuptools-scm
src/mkdocs_output_as_input/_version.py
</document_content>
</document>

<document index="4">
<source>AGENTS.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="5">
<source>CHANGELOG.md</source>
<document_content>
# Changelog

All notable changes to vexy-mkdocs-output-as-input will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [Unreleased]

## [0.2.0] - 2025-01-14

### Changed
- **BREAKING**: Migrated to src-layout package structure
- **BREAKING**: Minimum Python version is now 3.9
- Switched from Loguru to standard library logging for better integration
- Modernized packaging with PEP 621 compliant pyproject.toml
- Improved type hints throughout the codebase

### Added
- Comprehensive test suite with >90% coverage
- Pre-commit hooks for code quality
- GitHub Actions CI/CD workflows
- Support for Python 3.9, 3.10, 3.11, and 3.12
- Automated release process with trusted PyPI publishing
- Development documentation in README

### Fixed
- Better error handling for missing files
- Graceful handling of invalid YAML frontmatter
- Improved logging messages for debugging

## [0.1.0] - 2025-01-10

### Added
- Initial release of vexy-mkdocs-output-as-input plugin
- Core functionality to capture HTML output and create cousin Markdown files
- Configurable stage directory for output files
- Configurable HTML element extraction (default: `<main>`)
- Configurable target tag transformation (default: `<article>`)
- Preservation of original YAML frontmatter
- Verbose logging mode for debugging
- Basic documentation and examples

[Unreleased]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.2.0...HEAD
[0.2.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.1.0...v0.2.0
[0.1.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/releases/tag/v0.1.0
</document_content>
</document>

<document index="6">
<source>CLAUDE.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="7">
<source>GEMINI.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="8">
<source>LICENSE</source>
<document_content>
MIT License

Copyright (c) 2025 MkDocs Output as Input Contributors

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</document_content>
</document>

<document index="9">
<source>README.md</source>
<document_content>
# vexy-mkdocs-output-as-input

[![PyPI version](https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)
[![CI](https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg)](https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg)](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Python versions](https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)

A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.

## Features

This plugin enables powerful post-processing workflows by:

1. ✅ Preserving your original Markdown structure and frontmatter
2. ✅ Capturing the fully-rendered HTML output from MkDocs
3. ✅ Creating new Markdown files that combine original metadata with processed HTML
4. ✅ Enabling further processing by other static site generators

## Installation

Install from PyPI:

```bash
uv pip install --system --upgrade vexy-mkdocs-output-as-input
```

Or install from source:

```bash
pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input
```

## Quick Start

Add the plugin to your `mkdocs.yml`:

```yaml
plugins:
  - search  # Other plugins
  - output-as-input
```

Build your site:

```bash
mkdocs build
```

Find your processed files in the `stage/` directory (relative to your MkDocs project root).

## Configuration

All configuration options with their defaults:

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory name (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      verbose: false            # Enable verbose logging (default: false)
```

### Options Explained

| Option | Type | Default | Description |
|--------|------|---------|-------------|
| `stage_dir` | string | `"stage"` | Directory name for output files (relative to project root) |
| `html_element` | string | `"main"` | CSS selector for the HTML element to extract |
| `target_tag` | string | `"article"` | HTML tag to use in the output (replaces extracted element's tag) |
| `verbose` | boolean | `false` | Enable detailed logging for debugging |

## How It Works

### Input → Process → Output

1. **Input**: Your source Markdown with frontmatter
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   # My Page
   
   This is my content with **markdown**.
   ```

2. **MkDocs Processing**: Renders to HTML as usual
   ```html
   <main class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </main>
   ```

3. **Output**: Cousin file with preserved frontmatter + extracted HTML
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   <article class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </article>
   ```

## Use Cases

### 🔄 Multi-Stage Documentation Pipeline

Process documentation through MkDocs first, then feed to another SSG:

```yaml
# mkdocs.yml
plugins:
  - output-as-input:
      stage_dir: hugo/content

# Then run:
# mkdocs build && hugo build
```

### 📝 Content Extraction

Extract just the article content without theme wrapper:

```yaml
plugins:
  - output-as-input:
      html_element: article
      target_tag: div
```

### 🎨 Custom Post-Processing

Preserve MkDocs rendering while preparing for custom templates:

```yaml
plugins:
  - output-as-input:
      stage_dir: _includes
      html_element: main
      target_tag: section
```

## Examples

### Basic Example

```yaml
# mkdocs.yml
site_name: My Documentation
plugins:
  - output-as-input
```

### Advanced Example

```yaml
# mkdocs.yml
site_name: My Documentation
theme:
  name: material

plugins:
  - search
  - output-as-input:
      stage_dir: processed
      html_element: article.md-content__inner
      target_tag: main
      verbose: true

# Process specific content area from Material theme
```

### Integration Example

Using with other tools in a documentation pipeline:

```bash
#!/bin/bash
# build.sh

# Stage 1: Build with MkDocs + plugins
mkdocs build

# Stage 2: Process staged output
python post_process.py stage/

# Stage 3: Build final site
hugo --contentDir=stage/
```

## Development

### Setup Development Environment

```bash
# Clone the repository
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input

# Create virtual environment
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install in development mode
pip install -e .[dev]

# Install pre-commit hooks
pre-commit install
```

### Running Tests

```bash
# Run all tests
pytest

# Run with coverage
pytest --cov=mkdocs_output_as_input --cov-report=html

# Run specific test
pytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
```

### Code Quality

```bash
# Format code
black src tests

# Lint code
ruff check src tests

# Type check
mypy src
```

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Support

- 📧 Email: you@example.com
- 🐛 Issues: [GitHub Issues](https://github.com/vexyart/vexy-mkdocs-output-as-input/issues)
- 💬 Discussions: [GitHub Discussions](https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions)
</document_content>
</document>

<document index="10">
<source>TODO.md</source>
<document_content>
# TODO

## High Priority

- [ ] Fix broken plugin.py - methods are missing implementation and have syntax errors
- [ ] Fix broken test_plugin.py - methods are missing implementation

## Medium Priority

- [ ] Add missing documentation pages referenced in mkdocs.yml nav
- [ ] Add pre-commit configuration file
- [ ] Ensure git-tag-based VCS versioning with hatch is working
- [ ] Improve error handling and logging throughout plugin

## Low Priority

- [ ] Update CI workflow to use ruff format instead of black
- [ ] Add integration tests for real MkDocs builds

</document_content>
</document>

<document index="11">
<source>docs/api.md</source>
<document_content>
---
title: API Reference
description: Complete API reference for the MkDocs Output as Input plugin
---

# API Reference

This page provides detailed API documentation for the MkDocs Output as Input plugin.

## Plugin Class

::: mkdocs_output_as_input.plugin.OutputAsInputPlugin

## Configuration Schema

The plugin accepts the following configuration options:

### stage_dir

**Type**: `str`  
**Default**: `"stage"`

Directory name for output files, relative to the project root.

### html_element

**Type**: `str`  
**Default**: `"main"`

CSS selector for the HTML element to extract from built pages.

### target_tag

**Type**: `str`  
**Default**: `"article"`

HTML tag to use in the output file (replaces the extracted element's tag).

### verbose

**Type**: `bool`  
**Default**: `False`

Enable detailed logging for debugging.

## Plugin Methods

### on_config

**Signature**: `on_config(self, config: dict[str, Any]) -> dict[str, Any]`

Called when MkDocs configuration is loaded. Stores site and docs directories for later use.

**Parameters**:
- `config`: The MkDocs configuration dictionary

**Returns**:
- The unmodified configuration dictionary

### on_page_read_source

**Signature**: `on_page_read_source(self, page: Page, config: dict[str, Any]) -> Optional[str]`

Called when MkDocs reads a source file. Captures the source content and frontmatter.

**Parameters**:
- `page`: The MkDocs Page object
- `config`: The MkDocs configuration dictionary

**Returns**:
- `None` (allows MkDocs to continue with original processing)

### on_post_build

**Signature**: `on_post_build(self, config: dict[str, Any]) -> None`

Called after MkDocs completes the build. Processes HTML files and creates cousin Markdown files.

**Parameters**:
- `config`: The MkDocs configuration dictionary

**Returns**:
- `None`

### _process_file

**Signature**: `_process_file(self, src_path: str, file_info: dict[str, Any], stage_dir: Path) -> None`

Internal method to process a single file: extract HTML and create cousin Markdown.

**Parameters**:
- `src_path`: Path to the source file relative to docs directory
- `file_info`: Dictionary containing frontmatter and source file path
- `stage_dir`: Path to the stage directory

**Returns**:
- `None`

## Usage Examples

### Basic Plugin Usage

```python
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

# Create plugin instance
plugin = OutputAsInputPlugin()

# Configure plugin
plugin.config = {
    "stage_dir": "custom_stage",
    "html_element": "article",
    "target_tag": "div",
    "verbose": True,
}
```

### Manual Processing

```python
from pathlib import Path
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

# Initialize plugin
plugin = OutputAsInputPlugin()
plugin.config = {
    "stage_dir": "stage",
    "html_element": "main",
    "target_tag": "article",
    "verbose": False,
}

# Set up directories
plugin.site_dir = Path("site")
plugin.docs_dir = Path("docs")

# Process a file manually
file_info = {
    "frontmatter": {"title": "Test Page"},
    "abs_src_path": "/path/to/source.md",
}
stage_dir = Path("stage")
stage_dir.mkdir(exist_ok=True)

plugin._process_file("test.md", file_info, stage_dir)
```

## Error Handling

The plugin includes comprehensive error handling:

### File Read Errors

```python
try:
    with open(page.file.abs_src_path, encoding="utf-8") as f:
        content = f.read()
except Exception as e:
    logger.error(f"OutputAsInput: Failed to read {src_path}: {e}")
    return None
```

### YAML Parse Errors

```python
try:
    frontmatter = yaml.safe_load(fm_text) or {}
except yaml.YAMLError as e:
    logger.warning(f"OutputAsInput: Failed to parse frontmatter in {src_path}: {e}")
```

### HTML Processing Errors

```python
try:
    with open(full_html_path, encoding="utf-8") as f:
        html_content = f.read()
except Exception as e:
    logger.error(f"OutputAsInput: Failed to read HTML {full_html_path}: {e}")
    return
```

## Logging

The plugin uses Python's standard logging module. Enable verbose mode to see detailed output:

```yaml
plugins:
  - output-as-input:
      verbose: true
```

**Log levels**:
- `INFO`: General information about processing
- `WARNING`: Non-fatal issues (missing HTML elements, YAML parse errors)
- `ERROR`: Fatal errors that prevent processing

## Dependencies

The plugin requires the following dependencies:

- `mkdocs>=1.6.0`
- `beautifulsoup4>=4.12.0`
- `pyyaml>=6.0`

## Version Information

The plugin version is managed by `setuptools-scm` and available as:

```python
from mkdocs_output_as_input import __version__
print(__version__)
```

## Thread Safety

The plugin is designed to be thread-safe and can handle concurrent MkDocs builds. Each plugin instance maintains its own state in the `source_files` dictionary.

## Performance Considerations

- The plugin processes files sequentially during the `on_post_build` phase
- Memory usage scales with the number of source files
- HTML parsing is done using BeautifulSoup4's built-in parser for consistency
- File I/O is optimized with proper encoding handling

## Extension Points

The plugin can be extended by subclassing `OutputAsInputPlugin`:

```python
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

class CustomOutputPlugin(OutputAsInputPlugin):
    def _process_file(self, src_path, file_info, stage_dir):
        # Custom processing logic
        super()._process_file(src_path, file_info, stage_dir)
        
        # Additional post-processing
        cousin_path = stage_dir / src_path
        if cousin_path.exists():
            content = cousin_path.read_text()
            # Modify content as needed
            cousin_path.write_text(modified_content)
```

</document_content>
</document>

<document index="12">
<source>docs/configuration.md</source>
<document_content>
---
title: Configuration
description: Complete configuration reference for the MkDocs Output as Input plugin
---

# Configuration

The MkDocs Output as Input plugin provides several configuration options to customize its behavior.

## Basic Configuration

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      verbose: false           # Enable verbose logging (default: false)
```

## Configuration Options

### `stage_dir`

- **Type**: `string`
- **Default**: `"stage"`
- **Description**: Directory name for output files, relative to your project root

**Example**:
```yaml
plugins:
  - output-as-input:
      stage_dir: processed
```

This creates cousin files in a `processed/` directory instead of `stage/`.

### `html_element`

- **Type**: `string`
- **Default**: `"main"`
- **Description**: CSS selector for the HTML element to extract from the built pages

**Common values**:
- `"main"` - Extract the main content area
- `"article"` - Extract article elements
- `"div.content"` - Extract divs with class "content"
- `"#content"` - Extract element with id "content"

**Example**:
```yaml
plugins:
  - output-as-input:
      html_element: article.post-content
```

### `target_tag`

- **Type**: `string`
- **Default**: `"article"`
- **Description**: HTML tag to use in the output file (replaces the extracted element's tag)

**Example**:
```yaml
plugins:
  - output-as-input:
      html_element: main
      target_tag: section
```

This extracts `<main>` elements and converts them to `<section>` in the output.

### `verbose`

- **Type**: `boolean`
- **Default**: `false`
- **Description**: Enable detailed logging for debugging

**Example**:
```yaml
plugins:
  - output-as-input:
      verbose: true
```

## Configuration Examples

### Material Theme

For the Material theme, you might want to extract the inner content:

```yaml
plugins:
  - output-as-input:
      html_element: article.md-content__inner
      target_tag: div
```

### Custom Output Directory

```yaml
plugins:
  - output-as-input:
      stage_dir: hugo/content
      html_element: main
      target_tag: article
```

### Debug Mode

```yaml
plugins:
  - output-as-input:
      verbose: true
```

## Advanced Usage

### Multiple Processing Steps

You can use the plugin in a multi-step build process:

1. **MkDocs build** with output-as-input plugin
2. **Custom processing** of the stage directory
3. **Secondary build** with another static site generator

```bash
#!/bin/bash
# Build with MkDocs
mkdocs build

# Post-process the staged files
python process_stage.py

# Build with Hugo
hugo --contentDir=stage/
```

### Theme Compatibility

The plugin should work with any MkDocs theme. For best results:

1. Inspect your theme's HTML structure
2. Identify the main content element
3. Configure `html_element` accordingly

**Finding the right element**:
1. Build your site normally
2. Open a page in your browser
3. Use developer tools to inspect the HTML
4. Look for the element containing your content

## Troubleshooting

### No Output Files

If no cousin files are created:

1. Enable verbose mode
2. Check that HTML files exist in the site directory
3. Verify that the `html_element` selector matches your theme

### Empty Output Files

If cousin files are empty:

1. Check that the `html_element` selector is correct
2. Verify that the element exists in your HTML output
3. Try a more general selector like `"body"` for testing

### Permission Errors

If you get permission errors:

1. Ensure the project directory is writable
2. Try a different `stage_dir` location
3. Check file system permissions

</document_content>
</document>

<document index="13">
<source>docs/examples.md</source>
<document_content>
---
title: Examples
description: Real-world usage examples for the MkDocs Output as Input plugin
---

# Examples

This page provides practical examples of how to use the MkDocs Output as Input plugin in various scenarios.

## Basic Usage

### Simple Blog Post Processing

**Input** (`docs/posts/my-post.md`):
```markdown
---
title: My Blog Post
date: 2025-01-14
author: Jane Doe
tags: [python, documentation]
---

# My Blog Post

This is a **markdown** blog post with some content.
```

**Configuration** (`mkdocs.yml`):
```yaml
plugins:
  - output-as-input
```

**Output** (`stage/posts/my-post.md`):
```markdown
---
title: My Blog Post
date: 2025-01-14
author: Jane Doe
tags: [python, documentation]
---

<article class="md-content">
  <h1>My Blog Post</h1>
  <p>This is a <strong>markdown</strong> blog post with some content.</p>
</article>
```

## Multi-Stage Documentation Pipeline

### MkDocs → Hugo Pipeline

**Scenario**: Use MkDocs for authoring and Hugo for final site generation.

**MkDocs Configuration** (`mkdocs.yml`):
```yaml
site_name: My Documentation
theme:
  name: material

plugins:
  - search
  - output-as-input:
      stage_dir: hugo/content
      html_element: main
      target_tag: div
```

**Hugo Configuration** (`hugo.yaml`):
```yaml
contentDir: hugo/content
baseURL: https://example.com
```

**Build Script** (`build.sh`):
```bash
#!/bin/bash
set -e

echo "Building with MkDocs..."
mkdocs build

echo "Processing with Hugo..."
hugo --contentDir=hugo/content

echo "Done!"
```

### MkDocs → Jekyll Pipeline

**Configuration** (`mkdocs.yml`):
```yaml
plugins:
  - output-as-input:
      stage_dir: _posts
      html_element: article
      target_tag: div
```

**Post-processing** (`process.py`):
```python
import os
import re
from pathlib import Path

# Convert MkDocs output to Jekyll format
for md_file in Path("_posts").glob("**/*.md"):
    content = md_file.read_text()
    
    # Add Jekyll layout to frontmatter
    content = re.sub(
        r'(---\n.*?)\n---',
        r'\1\nlayout: post\n---',
        content,
        flags=re.DOTALL
    )
    
    md_file.write_text(content)
```

## Theme-Specific Examples

### Material Theme

**Extract inner content**:
```yaml
plugins:
  - output-as-input:
      html_element: article.md-content__inner
      target_tag: section
```

### ReadTheDocs Theme

**Extract main content**:
```yaml
plugins:
  - output-as-input:
      html_element: div.rst-content
      target_tag: article
```

### Custom Theme

**For a custom theme with specific structure**:
```yaml
plugins:
  - output-as-input:
      html_element: div.content-wrapper > div.main-content
      target_tag: main
```

## Content Processing Examples

### API Documentation

**Input** (`docs/api/users.md`):
```markdown
---
title: User API
api_version: v1
endpoint: /api/users
---

# User API

The User API allows you to manage users.

## GET /api/users

Returns a list of users.
```

**Configuration**:
```yaml
plugins:
  - mkdocstrings
  - output-as-input:
      stage_dir: api_docs
      html_element: main
      target_tag: section
```

### Tutorial Series

**Input** (`docs/tutorials/setup.md`):
```markdown
---
title: Setup Tutorial
series: getting-started
order: 1
difficulty: beginner
---

# Setup Tutorial

This tutorial will guide you through the setup process.
```

**Post-processing** to group by series:
```python
import yaml
from pathlib import Path
from collections import defaultdict

# Group tutorials by series
series_map = defaultdict(list)

for md_file in Path("stage/tutorials").glob("*.md"):
    with open(md_file) as f:
        content = f.read()
        
    # Extract frontmatter
    if content.startswith('---'):
        _, fm_text, body = content.split('---', 2)
        frontmatter = yaml.safe_load(fm_text)
        series = frontmatter.get('series', 'misc')
        
        series_map[series].append({
            'file': md_file,
            'title': frontmatter.get('title'),
            'order': frontmatter.get('order', 999)
        })

# Create index files for each series
for series, tutorials in series_map.items():
    tutorials.sort(key=lambda x: x['order'])
    
    index_content = f"# {series.title()} Series\n\n"
    for tutorial in tutorials:
        index_content += f"- [{tutorial['title']}]({tutorial['file'].name})\n"
    
    (Path("stage/tutorials") / f"{series}-index.md").write_text(index_content)
```

## Integration Examples

### GitHub Actions Workflow

**`.github/workflows/docs.yml`**:
```yaml
name: Documentation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install mkdocs-material vexy-mkdocs-output-as-input
      
      - name: Build with MkDocs
        run: mkdocs build
      
      - name: Process staged files
        run: python scripts/process_stage.py
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
```

### Docker Multi-Stage Build

**`Dockerfile`**:
```dockerfile
# Stage 1: MkDocs build
FROM python:3.11-slim as mkdocs-builder
WORKDIR /app
COPY requirements.txt .
RUN pip install -r requirements.txt
COPY docs/ docs/
COPY mkdocs.yml .
RUN mkdocs build

# Stage 2: Hugo build
FROM hugomods/hugo:latest as hugo-builder
WORKDIR /app
COPY --from=mkdocs-builder /app/stage ./content
COPY hugo.yaml .
RUN hugo

# Stage 3: Final image
FROM nginx:alpine
COPY --from=hugo-builder /app/public /usr/share/nginx/html
```

## Debugging Examples

### Verbose Mode

**Enable detailed logging**:
```yaml
plugins:
  - output-as-input:
      verbose: true
```

**Sample output**:
```
INFO - OutputAsInput: site_dir=/app/site, docs_dir=/app/docs
INFO - OutputAsInput: Captured source index.md
INFO - OutputAsInput: Captured source getting-started.md
INFO - OutputAsInput: Creating stage directory at /app/stage
INFO - OutputAsInput: Created cousin file /app/stage/index.md
INFO - OutputAsInput: Created cousin file /app/stage/getting-started.md
INFO - OutputAsInput: Processed 2/2 files
```

### Testing Different Selectors

**Test script** (`test_selectors.py`):
```python
from bs4 import BeautifulSoup
from pathlib import Path

html_file = Path("site/index.html")
html_content = html_file.read_text()
soup = BeautifulSoup(html_content, 'html.parser')

selectors = [
    'main',
    'article',
    'div.content',
    'div.md-content',
    '#content',
    'main.md-content'
]

for selector in selectors:
    element = soup.select_one(selector)
    if element:
        print(f"✓ {selector}: Found element with {len(element.get_text())} characters")
    else:
        print(f"✗ {selector}: No element found")
```

## Best Practices

1. **Start simple**: Begin with default settings and adjust as needed
2. **Use verbose mode**: Enable verbose logging during development
3. **Test selectors**: Verify your HTML element selector works across pages
4. **Backup frontmatter**: The plugin preserves frontmatter, but always keep backups
5. **Version control**: Keep both source and stage directories under version control
6. **Document your pipeline**: Create clear documentation for your processing steps

</document_content>
</document>

<document index="14">
<source>docs/getting-started.md</source>
<document_content>
---
title: Getting Started
description: Quick start guide for the MkDocs Output as Input plugin
---

# Getting Started

This guide will help you get up and running with the MkDocs Output as Input plugin.

## Installation

### From PyPI

```bash
pip install vexy-mkdocs-output-as-input
```

### From Source

```bash
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input
pip install -e .
```

## Basic Configuration

Add the plugin to your `mkdocs.yml` file:

```yaml
plugins:
  - search  # Keep your existing plugins
  - output-as-input
```

## Your First Build

1. **Create a simple Markdown file** with frontmatter:

   ```markdown
   ---
   title: My First Page
   author: Your Name
   date: 2025-01-14
   ---
   
   # My First Page
   
   This is some **markdown** content.
   ```

2. **Run MkDocs build**:

   ```bash
   mkdocs build
   ```

3. **Check the stage directory**:

   ```bash
   ls stage/
   ```

   You should see a cousin file with the same name as your source file.

## Verifying the Output

The cousin file will contain:

- **Original frontmatter** preserved exactly
- **Processed HTML content** extracted from the built site
- **Configurable HTML tag** wrapping the content

## Next Steps

- Learn about [configuration options](configuration.md)
- Explore [usage examples](examples.md)
- Check the [API reference](api.md)

## Troubleshooting

### Plugin Not Found

If you get an error about the plugin not being found:

```bash
pip install vexy-mkdocs-output-as-input
```

### No Output Files

Enable verbose mode to see what's happening:

```yaml
plugins:
  - output-as-input:
      verbose: true
```

### Permission Errors

Make sure you have write permissions in your project directory, or specify a different output directory:

```yaml
plugins:
  - output-as-input:
      stage_dir: /path/to/writable/directory
```

</document_content>
</document>

<document index="15">
<source>docs/index.md</source>
<document_content>
---
title: MkDocs Output as Input
description: Capture HTML output and create cousin Markdown files
---

# MkDocs Output as Input Plugin

Welcome to the documentation for the MkDocs Output as Input plugin! This plugin enables powerful post-processing workflows by capturing MkDocs HTML output and creating new Markdown files that preserve your original frontmatter.

## What does it do?

This plugin creates a bridge between MkDocs and other static site generators or processing pipelines:

```mermaid
graph LR
    A[Source Markdown<br/>with Frontmatter] --> B[MkDocs Build]
    B --> C[HTML Output]
    C --> D[Plugin Extracts<br/>Content]
    D --> E[Cousin Markdown<br/>with HTML + Frontmatter]
    E --> F[Further Processing]
```

## Quick Example

=== "Input (source.md)"

    ```markdown
    ---
    title: My Article
    date: 2025-01-14
    tags: [tutorial, mkdocs]
    ---
    
    # My Article
    
    This is my content with **Markdown** formatting.
    ```

=== "Output (stage/source.md)"

    ```markdown
    ---
    title: My Article
    date: 2025-01-14
    tags: [tutorial, mkdocs]
    ---
    
    <article class="md-content">
      <h1>My Article</h1>
      <p>This is my content with <strong>Markdown</strong> formatting.</p>
    </article>
    ```

## Key Features

- 🎯 **Preserves Frontmatter**: All your YAML metadata is maintained
- 🔍 **Selective Extraction**: Choose which HTML element to extract
- 🏷️ **Tag Transformation**: Convert extracted elements to different tags
- 📁 **Flexible Output**: Configure where cousin files are created
- 🐛 **Debug Support**: Verbose logging for troubleshooting

## Installation

```bash
pip install vexy-mkdocs-output-as-input
```

Then add to your `mkdocs.yml`:

```yaml
plugins:
  - output-as-input
```

## Next Steps

- [Getting Started](getting-started.md) - Set up your first configuration
- [Configuration](configuration.md) - Explore all options
- [Examples](examples.md) - See real-world use cases
- [API Reference](api.md) - Detailed plugin documentation
</document_content>
</document>

<document index="16">
<source>llms.txt</source>
<document_content>
Project Structure:
📁 vexy-mkdocs-output-as-input
├── 📁 .github
│   └── 📁 workflows
│       ├── 📄 ci.yml
│       └── 📄 release.yml
├── 📁 docs
│   ├── 📄 configuration.md
│   ├── 📄 examples.md
│   ├── 📄 getting-started.md
│   └── 📄 index.md
├── 📁 src
│   └── 📁 mkdocs_output_as_input
│       ├── 📄 __init__.py
│       └── 📄 plugin.py
├── 📁 tests
│   └── 📄 test_plugin.py
├── 📄 .gitignore
├── 📄 AGENTS.md
├── 📄 CHANGELOG.md
├── 📄 CLAUDE.md
├── 📄 GEMINI.md
├── 📄 LICENSE
├── 📄 llms.txt
├── 📄 mkdocs.yml
├── 📄 pyproject.toml
├── 📄 README.md
└── 📄 TODO.md


<documents>
<document index="1">
<source>.github/workflows/ci.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run pre-commit
        if: matrix.python-version == '3.11'
        run: pre-commit run --all-files

      - name: Run tests
        run: |
          pytest -v --cov=mkdocs_output_as_input --cov-report=xml --cov-report=term

      - name: Upload coverage
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run ruff
        run: ruff check --output-format=github .

      - name: Run black
        run: black --check --diff .

      - name: Run mypy
        run: mypy src
</document_content>
</document>

<document index="2">
<source>.github/workflows/release.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write  # Required for PyPI trusted publishing

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mkdocs-output-as-input
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # Trusted publishing configured in PyPI project settings

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Extract changelog section
        id: changelog
        run: |
          version=${GITHUB_REF#refs/tags/v}
          awk "/## \[$version\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.changelog.outputs.version }}
          body_path: release_notes.md
          files: dist/*
          draft: false
          prerelease: false
</document_content>
</document>

<document index="3">
<source>.gitignore</source>
<document_content>
# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
venv/
ENV/
env/
.venv
.env

# pyenv
.python-version

# pipenv
Pipfile.lock

# Poetry
poetry.lock

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# pytest
.pytest_cache/
.coverage
htmlcov/
.tox/
coverage.xml
*.cover
.hypothesis/

# Jupyter Notebook
.ipynb_checkpoints

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# MkDocs
site/
stage/
.cache/

# setuptools-scm
src/mkdocs_output_as_input/_version.py
</document_content>
</document>

<document index="4">
<source>AGENTS.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="5">
<source>CHANGELOG.md</source>
<document_content>
# Changelog

All notable changes to vexy-mkdocs-output-as-input will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [Unreleased]

## [0.2.0] - 2025-01-14

### Changed
- **BREAKING**: Migrated to src-layout package structure
- **BREAKING**: Minimum Python version is now 3.9
- Switched from Loguru to standard library logging for better integration
- Modernized packaging with PEP 621 compliant pyproject.toml
- Improved type hints throughout the codebase

### Added
- Comprehensive test suite with >90% coverage
- Pre-commit hooks for code quality
- GitHub Actions CI/CD workflows
- Support for Python 3.9, 3.10, 3.11, and 3.12
- Automated release process with trusted PyPI publishing
- Development documentation in README

### Fixed
- Better error handling for missing files
- Graceful handling of invalid YAML frontmatter
- Improved logging messages for debugging

## [0.1.0] - 2025-01-10

### Added
- Initial release of vexy-mkdocs-output-as-input plugin
- Core functionality to capture HTML output and create cousin Markdown files
- Configurable stage directory for output files
- Configurable HTML element extraction (default: `<main>`)
- Configurable target tag transformation (default: `<article>`)
- Preservation of original YAML frontmatter
- Verbose logging mode for debugging
- Basic documentation and examples

[Unreleased]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.2.0...HEAD
[0.2.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.1.0...v0.2.0
[0.1.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/releases/tag/v0.1.0
</document_content>
</document>

<document index="6">
<source>CLAUDE.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="7">
<source>GEMINI.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="8">
<source>LICENSE</source>
<document_content>
MIT License

Copyright (c) 2025 MkDocs Output as Input Contributors

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</document_content>
</document>

<document index="9">
<source>README.md</source>
<document_content>
# vexy-mkdocs-output-as-input

[![PyPI version](https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)
[![CI](https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg)](https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg)](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Python versions](https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)

A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.

## Features

This plugin enables powerful post-processing workflows by:

1. ✅ Preserving your original Markdown structure and frontmatter
2. ✅ Capturing the fully-rendered HTML output from MkDocs
3. ✅ Creating new Markdown files that combine original metadata with processed HTML
4. ✅ Enabling further processing by other static site generators

## Installation

Install from PyPI:

```bash
uv pip install --system --upgrade vexy-mkdocs-output-as-input
```

Or install from source:

```bash
pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input
```

## Quick Start

Add the plugin to your `mkdocs.yml`:

```yaml
plugins:
  - search  # Other plugins
  - output-as-input
```

Build your site:

```bash
mkdocs build
```

Find your processed files in the `stage/` directory (relative to your MkDocs project root).

## Configuration

All configuration options with their defaults:

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory name (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      verbose: false            # Enable verbose logging (default: false)
```

### Options Explained

| Option | Type | Default | Description |
|--------|------|---------|-------------|
| `stage_dir` | string | `"stage"` | Directory name for output files (relative to project root) |
| `html_element` | string | `"main"` | CSS selector for the HTML element to extract |
| `target_tag` | string | `"article"` | HTML tag to use in the output (replaces extracted element's tag) |
| `verbose` | boolean | `false` | Enable detailed logging for debugging |

## How It Works

### Input → Process → Output

1. **Input**: Your source Markdown with frontmatter
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   # My Page
   
   This is my content with **markdown**.
   ```

2. **MkDocs Processing**: Renders to HTML as usual
   ```html
   <main class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </main>
   ```

3. **Output**: Cousin file with preserved frontmatter + extracted HTML
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   <article class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </article>
   ```

## Use Cases

### 🔄 Multi-Stage Documentation Pipeline

Process documentation through MkDocs first, then feed to another SSG:

```yaml
# mkdocs.yml
plugins:
  - output-as-input:
      stage_dir: hugo/content

# Then run:
# mkdocs build && hugo build
```

### 📝 Content Extraction

Extract just the article content without theme wrapper:

```yaml
plugins:
  - output-as-input:
      html_element: article
      target_tag: div
```

### 🎨 Custom Post-Processing

Preserve MkDocs rendering while preparing for custom templates:

```yaml
plugins:
  - output-as-input:
      stage_dir: _includes
      html_element: main
      target_tag: section
```

## Examples

### Basic Example

```yaml
# mkdocs.yml
site_name: My Documentation
plugins:
  - output-as-input
```

### Advanced Example

```yaml
# mkdocs.yml
site_name: My Documentation
theme:
  name: material

plugins:
  - search
  - output-as-input:
      stage_dir: processed
      html_element: article.md-content__inner
      target_tag: main
      verbose: true

# Process specific content area from Material theme
```

### Integration Example

Using with other tools in a documentation pipeline:

```bash
#!/bin/bash
# build.sh

# Stage 1: Build with MkDocs + plugins
mkdocs build

# Stage 2: Process staged output
python post_process.py stage/

# Stage 3: Build final site
hugo --contentDir=stage/
```

## Development

### Setup Development Environment

```bash
# Clone the repository
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input

# Create virtual environment
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install in development mode
pip install -e .[dev]

# Install pre-commit hooks
pre-commit install
```

### Running Tests

```bash
# Run all tests
pytest

# Run with coverage
pytest --cov=mkdocs_output_as_input --cov-report=html

# Run specific test
pytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
```

### Code Quality

```bash
# Format code
black src tests

# Lint code
ruff check src tests

# Type check
mypy src
```

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Support

- 📧 Email: you@example.com
- 🐛 Issues: [GitHub Issues](https://github.com/vexyart/vexy-mkdocs-output-as-input/issues)
- 💬 Discussions: [GitHub Discussions](https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions)
</document_content>
</document>

<document index="10">
<source>TODO.md</source>
<document_content>
# TODO

## High Priority

- [ ] Fix broken plugin.py - methods are missing implementation and have syntax errors
- [ ] Fix broken test_plugin.py - methods are missing implementation

## Medium Priority

- [ ] Add missing documentation pages referenced in mkdocs.yml nav
- [ ] Add pre-commit configuration file
- [ ] Ensure git-tag-based VCS versioning with hatch is working
- [ ] Improve error handling and logging throughout plugin

## Low Priority

- [ ] Update CI workflow to use ruff format instead of black
- [ ] Add integration tests for real MkDocs builds

</document_content>
</document>

<document index="11">
<source>docs/configuration.md</source>
<document_content>
---
title: Configuration
description: Complete configuration reference for the MkDocs Output as Input plugin
---

# Configuration

The MkDocs Output as Input plugin provides several configuration options to customize its behavior.

## Basic Configuration

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      verbose: false           # Enable verbose logging (default: false)
```

## Configuration Options

### `stage_dir`

- **Type**: `string`
- **Default**: `"stage"`
- **Description**: Directory name for output files, relative to your project root

**Example**:
```yaml
plugins:
  - output-as-input:
      stage_dir: processed
```

This creates cousin files in a `processed/` directory instead of `stage/`.

### `html_element`

- **Type**: `string`
- **Default**: `"main"`
- **Description**: CSS selector for the HTML element to extract from the built pages

**Common values**:
- `"main"` - Extract the main content area
- `"article"` - Extract article elements
- `"div.content"` - Extract divs with class "content"
- `"#content"` - Extract element with id "content"

**Example**:
```yaml
plugins:
  - output-as-input:
      html_element: article.post-content
```

### `target_tag`

- **Type**: `string`
- **Default**: `"article"`
- **Description**: HTML tag to use in the output file (replaces the extracted element's tag)

**Example**:
```yaml
plugins:
  - output-as-input:
      html_element: main
      target_tag: section
```

This extracts `<main>` elements and converts them to `<section>` in the output.

### `verbose`

- **Type**: `boolean`
- **Default**: `false`
- **Description**: Enable detailed logging for debugging

**Example**:
```yaml
plugins:
  - output-as-input:
      verbose: true
```

## Configuration Examples

### Material Theme

For the Material theme, you might want to extract the inner content:

```yaml
plugins:
  - output-as-input:
      html_element: article.md-content__inner
      target_tag: div
```

### Custom Output Directory

```yaml
plugins:
  - output-as-input:
      stage_dir: hugo/content
      html_element: main
      target_tag: article
```

### Debug Mode

```yaml
plugins:
  - output-as-input:
      verbose: true
```

## Advanced Usage

### Multiple Processing Steps

You can use the plugin in a multi-step build process:

1. **MkDocs build** with output-as-input plugin
2. **Custom processing** of the stage directory
3. **Secondary build** with another static site generator

```bash
#!/bin/bash
# Build with MkDocs
mkdocs build

# Post-process the staged files
python process_stage.py

# Build with Hugo
hugo --contentDir=stage/
```

### Theme Compatibility

The plugin should work with any MkDocs theme. For best results:

1. Inspect your theme's HTML structure
2. Identify the main content element
3. Configure `html_element` accordingly

**Finding the right element**:
1. Build your site normally
2. Open a page in your browser
3. Use developer tools to inspect the HTML
4. Look for the element containing your content

## Troubleshooting

### No Output Files

If no cousin files are created:

1. Enable verbose mode
2. Check that HTML files exist in the site directory
3. Verify that the `html_element` selector matches your theme

### Empty Output Files

If cousin files are empty:

1. Check that the `html_element` selector is correct
2. Verify that the element exists in your HTML output
3. Try a more general selector like `"body"` for testing

### Permission Errors

If you get permission errors:

1. Ensure the project directory is writable
2. Try a different `stage_dir` location
3. Check file system permissions

</document_content>
</document>

<document index="12">
<source>docs/examples.md</source>
<document_content>
---
title: Examples
description: Real-world usage examples for the MkDocs Output as Input plugin
---

# Examples

This page provides practical examples of how to use the MkDocs Output as Input plugin in various scenarios.

## Basic Usage

### Simple Blog Post Processing

**Input** (`docs/posts/my-post.md`):
```markdown
---
title: My Blog Post
date: 2025-01-14
author: Jane Doe
tags: [python, documentation]
---

# My Blog Post

This is a **markdown** blog post with some content.
```

**Configuration** (`mkdocs.yml`):
```yaml
plugins:
  - output-as-input
```

**Output** (`stage/posts/my-post.md`):
```markdown
---
title: My Blog Post
date: 2025-01-14
author: Jane Doe
tags: [python, documentation]
---

<article class="md-content">
  <h1>My Blog Post</h1>
  <p>This is a <strong>markdown</strong> blog post with some content.</p>
</article>
```

## Multi-Stage Documentation Pipeline

### MkDocs → Hugo Pipeline

**Scenario**: Use MkDocs for authoring and Hugo for final site generation.

**MkDocs Configuration** (`mkdocs.yml`):
```yaml
site_name: My Documentation
theme:
  name: material

plugins:
  - search
  - output-as-input:
      stage_dir: hugo/content
      html_element: main
      target_tag: div
```

**Hugo Configuration** (`hugo.yaml`):
```yaml
contentDir: hugo/content
baseURL: https://example.com
```

**Build Script** (`build.sh`):
```bash
#!/bin/bash
set -e

echo "Building with MkDocs..."
mkdocs build

echo "Processing with Hugo..."
hugo --contentDir=hugo/content

echo "Done!"
```

### MkDocs → Jekyll Pipeline

**Configuration** (`mkdocs.yml`):
```yaml
plugins:
  - output-as-input:
      stage_dir: _posts
      html_element: article
      target_tag: div
```

**Post-processing** (`process.py`):
```python
import os
import re
from pathlib import Path

# Convert MkDocs output to Jekyll format
for md_file in Path("_posts").glob("**/*.md"):
    content = md_file.read_text()
    
    # Add Jekyll layout to frontmatter
    content = re.sub(
        r'(---\n.*?)\n---',
        r'\1\nlayout: post\n---',
        content,
        flags=re.DOTALL
    )
    
    md_file.write_text(content)
```

## Theme-Specific Examples

### Material Theme

**Extract inner content**:
```yaml
plugins:
  - output-as-input:
      html_element: article.md-content__inner
      target_tag: section
```

### ReadTheDocs Theme

**Extract main content**:
```yaml
plugins:
  - output-as-input:
      html_element: div.rst-content
      target_tag: article
```

### Custom Theme

**For a custom theme with specific structure**:
```yaml
plugins:
  - output-as-input:
      html_element: div.content-wrapper > div.main-content
      target_tag: main
```

## Content Processing Examples

### API Documentation

**Input** (`docs/api/users.md`):
```markdown
---
title: User API
api_version: v1
endpoint: /api/users
---

# User API

The User API allows you to manage users.

## GET /api/users

Returns a list of users.
```

**Configuration**:
```yaml
plugins:
  - mkdocstrings
  - output-as-input:
      stage_dir: api_docs
      html_element: main
      target_tag: section
```

### Tutorial Series

**Input** (`docs/tutorials/setup.md`):
```markdown
---
title: Setup Tutorial
series: getting-started
order: 1
difficulty: beginner
---

# Setup Tutorial

This tutorial will guide you through the setup process.
```

**Post-processing** to group by series:
```python
import yaml
from pathlib import Path
from collections import defaultdict

# Group tutorials by series
series_map = defaultdict(list)

for md_file in Path("stage/tutorials").glob("*.md"):
    with open(md_file) as f:
        content = f.read()
        
    # Extract frontmatter
    if content.startswith('---'):
        _, fm_text, body = content.split('---', 2)
        frontmatter = yaml.safe_load(fm_text)
        series = frontmatter.get('series', 'misc')
        
        series_map[series].append({
            'file': md_file,
            'title': frontmatter.get('title'),
            'order': frontmatter.get('order', 999)
        })

# Create index files for each series
for series, tutorials in series_map.items():
    tutorials.sort(key=lambda x: x['order'])
    
    index_content = f"# {series.title()} Series\n\n"
    for tutorial in tutorials:
        index_content += f"- [{tutorial['title']}]({tutorial['file'].name})\n"
    
    (Path("stage/tutorials") / f"{series}-index.md").write_text(index_content)
```

## Integration Examples

### GitHub Actions Workflow

**`.github/workflows/docs.yml`**:
```yaml
name: Documentation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install mkdocs-material vexy-mkdocs-output-as-input
      
      - name: Build with MkDocs
        run: mkdocs build
      
      - name: Process staged files
        run: python scripts/process_stage.py
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
```

### Docker Multi-Stage Build

**`Dockerfile`**:
```dockerfile
# Stage 1: MkDocs build
FROM python:3.11-slim as mkdocs-builder
WORKDIR /app
COPY requirements.txt .
RUN pip install -r requirements.txt
COPY docs/ docs/
COPY mkdocs.yml .
RUN mkdocs build

# Stage 2: Hugo build
FROM hugomods/hugo:latest as hugo-builder
WORKDIR /app
COPY --from=mkdocs-builder /app/stage ./content
COPY hugo.yaml .
RUN hugo

# Stage 3: Final image
FROM nginx:alpine
COPY --from=hugo-builder /app/public /usr/share/nginx/html
```

## Debugging Examples

### Verbose Mode

**Enable detailed logging**:
```yaml
plugins:
  - output-as-input:
      verbose: true
```

**Sample output**:
```
INFO - OutputAsInput: site_dir=/app/site, docs_dir=/app/docs
INFO - OutputAsInput: Captured source index.md
INFO - OutputAsInput: Captured source getting-started.md
INFO - OutputAsInput: Creating stage directory at /app/stage
INFO - OutputAsInput: Created cousin file /app/stage/index.md
INFO - OutputAsInput: Created cousin file /app/stage/getting-started.md
INFO - OutputAsInput: Processed 2/2 files
```

### Testing Different Selectors

**Test script** (`test_selectors.py`):
```python
from bs4 import BeautifulSoup
from pathlib import Path

html_file = Path("site/index.html")
html_content = html_file.read_text()
soup = BeautifulSoup(html_content, 'html.parser')

selectors = [
    'main',
    'article',
    'div.content',
    'div.md-content',
    '#content',
    'main.md-content'
]

for selector in selectors:
    element = soup.select_one(selector)
    if element:
        print(f"✓ {selector}: Found element with {len(element.get_text())} characters")
    else:
        print(f"✗ {selector}: No element found")
```

## Best Practices

1. **Start simple**: Begin with default settings and adjust as needed
2. **Use verbose mode**: Enable verbose logging during development
3. **Test selectors**: Verify your HTML element selector works across pages
4. **Backup frontmatter**: The plugin preserves frontmatter, but always keep backups
5. **Version control**: Keep both source and stage directories under version control
6. **Document your pipeline**: Create clear documentation for your processing steps

</document_content>
</document>

<document index="13">
<source>docs/getting-started.md</source>
<document_content>
---
title: Getting Started
description: Quick start guide for the MkDocs Output as Input plugin
---

# Getting Started

This guide will help you get up and running with the MkDocs Output as Input plugin.

## Installation

### From PyPI

```bash
pip install vexy-mkdocs-output-as-input
```

### From Source

```bash
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input
pip install -e .
```

## Basic Configuration

Add the plugin to your `mkdocs.yml` file:

```yaml
plugins:
  - search  # Keep your existing plugins
  - output-as-input
```

## Your First Build

1. **Create a simple Markdown file** with frontmatter:

   ```markdown
   ---
   title: My First Page
   author: Your Name
   date: 2025-01-14
   ---
   
   # My First Page
   
   This is some **markdown** content.
   ```

2. **Run MkDocs build**:

   ```bash
   mkdocs build
   ```

3. **Check the stage directory**:

   ```bash
   ls stage/
   ```

   You should see a cousin file with the same name as your source file.

## Verifying the Output

The cousin file will contain:

- **Original frontmatter** preserved exactly
- **Processed HTML content** extracted from the built site
- **Configurable HTML tag** wrapping the content

## Next Steps

- Learn about [configuration options](configuration.md)
- Explore [usage examples](examples.md)
- Check the [API reference](api.md)

## Troubleshooting

### Plugin Not Found

If you get an error about the plugin not being found:

```bash
pip install vexy-mkdocs-output-as-input
```

### No Output Files

Enable verbose mode to see what's happening:

```yaml
plugins:
  - output-as-input:
      verbose: true
```

### Permission Errors

Make sure you have write permissions in your project directory, or specify a different output directory:

```yaml
plugins:
  - output-as-input:
      stage_dir: /path/to/writable/directory
```

</document_content>
</document>

<document index="14">
<source>docs/index.md</source>
<document_content>
---
title: MkDocs Output as Input
description: Capture HTML output and create cousin Markdown files
---

# MkDocs Output as Input Plugin

Welcome to the documentation for the MkDocs Output as Input plugin! This plugin enables powerful post-processing workflows by capturing MkDocs HTML output and creating new Markdown files that preserve your original frontmatter.

## What does it do?

This plugin creates a bridge between MkDocs and other static site generators or processing pipelines:

```mermaid
graph LR
    A[Source Markdown<br/>with Frontmatter] --> B[MkDocs Build]
    B --> C[HTML Output]
    C --> D[Plugin Extracts<br/>Content]
    D --> E[Cousin Markdown<br/>with HTML + Frontmatter]
    E --> F[Further Processing]
```

## Quick Example

=== "Input (source.md)"

    ```markdown
    ---
    title: My Article
    date: 2025-01-14
    tags: [tutorial, mkdocs]
    ---
    
    # My Article
    
    This is my content with **Markdown** formatting.
    ```

=== "Output (stage/source.md)"

    ```markdown
    ---
    title: My Article
    date: 2025-01-14
    tags: [tutorial, mkdocs]
    ---
    
    <article class="md-content">
      <h1>My Article</h1>
      <p>This is my content with <strong>Markdown</strong> formatting.</p>
    </article>
    ```

## Key Features

- 🎯 **Preserves Frontmatter**: All your YAML metadata is maintained
- 🔍 **Selective Extraction**: Choose which HTML element to extract
- 🏷️ **Tag Transformation**: Convert extracted elements to different tags
- 📁 **Flexible Output**: Configure where cousin files are created
- 🐛 **Debug Support**: Verbose logging for troubleshooting

## Installation

```bash
pip install vexy-mkdocs-output-as-input
```

Then add to your `mkdocs.yml`:

```yaml
plugins:
  - output-as-input
```

## Next Steps

- [Getting Started](getting-started.md) - Set up your first configuration
- [Configuration](configuration.md) - Explore all options
- [Examples](examples.md) - See real-world use cases
- [API Reference](api.md) - Detailed plugin documentation
</document_content>
</document>

<document index="15">
<source>llms.txt</source>
<document_content>
Project Structure:
📁 vexy-mkdocs-output-as-input
├── 📁 .github
│   └── 📁 workflows
│       ├── 📄 ci.yml
│       └── 📄 release.yml
├── 📁 docs
│   ├── 📄 configuration.md
│   ├── 📄 getting-started.md
│   └── 📄 index.md
├── 📁 src
│   └── 📁 mkdocs_output_as_input
│       ├── 📄 __init__.py
│       └── 📄 plugin.py
├── 📁 tests
│   └── 📄 test_plugin.py
├── 📄 .gitignore
├── 📄 AGENTS.md
├── 📄 CHANGELOG.md
├── 📄 CLAUDE.md
├── 📄 GEMINI.md
├── 📄 LICENSE
├── 📄 llms.txt
├── 📄 mkdocs.yml
├── 📄 pyproject.toml
├── 📄 README.md
└── 📄 TODO.md


<documents>
<document index="1">
<source>.github/workflows/ci.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run pre-commit
        if: matrix.python-version == '3.11'
        run: pre-commit run --all-files

      - name: Run tests
        run: |
          pytest -v --cov=mkdocs_output_as_input --cov-report=xml --cov-report=term

      - name: Upload coverage
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run ruff
        run: ruff check --output-format=github .

      - name: Run black
        run: black --check --diff .

      - name: Run mypy
        run: mypy src
</document_content>
</document>

<document index="2">
<source>.github/workflows/release.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write  # Required for PyPI trusted publishing

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mkdocs-output-as-input
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # Trusted publishing configured in PyPI project settings

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Extract changelog section
        id: changelog
        run: |
          version=${GITHUB_REF#refs/tags/v}
          awk "/## \[$version\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.changelog.outputs.version }}
          body_path: release_notes.md
          files: dist/*
          draft: false
          prerelease: false
</document_content>
</document>

<document index="3">
<source>.gitignore</source>
<document_content>
# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
venv/
ENV/
env/
.venv
.env

# pyenv
.python-version

# pipenv
Pipfile.lock

# Poetry
poetry.lock

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# pytest
.pytest_cache/
.coverage
htmlcov/
.tox/
coverage.xml
*.cover
.hypothesis/

# Jupyter Notebook
.ipynb_checkpoints

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# MkDocs
site/
stage/
.cache/

# setuptools-scm
src/mkdocs_output_as_input/_version.py
</document_content>
</document>

<document index="4">
<source>AGENTS.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="5">
<source>CHANGELOG.md</source>
<document_content>
# Changelog

All notable changes to vexy-mkdocs-output-as-input will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [Unreleased]

## [0.2.0] - 2025-01-14

### Changed
- **BREAKING**: Migrated to src-layout package structure
- **BREAKING**: Minimum Python version is now 3.9
- Switched from Loguru to standard library logging for better integration
- Modernized packaging with PEP 621 compliant pyproject.toml
- Improved type hints throughout the codebase

### Added
- Comprehensive test suite with >90% coverage
- Pre-commit hooks for code quality
- GitHub Actions CI/CD workflows
- Support for Python 3.9, 3.10, 3.11, and 3.12
- Automated release process with trusted PyPI publishing
- Development documentation in README

### Fixed
- Better error handling for missing files
- Graceful handling of invalid YAML frontmatter
- Improved logging messages for debugging

## [0.1.0] - 2025-01-10

### Added
- Initial release of vexy-mkdocs-output-as-input plugin
- Core functionality to capture HTML output and create cousin Markdown files
- Configurable stage directory for output files
- Configurable HTML element extraction (default: `<main>`)
- Configurable target tag transformation (default: `<article>`)
- Preservation of original YAML frontmatter
- Verbose logging mode for debugging
- Basic documentation and examples

[Unreleased]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.2.0...HEAD
[0.2.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.1.0...v0.2.0
[0.1.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/releases/tag/v0.1.0
</document_content>
</document>

<document index="6">
<source>CLAUDE.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="7">
<source>GEMINI.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="8">
<source>LICENSE</source>
<document_content>
MIT License

Copyright (c) 2025 MkDocs Output as Input Contributors

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</document_content>
</document>

<document index="9">
<source>README.md</source>
<document_content>
# vexy-mkdocs-output-as-input

[![PyPI version](https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)
[![CI](https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg)](https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg)](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Python versions](https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)

A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.

## Features

This plugin enables powerful post-processing workflows by:

1. ✅ Preserving your original Markdown structure and frontmatter
2. ✅ Capturing the fully-rendered HTML output from MkDocs
3. ✅ Creating new Markdown files that combine original metadata with processed HTML
4. ✅ Enabling further processing by other static site generators

## Installation

Install from PyPI:

```bash
uv pip install --system --upgrade vexy-mkdocs-output-as-input
```

Or install from source:

```bash
pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input
```

## Quick Start

Add the plugin to your `mkdocs.yml`:

```yaml
plugins:
  - search  # Other plugins
  - output-as-input
```

Build your site:

```bash
mkdocs build
```

Find your processed files in the `stage/` directory (relative to your MkDocs project root).

## Configuration

All configuration options with their defaults:

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory name (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      verbose: false            # Enable verbose logging (default: false)
```

### Options Explained

| Option | Type | Default | Description |
|--------|------|---------|-------------|
| `stage_dir` | string | `"stage"` | Directory name for output files (relative to project root) |
| `html_element` | string | `"main"` | CSS selector for the HTML element to extract |
| `target_tag` | string | `"article"` | HTML tag to use in the output (replaces extracted element's tag) |
| `verbose` | boolean | `false` | Enable detailed logging for debugging |

## How It Works

### Input → Process → Output

1. **Input**: Your source Markdown with frontmatter
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   # My Page
   
   This is my content with **markdown**.
   ```

2. **MkDocs Processing**: Renders to HTML as usual
   ```html
   <main class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </main>
   ```

3. **Output**: Cousin file with preserved frontmatter + extracted HTML
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   <article class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </article>
   ```

## Use Cases

### 🔄 Multi-Stage Documentation Pipeline

Process documentation through MkDocs first, then feed to another SSG:

```yaml
# mkdocs.yml
plugins:
  - output-as-input:
      stage_dir: hugo/content

# Then run:
# mkdocs build && hugo build
```

### 📝 Content Extraction

Extract just the article content without theme wrapper:

```yaml
plugins:
  - output-as-input:
      html_element: article
      target_tag: div
```

### 🎨 Custom Post-Processing

Preserve MkDocs rendering while preparing for custom templates:

```yaml
plugins:
  - output-as-input:
      stage_dir: _includes
      html_element: main
      target_tag: section
```

## Examples

### Basic Example

```yaml
# mkdocs.yml
site_name: My Documentation
plugins:
  - output-as-input
```

### Advanced Example

```yaml
# mkdocs.yml
site_name: My Documentation
theme:
  name: material

plugins:
  - search
  - output-as-input:
      stage_dir: processed
      html_element: article.md-content__inner
      target_tag: main
      verbose: true

# Process specific content area from Material theme
```

### Integration Example

Using with other tools in a documentation pipeline:

```bash
#!/bin/bash
# build.sh

# Stage 1: Build with MkDocs + plugins
mkdocs build

# Stage 2: Process staged output
python post_process.py stage/

# Stage 3: Build final site
hugo --contentDir=stage/
```

## Development

### Setup Development Environment

```bash
# Clone the repository
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input

# Create virtual environment
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install in development mode
pip install -e .[dev]

# Install pre-commit hooks
pre-commit install
```

### Running Tests

```bash
# Run all tests
pytest

# Run with coverage
pytest --cov=mkdocs_output_as_input --cov-report=html

# Run specific test
pytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
```

### Code Quality

```bash
# Format code
black src tests

# Lint code
ruff check src tests

# Type check
mypy src
```

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Support

- 📧 Email: you@example.com
- 🐛 Issues: [GitHub Issues](https://github.com/vexyart/vexy-mkdocs-output-as-input/issues)
- 💬 Discussions: [GitHub Discussions](https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions)
</document_content>
</document>

<document index="10">
<source>TODO.md</source>
<document_content>
# TODO

## High Priority

- [ ] Fix broken plugin.py - methods are missing implementation and have syntax errors
- [ ] Fix broken test_plugin.py - methods are missing implementation

## Medium Priority

- [ ] Add missing documentation pages referenced in mkdocs.yml nav
- [ ] Add pre-commit configuration file
- [ ] Ensure git-tag-based VCS versioning with hatch is working
- [ ] Improve error handling and logging throughout plugin

## Low Priority

- [ ] Update CI workflow to use ruff format instead of black
- [ ] Add integration tests for real MkDocs builds

</document_content>
</document>

<document index="11">
<source>docs/configuration.md</source>
<document_content>
---
title: Configuration
description: Complete configuration reference for the MkDocs Output as Input plugin
---

# Configuration

The MkDocs Output as Input plugin provides several configuration options to customize its behavior.

## Basic Configuration

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      verbose: false           # Enable verbose logging (default: false)
```

## Configuration Options

### `stage_dir`

- **Type**: `string`
- **Default**: `"stage"`
- **Description**: Directory name for output files, relative to your project root

**Example**:
```yaml
plugins:
  - output-as-input:
      stage_dir: processed
```

This creates cousin files in a `processed/` directory instead of `stage/`.

### `html_element`

- **Type**: `string`
- **Default**: `"main"`
- **Description**: CSS selector for the HTML element to extract from the built pages

**Common values**:
- `"main"` - Extract the main content area
- `"article"` - Extract article elements
- `"div.content"` - Extract divs with class "content"
- `"#content"` - Extract element with id "content"

**Example**:
```yaml
plugins:
  - output-as-input:
      html_element: article.post-content
```

### `target_tag`

- **Type**: `string`
- **Default**: `"article"`
- **Description**: HTML tag to use in the output file (replaces the extracted element's tag)

**Example**:
```yaml
plugins:
  - output-as-input:
      html_element: main
      target_tag: section
```

This extracts `<main>` elements and converts them to `<section>` in the output.

### `verbose`

- **Type**: `boolean`
- **Default**: `false`
- **Description**: Enable detailed logging for debugging

**Example**:
```yaml
plugins:
  - output-as-input:
      verbose: true
```

## Configuration Examples

### Material Theme

For the Material theme, you might want to extract the inner content:

```yaml
plugins:
  - output-as-input:
      html_element: article.md-content__inner
      target_tag: div
```

### Custom Output Directory

```yaml
plugins:
  - output-as-input:
      stage_dir: hugo/content
      html_element: main
      target_tag: article
```

### Debug Mode

```yaml
plugins:
  - output-as-input:
      verbose: true
```

## Advanced Usage

### Multiple Processing Steps

You can use the plugin in a multi-step build process:

1. **MkDocs build** with output-as-input plugin
2. **Custom processing** of the stage directory
3. **Secondary build** with another static site generator

```bash
#!/bin/bash
# Build with MkDocs
mkdocs build

# Post-process the staged files
python process_stage.py

# Build with Hugo
hugo --contentDir=stage/
```

### Theme Compatibility

The plugin should work with any MkDocs theme. For best results:

1. Inspect your theme's HTML structure
2. Identify the main content element
3. Configure `html_element` accordingly

**Finding the right element**:
1. Build your site normally
2. Open a page in your browser
3. Use developer tools to inspect the HTML
4. Look for the element containing your content

## Troubleshooting

### No Output Files

If no cousin files are created:

1. Enable verbose mode
2. Check that HTML files exist in the site directory
3. Verify that the `html_element` selector matches your theme

### Empty Output Files

If cousin files are empty:

1. Check that the `html_element` selector is correct
2. Verify that the element exists in your HTML output
3. Try a more general selector like `"body"` for testing

### Permission Errors

If you get permission errors:

1. Ensure the project directory is writable
2. Try a different `stage_dir` location
3. Check file system permissions

</document_content>
</document>

<document index="12">
<source>docs/getting-started.md</source>
<document_content>
---
title: Getting Started
description: Quick start guide for the MkDocs Output as Input plugin
---

# Getting Started

This guide will help you get up and running with the MkDocs Output as Input plugin.

## Installation

### From PyPI

```bash
pip install vexy-mkdocs-output-as-input
```

### From Source

```bash
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input
pip install -e .
```

## Basic Configuration

Add the plugin to your `mkdocs.yml` file:

```yaml
plugins:
  - search  # Keep your existing plugins
  - output-as-input
```

## Your First Build

1. **Create a simple Markdown file** with frontmatter:

   ```markdown
   ---
   title: My First Page
   author: Your Name
   date: 2025-01-14
   ---
   
   # My First Page
   
   This is some **markdown** content.
   ```

2. **Run MkDocs build**:

   ```bash
   mkdocs build
   ```

3. **Check the stage directory**:

   ```bash
   ls stage/
   ```

   You should see a cousin file with the same name as your source file.

## Verifying the Output

The cousin file will contain:

- **Original frontmatter** preserved exactly
- **Processed HTML content** extracted from the built site
- **Configurable HTML tag** wrapping the content

## Next Steps

- Learn about [configuration options](configuration.md)
- Explore [usage examples](examples.md)
- Check the [API reference](api.md)

## Troubleshooting

### Plugin Not Found

If you get an error about the plugin not being found:

```bash
pip install vexy-mkdocs-output-as-input
```

### No Output Files

Enable verbose mode to see what's happening:

```yaml
plugins:
  - output-as-input:
      verbose: true
```

### Permission Errors

Make sure you have write permissions in your project directory, or specify a different output directory:

```yaml
plugins:
  - output-as-input:
      stage_dir: /path/to/writable/directory
```

</document_content>
</document>

<document index="13">
<source>docs/index.md</source>
<document_content>
---
title: MkDocs Output as Input
description: Capture HTML output and create cousin Markdown files
---

# MkDocs Output as Input Plugin

Welcome to the documentation for the MkDocs Output as Input plugin! This plugin enables powerful post-processing workflows by capturing MkDocs HTML output and creating new Markdown files that preserve your original frontmatter.

## What does it do?

This plugin creates a bridge between MkDocs and other static site generators or processing pipelines:

```mermaid
graph LR
    A[Source Markdown<br/>with Frontmatter] --> B[MkDocs Build]
    B --> C[HTML Output]
    C --> D[Plugin Extracts<br/>Content]
    D --> E[Cousin Markdown<br/>with HTML + Frontmatter]
    E --> F[Further Processing]
```

## Quick Example

=== "Input (source.md)"

    ```markdown
    ---
    title: My Article
    date: 2025-01-14
    tags: [tutorial, mkdocs]
    ---
    
    # My Article
    
    This is my content with **Markdown** formatting.
    ```

=== "Output (stage/source.md)"

    ```markdown
    ---
    title: My Article
    date: 2025-01-14
    tags: [tutorial, mkdocs]
    ---
    
    <article class="md-content">
      <h1>My Article</h1>
      <p>This is my content with <strong>Markdown</strong> formatting.</p>
    </article>
    ```

## Key Features

- 🎯 **Preserves Frontmatter**: All your YAML metadata is maintained
- 🔍 **Selective Extraction**: Choose which HTML element to extract
- 🏷️ **Tag Transformation**: Convert extracted elements to different tags
- 📁 **Flexible Output**: Configure where cousin files are created
- 🐛 **Debug Support**: Verbose logging for troubleshooting

## Installation

```bash
pip install vexy-mkdocs-output-as-input
```

Then add to your `mkdocs.yml`:

```yaml
plugins:
  - output-as-input
```

## Next Steps

- [Getting Started](getting-started.md) - Set up your first configuration
- [Configuration](configuration.md) - Explore all options
- [Examples](examples.md) - See real-world use cases
- [API Reference](api.md) - Detailed plugin documentation
</document_content>
</document>

<document index="14">
<source>llms.txt</source>
<document_content>
Project Structure:
📁 vexy-mkdocs-output-as-input
├── 📁 .github
│   └── 📁 workflows
│       ├── 📄 ci.yml
│       └── 📄 release.yml
├── 📁 docs
│   └── 📄 index.md
├── 📁 src
│   └── 📁 mkdocs_output_as_input
│       ├── 📄 __init__.py
│       └── 📄 plugin.py
├── 📁 tests
│   └── 📄 test_plugin.py
├── 📄 .gitignore
├── 📄 AGENTS.md
├── 📄 CHANGELOG.md
├── 📄 CLAUDE.md
├── 📄 GEMINI.md
├── 📄 LICENSE
├── 📄 mkdocs.yml
├── 📄 pyproject.toml
├── 📄 README.md
└── 📄 TODO.md


<documents>
<document index="1">
<source>.github/workflows/ci.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run pre-commit
        if: matrix.python-version == '3.11'
        run: pre-commit run --all-files

      - name: Run tests
        run: |
          pytest -v --cov=mkdocs_output_as_input --cov-report=xml --cov-report=term

      - name: Upload coverage
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run ruff
        run: ruff check --output-format=github .

      - name: Run black
        run: black --check --diff .

      - name: Run mypy
        run: mypy src
</document_content>
</document>

<document index="2">
<source>.github/workflows/release.yml</source>
<document_content>
# this_file: more/mkdocs-output-as-input-refactored/.github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write  # Required for PyPI trusted publishing

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for setuptools-scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mkdocs-output-as-input
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # Trusted publishing configured in PyPI project settings

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Extract changelog section
        id: changelog
        run: |
          version=${GITHUB_REF#refs/tags/v}
          awk "/## \[$version\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.changelog.outputs.version }}
          body_path: release_notes.md
          files: dist/*
          draft: false
          prerelease: false
</document_content>
</document>

<document index="3">
<source>.gitignore</source>
<document_content>
# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
venv/
ENV/
env/
.venv
.env

# pyenv
.python-version

# pipenv
Pipfile.lock

# Poetry
poetry.lock

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# pytest
.pytest_cache/
.coverage
htmlcov/
.tox/
coverage.xml
*.cover
.hypothesis/

# Jupyter Notebook
.ipynb_checkpoints

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# MkDocs
site/
stage/
.cache/

# setuptools-scm
src/mkdocs_output_as_input/_version.py
</document_content>
</document>

<document index="4">
<source>AGENTS.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="5">
<source>CHANGELOG.md</source>
<document_content>
# Changelog

All notable changes to vexy-mkdocs-output-as-input will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [Unreleased]

## [0.2.0] - 2025-01-14

### Changed
- **BREAKING**: Migrated to src-layout package structure
- **BREAKING**: Minimum Python version is now 3.9
- Switched from Loguru to standard library logging for better integration
- Modernized packaging with PEP 621 compliant pyproject.toml
- Improved type hints throughout the codebase

### Added
- Comprehensive test suite with >90% coverage
- Pre-commit hooks for code quality
- GitHub Actions CI/CD workflows
- Support for Python 3.9, 3.10, 3.11, and 3.12
- Automated release process with trusted PyPI publishing
- Development documentation in README

### Fixed
- Better error handling for missing files
- Graceful handling of invalid YAML frontmatter
- Improved logging messages for debugging

## [0.1.0] - 2025-01-10

### Added
- Initial release of vexy-mkdocs-output-as-input plugin
- Core functionality to capture HTML output and create cousin Markdown files
- Configurable stage directory for output files
- Configurable HTML element extraction (default: `<main>`)
- Configurable target tag transformation (default: `<article>`)
- Preservation of original YAML frontmatter
- Verbose logging mode for debugging
- Basic documentation and examples

[Unreleased]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.2.0...HEAD
[0.2.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/compare/v0.1.0...v0.2.0
[0.1.0]: https://github.com/vexyart/vexy-mkdocs-output-as-input/releases/tag/v0.1.0
</document_content>
</document>

<document index="6">
<source>CLAUDE.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="7">
<source>GEMINI.md</source>
<document_content>

# `https://github.com/vexyart/vexy-mkdocs-output-as-input`

## Project Overview

This is an MkDocs plugin called `vexy-mkdocs-output-as-input` that captures rendered HTML output from MkDocs and creates "cousin" Markdown files containing the original YAML frontmatter plus the extracted HTML content. This enables post-processing workflows with other static site generators.

## Development Commands

### Setup & Installation
```bash
# Install development dependencies
uv pip install -e ".[dev,test,docs]"

# Install pre-commit hooks
pre-commit install
```

### Testing
```bash
# Run full test suite
python -m pytest

# Run with coverage
python -m pytest --cov=mkdocs_output_as_input --cov-report=term-missing

# Run specific test
python -m pytest tests/test_plugin.py::test_plugin_default_config -v
```

### Code Quality
```bash
# Run all pre-commit hooks
pre-commit run --all-files

# Individual tools
python -m ruff check src tests
python -m ruff format src tests
python -m mypy src
```

### Documentation
```bash
# Serve documentation locally
mkdocs serve

# Build documentation
mkdocs build
```

## Architecture & Key Components

### Plugin Structure
The plugin is implemented in `src/mkdocs_output_as_input/plugin.py` with:
- `OutputAsInputPlugin` class extending `mkdocs.plugins.BasePlugin`
- Configuration schema with options: `stage_dir`, `html_element`, `target_tag`, `verbose`
- Two main hooks:
  - `on_page_read_source`: Captures source files and frontmatter during MkDocs processing
  - `on_post_build`: Post-processes HTML and creates cousin files after build

### Plugin Configuration
In `mkdocs.yml`:
```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory (default: "stage")
      html_element: main        # HTML element to extract (default: "main")
      target_tag: article       # Tag to wrap content (default: "article")
      verbose: true            # Enable debug logging
```

### Key Implementation Details
- Uses BeautifulSoup4 for HTML parsing and extraction
- Preserves YAML frontmatter from source Markdown files
- Creates output files with pattern: `{stage_dir}/{original_path}.md`
- Handles edge cases: missing HTML elements, parsing errors, file I/O issues

## Testing Guidelines

The test suite in `tests/test_plugin.py` covers:
- Default configuration behavior
- Custom configuration options
- Frontmatter preservation
- HTML extraction with different selectors
- Error handling scenarios
- Verbose logging output

When adding features:
1. Write tests first following existing patterns
2. Ensure >90% code coverage (CI enforces this)
3. Test both success and error paths
4. Use the provided fixtures (`plugin_instance`, `temp_docs_dir`)

## Release Process

The project uses GitHub Actions for automated releases:
1. Update version in CHANGELOG.md following Keep a Changelog format
2. Create a release on GitHub with tag `v{version}`
3. CI automatically publishes to PyPI using trusted publishing

## Common Development Tasks

### Adding a New Configuration Option
1. Add to `config_scheme` in `plugin.py`
2. Update `__init__` method to use the option
3. Implement logic in relevant hook methods
4. Add tests for the new option
5. Update documentation in README.md and docs/

### Debugging Plugin Behavior
1. Enable verbose mode in mkdocs.yml
2. Use `logger.debug()` statements (already configured with loguru)
3. Run MkDocs with: `mkdocs build -v`
4. Check the stage directory for output files

### Working with MkDocs Events
The plugin uses MkDocs event hooks. Key references:
- [MkDocs Plugin Development](https://www.mkdocs.org/dev-guide/plugins/)
- [Available Events](https://www.mkdocs.org/dev-guide/plugins/#events)
- Current hooks: `on_page_read_source`, `on_post_build`

## Project-Specific Notes

- The plugin must handle various MkDocs themes gracefully
- Output files should be valid Markdown with proper YAML frontmatter
- The stage directory is created automatically if it doesn't exist
- BeautifulSoup parser uses 'html.parser' for consistency across platforms
</document_content>
</document>

<document index="8">
<source>LICENSE</source>
<document_content>
MIT License

Copyright (c) 2025 MkDocs Output as Input Contributors

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</document_content>
</document>

<document index="9">
<source>README.md</source>
<document_content>
# vexy-mkdocs-output-as-input

[![PyPI version](https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)
[![CI](https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg)](https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg)](https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Python versions](https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg)](https://pypi.org/project/vexy-mkdocs-output-as-input/)

A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.

## Features

This plugin enables powerful post-processing workflows by:

1. ✅ Preserving your original Markdown structure and frontmatter
2. ✅ Capturing the fully-rendered HTML output from MkDocs
3. ✅ Creating new Markdown files that combine original metadata with processed HTML
4. ✅ Enabling further processing by other static site generators

## Installation

Install from PyPI:

```bash
uv pip install --system --upgrade vexy-mkdocs-output-as-input
```

Or install from source:

```bash
pip install git+https://github.com/vexyart/vexy-mkdocs-output-as-input
```

## Quick Start

Add the plugin to your `mkdocs.yml`:

```yaml
plugins:
  - search  # Other plugins
  - output-as-input
```

Build your site:

```bash
mkdocs build
```

Find your processed files in the `stage/` directory (relative to your MkDocs project root).

## Configuration

All configuration options with their defaults:

```yaml
plugins:
  - output-as-input:
      stage_dir: stage          # Output directory name (default: 'stage')
      html_element: main        # HTML element to extract (default: 'main')
      target_tag: article       # Tag to use in output (default: 'article')
      verbose: false            # Enable verbose logging (default: false)
```

### Options Explained

| Option | Type | Default | Description |
|--------|------|---------|-------------|
| `stage_dir` | string | `"stage"` | Directory name for output files (relative to project root) |
| `html_element` | string | `"main"` | CSS selector for the HTML element to extract |
| `target_tag` | string | `"article"` | HTML tag to use in the output (replaces extracted element's tag) |
| `verbose` | boolean | `false` | Enable detailed logging for debugging |

## How It Works

### Input → Process → Output

1. **Input**: Your source Markdown with frontmatter
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   # My Page
   
   This is my content with **markdown**.
   ```

2. **MkDocs Processing**: Renders to HTML as usual
   ```html
   <main class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </main>
   ```

3. **Output**: Cousin file with preserved frontmatter + extracted HTML
   ```markdown
   ---
   title: My Page
   author: Jane Doe
   ---
   
   <article class="md-content">
     <h1>My Page</h1>
     <p>This is my content with <strong>markdown</strong>.</p>
   </article>
   ```

## Use Cases

### 🔄 Multi-Stage Documentation Pipeline

Process documentation through MkDocs first, then feed to another SSG:

```yaml
# mkdocs.yml
plugins:
  - output-as-input:
      stage_dir: hugo/content

# Then run:
# mkdocs build && hugo build
```

### 📝 Content Extraction

Extract just the article content without theme wrapper:

```yaml
plugins:
  - output-as-input:
      html_element: article
      target_tag: div
```

### 🎨 Custom Post-Processing

Preserve MkDocs rendering while preparing for custom templates:

```yaml
plugins:
  - output-as-input:
      stage_dir: _includes
      html_element: main
      target_tag: section
```

## Examples

### Basic Example

```yaml
# mkdocs.yml
site_name: My Documentation
plugins:
  - output-as-input
```

### Advanced Example

```yaml
# mkdocs.yml
site_name: My Documentation
theme:
  name: material

plugins:
  - search
  - output-as-input:
      stage_dir: processed
      html_element: article.md-content__inner
      target_tag: main
      verbose: true

# Process specific content area from Material theme
```

### Integration Example

Using with other tools in a documentation pipeline:

```bash
#!/bin/bash
# build.sh

# Stage 1: Build with MkDocs + plugins
mkdocs build

# Stage 2: Process staged output
python post_process.py stage/

# Stage 3: Build final site
hugo --contentDir=stage/
```

## Development

### Setup Development Environment

```bash
# Clone the repository
git clone https://github.com/vexyart/vexy-mkdocs-output-as-input
cd vexy-mkdocs-output-as-input

# Create virtual environment
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install in development mode
pip install -e .[dev]

# Install pre-commit hooks
pre-commit install
```

### Running Tests

```bash
# Run all tests
pytest

# Run with coverage
pytest --cov=mkdocs_output_as_input --cov-report=html

# Run specific test
pytest tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
```

### Code Quality

```bash
# Format code
black src tests

# Lint code
ruff check src tests

# Type check
mypy src
```

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Support

- 📧 Email: you@example.com
- 🐛 Issues: [GitHub Issues](https://github.com/vexyart/vexy-mkdocs-output-as-input/issues)
- 💬 Discussions: [GitHub Discussions](https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions)
</document_content>
</document>

<document index="10">
<source>TODO.md</source>
<document_content>
# TODO


</document_content>
</document>

<document index="11">
<source>docs/index.md</source>
<document_content>
---
title: MkDocs Output as Input
description: Capture HTML output and create cousin Markdown files
---

# MkDocs Output as Input Plugin

Welcome to the documentation for the MkDocs Output as Input plugin! This plugin enables powerful post-processing workflows by capturing MkDocs HTML output and creating new Markdown files that preserve your original frontmatter.

## What does it do?

This plugin creates a bridge between MkDocs and other static site generators or processing pipelines:

```mermaid
graph LR
    A[Source Markdown<br/>with Frontmatter] --> B[MkDocs Build]
    B --> C[HTML Output]
    C --> D[Plugin Extracts<br/>Content]
    D --> E[Cousin Markdown<br/>with HTML + Frontmatter]
    E --> F[Further Processing]
```

## Quick Example

=== "Input (source.md)"

    ```markdown
    ---
    title: My Article
    date: 2025-01-14
    tags: [tutorial, mkdocs]
    ---
    
    # My Article
    
    This is my content with **Markdown** formatting.
    ```

=== "Output (stage/source.md)"

    ```markdown
    ---
    title: My Article
    date: 2025-01-14
    tags: [tutorial, mkdocs]
    ---
    
    <article class="md-content">
      <h1>My Article</h1>
      <p>This is my content with <strong>Markdown</strong> formatting.</p>
    </article>
    ```

## Key Features

- 🎯 **Preserves Frontmatter**: All your YAML metadata is maintained
- 🔍 **Selective Extraction**: Choose which HTML element to extract
- 🏷️ **Tag Transformation**: Convert extracted elements to different tags
- 📁 **Flexible Output**: Configure where cousin files are created
- 🐛 **Debug Support**: Verbose logging for troubleshooting

## Installation

```bash
pip install vexy-mkdocs-output-as-input
```

Then add to your `mkdocs.yml`:

```yaml
plugins:
  - output-as-input
```

## Next Steps

- [Getting Started](getting-started.md) - Set up your first configuration
- [Configuration](configuration.md) - Explore all options
- [Examples](examples.md) - See real-world use cases
- [API Reference](api.md) - Detailed plugin documentation
</document_content>
</document>

<document index="12">
<source>mkdocs.yml</source>
<document_content>
---
markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.superfences
  - pymdownx.snippets
  - admonition
  - pymdownx.details
  - pymdownx.tabbed:
      alternate_style: true
  - toc:
      permalink: true
nav:
  - Home: index.md
  - Getting Started: getting-started.md
  - Configuration: configuration.md
  - Examples: examples.md
  - API Reference: api.md
plugins:
  - search
  - output-as-input:
      stage_dir: stage
      verbose: true
  - mkdocstrings:
      handlers:
        python:
          options:
            show_source: true
repo_name: vexy-mkdocs-output-as-input
repo_url: https://github.com/vexyart/vexy-mkdocs-output-as-input
# this_file: more/vexy-mkdocs-output-as-input-refactored/mkdocs.yml
site_name: MkDocs Output as Input Plugin
site_url: https://vexyart.github.io/vexy-mkdocs-output-as-input/
theme:
  features:
    - navigation.sections
    - navigation.expand
    - navigation.top
    - search.suggest
    - search.highlight
    - content.code.copy
  name: material
  palette:
    - accent: indigo
      primary: indigo
      scheme: default
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    - accent: indigo
      primary: indigo
      scheme: slate
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
</document_content>
</document>

<document index="13">
<source>pyproject.toml</source>
<document_content>
# this_file: more/mkdocs-plugins/vexy-mkdocs-output-as-input/pyproject.toml

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "vexy-mkdocs-output-as-input"
dynamic = ["version"]
description = "MkDocs plugin that captures HTML output and creates cousin Markdown files with original frontmatter"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
maintainers = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
keywords = ["mkdocs", "plugin", "documentation", "html", "markdown", "postprocessing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: MkDocs",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
    "mkdocs>=1.6.0",
    "beautifulsoup4>=4.12.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "black>=23.7.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "types-pyyaml>=6.0.0",
    "types-beautifulsoup4>=4.12.0",
]
docs = [
    "vexy-mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Documentation = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Repository = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Issues = "https://github.com/vexyart/vexy-mkdocs-output-as-input/issues"
Changelog = "https://github.com/vexyart/vexy-mkdocs-output-as-input/blob/main/CHANGELOG.md"

[project.entry-points."mkdocs.plugins"]
output-as-input = "mkdocs_output_as_input.plugin:OutputAsInputPlugin"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/mkdocs_output_as_input"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/CHANGELOG.md",
]

[tool.ruff]
line-length = 100
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

[tool.black]
line-length = 100
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "mkdocs.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/mkdocs_output_as_input"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 90
</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/__init__.py
# Language: python

from mkdocs_output_as_input.plugin import OutputAsInputPlugin
from mkdocs_output_as_input._version import __version__


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/plugin.py
# Language: python

import logging
from pathlib import Path
from typing import Any, Optional
import yaml
from bs4 import BeautifulSoup
from mkdocs.config import config_options
from mkdocs.plugins import BasePlugin
from mkdocs.structure.pages import Page

class OutputAsInputPlugin(B, a, s, e, P, l, u, g, i, n):
    """MkDocs plugin that captures HTML output and creates cousin Markdown files."""
    def __init__((self)):
        """Initialize the plugin."""
    def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
        """Store site and docs directories."""
    def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
        """Capture source Markdown content and frontmatter."""
    def on_post_build((self, config: dict[str, Any])) -> None:
        """After build, process all HTML files and create cousin Markdowns."""
    def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
        """Process a single file: extract HTML and create cousin Markdown."""

def __init__((self)):
    """Initialize the plugin."""

def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
    """Store site and docs directories."""

def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
    """Capture source Markdown content and frontmatter."""

def on_post_build((self, config: dict[str, Any])) -> None:
    """After build, process all HTML files and create cousin Markdowns."""

def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
    """Process a single file: extract HTML and create cousin Markdown."""


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/tests/test_plugin.py
# Language: python

import tempfile
from pathlib import Path
from unittest.mock import Mock
import pytest
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

class TestOutputAsInputPlugin:
    """Test cases for OutputAsInputPlugin."""
    def test_default_config((self, plugin)):
        """Test plugin with default configuration."""
    def test_on_config_stores_paths((self, plugin, mkdocs_config)):
        """Test that on_config stores site and docs directories."""
    def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing source content and frontmatter."""
    def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing content without frontmatter."""
    def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
        """Test creating cousin files after build."""
    def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
        """Test handling missing HTML output."""
    def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
        """Test handling HTML without target element."""
    def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
        """Test with custom configuration options."""
    def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test handling invalid YAML frontmatter."""
    def test_file_read_error((self, plugin, mkdocs_config)):
        """Test handling file read errors."""

def plugin((self)):
    """Create a plugin instance."""

def temp_dir((self)):
    """Create a temporary directory."""

def mkdocs_config((self, temp_dir)):
    """Create a mock MkDocs config."""

def test_default_config((self, plugin)):
    """Test plugin with default configuration."""

def test_on_config_stores_paths((self, plugin, mkdocs_config)):
    """Test that on_config stores site and docs directories."""

def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing source content and frontmatter."""

def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing content without frontmatter."""

def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
    """Test creating cousin files after build."""

def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
    """Test handling missing HTML output."""

def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
    """Test handling HTML without target element."""

def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
    """Test with custom configuration options."""

def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test handling invalid YAML frontmatter."""

def test_file_read_error((self, plugin, mkdocs_config)):
    """Test handling file read errors."""


</documents>
</document_content>
</document>

<document index="15">
<source>mkdocs.yml</source>
<document_content>
---
markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.superfences
  - pymdownx.snippets
  - admonition
  - pymdownx.details
  - pymdownx.tabbed:
      alternate_style: true
  - toc:
      permalink: true
nav:
  - Home: index.md
  - Getting Started: getting-started.md
  - Configuration: configuration.md
  - Examples: examples.md
  - API Reference: api.md
plugins:
  - search
  - output-as-input:
      stage_dir: stage
      verbose: true
  - mkdocstrings:
      handlers:
        python:
          options:
            show_source: true
repo_name: vexy-mkdocs-output-as-input
repo_url: https://github.com/vexyart/vexy-mkdocs-output-as-input
# this_file: more/vexy-mkdocs-output-as-input-refactored/mkdocs.yml
site_name: MkDocs Output as Input Plugin
site_url: https://vexyart.github.io/vexy-mkdocs-output-as-input/
theme:
  features:
    - navigation.sections
    - navigation.expand
    - navigation.top
    - search.suggest
    - search.highlight
    - content.code.copy
  name: material
  palette:
    - accent: indigo
      primary: indigo
      scheme: default
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    - accent: indigo
      primary: indigo
      scheme: slate
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
</document_content>
</document>

<document index="16">
<source>pyproject.toml</source>
<document_content>
# this_file: more/mkdocs-plugins/vexy-mkdocs-output-as-input/pyproject.toml

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "vexy-mkdocs-output-as-input"
dynamic = ["version"]
description = "MkDocs plugin that captures HTML output and creates cousin Markdown files with original frontmatter"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
maintainers = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
keywords = ["mkdocs", "plugin", "documentation", "html", "markdown", "postprocessing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: MkDocs",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
    "mkdocs>=1.6.0",
    "beautifulsoup4>=4.12.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "black>=23.7.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "types-pyyaml>=6.0.0",
    "types-beautifulsoup4>=4.12.0",
]
docs = [
    "vexy-mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Documentation = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Repository = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Issues = "https://github.com/vexyart/vexy-mkdocs-output-as-input/issues"
Changelog = "https://github.com/vexyart/vexy-mkdocs-output-as-input/blob/main/CHANGELOG.md"

[project.entry-points."mkdocs.plugins"]
output-as-input = "mkdocs_output_as_input.plugin:OutputAsInputPlugin"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/mkdocs_output_as_input"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/CHANGELOG.md",
]

[tool.ruff]
line-length = 100
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

[tool.black]
line-length = 100
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "mkdocs.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/mkdocs_output_as_input"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 90
</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/__init__.py
# Language: python

from mkdocs_output_as_input.plugin import OutputAsInputPlugin
from mkdocs_output_as_input._version import __version__


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/plugin.py
# Language: python

import logging
from pathlib import Path
from typing import Any, Optional
import yaml
from bs4 import BeautifulSoup
from mkdocs.config import config_options
from mkdocs.plugins import BasePlugin
from mkdocs.structure.pages import Page

class OutputAsInputPlugin(B, a, s, e, P, l, u, g, i, n):
    """MkDocs plugin that captures HTML output and creates cousin Markdown files."""
    def __init__((self)):
        """Initialize the plugin."""
    def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
        """Store site and docs directories."""
    def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
        """Capture source Markdown content and frontmatter."""
    def on_post_build((self, config: dict[str, Any])) -> None:
        """After build, process all HTML files and create cousin Markdowns."""
    def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
        """Process a single file: extract HTML and create cousin Markdown."""

def __init__((self)):
    """Initialize the plugin."""

def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
    """Store site and docs directories."""

def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
    """Capture source Markdown content and frontmatter."""

def on_post_build((self, config: dict[str, Any])) -> None:
    """After build, process all HTML files and create cousin Markdowns."""

def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
    """Process a single file: extract HTML and create cousin Markdown."""


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/tests/test_plugin.py
# Language: python

import tempfile
from pathlib import Path
from unittest.mock import Mock
import pytest
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

class TestOutputAsInputPlugin:
    """Test cases for OutputAsInputPlugin."""
    def test_default_config((self, plugin)):
        """Test plugin with default configuration."""
    def test_on_config_stores_paths((self, plugin, mkdocs_config)):
        """Test that on_config stores site and docs directories."""
    def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing source content and frontmatter."""
    def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing content without frontmatter."""
    def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
        """Test creating cousin files after build."""
    def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
        """Test handling missing HTML output."""
    def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
        """Test handling HTML without target element."""
    def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
        """Test with custom configuration options."""
    def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test handling invalid YAML frontmatter."""
    def test_file_read_error((self, plugin, mkdocs_config)):
        """Test handling file read errors."""

def plugin((self)):
    """Create a plugin instance."""

def temp_dir((self)):
    """Create a temporary directory."""

def mkdocs_config((self, temp_dir)):
    """Create a mock MkDocs config."""

def test_default_config((self, plugin)):
    """Test plugin with default configuration."""

def test_on_config_stores_paths((self, plugin, mkdocs_config)):
    """Test that on_config stores site and docs directories."""

def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing source content and frontmatter."""

def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing content without frontmatter."""

def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
    """Test creating cousin files after build."""

def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
    """Test handling missing HTML output."""

def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
    """Test handling HTML without target element."""

def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
    """Test with custom configuration options."""

def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test handling invalid YAML frontmatter."""

def test_file_read_error((self, plugin, mkdocs_config)):
    """Test handling file read errors."""


</documents>
</document_content>
</document>

<document index="16">
<source>mkdocs.yml</source>
<document_content>
---
markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.superfences
  - pymdownx.snippets
  - admonition
  - pymdownx.details
  - pymdownx.tabbed:
      alternate_style: true
  - toc:
      permalink: true
nav:
  - Home: index.md
  - Getting Started: getting-started.md
  - Configuration: configuration.md
  - Examples: examples.md
  - API Reference: api.md
plugins:
  - search
  - output-as-input:
      stage_dir: stage
      verbose: true
  - mkdocstrings:
      handlers:
        python:
          options:
            show_source: true
repo_name: vexy-mkdocs-output-as-input
repo_url: https://github.com/vexyart/vexy-mkdocs-output-as-input
# this_file: more/vexy-mkdocs-output-as-input-refactored/mkdocs.yml
site_name: MkDocs Output as Input Plugin
site_url: https://vexyart.github.io/vexy-mkdocs-output-as-input/
theme:
  features:
    - navigation.sections
    - navigation.expand
    - navigation.top
    - search.suggest
    - search.highlight
    - content.code.copy
  name: material
  palette:
    - accent: indigo
      primary: indigo
      scheme: default
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    - accent: indigo
      primary: indigo
      scheme: slate
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
</document_content>
</document>

<document index="17">
<source>pyproject.toml</source>
<document_content>
# this_file: more/mkdocs-plugins/vexy-mkdocs-output-as-input/pyproject.toml

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "vexy-mkdocs-output-as-input"
dynamic = ["version"]
description = "MkDocs plugin that captures HTML output and creates cousin Markdown files with original frontmatter"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
maintainers = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
keywords = ["mkdocs", "plugin", "documentation", "html", "markdown", "postprocessing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: MkDocs",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
    "mkdocs>=1.6.0",
    "beautifulsoup4>=4.12.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "black>=23.7.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "types-pyyaml>=6.0.0",
    "types-beautifulsoup4>=4.12.0",
]
docs = [
    "vexy-mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Documentation = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Repository = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Issues = "https://github.com/vexyart/vexy-mkdocs-output-as-input/issues"
Changelog = "https://github.com/vexyart/vexy-mkdocs-output-as-input/blob/main/CHANGELOG.md"

[project.entry-points."mkdocs.plugins"]
output-as-input = "mkdocs_output_as_input.plugin:OutputAsInputPlugin"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/mkdocs_output_as_input"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/CHANGELOG.md",
]

[tool.ruff]
line-length = 100
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

[tool.black]
line-length = 100
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "mkdocs.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/mkdocs_output_as_input"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 90
</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/__init__.py
# Language: python

from mkdocs_output_as_input.plugin import OutputAsInputPlugin
from mkdocs_output_as_input._version import __version__


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/plugin.py
# Language: python

import logging
from pathlib import Path
from typing import Any, Optional
import yaml
from bs4 import BeautifulSoup
from mkdocs.config import config_options
from mkdocs.plugins import BasePlugin
from mkdocs.structure.pages import Page

class OutputAsInputPlugin(B, a, s, e, P, l, u, g, i, n):
    """MkDocs plugin that captures HTML output and creates cousin Markdown files."""
    def __init__((self)):
        """Initialize the plugin."""
    def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
        """Store site and docs directories."""
    def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
        """Capture source Markdown content and frontmatter."""
    def on_post_build((self, config: dict[str, Any])) -> None:
        """After build, process all HTML files and create cousin Markdowns."""
    def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
        """Process a single file: extract HTML and create cousin Markdown."""

def __init__((self)):
    """Initialize the plugin."""

def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
    """Store site and docs directories."""

def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
    """Capture source Markdown content and frontmatter."""

def on_post_build((self, config: dict[str, Any])) -> None:
    """After build, process all HTML files and create cousin Markdowns."""

def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
    """Process a single file: extract HTML and create cousin Markdown."""


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/tests/test_plugin.py
# Language: python

import tempfile
from pathlib import Path
from unittest.mock import Mock
import pytest
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

class TestOutputAsInputPlugin:
    """Test cases for OutputAsInputPlugin."""
    def test_default_config((self, plugin)):
        """Test plugin with default configuration."""
    def test_on_config_stores_paths((self, plugin, mkdocs_config)):
        """Test that on_config stores site and docs directories."""
    def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing source content and frontmatter."""
    def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing content without frontmatter."""
    def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
        """Test creating cousin files after build."""
    def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
        """Test handling missing HTML output."""
    def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
        """Test handling HTML without target element."""
    def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
        """Test with custom configuration options."""
    def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test handling invalid YAML frontmatter."""
    def test_file_read_error((self, plugin, mkdocs_config)):
        """Test handling file read errors."""

def plugin((self)):
    """Create a plugin instance."""

def temp_dir((self)):
    """Create a temporary directory."""

def mkdocs_config((self, temp_dir)):
    """Create a mock MkDocs config."""

def test_default_config((self, plugin)):
    """Test plugin with default configuration."""

def test_on_config_stores_paths((self, plugin, mkdocs_config)):
    """Test that on_config stores site and docs directories."""

def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing source content and frontmatter."""

def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing content without frontmatter."""

def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
    """Test creating cousin files after build."""

def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
    """Test handling missing HTML output."""

def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
    """Test handling HTML without target element."""

def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
    """Test with custom configuration options."""

def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test handling invalid YAML frontmatter."""

def test_file_read_error((self, plugin, mkdocs_config)):
    """Test handling file read errors."""


</documents>
</document_content>
</document>

<document index="17">
<source>mkdocs.yml</source>
<document_content>
---
markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.superfences
  - pymdownx.snippets
  - admonition
  - pymdownx.details
  - pymdownx.tabbed:
      alternate_style: true
  - toc:
      permalink: true
nav:
  - Home: index.md
  - Getting Started: getting-started.md
  - Configuration: configuration.md
  - Examples: examples.md
  - API Reference: api.md
plugins:
  - search
  - output-as-input:
      stage_dir: stage
      verbose: true
  - mkdocstrings:
      handlers:
        python:
          options:
            show_source: true
repo_name: vexy-mkdocs-output-as-input
repo_url: https://github.com/vexyart/vexy-mkdocs-output-as-input
# this_file: more/vexy-mkdocs-output-as-input-refactored/mkdocs.yml
site_name: MkDocs Output as Input Plugin
site_url: https://vexyart.github.io/vexy-mkdocs-output-as-input/
theme:
  features:
    - navigation.sections
    - navigation.expand
    - navigation.top
    - search.suggest
    - search.highlight
    - content.code.copy
  name: material
  palette:
    - accent: indigo
      primary: indigo
      scheme: default
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    - accent: indigo
      primary: indigo
      scheme: slate
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
</document_content>
</document>

<document index="18">
<source>pyproject.toml</source>
<document_content>
# this_file: more/mkdocs-plugins/vexy-mkdocs-output-as-input/pyproject.toml

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "vexy-mkdocs-output-as-input"
dynamic = ["version"]
description = "MkDocs plugin that captures HTML output and creates cousin Markdown files with original frontmatter"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
maintainers = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
keywords = ["mkdocs", "plugin", "documentation", "html", "markdown", "postprocessing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: MkDocs",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
    "mkdocs>=1.6.0",
    "beautifulsoup4>=4.12.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "black>=23.7.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "types-pyyaml>=6.0.0",
    "types-beautifulsoup4>=4.12.0",
]
docs = [
    "vexy-mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Documentation = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Repository = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Issues = "https://github.com/vexyart/vexy-mkdocs-output-as-input/issues"
Changelog = "https://github.com/vexyart/vexy-mkdocs-output-as-input/blob/main/CHANGELOG.md"

[project.entry-points."mkdocs.plugins"]
output-as-input = "mkdocs_output_as_input.plugin:OutputAsInputPlugin"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/mkdocs_output_as_input"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/CHANGELOG.md",
]

[tool.ruff]
line-length = 100
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

[tool.black]
line-length = 100
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "mkdocs.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/mkdocs_output_as_input"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 90
</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/__init__.py
# Language: python

from mkdocs_output_as_input.plugin import OutputAsInputPlugin
from mkdocs_output_as_input._version import __version__


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/plugin.py
# Language: python

import logging
from pathlib import Path
from typing import Any, Dict, Optional
import yaml
from bs4 import BeautifulSoup
from mkdocs.config import config_options
from mkdocs.plugins import BasePlugin
from mkdocs.structure.pages import Page

class OutputAsInputPlugin(B, a, s, e, P, l, u, g, i, n):
    """MkDocs plugin that captures HTML output and creates cousin Markdown files."""
    def __init__((self)) -> None:
        """Initialize the plugin."""
    def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
        """Store site and docs directories."""
    def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
        """Capture source Markdown content and frontmatter."""
    def on_post_build((self, config: dict[str, Any])) -> None:
        """After build, process all HTML files and create cousin Markdowns."""
    def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
        """Process a single file: extract HTML and create cousin Markdown."""

def __init__((self)) -> None:
    """Initialize the plugin."""

def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
    """Store site and docs directories."""

def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
    """Capture source Markdown content and frontmatter."""

def on_post_build((self, config: dict[str, Any])) -> None:
    """After build, process all HTML files and create cousin Markdowns."""

def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
    """Process a single file: extract HTML and create cousin Markdown."""


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/tests/test_plugin.py
# Language: python

import tempfile
from pathlib import Path
from unittest.mock import Mock
import pytest
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

class TestOutputAsInputPlugin:
    """Test cases for OutputAsInputPlugin."""
    def test_default_config((self, plugin)):
        """Test plugin with default configuration."""
    def test_on_config_stores_paths((self, plugin, mkdocs_config)):
        """Test that on_config stores site and docs directories."""
    def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing source content and frontmatter."""
    def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing content without frontmatter."""
    def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
        """Test creating cousin files after build."""
    def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
        """Test handling missing HTML output."""
    def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
        """Test handling HTML without target element."""
    def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
        """Test with custom configuration options."""
    def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test handling invalid YAML frontmatter."""
    def test_file_read_error((self, plugin, mkdocs_config)):
        """Test handling file read errors."""

def plugin((self)):
    """Create a plugin instance."""

def temp_dir((self)):
    """Create a temporary directory."""

def mkdocs_config((self, temp_dir)):
    """Create a mock MkDocs config."""

def test_default_config((self, plugin)):
    """Test plugin with default configuration."""

def test_on_config_stores_paths((self, plugin, mkdocs_config)):
    """Test that on_config stores site and docs directories."""

def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing source content and frontmatter."""

def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing content without frontmatter."""

def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
    """Test creating cousin files after build."""

def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
    """Test handling missing HTML output."""

def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
    """Test handling HTML without target element."""

def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
    """Test with custom configuration options."""

def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test handling invalid YAML frontmatter."""

def test_file_read_error((self, plugin, mkdocs_config)):
    """Test handling file read errors."""


</documents>
</document_content>
</document>

<document index="17">
<source>mkdocs.yml</source>
<document_content>
---
markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.superfences
  - pymdownx.snippets
  - admonition
  - pymdownx.details
  - pymdownx.tabbed:
      alternate_style: true
  - toc:
      permalink: true
nav:
  - Home: index.md
  - Getting Started: getting-started.md
  - Configuration: configuration.md
  - Examples: examples.md
  - API Reference: api.md
plugins:
  - search
  - output-as-input:
      stage_dir: stage
      verbose: true
  - mkdocstrings:
      handlers:
        python:
          options:
            show_source: true
repo_name: vexy-mkdocs-output-as-input
repo_url: https://github.com/vexyart/vexy-mkdocs-output-as-input
# this_file: more/vexy-mkdocs-output-as-input-refactored/mkdocs.yml
site_name: MkDocs Output as Input Plugin
site_url: https://vexyart.github.io/vexy-mkdocs-output-as-input/
theme:
  features:
    - navigation.sections
    - navigation.expand
    - navigation.top
    - search.suggest
    - search.highlight
    - content.code.copy
  name: material
  palette:
    - accent: indigo
      primary: indigo
      scheme: default
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    - accent: indigo
      primary: indigo
      scheme: slate
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
</document_content>
</document>

<document index="18">
<source>pyproject.toml</source>
<document_content>
# this_file: more/mkdocs-plugins/vexy-mkdocs-output-as-input/pyproject.toml

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "vexy-mkdocs-output-as-input"
dynamic = ["version"]
description = "MkDocs plugin that captures HTML output and creates cousin Markdown files with original frontmatter"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
maintainers = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
keywords = ["mkdocs", "plugin", "documentation", "html", "markdown", "postprocessing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: MkDocs",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
    "mkdocs>=1.6.0",
    "beautifulsoup4>=4.12.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "black>=23.7.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "types-pyyaml>=6.0.0",
    "types-beautifulsoup4>=4.12.0",
]
docs = [
    "vexy-mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Documentation = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Repository = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Issues = "https://github.com/vexyart/vexy-mkdocs-output-as-input/issues"
Changelog = "https://github.com/vexyart/vexy-mkdocs-output-as-input/blob/main/CHANGELOG.md"

[project.entry-points."mkdocs.plugins"]
output-as-input = "mkdocs_output_as_input.plugin:OutputAsInputPlugin"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/mkdocs_output_as_input"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/CHANGELOG.md",
]

[tool.ruff]
line-length = 100
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

[tool.black]
line-length = 100
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "mkdocs.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/mkdocs_output_as_input"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 90
</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/__init__.py
# Language: python

from mkdocs_output_as_input.plugin import OutputAsInputPlugin
from mkdocs_output_as_input._version import __version__


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/plugin.py
# Language: python

import logging
from pathlib import Path
from typing import Any, Dict, Optional
import yaml
from bs4 import BeautifulSoup
from mkdocs.config import config_options
from mkdocs.plugins import BasePlugin
from mkdocs.structure.pages import Page

class OutputAsInputPlugin(B, a, s, e, P, l, u, g, i, n):
    """MkDocs plugin that captures HTML output and creates cousin Markdown files."""
    def __init__((self)) -> None:
        """Initialize the plugin."""
    def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
        """Store site and docs directories."""
    def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
        """Capture source Markdown content and frontmatter."""
    def on_post_build((self, config: dict[str, Any])) -> None:
        """After build, process all HTML files and create cousin Markdowns."""
    def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
        """Process a single file: extract HTML and create cousin Markdown."""

def __init__((self)) -> None:
    """Initialize the plugin."""

def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
    """Store site and docs directories."""

def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
    """Capture source Markdown content and frontmatter."""

def on_post_build((self, config: dict[str, Any])) -> None:
    """After build, process all HTML files and create cousin Markdowns."""

def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
    """Process a single file: extract HTML and create cousin Markdown."""


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/tests/test_plugin.py
# Language: python

import tempfile
from pathlib import Path
from unittest.mock import Mock
import pytest
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

class TestOutputAsInputPlugin:
    """Test cases for OutputAsInputPlugin."""
    def test_default_config((self, plugin)):
        """Test plugin with default configuration."""
    def test_on_config_stores_paths((self, plugin, mkdocs_config)):
        """Test that on_config stores site and docs directories."""
    def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing source content and frontmatter."""
    def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing content without frontmatter."""
    def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
        """Test creating cousin files after build."""
    def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
        """Test handling missing HTML output."""
    def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
        """Test handling HTML without target element."""
    def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
        """Test with custom configuration options."""
    def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test handling invalid YAML frontmatter."""
    def test_file_read_error((self, plugin, mkdocs_config)):
        """Test handling file read errors."""
    def test_on_post_build_no_docs_dir((self, plugin)):
        """Test handling when docs_dir is None."""
    def test_process_file_no_site_dir((self, plugin, temp_dir)):
        """Test handling when site_dir is None."""

def plugin((self)):
    """Create a plugin instance."""

def temp_dir((self)):
    """Create a temporary directory."""

def mkdocs_config((self, temp_dir)):
    """Create a mock MkDocs config."""

def test_default_config((self, plugin)):
    """Test plugin with default configuration."""

def test_on_config_stores_paths((self, plugin, mkdocs_config)):
    """Test that on_config stores site and docs directories."""

def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing source content and frontmatter."""

def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing content without frontmatter."""

def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
    """Test creating cousin files after build."""

def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
    """Test handling missing HTML output."""

def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
    """Test handling HTML without target element."""

def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
    """Test with custom configuration options."""

def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test handling invalid YAML frontmatter."""

def test_file_read_error((self, plugin, mkdocs_config)):
    """Test handling file read errors."""

def test_on_post_build_no_docs_dir((self, plugin)):
    """Test handling when docs_dir is None."""

def test_process_file_no_site_dir((self, plugin, temp_dir)):
    """Test handling when site_dir is None."""


</documents>
</document_content>
</document>

<document index="17">
<source>mkdocs.yml</source>
<document_content>
---
markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.superfences
  - pymdownx.snippets
  - admonition
  - pymdownx.details
  - pymdownx.tabbed:
      alternate_style: true
  - toc:
      permalink: true
nav:
  - Home: index.md
  - Getting Started: getting-started.md
  - Configuration: configuration.md
  - Examples: examples.md
  - API Reference: api.md
plugins:
  - search
  - output-as-input:
      stage_dir: stage
      verbose: true
  - mkdocstrings:
      handlers:
        python:
          options:
            show_source: true
repo_name: vexy-mkdocs-output-as-input
repo_url: https://github.com/vexyart/vexy-mkdocs-output-as-input
# this_file: more/vexy-mkdocs-output-as-input-refactored/mkdocs.yml
site_name: MkDocs Output as Input Plugin
site_url: https://vexyart.github.io/vexy-mkdocs-output-as-input/
theme:
  features:
    - navigation.sections
    - navigation.expand
    - navigation.top
    - search.suggest
    - search.highlight
    - content.code.copy
  name: material
  palette:
    - accent: indigo
      primary: indigo
      scheme: default
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    - accent: indigo
      primary: indigo
      scheme: slate
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
</document_content>
</document>

<document index="18">
<source>pyproject.toml</source>
<document_content>
# this_file: more/mkdocs-plugins/vexy-mkdocs-output-as-input/pyproject.toml

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "vexy-mkdocs-output-as-input"
dynamic = ["version"]
description = "MkDocs plugin that captures HTML output and creates cousin Markdown files with original frontmatter"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
maintainers = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
keywords = ["mkdocs", "plugin", "documentation", "html", "markdown", "postprocessing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: MkDocs",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
    "mkdocs>=1.6.0",
    "beautifulsoup4>=4.12.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "black>=23.7.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "types-pyyaml>=6.0.0",
    "types-beautifulsoup4>=4.12.0",
]
docs = [
    "vexy-mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Documentation = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Repository = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Issues = "https://github.com/vexyart/vexy-mkdocs-output-as-input/issues"
Changelog = "https://github.com/vexyart/vexy-mkdocs-output-as-input/blob/main/CHANGELOG.md"

[project.entry-points."mkdocs.plugins"]
output-as-input = "mkdocs_output_as_input.plugin:OutputAsInputPlugin"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/mkdocs_output_as_input"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/CHANGELOG.md",
]

[tool.ruff]
line-length = 100
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

[tool.black]
line-length = 100
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "mkdocs.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/mkdocs_output_as_input"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 90
</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/__init__.py
# Language: python

from mkdocs_output_as_input.plugin import OutputAsInputPlugin
from mkdocs_output_as_input._version import __version__


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/plugin.py
# Language: python

import logging
from pathlib import Path
from typing import Any, Dict, Optional
import yaml
from bs4 import BeautifulSoup
from mkdocs.config import config_options
from mkdocs.plugins import BasePlugin
from mkdocs.structure.pages import Page

class OutputAsInputPlugin(B, a, s, e, P, l, u, g, i, n):
    """MkDocs plugin that captures HTML output and creates cousin Markdown files."""
    def __init__((self)) -> None:
        """Initialize the plugin."""
    def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
        """Store site and docs directories."""
    def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
        """Capture source Markdown content and frontmatter."""
    def on_post_build((self, config: dict[str, Any])) -> None:
        """After build, process all HTML files and create cousin Markdowns."""
    def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
        """Process a single file: extract HTML and create cousin Markdown."""

def __init__((self)) -> None:
    """Initialize the plugin."""

def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
    """Store site and docs directories."""

def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
    """Capture source Markdown content and frontmatter."""

def on_post_build((self, config: dict[str, Any])) -> None:
    """After build, process all HTML files and create cousin Markdowns."""

def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
    """Process a single file: extract HTML and create cousin Markdown."""


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/tests/test_plugin.py
# Language: python

import tempfile
from pathlib import Path
from unittest.mock import Mock
import pytest
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

class TestOutputAsInputPlugin:
    """Test cases for OutputAsInputPlugin."""
    def test_default_config((self, plugin)):
        """Test plugin with default configuration."""
    def test_on_config_stores_paths((self, plugin, mkdocs_config)):
        """Test that on_config stores site and docs directories."""
    def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing source content and frontmatter."""
    def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing content without frontmatter."""
    def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
        """Test creating cousin files after build."""
    def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
        """Test handling missing HTML output."""
    def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
        """Test handling HTML without target element."""
    def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
        """Test with custom configuration options."""
    def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test handling invalid YAML frontmatter."""
    def test_file_read_error((self, plugin, mkdocs_config)):
        """Test handling file read errors."""
    def test_on_post_build_no_docs_dir((self, plugin)):
        """Test handling when docs_dir is None."""
    def test_process_file_no_site_dir((self, plugin, temp_dir)):
        """Test handling when site_dir is None."""

def plugin((self)):
    """Create a plugin instance."""

def temp_dir((self)):
    """Create a temporary directory."""

def mkdocs_config((self, temp_dir)):
    """Create a mock MkDocs config."""

def test_default_config((self, plugin)):
    """Test plugin with default configuration."""

def test_on_config_stores_paths((self, plugin, mkdocs_config)):
    """Test that on_config stores site and docs directories."""

def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing source content and frontmatter."""

def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing content without frontmatter."""

def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
    """Test creating cousin files after build."""

def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
    """Test handling missing HTML output."""

def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
    """Test handling HTML without target element."""

def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
    """Test with custom configuration options."""

def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test handling invalid YAML frontmatter."""

def test_file_read_error((self, plugin, mkdocs_config)):
    """Test handling file read errors."""

def test_on_post_build_no_docs_dir((self, plugin)):
    """Test handling when docs_dir is None."""

def test_process_file_no_site_dir((self, plugin, temp_dir)):
    """Test handling when site_dir is None."""


</documents>
</document_content>
</document>

<document index="17">
<source>mkdocs.yml</source>
<document_content>
---
markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.superfences
  - pymdownx.snippets
  - admonition
  - pymdownx.details
  - pymdownx.tabbed:
      alternate_style: true
  - toc:
      permalink: true
nav:
  - Home: index.md
  - Getting Started: getting-started.md
  - Configuration: configuration.md
  - Examples: examples.md
  - API Reference: api.md
plugins:
  - search
  - output-as-input:
      stage_dir: stage
      verbose: true
  - mkdocstrings:
      handlers:
        python:
          options:
            show_source: true
repo_name: vexy-mkdocs-output-as-input
repo_url: https://github.com/vexyart/vexy-mkdocs-output-as-input
# this_file: more/vexy-mkdocs-output-as-input-refactored/mkdocs.yml
site_name: MkDocs Output as Input Plugin
site_url: https://vexyart.github.io/vexy-mkdocs-output-as-input/
theme:
  features:
    - navigation.sections
    - navigation.expand
    - navigation.top
    - search.suggest
    - search.highlight
    - content.code.copy
  name: material
  palette:
    - accent: indigo
      primary: indigo
      scheme: default
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    - accent: indigo
      primary: indigo
      scheme: slate
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
</document_content>
</document>

<document index="18">
<source>pyproject.toml</source>
<document_content>
# this_file: more/mkdocs-plugins/vexy-mkdocs-output-as-input/pyproject.toml

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "vexy-mkdocs-output-as-input"
dynamic = ["version"]
description = "MkDocs plugin that captures HTML output and creates cousin Markdown files with original frontmatter"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
maintainers = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
keywords = ["mkdocs", "plugin", "documentation", "html", "markdown", "postprocessing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: MkDocs",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
    "mkdocs>=1.6.0",
    "beautifulsoup4>=4.12.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "black>=23.7.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "types-pyyaml>=6.0.0",
    "types-beautifulsoup4>=4.12.0",
]
docs = [
    "vexy-mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Documentation = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Repository = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Issues = "https://github.com/vexyart/vexy-mkdocs-output-as-input/issues"
Changelog = "https://github.com/vexyart/vexy-mkdocs-output-as-input/blob/main/CHANGELOG.md"

[project.entry-points."mkdocs.plugins"]
output-as-input = "mkdocs_output_as_input.plugin:OutputAsInputPlugin"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/mkdocs_output_as_input"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/CHANGELOG.md",
]

[tool.ruff]
line-length = 100
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

[tool.black]
line-length = 100
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "mkdocs.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/mkdocs_output_as_input"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 90
</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/__init__.py
# Language: python

from mkdocs_output_as_input.plugin import OutputAsInputPlugin
from mkdocs_output_as_input._version import __version__


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/plugin.py
# Language: python

import logging
from pathlib import Path
from typing import Any, Dict, Optional
import yaml
from bs4 import BeautifulSoup
from mkdocs.config import config_options
from mkdocs.plugins import BasePlugin
from mkdocs.structure.pages import Page

class OutputAsInputPlugin(B, a, s, e, P, l, u, g, i, n):
    """MkDocs plugin that captures HTML output and creates cousin Markdown files."""
    def __init__((self)) -> None:
        """Initialize the plugin."""
    def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
        """Store site and docs directories."""
    def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
        """Capture source Markdown content and frontmatter."""
    def on_post_build((self, config: dict[str, Any])) -> None:
        """After build, process all HTML files and create cousin Markdowns."""
    def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
        """Process a single file: extract HTML and create cousin Markdown."""

def __init__((self)) -> None:
    """Initialize the plugin."""

def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
    """Store site and docs directories."""

def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
    """Capture source Markdown content and frontmatter."""

def on_post_build((self, config: dict[str, Any])) -> None:
    """After build, process all HTML files and create cousin Markdowns."""

def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
    """Process a single file: extract HTML and create cousin Markdown."""


<document index="19">
<source>src_docs/mkdocs.yml</source>
<document_content>
site_name: MkDocs Output as Input - Example
site_url: https://example.com/
site_description: Real example of using the output-as-input plugin

# Use README.md as the main documentation source
docs_dir: ../
nav:
  - Home: README.md

# Theme configuration
theme:
  name: material
  palette:
    - scheme: default
      primary: indigo
      accent: indigo
  features:
    - navigation.instant
    - navigation.tracking
    - content.code.copy

# Markdown extensions
markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.superfences
  - pymdownx.snippets
  - admonition
  - pymdownx.details
  - toc:
      permalink: true

# Plugins
plugins:
  - search
  - output-as-input:
      stage_dir: stage  # Output to stage directory
      html_element: article  # Extract article element from Material theme
      target_tag: div  # Convert to div in output
      verbose: true  # Enable verbose logging to see what's happening

</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/tests/test_plugin.py
# Language: python

import tempfile
from pathlib import Path
from unittest.mock import Mock
import pytest
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

class TestOutputAsInputPlugin:
    """Test cases for OutputAsInputPlugin."""
    def test_default_config((self, plugin)):
        """Test plugin with default configuration."""
    def test_on_config_stores_paths((self, plugin, mkdocs_config)):
        """Test that on_config stores site and docs directories."""
    def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing source content and frontmatter."""
    def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing content without frontmatter."""
    def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
        """Test creating cousin files after build."""
    def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
        """Test handling missing HTML output."""
    def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
        """Test handling HTML without target element."""
    def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
        """Test with custom configuration options."""
    def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test handling invalid YAML frontmatter."""
    def test_file_read_error((self, plugin, mkdocs_config)):
        """Test handling file read errors."""
    def test_on_post_build_no_docs_dir((self, plugin)):
        """Test handling when docs_dir is None."""
    def test_process_file_no_site_dir((self, plugin, temp_dir)):
        """Test handling when site_dir is None."""

def plugin((self)):
    """Create a plugin instance."""

def temp_dir((self)):
    """Create a temporary directory."""

def mkdocs_config((self, temp_dir)):
    """Create a mock MkDocs config."""

def test_default_config((self, plugin)):
    """Test plugin with default configuration."""

def test_on_config_stores_paths((self, plugin, mkdocs_config)):
    """Test that on_config stores site and docs directories."""

def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing source content and frontmatter."""

def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing content without frontmatter."""

def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
    """Test creating cousin files after build."""

def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
    """Test handling missing HTML output."""

def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
    """Test handling HTML without target element."""

def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
    """Test with custom configuration options."""

def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test handling invalid YAML frontmatter."""

def test_file_read_error((self, plugin, mkdocs_config)):
    """Test handling file read errors."""

def test_on_post_build_no_docs_dir((self, plugin)):
    """Test handling when docs_dir is None."""

def test_process_file_no_site_dir((self, plugin, temp_dir)):
    """Test handling when site_dir is None."""


</documents>
</document_content>
</document>

<document index="18">
<source>mkdocs.yml</source>
<document_content>
---
markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.superfences
  - pymdownx.snippets
  - admonition
  - pymdownx.details
  - pymdownx.tabbed:
      alternate_style: true
  - toc:
      permalink: true
nav:
  - Home: index.md
  - Getting Started: getting-started.md
  - Configuration: configuration.md
  - Examples: examples.md
  - API Reference: api.md
plugins:
  - search
  - output-as-input:
      stage_dir: stage
      verbose: true
  - mkdocstrings:
      handlers:
        python:
          options:
            show_source: true
repo_name: vexy-mkdocs-output-as-input
repo_url: https://github.com/vexyart/vexy-mkdocs-output-as-input
# this_file: more/vexy-mkdocs-output-as-input-refactored/mkdocs.yml
site_name: MkDocs Output as Input Plugin
site_url: https://vexyart.github.io/vexy-mkdocs-output-as-input/
theme:
  features:
    - navigation.sections
    - navigation.expand
    - navigation.top
    - search.suggest
    - search.highlight
    - content.code.copy
  name: material
  palette:
    - accent: indigo
      primary: indigo
      scheme: default
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    - accent: indigo
      primary: indigo
      scheme: slate
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
</document_content>
</document>

<document index="19">
<source>pyproject.toml</source>
<document_content>
# this_file: more/mkdocs-plugins/vexy-mkdocs-output-as-input/pyproject.toml

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "vexy-mkdocs-output-as-input"
dynamic = ["version"]
description = "MkDocs plugin that captures HTML output and creates cousin Markdown files with original frontmatter"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
maintainers = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
keywords = ["mkdocs", "plugin", "documentation", "html", "markdown", "postprocessing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: MkDocs",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
    "mkdocs>=1.6.0",
    "beautifulsoup4>=4.12.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "black>=23.7.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "types-pyyaml>=6.0.0",
    "types-beautifulsoup4>=4.12.0",
]
docs = [
    "vexy-mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Documentation = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Repository = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Issues = "https://github.com/vexyart/vexy-mkdocs-output-as-input/issues"
Changelog = "https://github.com/vexyart/vexy-mkdocs-output-as-input/blob/main/CHANGELOG.md"

[project.entry-points."mkdocs.plugins"]
output-as-input = "mkdocs_output_as_input.plugin:OutputAsInputPlugin"

[project.scripts]
mkdocs-output-as-input = "mkdocs_output_as_input.cli:main"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/mkdocs_output_as_input"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/CHANGELOG.md",
]

[tool.ruff]
line-length = 100
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

[tool.black]
line-length = 100
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "mkdocs.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/mkdocs_output_as_input"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 90
</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/__init__.py
# Language: python

from mkdocs_output_as_input.plugin import OutputAsInputPlugin
from mkdocs_output_as_input._version import __version__


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/cli.py
# Language: python

import argparse
import logging
import sys
from pathlib import Path
from typing import Any, Dict, Optional
import yaml
from bs4 import BeautifulSoup

def setup_logging((verbose: bool = False)) -> None:
    """Set up logging configuration."""

def extract_frontmatter((content: str)) -> tuple[Dict[str, Any], str]:
    """Extract YAML frontmatter from Markdown content."""

def process_html((
    html_content: str,
    html_element: str | list[str] = "main",
    target_tag: str = "article",
    preserve_links: bool = False,
    minify: bool = False,
    prettify: bool = False,
)) -> Optional[str]:
    """Process HTML content and extract specified element."""

def process_file((
    input_path: Path,
    output_path: Path,
    html_element: str | list[str] = "main",
    target_tag: str = "article",
    include_frontmatter: bool = True,
    preserve_links: bool = False,
    minify: bool = False,
    prettify: bool = False,
)) -> None:
    """Process a single file."""

def main(()) -> int:
    """Main CLI entry point."""


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/plugin.py
# Language: python

import logging
import re
from pathlib import Path
from typing import Any, Dict, Optional
import yaml
from bs4 import BeautifulSoup
from mkdocs.config import config_options
from mkdocs.plugins import BasePlugin
from mkdocs.structure.pages import Page

class OutputAsInputPlugin(B, a, s, e, P, l, u, g, i, n):
    """MkDocs plugin that captures HTML output and creates cousin Markdown files."""
    def __init__((self)) -> None:
        """Initialize the plugin."""
    def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
        """Store site and docs directories and validate configuration."""
    def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
        """Capture source Markdown content and frontmatter."""
    def on_post_build((self, config: dict[str, Any])) -> None:
        """After build, process all HTML files and create cousin Markdowns."""
    def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
        """Process a single file: extract HTML and create cousin Markdown."""

def __init__((self)) -> None:
    """Initialize the plugin."""

def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
    """Store site and docs directories and validate configuration."""

def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
    """Capture source Markdown content and frontmatter."""

def on_post_build((self, config: dict[str, Any])) -> None:
    """After build, process all HTML files and create cousin Markdowns."""

def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
    """Process a single file: extract HTML and create cousin Markdown."""


<document index="20">
<source>stage/README.md</source>
<document_content>
---
author: Vexy
code_count: 17
date: 2025-01-14
description: A plugin that captures HTML output and creates cousin Markdown files
has_code: true
pipeline_version: '1.0'
processed: true
source: mkdocs-output-as-input
tags:
- mkdocs
- plugin
- documentation
- pipeline
title: MkDocs Output as Input Plugin
version: 1.0.0
---


<div class="md-content__inner md-typeset">
<h1 class="custom-heading" id="vexy-mkdocs-output-as-input">vexy-mkdocs-output-as-input<a class="headerlink" href="#vexy-mkdocs-output-as-input" title="Permanent link">¶</a></h1>
<p><a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="PyPI version" src="https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg"/></a>
<a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml"><img alt="CI" src="https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg"/></a>
<a href="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input"><img alt="codecov" src="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg"/></a>
<a href="https://opensource.org/licenses/MIT"><img alt="License: MIT" src="https://img.shields.io/badge/License-MIT-yellow.svg"/></a>
<a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="Python versions" src="https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg"/></a></p>
<p>A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.</p>
<h2 class="custom-heading" id="features">Features<a class="headerlink" href="#features" title="Permanent link">¶</a></h2>
<p>This plugin enables powerful post-processing workflows by:</p>
<ol>
<li>✅ Preserving your original Markdown structure and frontmatter</li>
<li>✅ Capturing the fully-rendered HTML output from MkDocs</li>
<li>✅ Creating new Markdown files that combine original metadata with processed HTML</li>
<li>✅ Enabling further processing by other static site generators</li>
</ol>
<h2 class="custom-heading" id="installation">Installation<a class="headerlink" href="#installation" title="Permanent link">¶</a></h2>
<p>Install from PyPI:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-0-1" id="__codelineno-0-1" name="__codelineno-0-1"></a>uv<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>--system<span class="w"> </span>--upgrade<span class="w"> </span>vexy-mkdocs-output-as-input
</code></pre></div>
<p>Or install from source:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-1-1" id="__codelineno-1-1" name="__codelineno-1-1"></a>pip<span class="w"> </span>install<span class="w"> </span>git+https://github.com/vexyart/vexy-mkdocs-output-as-input
</code></pre></div>
<h2 class="custom-heading" id="quick-start">Quick Start<a class="headerlink" href="#quick-start" title="Permanent link">¶</a></h2>
<p>Add the plugin to your <code>mkdocs.yml</code>:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-2-1" id="__codelineno-2-1" name="__codelineno-2-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-2-2" id="__codelineno-2-2" name="__codelineno-2-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span><span class="w">  </span><span class="c1"># Other plugins</span>
<a href="#__codelineno-2-3" id="__codelineno-2-3" name="__codelineno-2-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<p>Build your site:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-3-1" id="__codelineno-3-1" name="__codelineno-3-1"></a>mkdocs<span class="w"> </span>build
</code></pre></div>
<p>Find your processed files in the <code>stage/</code> directory (relative to your MkDocs project root).</p>
<h2 class="custom-heading" id="configuration">Configuration<a class="headerlink" href="#configuration" title="Permanent link">¶</a></h2>
<p>All configuration options with their defaults:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-4-1" id="__codelineno-4-1" name="__codelineno-4-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-4-2" id="__codelineno-4-2" name="__codelineno-4-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-4-3" id="__codelineno-4-3" name="__codelineno-4-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">stage</span><span class="w">          </span><span class="c1"># Output directory name (default: 'stage')</span>
<a href="#__codelineno-4-4" id="__codelineno-4-4" name="__codelineno-4-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span><span class="w">        </span><span class="c1"># HTML element to extract (default: 'main')</span>
<a href="#__codelineno-4-5" id="__codelineno-4-5" name="__codelineno-4-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span><span class="w">       </span><span class="c1"># Tag to use in output (default: 'article')</span>
<a href="#__codelineno-4-6" id="__codelineno-4-6" name="__codelineno-4-6"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">false</span><span class="w">            </span><span class="c1"># Enable verbose logging (default: false)</span>
</code></pre></div>
<h3 class="custom-heading" id="options-explained">Options Explained<a class="headerlink" href="#options-explained" title="Permanent link">¶</a></h3>
<table>
<thead>
<tr>
<th>Option</th>
<th>Type</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>stage_dir</code></td>
<td>string</td>
<td><code>"stage"</code></td>
<td>Directory name for output files (relative to project root)</td>
</tr>
<tr>
<td><code>html_element</code></td>
<td>string</td>
<td><code>"main"</code></td>
<td>CSS selector for the HTML element to extract</td>
</tr>
<tr>
<td><code>target_tag</code></td>
<td>string</td>
<td><code>"article"</code></td>
<td>HTML tag to use in the output (replaces extracted element's tag)</td>
</tr>
<tr>
<td><code>verbose</code></td>
<td>boolean</td>
<td><code>false</code></td>
<td>Enable detailed logging for debugging</td>
</tr>
</tbody>
</table>
<h2 class="custom-heading" id="how-it-works">How It Works<a class="headerlink" href="#how-it-works" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="input-process-output">Input → Process → Output<a class="headerlink" href="#input-process-output" title="Permanent link">¶</a></h3>
<ol>
<li>
<p><strong>Input</strong>: Your source Markdown with frontmatter
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-5-1" id="__codelineno-5-1" name="__codelineno-5-1"></a>---
<a href="#__codelineno-5-2" id="__codelineno-5-2" name="__codelineno-5-2"></a>title: My Page
<a href="#__codelineno-5-3" id="__codelineno-5-3" name="__codelineno-5-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-5-4" id="__codelineno-5-4" name="__codelineno-5-4"></a><span class="gu">---</span>
<a href="#__codelineno-5-5" id="__codelineno-5-5" name="__codelineno-5-5"></a>
<a href="#__codelineno-5-6" id="__codelineno-5-6" name="__codelineno-5-6"></a><span class="gh"># My Page</span>
<a href="#__codelineno-5-7" id="__codelineno-5-7" name="__codelineno-5-7"></a>
<a href="#__codelineno-5-8" id="__codelineno-5-8" name="__codelineno-5-8"></a>This is my content with <span class="gs">**markdown**</span>.
</code></pre></div></p>
</li>
<li>
<p><strong>MkDocs Processing</strong>: Renders to HTML as usual
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-6-1" id="__codelineno-6-1" name="__codelineno-6-1"></a><span class="p">&lt;</span><span class="nt">main</span> <span class="na">class</span><span class="o">=</span><span class="s">"md-content"</span><span class="p">&gt;</span>
<a href="#__codelineno-6-2" id="__codelineno-6-2" name="__codelineno-6-2"></a>  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>My Page<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<a href="#__codelineno-6-3" id="__codelineno-6-3" name="__codelineno-6-3"></a>  <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>This is my content with <span class="p">&lt;</span><span class="nt">strong</span><span class="p">&gt;</span>markdown<span class="p">&lt;/</span><span class="nt">strong</span><span class="p">&gt;</span>.<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<a href="#__codelineno-6-4" id="__codelineno-6-4" name="__codelineno-6-4"></a><span class="p">&lt;/</span><span class="nt">main</span><span class="p">&gt;</span>
</code></pre></div></p>
</li>
<li>
<p><strong>Output</strong>: Cousin file with preserved frontmatter + extracted HTML
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-7-1" id="__codelineno-7-1" name="__codelineno-7-1"></a>---
<a href="#__codelineno-7-2" id="__codelineno-7-2" name="__codelineno-7-2"></a>title: My Page
<a href="#__codelineno-7-3" id="__codelineno-7-3" name="__codelineno-7-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-7-4" id="__codelineno-7-4" name="__codelineno-7-4"></a><span class="gu">---</span>
<a href="#__codelineno-7-5" id="__codelineno-7-5" name="__codelineno-7-5"></a>
<a href="#__codelineno-7-6" id="__codelineno-7-6" name="__codelineno-7-6"></a>&lt;article class="md-content"&gt;
<a href="#__codelineno-7-7" id="__codelineno-7-7" name="__codelineno-7-7"></a>  &lt;h1&gt;My Page&lt;/h1&gt;
<a href="#__codelineno-7-8" id="__codelineno-7-8" name="__codelineno-7-8"></a>  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;
<a href="#__codelineno-7-9" id="__codelineno-7-9" name="__codelineno-7-9"></a>&lt;/article&gt;
</code></pre></div></p>
</li>
</ol>
<h2 class="custom-heading" id="use-cases">Use Cases<a class="headerlink" href="#use-cases" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="multi-stage-documentation-pipeline">🔄 Multi-Stage Documentation Pipeline<a class="headerlink" href="#multi-stage-documentation-pipeline" title="Permanent link">¶</a></h3>
<p>Process documentation through MkDocs first, then feed to another SSG:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-8-1" id="__codelineno-8-1" name="__codelineno-8-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-8-2" id="__codelineno-8-2" name="__codelineno-8-2"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-8-3" id="__codelineno-8-3" name="__codelineno-8-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-8-4" id="__codelineno-8-4" name="__codelineno-8-4"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">hugo/content</span>
<a href="#__codelineno-8-5" id="__codelineno-8-5" name="__codelineno-8-5"></a>
<a href="#__codelineno-8-6" id="__codelineno-8-6" name="__codelineno-8-6"></a><span class="c1"># Then run:</span>
<a href="#__codelineno-8-7" id="__codelineno-8-7" name="__codelineno-8-7"></a><span class="c1"># mkdocs build &amp;&amp; hugo build</span>
</code></pre></div>
<h3 class="custom-heading" id="content-extraction">📝 Content Extraction<a class="headerlink" href="#content-extraction" title="Permanent link">¶</a></h3>
<p>Extract just the article content without theme wrapper:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-9-1" id="__codelineno-9-1" name="__codelineno-9-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-9-2" id="__codelineno-9-2" name="__codelineno-9-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-9-3" id="__codelineno-9-3" name="__codelineno-9-3"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span>
<a href="#__codelineno-9-4" id="__codelineno-9-4" name="__codelineno-9-4"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">div</span>
</code></pre></div>
<h3 class="custom-heading" id="custom-post-processing">🎨 Custom Post-Processing<a class="headerlink" href="#custom-post-processing" title="Permanent link">¶</a></h3>
<p>Preserve MkDocs rendering while preparing for custom templates:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-10-1" id="__codelineno-10-1" name="__codelineno-10-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-10-2" id="__codelineno-10-2" name="__codelineno-10-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-10-3" id="__codelineno-10-3" name="__codelineno-10-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">_includes</span>
<a href="#__codelineno-10-4" id="__codelineno-10-4" name="__codelineno-10-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-10-5" id="__codelineno-10-5" name="__codelineno-10-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">section</span>
</code></pre></div>
<h2 class="custom-heading" id="examples">Examples<a class="headerlink" href="#examples" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="basic-example">Basic Example<a class="headerlink" href="#basic-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-11-1" id="__codelineno-11-1" name="__codelineno-11-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-11-2" id="__codelineno-11-2" name="__codelineno-11-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-11-3" id="__codelineno-11-3" name="__codelineno-11-3"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-11-4" id="__codelineno-11-4" name="__codelineno-11-4"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<h3 class="custom-heading" id="advanced-example">Advanced Example<a class="headerlink" href="#advanced-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-12-1" id="__codelineno-12-1" name="__codelineno-12-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-12-2" id="__codelineno-12-2" name="__codelineno-12-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-12-3" id="__codelineno-12-3" name="__codelineno-12-3"></a><span class="nt">theme</span><span class="p">:</span>
<a href="#__codelineno-12-4" id="__codelineno-12-4" name="__codelineno-12-4"></a><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">material</span>
<a href="#__codelineno-12-5" id="__codelineno-12-5" name="__codelineno-12-5"></a>
<a href="#__codelineno-12-6" id="__codelineno-12-6" name="__codelineno-12-6"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-12-7" id="__codelineno-12-7" name="__codelineno-12-7"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span>
<a href="#__codelineno-12-8" id="__codelineno-12-8" name="__codelineno-12-8"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-12-9" id="__codelineno-12-9" name="__codelineno-12-9"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">processed</span>
<a href="#__codelineno-12-10" id="__codelineno-12-10" name="__codelineno-12-10"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article.md-content__inner</span>
<a href="#__codelineno-12-11" id="__codelineno-12-11" name="__codelineno-12-11"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-12-12" id="__codelineno-12-12" name="__codelineno-12-12"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">true</span>
<a href="#__codelineno-12-13" id="__codelineno-12-13" name="__codelineno-12-13"></a>
<a href="#__codelineno-12-14" id="__codelineno-12-14" name="__codelineno-12-14"></a><span class="c1"># Process specific content area from Material theme</span>
</code></pre></div>
<h3 class="custom-heading" id="integration-example">Integration Example<a class="headerlink" href="#integration-example" title="Permanent link">¶</a></h3>
<p>Using with other tools in a documentation pipeline:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-13-1" id="__codelineno-13-1" name="__codelineno-13-1"></a><span class="ch">#!/bin/bash</span>
<a href="#__codelineno-13-2" id="__codelineno-13-2" name="__codelineno-13-2"></a><span class="c1"># build.sh</span>
<a href="#__codelineno-13-3" id="__codelineno-13-3" name="__codelineno-13-3"></a>
<a href="#__codelineno-13-4" id="__codelineno-13-4" name="__codelineno-13-4"></a><span class="c1"># Stage 1: Build with MkDocs + plugins</span>
<a href="#__codelineno-13-5" id="__codelineno-13-5" name="__codelineno-13-5"></a>mkdocs<span class="w"> </span>build
<a href="#__codelineno-13-6" id="__codelineno-13-6" name="__codelineno-13-6"></a>
<a href="#__codelineno-13-7" id="__codelineno-13-7" name="__codelineno-13-7"></a><span class="c1"># Stage 2: Process staged output</span>
<a href="#__codelineno-13-8" id="__codelineno-13-8" name="__codelineno-13-8"></a>python<span class="w"> </span>post_process.py<span class="w"> </span>stage/
<a href="#__codelineno-13-9" id="__codelineno-13-9" name="__codelineno-13-9"></a>
<a href="#__codelineno-13-10" id="__codelineno-13-10" name="__codelineno-13-10"></a><span class="c1"># Stage 3: Build final site</span>
<a href="#__codelineno-13-11" id="__codelineno-13-11" name="__codelineno-13-11"></a>hugo<span class="w"> </span>--contentDir<span class="o">=</span>stage/
</code></pre></div>
<h2 class="custom-heading" id="development">Development<a class="headerlink" href="#development" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="setup-development-environment">Setup Development Environment<a class="headerlink" href="#setup-development-environment" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-14-1" id="__codelineno-14-1" name="__codelineno-14-1"></a><span class="c1"># Clone the repository</span>
<a href="#__codelineno-14-2" id="__codelineno-14-2" name="__codelineno-14-2"></a>git<span class="w"> </span>clone<span class="w"> </span>https://github.com/vexyart/vexy-mkdocs-output-as-input
<a href="#__codelineno-14-3" id="__codelineno-14-3" name="__codelineno-14-3"></a><span class="nb">cd</span><span class="w"> </span>vexy-mkdocs-output-as-input
<a href="#__codelineno-14-4" id="__codelineno-14-4" name="__codelineno-14-4"></a>
<a href="#__codelineno-14-5" id="__codelineno-14-5" name="__codelineno-14-5"></a><span class="c1"># Create virtual environment</span>
<a href="#__codelineno-14-6" id="__codelineno-14-6" name="__codelineno-14-6"></a>python<span class="w"> </span>-m<span class="w"> </span>venv<span class="w"> </span>venv
<a href="#__codelineno-14-7" id="__codelineno-14-7" name="__codelineno-14-7"></a><span class="nb">source</span><span class="w"> </span>venv/bin/activate<span class="w">  </span><span class="c1"># On Windows: venv\Scripts\activate</span>
<a href="#__codelineno-14-8" id="__codelineno-14-8" name="__codelineno-14-8"></a>
<a href="#__codelineno-14-9" id="__codelineno-14-9" name="__codelineno-14-9"></a><span class="c1"># Install in development mode</span>
<a href="#__codelineno-14-10" id="__codelineno-14-10" name="__codelineno-14-10"></a>pip<span class="w"> </span>install<span class="w"> </span>-e<span class="w"> </span>.<span class="o">[</span>dev<span class="o">]</span>
<a href="#__codelineno-14-11" id="__codelineno-14-11" name="__codelineno-14-11"></a>
<a href="#__codelineno-14-12" id="__codelineno-14-12" name="__codelineno-14-12"></a><span class="c1"># Install pre-commit hooks</span>
<a href="#__codelineno-14-13" id="__codelineno-14-13" name="__codelineno-14-13"></a>pre-commit<span class="w"> </span>install
</code></pre></div>
<h3 class="custom-heading" id="running-tests">Running Tests<a class="headerlink" href="#running-tests" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-15-1" id="__codelineno-15-1" name="__codelineno-15-1"></a><span class="c1"># Run all tests</span>
<a href="#__codelineno-15-2" id="__codelineno-15-2" name="__codelineno-15-2"></a>pytest
<a href="#__codelineno-15-3" id="__codelineno-15-3" name="__codelineno-15-3"></a>
<a href="#__codelineno-15-4" id="__codelineno-15-4" name="__codelineno-15-4"></a><span class="c1"># Run with coverage</span>
<a href="#__codelineno-15-5" id="__codelineno-15-5" name="__codelineno-15-5"></a>pytest<span class="w"> </span>--cov<span class="o">=</span>mkdocs_output_as_input<span class="w"> </span>--cov-report<span class="o">=</span>html
<a href="#__codelineno-15-6" id="__codelineno-15-6" name="__codelineno-15-6"></a>
<a href="#__codelineno-15-7" id="__codelineno-15-7" name="__codelineno-15-7"></a><span class="c1"># Run specific test</span>
<a href="#__codelineno-15-8" id="__codelineno-15-8" name="__codelineno-15-8"></a>pytest<span class="w"> </span>tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
</code></pre></div>
<h3 class="custom-heading" id="code-quality">Code Quality<a class="headerlink" href="#code-quality" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-16-1" id="__codelineno-16-1" name="__codelineno-16-1"></a><span class="c1"># Format code</span>
<a href="#__codelineno-16-2" id="__codelineno-16-2" name="__codelineno-16-2"></a>black<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-3" id="__codelineno-16-3" name="__codelineno-16-3"></a>
<a href="#__codelineno-16-4" id="__codelineno-16-4" name="__codelineno-16-4"></a><span class="c1"># Lint code</span>
<a href="#__codelineno-16-5" id="__codelineno-16-5" name="__codelineno-16-5"></a>ruff<span class="w"> </span>check<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-6" id="__codelineno-16-6" name="__codelineno-16-6"></a>
<a href="#__codelineno-16-7" id="__codelineno-16-7" name="__codelineno-16-7"></a><span class="c1"># Type check</span>
<a href="#__codelineno-16-8" id="__codelineno-16-8" name="__codelineno-16-8"></a>mypy<span class="w"> </span>src
</code></pre></div>
<h2 class="custom-heading" id="contributing">Contributing<a class="headerlink" href="#contributing" title="Permanent link">¶</a></h2>
<p>Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.</p>
<ol>
<li>Fork the repository</li>
<li>Create your feature branch (<code>git checkout -b feature/AmazingFeature</code>)</li>
<li>Commit your changes (<code>git commit -m 'Add some AmazingFeature'</code>)</li>
<li>Push to the branch (<code>git push origin feature/AmazingFeature</code>)</li>
<li>Open a Pull Request</li>
</ol>
<h2 class="custom-heading" id="license">License<a class="headerlink" href="#license" title="Permanent link">¶</a></h2>
<p>This project is licensed under the MIT License - see the <a href="LICENSE">LICENSE</a> file for details.</p>
<h2 class="custom-heading" id="support">Support<a class="headerlink" href="#support" title="Permanent link">¶</a></h2>
<ul>
<li>📧 Email: you@example.com</li>
<li>🐛 Issues: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/issues">GitHub Issues</a></li>
<li>💬 Discussions: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions">GitHub Discussions</a></li>
</ul>
</div>

</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/tests/test_cli.py
# Language: python

import tempfile
from pathlib import Path
from unittest.mock import patch
import pytest
from mkdocs_output_as_input.cli import (
    extract_frontmatter,
    main,
    process_file,
    process_html,
)

class TestCLI:
    """Test cases for CLI functionality."""
    def test_extract_frontmatter_with_frontmatter((self)):
        """Test extracting YAML frontmatter from content."""
    def test_extract_frontmatter_without_frontmatter((self)):
        """Test extracting from content without frontmatter."""
    def test_extract_frontmatter_invalid_yaml((self)):
        """Test handling invalid YAML frontmatter."""
    def test_process_html_basic((self)):
        """Test basic HTML processing."""
    def test_process_html_custom_element_and_tag((self)):
        """Test processing with custom element and tag."""
    def test_process_html_element_not_found((self)):
        """Test handling when element not found."""
    def test_process_html_preserve_links((self)):
        """Test preserving relative links."""
    def test_process_html_minify((self)):
        """Test HTML minification."""
    def test_process_html_prettify((self)):
        """Test HTML prettification."""
    def test_process_file_basic((self, tmp_path)):
        """Test basic file processing."""
    def test_process_file_with_frontmatter((self, tmp_path)):
        """Test processing with frontmatter from corresponding .md file."""
    def test_process_file_no_frontmatter((self, tmp_path)):
        """Test processing without frontmatter."""
    def test_process_file_creates_output_dir((self, tmp_path)):
        """Test that output directory is created if needed."""
    def test_cli_process_command((self, tmp_path)):
        """Test CLI process command."""
    def test_cli_custom_options((self, tmp_path)):
        """Test CLI with custom options."""
    def test_cli_mutually_exclusive_options((self, tmp_path)):
        """Test that minify and prettify are mutually exclusive."""
    def test_cli_no_command((self)):
        """Test CLI with no command shows help."""
    def test_cli_file_not_found((self, tmp_path)):
        """Test CLI with non-existent input file."""

def test_extract_frontmatter_with_frontmatter((self)):
    """Test extracting YAML frontmatter from content."""

def test_extract_frontmatter_without_frontmatter((self)):
    """Test extracting from content without frontmatter."""

def test_extract_frontmatter_invalid_yaml((self)):
    """Test handling invalid YAML frontmatter."""

def test_process_html_basic((self)):
    """Test basic HTML processing."""

def test_process_html_custom_element_and_tag((self)):
    """Test processing with custom element and tag."""

def test_process_html_element_not_found((self)):
    """Test handling when element not found."""

def test_process_html_preserve_links((self)):
    """Test preserving relative links."""

def test_process_html_minify((self)):
    """Test HTML minification."""

def test_process_html_prettify((self)):
    """Test HTML prettification."""

def test_process_file_basic((self, tmp_path)):
    """Test basic file processing."""

def test_process_file_with_frontmatter((self, tmp_path)):
    """Test processing with frontmatter from corresponding .md file."""

def test_process_file_no_frontmatter((self, tmp_path)):
    """Test processing without frontmatter."""

def test_process_file_creates_output_dir((self, tmp_path)):
    """Test that output directory is created if needed."""

def test_cli_process_command((self, tmp_path)):
    """Test CLI process command."""

def test_cli_custom_options((self, tmp_path)):
    """Test CLI with custom options."""

def test_cli_mutually_exclusive_options((self, tmp_path)):
    """Test that minify and prettify are mutually exclusive."""

def test_cli_no_command((self)):
    """Test CLI with no command shows help."""

def test_cli_file_not_found((self, tmp_path)):
    """Test CLI with non-existent input file."""


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/tests/test_plugin.py
# Language: python

import tempfile
from pathlib import Path
from unittest.mock import Mock
import pytest
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

class TestOutputAsInputPlugin:
    """Test cases for OutputAsInputPlugin."""
    def test_default_config((self, plugin)):
        """Test plugin with default configuration."""
    def test_on_config_stores_paths((self, plugin, mkdocs_config)):
        """Test that on_config stores site and docs directories."""
    def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing source content and frontmatter."""
    def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing content without frontmatter."""
    def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
        """Test creating cousin files after build."""
    def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
        """Test handling missing HTML output."""
    def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
        """Test handling HTML without target element."""
    def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
        """Test with custom configuration options."""
    def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test handling invalid YAML frontmatter."""
    def test_file_read_error((self, plugin, mkdocs_config)):
        """Test handling file read errors."""
    def test_on_post_build_no_docs_dir((self, plugin)):
        """Test handling when docs_dir is None."""
    def test_process_file_no_site_dir((self, plugin, temp_dir)):
        """Test handling when site_dir is None."""
    def test_include_frontmatter_option((self, plugin, mkdocs_config, temp_dir)):
        """Test include_frontmatter configuration option."""
    def test_preserve_links_option((self, plugin, mkdocs_config, temp_dir)):
        """Test preserve_links configuration option."""
    def test_multiple_selectors((self, plugin, mkdocs_config, temp_dir)):
        """Test extraction of multiple selectors."""
    def test_css_selectors((self, plugin, mkdocs_config, temp_dir)):
        """Test CSS selector support."""
    def test_minify_option((self, plugin, mkdocs_config, temp_dir)):
        """Test minify option."""
    def test_prettify_option((self, plugin, mkdocs_config, temp_dir)):
        """Test prettify option."""
    def test_mutually_exclusive_options((self, plugin, mkdocs_config)):
        """Test that minify and prettify are mutually exclusive."""

def plugin((self)):
    """Create a plugin instance."""

def temp_dir((self)):
    """Create a temporary directory."""

def mkdocs_config((self, temp_dir)):
    """Create a mock MkDocs config."""

def test_default_config((self, plugin)):
    """Test plugin with default configuration."""

def test_on_config_stores_paths((self, plugin, mkdocs_config)):
    """Test that on_config stores site and docs directories."""

def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing source content and frontmatter."""

def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing content without frontmatter."""

def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
    """Test creating cousin files after build."""

def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
    """Test handling missing HTML output."""

def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
    """Test handling HTML without target element."""

def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
    """Test with custom configuration options."""

def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test handling invalid YAML frontmatter."""

def test_file_read_error((self, plugin, mkdocs_config)):
    """Test handling file read errors."""

def test_on_post_build_no_docs_dir((self, plugin)):
    """Test handling when docs_dir is None."""

def test_process_file_no_site_dir((self, plugin, temp_dir)):
    """Test handling when site_dir is None."""

def test_include_frontmatter_option((self, plugin, mkdocs_config, temp_dir)):
    """Test include_frontmatter configuration option."""

def test_preserve_links_option((self, plugin, mkdocs_config, temp_dir)):
    """Test preserve_links configuration option."""

def test_multiple_selectors((self, plugin, mkdocs_config, temp_dir)):
    """Test extraction of multiple selectors."""

def test_css_selectors((self, plugin, mkdocs_config, temp_dir)):
    """Test CSS selector support."""

def test_minify_option((self, plugin, mkdocs_config, temp_dir)):
    """Test minify option."""

def test_prettify_option((self, plugin, mkdocs_config, temp_dir)):
    """Test prettify option."""

def test_mutually_exclusive_options((self, plugin, mkdocs_config)):
    """Test that minify and prettify are mutually exclusive."""


</documents>
</document_content>
</document>

<document index="19">
<source>mkdocs.yml</source>
<document_content>
---
markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.superfences
  - pymdownx.snippets
  - admonition
  - pymdownx.details
  - pymdownx.tabbed:
      alternate_style: true
  - toc:
      permalink: true
nav:
  - Home: index.md
  - Getting Started: getting-started.md
  - Configuration: configuration.md
  - Examples: examples.md
  - API Reference: api.md
plugins:
  - search
  - output-as-input:
      stage_dir: stage
      verbose: true
  - mkdocstrings:
      handlers:
        python:
          options:
            show_source: true
repo_name: vexy-mkdocs-output-as-input
repo_url: https://github.com/vexyart/vexy-mkdocs-output-as-input
# this_file: more/vexy-mkdocs-output-as-input-refactored/mkdocs.yml
site_name: MkDocs Output as Input Plugin
site_url: https://vexyart.github.io/vexy-mkdocs-output-as-input/
theme:
  features:
    - navigation.sections
    - navigation.expand
    - navigation.top
    - search.suggest
    - search.highlight
    - content.code.copy
  name: material
  palette:
    - accent: indigo
      primary: indigo
      scheme: default
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    - accent: indigo
      primary: indigo
      scheme: slate
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
</document_content>
</document>

<document index="20">
<source>pyproject.toml</source>
<document_content>
# this_file: more/mkdocs-plugins/vexy-mkdocs-output-as-input/pyproject.toml

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "vexy-mkdocs-output-as-input"
dynamic = ["version"]
description = "MkDocs plugin that captures HTML output and creates cousin Markdown files with original frontmatter"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
maintainers = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
keywords = ["mkdocs", "plugin", "documentation", "html", "markdown", "postprocessing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: MkDocs",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
    "mkdocs>=1.6.0",
    "beautifulsoup4>=4.12.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "black>=23.7.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "types-pyyaml>=6.0.0",
    "types-beautifulsoup4>=4.12.0",
]
docs = [
    "vexy-mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Documentation = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Repository = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Issues = "https://github.com/vexyart/vexy-mkdocs-output-as-input/issues"
Changelog = "https://github.com/vexyart/vexy-mkdocs-output-as-input/blob/main/CHANGELOG.md"

[project.entry-points."mkdocs.plugins"]
output-as-input = "mkdocs_output_as_input.plugin:OutputAsInputPlugin"

[project.scripts]
mkdocs-output-as-input = "mkdocs_output_as_input.cli:main"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/mkdocs_output_as_input"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/CHANGELOG.md",
]

[tool.ruff]
line-length = 100
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

[tool.black]
line-length = 100
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "mkdocs.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/mkdocs_output_as_input"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 90
</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/__init__.py
# Language: python

from mkdocs_output_as_input.plugin import OutputAsInputPlugin
from mkdocs_output_as_input._version import __version__


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/cli.py
# Language: python

import argparse
import logging
import sys
from pathlib import Path
from typing import Any, Dict, Optional
import yaml
from bs4 import BeautifulSoup

def setup_logging((verbose: bool = False)) -> None:
    """Set up logging configuration."""

def extract_frontmatter((content: str)) -> tuple[Dict[str, Any], str]:
    """Extract YAML frontmatter from Markdown content."""

def process_html((
    html_content: str,
    html_element: str | list[str] = "main",
    target_tag: str = "article",
    preserve_links: bool = False,
    minify: bool = False,
    prettify: bool = False,
)) -> Optional[str]:
    """Process HTML content and extract specified element."""

def process_file((
    input_path: Path,
    output_path: Path,
    html_element: str | list[str] = "main",
    target_tag: str = "article",
    include_frontmatter: bool = True,
    preserve_links: bool = False,
    minify: bool = False,
    prettify: bool = False,
)) -> None:
    """Process a single file."""

def main(()) -> int:
    """Main CLI entry point."""


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/plugin.py
# Language: python

import logging
import re
from pathlib import Path
from typing import Any, Dict, Optional
import yaml
from bs4 import BeautifulSoup
from mkdocs.config import config_options
from mkdocs.plugins import BasePlugin
from mkdocs.structure.pages import Page

class OutputAsInputPlugin(B, a, s, e, P, l, u, g, i, n):
    """MkDocs plugin that captures HTML output and creates cousin Markdown files."""
    def __init__((self)) -> None:
        """Initialize the plugin."""
    def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
        """Store site and docs directories and validate configuration."""
    def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
        """Capture source Markdown content and frontmatter."""
    def on_post_build((self, config: dict[str, Any])) -> None:
        """After build, process all HTML files and create cousin Markdowns."""
    def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
        """Process a single file: extract HTML and create cousin Markdown."""

def __init__((self)) -> None:
    """Initialize the plugin."""

def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
    """Store site and docs directories and validate configuration."""

def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
    """Capture source Markdown content and frontmatter."""

def on_post_build((self, config: dict[str, Any])) -> None:
    """After build, process all HTML files and create cousin Markdowns."""

def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
    """Process a single file: extract HTML and create cousin Markdown."""


<document index="21">
<source>stage/README.md</source>
<document_content>
---
author: Vexy
code_count: 17
date: 2025-01-14
description: A plugin that captures HTML output and creates cousin Markdown files
has_code: true
pipeline_version: '1.0'
processed: true
source: mkdocs-output-as-input
tags:
- mkdocs
- plugin
- documentation
- pipeline
title: MkDocs Output as Input Plugin
version: 1.0.0
---


<div class="md-content__inner md-typeset">
<h1 class="custom-heading" id="vexy-mkdocs-output-as-input">vexy-mkdocs-output-as-input<a class="headerlink" href="#vexy-mkdocs-output-as-input" title="Permanent link">¶</a></h1>
<p><a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="PyPI version" src="https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg"/></a>
<a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml"><img alt="CI" src="https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg"/></a>
<a href="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input"><img alt="codecov" src="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg"/></a>
<a href="https://opensource.org/licenses/MIT"><img alt="License: MIT" src="https://img.shields.io/badge/License-MIT-yellow.svg"/></a>
<a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="Python versions" src="https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg"/></a></p>
<p>A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.</p>
<h2 class="custom-heading" id="features">Features<a class="headerlink" href="#features" title="Permanent link">¶</a></h2>
<p>This plugin enables powerful post-processing workflows by:</p>
<ol>
<li>✅ Preserving your original Markdown structure and frontmatter</li>
<li>✅ Capturing the fully-rendered HTML output from MkDocs</li>
<li>✅ Creating new Markdown files that combine original metadata with processed HTML</li>
<li>✅ Enabling further processing by other static site generators</li>
</ol>
<h2 class="custom-heading" id="installation">Installation<a class="headerlink" href="#installation" title="Permanent link">¶</a></h2>
<p>Install from PyPI:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-0-1" id="__codelineno-0-1" name="__codelineno-0-1"></a>uv<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>--system<span class="w"> </span>--upgrade<span class="w"> </span>vexy-mkdocs-output-as-input
</code></pre></div>
<p>Or install from source:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-1-1" id="__codelineno-1-1" name="__codelineno-1-1"></a>pip<span class="w"> </span>install<span class="w"> </span>git+https://github.com/vexyart/vexy-mkdocs-output-as-input
</code></pre></div>
<h2 class="custom-heading" id="quick-start">Quick Start<a class="headerlink" href="#quick-start" title="Permanent link">¶</a></h2>
<p>Add the plugin to your <code>mkdocs.yml</code>:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-2-1" id="__codelineno-2-1" name="__codelineno-2-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-2-2" id="__codelineno-2-2" name="__codelineno-2-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span><span class="w">  </span><span class="c1"># Other plugins</span>
<a href="#__codelineno-2-3" id="__codelineno-2-3" name="__codelineno-2-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<p>Build your site:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-3-1" id="__codelineno-3-1" name="__codelineno-3-1"></a>mkdocs<span class="w"> </span>build
</code></pre></div>
<p>Find your processed files in the <code>stage/</code> directory (relative to your MkDocs project root).</p>
<h2 class="custom-heading" id="configuration">Configuration<a class="headerlink" href="#configuration" title="Permanent link">¶</a></h2>
<p>All configuration options with their defaults:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-4-1" id="__codelineno-4-1" name="__codelineno-4-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-4-2" id="__codelineno-4-2" name="__codelineno-4-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-4-3" id="__codelineno-4-3" name="__codelineno-4-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">stage</span><span class="w">          </span><span class="c1"># Output directory name (default: 'stage')</span>
<a href="#__codelineno-4-4" id="__codelineno-4-4" name="__codelineno-4-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span><span class="w">        </span><span class="c1"># HTML element to extract (default: 'main')</span>
<a href="#__codelineno-4-5" id="__codelineno-4-5" name="__codelineno-4-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span><span class="w">       </span><span class="c1"># Tag to use in output (default: 'article')</span>
<a href="#__codelineno-4-6" id="__codelineno-4-6" name="__codelineno-4-6"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">false</span><span class="w">            </span><span class="c1"># Enable verbose logging (default: false)</span>
</code></pre></div>
<h3 class="custom-heading" id="options-explained">Options Explained<a class="headerlink" href="#options-explained" title="Permanent link">¶</a></h3>
<table>
<thead>
<tr>
<th>Option</th>
<th>Type</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>stage_dir</code></td>
<td>string</td>
<td><code>"stage"</code></td>
<td>Directory name for output files (relative to project root)</td>
</tr>
<tr>
<td><code>html_element</code></td>
<td>string</td>
<td><code>"main"</code></td>
<td>CSS selector for the HTML element to extract</td>
</tr>
<tr>
<td><code>target_tag</code></td>
<td>string</td>
<td><code>"article"</code></td>
<td>HTML tag to use in the output (replaces extracted element's tag)</td>
</tr>
<tr>
<td><code>verbose</code></td>
<td>boolean</td>
<td><code>false</code></td>
<td>Enable detailed logging for debugging</td>
</tr>
</tbody>
</table>
<h2 class="custom-heading" id="how-it-works">How It Works<a class="headerlink" href="#how-it-works" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="input-process-output">Input → Process → Output<a class="headerlink" href="#input-process-output" title="Permanent link">¶</a></h3>
<ol>
<li>
<p><strong>Input</strong>: Your source Markdown with frontmatter
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-5-1" id="__codelineno-5-1" name="__codelineno-5-1"></a>---
<a href="#__codelineno-5-2" id="__codelineno-5-2" name="__codelineno-5-2"></a>title: My Page
<a href="#__codelineno-5-3" id="__codelineno-5-3" name="__codelineno-5-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-5-4" id="__codelineno-5-4" name="__codelineno-5-4"></a><span class="gu">---</span>
<a href="#__codelineno-5-5" id="__codelineno-5-5" name="__codelineno-5-5"></a>
<a href="#__codelineno-5-6" id="__codelineno-5-6" name="__codelineno-5-6"></a><span class="gh"># My Page</span>
<a href="#__codelineno-5-7" id="__codelineno-5-7" name="__codelineno-5-7"></a>
<a href="#__codelineno-5-8" id="__codelineno-5-8" name="__codelineno-5-8"></a>This is my content with <span class="gs">**markdown**</span>.
</code></pre></div></p>
</li>
<li>
<p><strong>MkDocs Processing</strong>: Renders to HTML as usual
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-6-1" id="__codelineno-6-1" name="__codelineno-6-1"></a><span class="p">&lt;</span><span class="nt">main</span> <span class="na">class</span><span class="o">=</span><span class="s">"md-content"</span><span class="p">&gt;</span>
<a href="#__codelineno-6-2" id="__codelineno-6-2" name="__codelineno-6-2"></a>  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>My Page<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<a href="#__codelineno-6-3" id="__codelineno-6-3" name="__codelineno-6-3"></a>  <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>This is my content with <span class="p">&lt;</span><span class="nt">strong</span><span class="p">&gt;</span>markdown<span class="p">&lt;/</span><span class="nt">strong</span><span class="p">&gt;</span>.<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<a href="#__codelineno-6-4" id="__codelineno-6-4" name="__codelineno-6-4"></a><span class="p">&lt;/</span><span class="nt">main</span><span class="p">&gt;</span>
</code></pre></div></p>
</li>
<li>
<p><strong>Output</strong>: Cousin file with preserved frontmatter + extracted HTML
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-7-1" id="__codelineno-7-1" name="__codelineno-7-1"></a>---
<a href="#__codelineno-7-2" id="__codelineno-7-2" name="__codelineno-7-2"></a>title: My Page
<a href="#__codelineno-7-3" id="__codelineno-7-3" name="__codelineno-7-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-7-4" id="__codelineno-7-4" name="__codelineno-7-4"></a><span class="gu">---</span>
<a href="#__codelineno-7-5" id="__codelineno-7-5" name="__codelineno-7-5"></a>
<a href="#__codelineno-7-6" id="__codelineno-7-6" name="__codelineno-7-6"></a>&lt;article class="md-content"&gt;
<a href="#__codelineno-7-7" id="__codelineno-7-7" name="__codelineno-7-7"></a>  &lt;h1&gt;My Page&lt;/h1&gt;
<a href="#__codelineno-7-8" id="__codelineno-7-8" name="__codelineno-7-8"></a>  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;
<a href="#__codelineno-7-9" id="__codelineno-7-9" name="__codelineno-7-9"></a>&lt;/article&gt;
</code></pre></div></p>
</li>
</ol>
<h2 class="custom-heading" id="use-cases">Use Cases<a class="headerlink" href="#use-cases" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="multi-stage-documentation-pipeline">🔄 Multi-Stage Documentation Pipeline<a class="headerlink" href="#multi-stage-documentation-pipeline" title="Permanent link">¶</a></h3>
<p>Process documentation through MkDocs first, then feed to another SSG:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-8-1" id="__codelineno-8-1" name="__codelineno-8-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-8-2" id="__codelineno-8-2" name="__codelineno-8-2"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-8-3" id="__codelineno-8-3" name="__codelineno-8-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-8-4" id="__codelineno-8-4" name="__codelineno-8-4"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">hugo/content</span>
<a href="#__codelineno-8-5" id="__codelineno-8-5" name="__codelineno-8-5"></a>
<a href="#__codelineno-8-6" id="__codelineno-8-6" name="__codelineno-8-6"></a><span class="c1"># Then run:</span>
<a href="#__codelineno-8-7" id="__codelineno-8-7" name="__codelineno-8-7"></a><span class="c1"># mkdocs build &amp;&amp; hugo build</span>
</code></pre></div>
<h3 class="custom-heading" id="content-extraction">📝 Content Extraction<a class="headerlink" href="#content-extraction" title="Permanent link">¶</a></h3>
<p>Extract just the article content without theme wrapper:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-9-1" id="__codelineno-9-1" name="__codelineno-9-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-9-2" id="__codelineno-9-2" name="__codelineno-9-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-9-3" id="__codelineno-9-3" name="__codelineno-9-3"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span>
<a href="#__codelineno-9-4" id="__codelineno-9-4" name="__codelineno-9-4"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">div</span>
</code></pre></div>
<h3 class="custom-heading" id="custom-post-processing">🎨 Custom Post-Processing<a class="headerlink" href="#custom-post-processing" title="Permanent link">¶</a></h3>
<p>Preserve MkDocs rendering while preparing for custom templates:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-10-1" id="__codelineno-10-1" name="__codelineno-10-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-10-2" id="__codelineno-10-2" name="__codelineno-10-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-10-3" id="__codelineno-10-3" name="__codelineno-10-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">_includes</span>
<a href="#__codelineno-10-4" id="__codelineno-10-4" name="__codelineno-10-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-10-5" id="__codelineno-10-5" name="__codelineno-10-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">section</span>
</code></pre></div>
<h2 class="custom-heading" id="examples">Examples<a class="headerlink" href="#examples" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="basic-example">Basic Example<a class="headerlink" href="#basic-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-11-1" id="__codelineno-11-1" name="__codelineno-11-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-11-2" id="__codelineno-11-2" name="__codelineno-11-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-11-3" id="__codelineno-11-3" name="__codelineno-11-3"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-11-4" id="__codelineno-11-4" name="__codelineno-11-4"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<h3 class="custom-heading" id="advanced-example">Advanced Example<a class="headerlink" href="#advanced-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-12-1" id="__codelineno-12-1" name="__codelineno-12-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-12-2" id="__codelineno-12-2" name="__codelineno-12-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-12-3" id="__codelineno-12-3" name="__codelineno-12-3"></a><span class="nt">theme</span><span class="p">:</span>
<a href="#__codelineno-12-4" id="__codelineno-12-4" name="__codelineno-12-4"></a><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">material</span>
<a href="#__codelineno-12-5" id="__codelineno-12-5" name="__codelineno-12-5"></a>
<a href="#__codelineno-12-6" id="__codelineno-12-6" name="__codelineno-12-6"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-12-7" id="__codelineno-12-7" name="__codelineno-12-7"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span>
<a href="#__codelineno-12-8" id="__codelineno-12-8" name="__codelineno-12-8"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-12-9" id="__codelineno-12-9" name="__codelineno-12-9"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">processed</span>
<a href="#__codelineno-12-10" id="__codelineno-12-10" name="__codelineno-12-10"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article.md-content__inner</span>
<a href="#__codelineno-12-11" id="__codelineno-12-11" name="__codelineno-12-11"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-12-12" id="__codelineno-12-12" name="__codelineno-12-12"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">true</span>
<a href="#__codelineno-12-13" id="__codelineno-12-13" name="__codelineno-12-13"></a>
<a href="#__codelineno-12-14" id="__codelineno-12-14" name="__codelineno-12-14"></a><span class="c1"># Process specific content area from Material theme</span>
</code></pre></div>
<h3 class="custom-heading" id="integration-example">Integration Example<a class="headerlink" href="#integration-example" title="Permanent link">¶</a></h3>
<p>Using with other tools in a documentation pipeline:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-13-1" id="__codelineno-13-1" name="__codelineno-13-1"></a><span class="ch">#!/bin/bash</span>
<a href="#__codelineno-13-2" id="__codelineno-13-2" name="__codelineno-13-2"></a><span class="c1"># build.sh</span>
<a href="#__codelineno-13-3" id="__codelineno-13-3" name="__codelineno-13-3"></a>
<a href="#__codelineno-13-4" id="__codelineno-13-4" name="__codelineno-13-4"></a><span class="c1"># Stage 1: Build with MkDocs + plugins</span>
<a href="#__codelineno-13-5" id="__codelineno-13-5" name="__codelineno-13-5"></a>mkdocs<span class="w"> </span>build
<a href="#__codelineno-13-6" id="__codelineno-13-6" name="__codelineno-13-6"></a>
<a href="#__codelineno-13-7" id="__codelineno-13-7" name="__codelineno-13-7"></a><span class="c1"># Stage 2: Process staged output</span>
<a href="#__codelineno-13-8" id="__codelineno-13-8" name="__codelineno-13-8"></a>python<span class="w"> </span>post_process.py<span class="w"> </span>stage/
<a href="#__codelineno-13-9" id="__codelineno-13-9" name="__codelineno-13-9"></a>
<a href="#__codelineno-13-10" id="__codelineno-13-10" name="__codelineno-13-10"></a><span class="c1"># Stage 3: Build final site</span>
<a href="#__codelineno-13-11" id="__codelineno-13-11" name="__codelineno-13-11"></a>hugo<span class="w"> </span>--contentDir<span class="o">=</span>stage/
</code></pre></div>
<h2 class="custom-heading" id="development">Development<a class="headerlink" href="#development" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="setup-development-environment">Setup Development Environment<a class="headerlink" href="#setup-development-environment" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-14-1" id="__codelineno-14-1" name="__codelineno-14-1"></a><span class="c1"># Clone the repository</span>
<a href="#__codelineno-14-2" id="__codelineno-14-2" name="__codelineno-14-2"></a>git<span class="w"> </span>clone<span class="w"> </span>https://github.com/vexyart/vexy-mkdocs-output-as-input
<a href="#__codelineno-14-3" id="__codelineno-14-3" name="__codelineno-14-3"></a><span class="nb">cd</span><span class="w"> </span>vexy-mkdocs-output-as-input
<a href="#__codelineno-14-4" id="__codelineno-14-4" name="__codelineno-14-4"></a>
<a href="#__codelineno-14-5" id="__codelineno-14-5" name="__codelineno-14-5"></a><span class="c1"># Create virtual environment</span>
<a href="#__codelineno-14-6" id="__codelineno-14-6" name="__codelineno-14-6"></a>python<span class="w"> </span>-m<span class="w"> </span>venv<span class="w"> </span>venv
<a href="#__codelineno-14-7" id="__codelineno-14-7" name="__codelineno-14-7"></a><span class="nb">source</span><span class="w"> </span>venv/bin/activate<span class="w">  </span><span class="c1"># On Windows: venv\Scripts\activate</span>
<a href="#__codelineno-14-8" id="__codelineno-14-8" name="__codelineno-14-8"></a>
<a href="#__codelineno-14-9" id="__codelineno-14-9" name="__codelineno-14-9"></a><span class="c1"># Install in development mode</span>
<a href="#__codelineno-14-10" id="__codelineno-14-10" name="__codelineno-14-10"></a>pip<span class="w"> </span>install<span class="w"> </span>-e<span class="w"> </span>.<span class="o">[</span>dev<span class="o">]</span>
<a href="#__codelineno-14-11" id="__codelineno-14-11" name="__codelineno-14-11"></a>
<a href="#__codelineno-14-12" id="__codelineno-14-12" name="__codelineno-14-12"></a><span class="c1"># Install pre-commit hooks</span>
<a href="#__codelineno-14-13" id="__codelineno-14-13" name="__codelineno-14-13"></a>pre-commit<span class="w"> </span>install
</code></pre></div>
<h3 class="custom-heading" id="running-tests">Running Tests<a class="headerlink" href="#running-tests" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-15-1" id="__codelineno-15-1" name="__codelineno-15-1"></a><span class="c1"># Run all tests</span>
<a href="#__codelineno-15-2" id="__codelineno-15-2" name="__codelineno-15-2"></a>pytest
<a href="#__codelineno-15-3" id="__codelineno-15-3" name="__codelineno-15-3"></a>
<a href="#__codelineno-15-4" id="__codelineno-15-4" name="__codelineno-15-4"></a><span class="c1"># Run with coverage</span>
<a href="#__codelineno-15-5" id="__codelineno-15-5" name="__codelineno-15-5"></a>pytest<span class="w"> </span>--cov<span class="o">=</span>mkdocs_output_as_input<span class="w"> </span>--cov-report<span class="o">=</span>html
<a href="#__codelineno-15-6" id="__codelineno-15-6" name="__codelineno-15-6"></a>
<a href="#__codelineno-15-7" id="__codelineno-15-7" name="__codelineno-15-7"></a><span class="c1"># Run specific test</span>
<a href="#__codelineno-15-8" id="__codelineno-15-8" name="__codelineno-15-8"></a>pytest<span class="w"> </span>tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
</code></pre></div>
<h3 class="custom-heading" id="code-quality">Code Quality<a class="headerlink" href="#code-quality" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-16-1" id="__codelineno-16-1" name="__codelineno-16-1"></a><span class="c1"># Format code</span>
<a href="#__codelineno-16-2" id="__codelineno-16-2" name="__codelineno-16-2"></a>black<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-3" id="__codelineno-16-3" name="__codelineno-16-3"></a>
<a href="#__codelineno-16-4" id="__codelineno-16-4" name="__codelineno-16-4"></a><span class="c1"># Lint code</span>
<a href="#__codelineno-16-5" id="__codelineno-16-5" name="__codelineno-16-5"></a>ruff<span class="w"> </span>check<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-6" id="__codelineno-16-6" name="__codelineno-16-6"></a>
<a href="#__codelineno-16-7" id="__codelineno-16-7" name="__codelineno-16-7"></a><span class="c1"># Type check</span>
<a href="#__codelineno-16-8" id="__codelineno-16-8" name="__codelineno-16-8"></a>mypy<span class="w"> </span>src
</code></pre></div>
<h2 class="custom-heading" id="contributing">Contributing<a class="headerlink" href="#contributing" title="Permanent link">¶</a></h2>
<p>Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.</p>
<ol>
<li>Fork the repository</li>
<li>Create your feature branch (<code>git checkout -b feature/AmazingFeature</code>)</li>
<li>Commit your changes (<code>git commit -m 'Add some AmazingFeature'</code>)</li>
<li>Push to the branch (<code>git push origin feature/AmazingFeature</code>)</li>
<li>Open a Pull Request</li>
</ol>
<h2 class="custom-heading" id="license">License<a class="headerlink" href="#license" title="Permanent link">¶</a></h2>
<p>This project is licensed under the MIT License - see the <a href="LICENSE">LICENSE</a> file for details.</p>
<h2 class="custom-heading" id="support">Support<a class="headerlink" href="#support" title="Permanent link">¶</a></h2>
<ul>
<li>📧 Email: you@example.com</li>
<li>🐛 Issues: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/issues">GitHub Issues</a></li>
<li>💬 Discussions: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions">GitHub Discussions</a></li>
</ul>
</div>

</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/tests/test_cli.py
# Language: python

import tempfile
from pathlib import Path
from unittest.mock import patch
import pytest
from mkdocs_output_as_input.cli import (
    extract_frontmatter,
    main,
    process_file,
    process_html,
)

class TestCLI:
    """Test cases for CLI functionality."""
    def test_extract_frontmatter_with_frontmatter((self)):
        """Test extracting YAML frontmatter from content."""
    def test_extract_frontmatter_without_frontmatter((self)):
        """Test extracting from content without frontmatter."""
    def test_extract_frontmatter_invalid_yaml((self)):
        """Test handling invalid YAML frontmatter."""
    def test_process_html_basic((self)):
        """Test basic HTML processing."""
    def test_process_html_custom_element_and_tag((self)):
        """Test processing with custom element and tag."""
    def test_process_html_element_not_found((self)):
        """Test handling when element not found."""
    def test_process_html_preserve_links((self)):
        """Test preserving relative links."""
    def test_process_html_minify((self)):
        """Test HTML minification."""
    def test_process_html_prettify((self)):
        """Test HTML prettification."""
    def test_process_file_basic((self, tmp_path)):
        """Test basic file processing."""
    def test_process_file_with_frontmatter((self, tmp_path)):
        """Test processing with frontmatter from corresponding .md file."""
    def test_process_file_no_frontmatter((self, tmp_path)):
        """Test processing without frontmatter."""
    def test_process_file_creates_output_dir((self, tmp_path)):
        """Test that output directory is created if needed."""
    def test_cli_process_command((self, tmp_path)):
        """Test CLI process command."""
    def test_cli_custom_options((self, tmp_path)):
        """Test CLI with custom options."""
    def test_cli_mutually_exclusive_options((self, tmp_path)):
        """Test that minify and prettify are mutually exclusive."""
    def test_cli_no_command((self)):
        """Test CLI with no command shows help."""
    def test_cli_file_not_found((self, tmp_path)):
        """Test CLI with non-existent input file."""

def test_extract_frontmatter_with_frontmatter((self)):
    """Test extracting YAML frontmatter from content."""

def test_extract_frontmatter_without_frontmatter((self)):
    """Test extracting from content without frontmatter."""

def test_extract_frontmatter_invalid_yaml((self)):
    """Test handling invalid YAML frontmatter."""

def test_process_html_basic((self)):
    """Test basic HTML processing."""

def test_process_html_custom_element_and_tag((self)):
    """Test processing with custom element and tag."""

def test_process_html_element_not_found((self)):
    """Test handling when element not found."""

def test_process_html_preserve_links((self)):
    """Test preserving relative links."""

def test_process_html_minify((self)):
    """Test HTML minification."""

def test_process_html_prettify((self)):
    """Test HTML prettification."""

def test_process_file_basic((self, tmp_path)):
    """Test basic file processing."""

def test_process_file_with_frontmatter((self, tmp_path)):
    """Test processing with frontmatter from corresponding .md file."""

def test_process_file_no_frontmatter((self, tmp_path)):
    """Test processing without frontmatter."""

def test_process_file_creates_output_dir((self, tmp_path)):
    """Test that output directory is created if needed."""

def test_cli_process_command((self, tmp_path)):
    """Test CLI process command."""

def test_cli_custom_options((self, tmp_path)):
    """Test CLI with custom options."""

def test_cli_mutually_exclusive_options((self, tmp_path)):
    """Test that minify and prettify are mutually exclusive."""

def test_cli_no_command((self)):
    """Test CLI with no command shows help."""

def test_cli_file_not_found((self, tmp_path)):
    """Test CLI with non-existent input file."""


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/tests/test_plugin.py
# Language: python

import tempfile
from pathlib import Path
from unittest.mock import Mock
import pytest
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

class TestOutputAsInputPlugin:
    """Test cases for OutputAsInputPlugin."""
    def test_default_config((self, plugin)):
        """Test plugin with default configuration."""
    def test_on_config_stores_paths((self, plugin, mkdocs_config)):
        """Test that on_config stores site and docs directories."""
    def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing source content and frontmatter."""
    def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing content without frontmatter."""
    def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
        """Test creating cousin files after build."""
    def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
        """Test handling missing HTML output."""
    def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
        """Test handling HTML without target element."""
    def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
        """Test with custom configuration options."""
    def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test handling invalid YAML frontmatter."""
    def test_file_read_error((self, plugin, mkdocs_config)):
        """Test handling file read errors."""
    def test_on_post_build_no_docs_dir((self, plugin)):
        """Test handling when docs_dir is None."""
    def test_process_file_no_site_dir((self, plugin, temp_dir)):
        """Test handling when site_dir is None."""
    def test_include_frontmatter_option((self, plugin, mkdocs_config, temp_dir)):
        """Test include_frontmatter configuration option."""
    def test_preserve_links_option((self, plugin, mkdocs_config, temp_dir)):
        """Test preserve_links configuration option."""
    def test_multiple_selectors((self, plugin, mkdocs_config, temp_dir)):
        """Test extraction of multiple selectors."""
    def test_css_selectors((self, plugin, mkdocs_config, temp_dir)):
        """Test CSS selector support."""
    def test_minify_option((self, plugin, mkdocs_config, temp_dir)):
        """Test minify option."""
    def test_prettify_option((self, plugin, mkdocs_config, temp_dir)):
        """Test prettify option."""
    def test_mutually_exclusive_options((self, plugin, mkdocs_config)):
        """Test that minify and prettify are mutually exclusive."""

def plugin((self)):
    """Create a plugin instance."""

def temp_dir((self)):
    """Create a temporary directory."""

def mkdocs_config((self, temp_dir)):
    """Create a mock MkDocs config."""

def test_default_config((self, plugin)):
    """Test plugin with default configuration."""

def test_on_config_stores_paths((self, plugin, mkdocs_config)):
    """Test that on_config stores site and docs directories."""

def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing source content and frontmatter."""

def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing content without frontmatter."""

def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
    """Test creating cousin files after build."""

def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
    """Test handling missing HTML output."""

def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
    """Test handling HTML without target element."""

def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
    """Test with custom configuration options."""

def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test handling invalid YAML frontmatter."""

def test_file_read_error((self, plugin, mkdocs_config)):
    """Test handling file read errors."""

def test_on_post_build_no_docs_dir((self, plugin)):
    """Test handling when docs_dir is None."""

def test_process_file_no_site_dir((self, plugin, temp_dir)):
    """Test handling when site_dir is None."""

def test_include_frontmatter_option((self, plugin, mkdocs_config, temp_dir)):
    """Test include_frontmatter configuration option."""

def test_preserve_links_option((self, plugin, mkdocs_config, temp_dir)):
    """Test preserve_links configuration option."""

def test_multiple_selectors((self, plugin, mkdocs_config, temp_dir)):
    """Test extraction of multiple selectors."""

def test_css_selectors((self, plugin, mkdocs_config, temp_dir)):
    """Test CSS selector support."""

def test_minify_option((self, plugin, mkdocs_config, temp_dir)):
    """Test minify option."""

def test_prettify_option((self, plugin, mkdocs_config, temp_dir)):
    """Test prettify option."""

def test_mutually_exclusive_options((self, plugin, mkdocs_config)):
    """Test that minify and prettify are mutually exclusive."""


</documents>
</document_content>
</document>

<document index="19">
<source>mkdocs.yml</source>
<document_content>
---
markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.superfences
  - pymdownx.snippets
  - admonition
  - pymdownx.details
  - pymdownx.tabbed:
      alternate_style: true
  - toc:
      permalink: true
nav:
  - Home: index.md
  - Getting Started: getting-started.md
  - Configuration: configuration.md
  - Examples: examples.md
  - API Reference: api.md
plugins:
  - search
  - output-as-input:
      stage_dir: stage
      verbose: true
  - mkdocstrings:
      handlers:
        python:
          options:
            show_source: true
repo_name: vexy-mkdocs-output-as-input
repo_url: https://github.com/vexyart/vexy-mkdocs-output-as-input
# this_file: more/vexy-mkdocs-output-as-input-refactored/mkdocs.yml
site_name: MkDocs Output as Input Plugin
site_url: https://vexyart.github.io/vexy-mkdocs-output-as-input/
theme:
  features:
    - navigation.sections
    - navigation.expand
    - navigation.top
    - search.suggest
    - search.highlight
    - content.code.copy
  name: material
  palette:
    - accent: indigo
      primary: indigo
      scheme: default
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    - accent: indigo
      primary: indigo
      scheme: slate
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
</document_content>
</document>

<document index="20">
<source>pyproject.toml</source>
<document_content>
# this_file: more/mkdocs-plugins/vexy-mkdocs-output-as-input/pyproject.toml

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "vexy-mkdocs-output-as-input"
dynamic = ["version"]
description = "MkDocs plugin that captures HTML output and creates cousin Markdown files with original frontmatter"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
maintainers = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
keywords = ["mkdocs", "plugin", "documentation", "html", "markdown", "postprocessing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: MkDocs",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
    "mkdocs>=1.6.0",
    "beautifulsoup4>=4.12.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "black>=23.7.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "types-pyyaml>=6.0.0",
    "types-beautifulsoup4>=4.12.0",
]
docs = [
    "vexy-mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Documentation = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Repository = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Issues = "https://github.com/vexyart/vexy-mkdocs-output-as-input/issues"
Changelog = "https://github.com/vexyart/vexy-mkdocs-output-as-input/blob/main/CHANGELOG.md"

[project.entry-points."mkdocs.plugins"]
output-as-input = "mkdocs_output_as_input.plugin:OutputAsInputPlugin"

[project.scripts]
mkdocs-output-as-input = "mkdocs_output_as_input.cli:main"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/mkdocs_output_as_input"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/CHANGELOG.md",
]

[tool.ruff]
line-length = 100
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

[tool.black]
line-length = 100
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "mkdocs.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/mkdocs_output_as_input"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 90
</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/__init__.py
# Language: python

from mkdocs_output_as_input.plugin import OutputAsInputPlugin
from mkdocs_output_as_input._version import __version__


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/cli.py
# Language: python

import argparse
import logging
import sys
from pathlib import Path
from typing import Any, Dict, Optional
import yaml
from bs4 import BeautifulSoup

def setup_logging((verbose: bool = False)) -> None:
    """Set up logging configuration."""

def extract_frontmatter((content: str)) -> tuple[Dict[str, Any], str]:
    """Extract YAML frontmatter from Markdown content."""

def process_html((
    html_content: str,
    html_element: str | list[str] = "main",
    target_tag: str = "article",
    preserve_links: bool = False,
    minify: bool = False,
    prettify: bool = False,
)) -> Optional[str]:
    """Process HTML content and extract specified element."""

def process_file((
    input_path: Path,
    output_path: Path,
    html_element: str | list[str] = "main",
    target_tag: str = "article",
    include_frontmatter: bool = True,
    preserve_links: bool = False,
    minify: bool = False,
    prettify: bool = False,
)) -> None:
    """Process a single file."""

def main(()) -> int:
    """Main CLI entry point."""


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/plugin.py
# Language: python

import logging
import re
from pathlib import Path
from typing import Any, Dict, Optional
import yaml
from bs4 import BeautifulSoup
from mkdocs.config import config_options
from mkdocs.plugins import BasePlugin
from mkdocs.structure.pages import Page

class OutputAsInputPlugin(B, a, s, e, P, l, u, g, i, n):
    """MkDocs plugin that captures HTML output and creates cousin Markdown files."""
    def __init__((self)) -> None:
        """Initialize the plugin."""
    def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
        """Store site and docs directories and validate configuration."""
    def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
        """Capture source Markdown content and frontmatter."""
    def on_post_build((self, config: dict[str, Any])) -> None:
        """After build, process all HTML files and create cousin Markdowns."""
    def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
        """Process a single file: extract HTML and create cousin Markdown."""

def __init__((self)) -> None:
    """Initialize the plugin."""

def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
    """Store site and docs directories and validate configuration."""

def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
    """Capture source Markdown content and frontmatter."""

def on_post_build((self, config: dict[str, Any])) -> None:
    """After build, process all HTML files and create cousin Markdowns."""

def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
    """Process a single file: extract HTML and create cousin Markdown."""


<document index="21">
<source>stage/README.md</source>
<document_content>
---
author: Vexy
code_count: 17
date: 2025-01-14
description: A plugin that captures HTML output and creates cousin Markdown files
has_code: true
pipeline_version: '1.0'
processed: true
source: mkdocs-output-as-input
tags:
- mkdocs
- plugin
- documentation
- pipeline
title: MkDocs Output as Input Plugin
version: 1.0.0
---


<div class="md-content__inner md-typeset">
<h1 class="custom-heading" id="vexy-mkdocs-output-as-input">vexy-mkdocs-output-as-input<a class="headerlink" href="#vexy-mkdocs-output-as-input" title="Permanent link">¶</a></h1>
<p><a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="PyPI version" src="https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg"/></a>
<a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml"><img alt="CI" src="https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg"/></a>
<a href="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input"><img alt="codecov" src="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg"/></a>
<a href="https://opensource.org/licenses/MIT"><img alt="License: MIT" src="https://img.shields.io/badge/License-MIT-yellow.svg"/></a>
<a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="Python versions" src="https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg"/></a></p>
<p>A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.</p>
<h2 class="custom-heading" id="features">Features<a class="headerlink" href="#features" title="Permanent link">¶</a></h2>
<p>This plugin enables powerful post-processing workflows by:</p>
<ol>
<li>✅ Preserving your original Markdown structure and frontmatter</li>
<li>✅ Capturing the fully-rendered HTML output from MkDocs</li>
<li>✅ Creating new Markdown files that combine original metadata with processed HTML</li>
<li>✅ Enabling further processing by other static site generators</li>
</ol>
<h2 class="custom-heading" id="installation">Installation<a class="headerlink" href="#installation" title="Permanent link">¶</a></h2>
<p>Install from PyPI:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-0-1" id="__codelineno-0-1" name="__codelineno-0-1"></a>uv<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>--system<span class="w"> </span>--upgrade<span class="w"> </span>vexy-mkdocs-output-as-input
</code></pre></div>
<p>Or install from source:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-1-1" id="__codelineno-1-1" name="__codelineno-1-1"></a>pip<span class="w"> </span>install<span class="w"> </span>git+https://github.com/vexyart/vexy-mkdocs-output-as-input
</code></pre></div>
<h2 class="custom-heading" id="quick-start">Quick Start<a class="headerlink" href="#quick-start" title="Permanent link">¶</a></h2>
<p>Add the plugin to your <code>mkdocs.yml</code>:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-2-1" id="__codelineno-2-1" name="__codelineno-2-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-2-2" id="__codelineno-2-2" name="__codelineno-2-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span><span class="w">  </span><span class="c1"># Other plugins</span>
<a href="#__codelineno-2-3" id="__codelineno-2-3" name="__codelineno-2-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<p>Build your site:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-3-1" id="__codelineno-3-1" name="__codelineno-3-1"></a>mkdocs<span class="w"> </span>build
</code></pre></div>
<p>Find your processed files in the <code>stage/</code> directory (relative to your MkDocs project root).</p>
<h2 class="custom-heading" id="configuration">Configuration<a class="headerlink" href="#configuration" title="Permanent link">¶</a></h2>
<p>All configuration options with their defaults:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-4-1" id="__codelineno-4-1" name="__codelineno-4-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-4-2" id="__codelineno-4-2" name="__codelineno-4-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-4-3" id="__codelineno-4-3" name="__codelineno-4-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">stage</span><span class="w">          </span><span class="c1"># Output directory name (default: 'stage')</span>
<a href="#__codelineno-4-4" id="__codelineno-4-4" name="__codelineno-4-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span><span class="w">        </span><span class="c1"># HTML element to extract (default: 'main')</span>
<a href="#__codelineno-4-5" id="__codelineno-4-5" name="__codelineno-4-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span><span class="w">       </span><span class="c1"># Tag to use in output (default: 'article')</span>
<a href="#__codelineno-4-6" id="__codelineno-4-6" name="__codelineno-4-6"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">false</span><span class="w">            </span><span class="c1"># Enable verbose logging (default: false)</span>
</code></pre></div>
<h3 class="custom-heading" id="options-explained">Options Explained<a class="headerlink" href="#options-explained" title="Permanent link">¶</a></h3>
<table>
<thead>
<tr>
<th>Option</th>
<th>Type</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>stage_dir</code></td>
<td>string</td>
<td><code>"stage"</code></td>
<td>Directory name for output files (relative to project root)</td>
</tr>
<tr>
<td><code>html_element</code></td>
<td>string</td>
<td><code>"main"</code></td>
<td>CSS selector for the HTML element to extract</td>
</tr>
<tr>
<td><code>target_tag</code></td>
<td>string</td>
<td><code>"article"</code></td>
<td>HTML tag to use in the output (replaces extracted element's tag)</td>
</tr>
<tr>
<td><code>verbose</code></td>
<td>boolean</td>
<td><code>false</code></td>
<td>Enable detailed logging for debugging</td>
</tr>
</tbody>
</table>
<h2 class="custom-heading" id="how-it-works">How It Works<a class="headerlink" href="#how-it-works" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="input-process-output">Input → Process → Output<a class="headerlink" href="#input-process-output" title="Permanent link">¶</a></h3>
<ol>
<li>
<p><strong>Input</strong>: Your source Markdown with frontmatter
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-5-1" id="__codelineno-5-1" name="__codelineno-5-1"></a>---
<a href="#__codelineno-5-2" id="__codelineno-5-2" name="__codelineno-5-2"></a>title: My Page
<a href="#__codelineno-5-3" id="__codelineno-5-3" name="__codelineno-5-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-5-4" id="__codelineno-5-4" name="__codelineno-5-4"></a><span class="gu">---</span>
<a href="#__codelineno-5-5" id="__codelineno-5-5" name="__codelineno-5-5"></a>
<a href="#__codelineno-5-6" id="__codelineno-5-6" name="__codelineno-5-6"></a><span class="gh"># My Page</span>
<a href="#__codelineno-5-7" id="__codelineno-5-7" name="__codelineno-5-7"></a>
<a href="#__codelineno-5-8" id="__codelineno-5-8" name="__codelineno-5-8"></a>This is my content with <span class="gs">**markdown**</span>.
</code></pre></div></p>
</li>
<li>
<p><strong>MkDocs Processing</strong>: Renders to HTML as usual
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-6-1" id="__codelineno-6-1" name="__codelineno-6-1"></a><span class="p">&lt;</span><span class="nt">main</span> <span class="na">class</span><span class="o">=</span><span class="s">"md-content"</span><span class="p">&gt;</span>
<a href="#__codelineno-6-2" id="__codelineno-6-2" name="__codelineno-6-2"></a>  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>My Page<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<a href="#__codelineno-6-3" id="__codelineno-6-3" name="__codelineno-6-3"></a>  <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>This is my content with <span class="p">&lt;</span><span class="nt">strong</span><span class="p">&gt;</span>markdown<span class="p">&lt;/</span><span class="nt">strong</span><span class="p">&gt;</span>.<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<a href="#__codelineno-6-4" id="__codelineno-6-4" name="__codelineno-6-4"></a><span class="p">&lt;/</span><span class="nt">main</span><span class="p">&gt;</span>
</code></pre></div></p>
</li>
<li>
<p><strong>Output</strong>: Cousin file with preserved frontmatter + extracted HTML
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-7-1" id="__codelineno-7-1" name="__codelineno-7-1"></a>---
<a href="#__codelineno-7-2" id="__codelineno-7-2" name="__codelineno-7-2"></a>title: My Page
<a href="#__codelineno-7-3" id="__codelineno-7-3" name="__codelineno-7-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-7-4" id="__codelineno-7-4" name="__codelineno-7-4"></a><span class="gu">---</span>
<a href="#__codelineno-7-5" id="__codelineno-7-5" name="__codelineno-7-5"></a>
<a href="#__codelineno-7-6" id="__codelineno-7-6" name="__codelineno-7-6"></a>&lt;article class="md-content"&gt;
<a href="#__codelineno-7-7" id="__codelineno-7-7" name="__codelineno-7-7"></a>  &lt;h1&gt;My Page&lt;/h1&gt;
<a href="#__codelineno-7-8" id="__codelineno-7-8" name="__codelineno-7-8"></a>  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;
<a href="#__codelineno-7-9" id="__codelineno-7-9" name="__codelineno-7-9"></a>&lt;/article&gt;
</code></pre></div></p>
</li>
</ol>
<h2 class="custom-heading" id="use-cases">Use Cases<a class="headerlink" href="#use-cases" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="multi-stage-documentation-pipeline">🔄 Multi-Stage Documentation Pipeline<a class="headerlink" href="#multi-stage-documentation-pipeline" title="Permanent link">¶</a></h3>
<p>Process documentation through MkDocs first, then feed to another SSG:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-8-1" id="__codelineno-8-1" name="__codelineno-8-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-8-2" id="__codelineno-8-2" name="__codelineno-8-2"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-8-3" id="__codelineno-8-3" name="__codelineno-8-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-8-4" id="__codelineno-8-4" name="__codelineno-8-4"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">hugo/content</span>
<a href="#__codelineno-8-5" id="__codelineno-8-5" name="__codelineno-8-5"></a>
<a href="#__codelineno-8-6" id="__codelineno-8-6" name="__codelineno-8-6"></a><span class="c1"># Then run:</span>
<a href="#__codelineno-8-7" id="__codelineno-8-7" name="__codelineno-8-7"></a><span class="c1"># mkdocs build &amp;&amp; hugo build</span>
</code></pre></div>
<h3 class="custom-heading" id="content-extraction">📝 Content Extraction<a class="headerlink" href="#content-extraction" title="Permanent link">¶</a></h3>
<p>Extract just the article content without theme wrapper:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-9-1" id="__codelineno-9-1" name="__codelineno-9-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-9-2" id="__codelineno-9-2" name="__codelineno-9-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-9-3" id="__codelineno-9-3" name="__codelineno-9-3"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span>
<a href="#__codelineno-9-4" id="__codelineno-9-4" name="__codelineno-9-4"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">div</span>
</code></pre></div>
<h3 class="custom-heading" id="custom-post-processing">🎨 Custom Post-Processing<a class="headerlink" href="#custom-post-processing" title="Permanent link">¶</a></h3>
<p>Preserve MkDocs rendering while preparing for custom templates:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-10-1" id="__codelineno-10-1" name="__codelineno-10-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-10-2" id="__codelineno-10-2" name="__codelineno-10-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-10-3" id="__codelineno-10-3" name="__codelineno-10-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">_includes</span>
<a href="#__codelineno-10-4" id="__codelineno-10-4" name="__codelineno-10-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-10-5" id="__codelineno-10-5" name="__codelineno-10-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">section</span>
</code></pre></div>
<h2 class="custom-heading" id="examples">Examples<a class="headerlink" href="#examples" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="basic-example">Basic Example<a class="headerlink" href="#basic-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-11-1" id="__codelineno-11-1" name="__codelineno-11-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-11-2" id="__codelineno-11-2" name="__codelineno-11-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-11-3" id="__codelineno-11-3" name="__codelineno-11-3"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-11-4" id="__codelineno-11-4" name="__codelineno-11-4"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<h3 class="custom-heading" id="advanced-example">Advanced Example<a class="headerlink" href="#advanced-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-12-1" id="__codelineno-12-1" name="__codelineno-12-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-12-2" id="__codelineno-12-2" name="__codelineno-12-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-12-3" id="__codelineno-12-3" name="__codelineno-12-3"></a><span class="nt">theme</span><span class="p">:</span>
<a href="#__codelineno-12-4" id="__codelineno-12-4" name="__codelineno-12-4"></a><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">material</span>
<a href="#__codelineno-12-5" id="__codelineno-12-5" name="__codelineno-12-5"></a>
<a href="#__codelineno-12-6" id="__codelineno-12-6" name="__codelineno-12-6"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-12-7" id="__codelineno-12-7" name="__codelineno-12-7"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span>
<a href="#__codelineno-12-8" id="__codelineno-12-8" name="__codelineno-12-8"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-12-9" id="__codelineno-12-9" name="__codelineno-12-9"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">processed</span>
<a href="#__codelineno-12-10" id="__codelineno-12-10" name="__codelineno-12-10"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article.md-content__inner</span>
<a href="#__codelineno-12-11" id="__codelineno-12-11" name="__codelineno-12-11"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-12-12" id="__codelineno-12-12" name="__codelineno-12-12"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">true</span>
<a href="#__codelineno-12-13" id="__codelineno-12-13" name="__codelineno-12-13"></a>
<a href="#__codelineno-12-14" id="__codelineno-12-14" name="__codelineno-12-14"></a><span class="c1"># Process specific content area from Material theme</span>
</code></pre></div>
<h3 class="custom-heading" id="integration-example">Integration Example<a class="headerlink" href="#integration-example" title="Permanent link">¶</a></h3>
<p>Using with other tools in a documentation pipeline:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-13-1" id="__codelineno-13-1" name="__codelineno-13-1"></a><span class="ch">#!/bin/bash</span>
<a href="#__codelineno-13-2" id="__codelineno-13-2" name="__codelineno-13-2"></a><span class="c1"># build.sh</span>
<a href="#__codelineno-13-3" id="__codelineno-13-3" name="__codelineno-13-3"></a>
<a href="#__codelineno-13-4" id="__codelineno-13-4" name="__codelineno-13-4"></a><span class="c1"># Stage 1: Build with MkDocs + plugins</span>
<a href="#__codelineno-13-5" id="__codelineno-13-5" name="__codelineno-13-5"></a>mkdocs<span class="w"> </span>build
<a href="#__codelineno-13-6" id="__codelineno-13-6" name="__codelineno-13-6"></a>
<a href="#__codelineno-13-7" id="__codelineno-13-7" name="__codelineno-13-7"></a><span class="c1"># Stage 2: Process staged output</span>
<a href="#__codelineno-13-8" id="__codelineno-13-8" name="__codelineno-13-8"></a>python<span class="w"> </span>post_process.py<span class="w"> </span>stage/
<a href="#__codelineno-13-9" id="__codelineno-13-9" name="__codelineno-13-9"></a>
<a href="#__codelineno-13-10" id="__codelineno-13-10" name="__codelineno-13-10"></a><span class="c1"># Stage 3: Build final site</span>
<a href="#__codelineno-13-11" id="__codelineno-13-11" name="__codelineno-13-11"></a>hugo<span class="w"> </span>--contentDir<span class="o">=</span>stage/
</code></pre></div>
<h2 class="custom-heading" id="development">Development<a class="headerlink" href="#development" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="setup-development-environment">Setup Development Environment<a class="headerlink" href="#setup-development-environment" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-14-1" id="__codelineno-14-1" name="__codelineno-14-1"></a><span class="c1"># Clone the repository</span>
<a href="#__codelineno-14-2" id="__codelineno-14-2" name="__codelineno-14-2"></a>git<span class="w"> </span>clone<span class="w"> </span>https://github.com/vexyart/vexy-mkdocs-output-as-input
<a href="#__codelineno-14-3" id="__codelineno-14-3" name="__codelineno-14-3"></a><span class="nb">cd</span><span class="w"> </span>vexy-mkdocs-output-as-input
<a href="#__codelineno-14-4" id="__codelineno-14-4" name="__codelineno-14-4"></a>
<a href="#__codelineno-14-5" id="__codelineno-14-5" name="__codelineno-14-5"></a><span class="c1"># Create virtual environment</span>
<a href="#__codelineno-14-6" id="__codelineno-14-6" name="__codelineno-14-6"></a>python<span class="w"> </span>-m<span class="w"> </span>venv<span class="w"> </span>venv
<a href="#__codelineno-14-7" id="__codelineno-14-7" name="__codelineno-14-7"></a><span class="nb">source</span><span class="w"> </span>venv/bin/activate<span class="w">  </span><span class="c1"># On Windows: venv\Scripts\activate</span>
<a href="#__codelineno-14-8" id="__codelineno-14-8" name="__codelineno-14-8"></a>
<a href="#__codelineno-14-9" id="__codelineno-14-9" name="__codelineno-14-9"></a><span class="c1"># Install in development mode</span>
<a href="#__codelineno-14-10" id="__codelineno-14-10" name="__codelineno-14-10"></a>pip<span class="w"> </span>install<span class="w"> </span>-e<span class="w"> </span>.<span class="o">[</span>dev<span class="o">]</span>
<a href="#__codelineno-14-11" id="__codelineno-14-11" name="__codelineno-14-11"></a>
<a href="#__codelineno-14-12" id="__codelineno-14-12" name="__codelineno-14-12"></a><span class="c1"># Install pre-commit hooks</span>
<a href="#__codelineno-14-13" id="__codelineno-14-13" name="__codelineno-14-13"></a>pre-commit<span class="w"> </span>install
</code></pre></div>
<h3 class="custom-heading" id="running-tests">Running Tests<a class="headerlink" href="#running-tests" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-15-1" id="__codelineno-15-1" name="__codelineno-15-1"></a><span class="c1"># Run all tests</span>
<a href="#__codelineno-15-2" id="__codelineno-15-2" name="__codelineno-15-2"></a>pytest
<a href="#__codelineno-15-3" id="__codelineno-15-3" name="__codelineno-15-3"></a>
<a href="#__codelineno-15-4" id="__codelineno-15-4" name="__codelineno-15-4"></a><span class="c1"># Run with coverage</span>
<a href="#__codelineno-15-5" id="__codelineno-15-5" name="__codelineno-15-5"></a>pytest<span class="w"> </span>--cov<span class="o">=</span>mkdocs_output_as_input<span class="w"> </span>--cov-report<span class="o">=</span>html
<a href="#__codelineno-15-6" id="__codelineno-15-6" name="__codelineno-15-6"></a>
<a href="#__codelineno-15-7" id="__codelineno-15-7" name="__codelineno-15-7"></a><span class="c1"># Run specific test</span>
<a href="#__codelineno-15-8" id="__codelineno-15-8" name="__codelineno-15-8"></a>pytest<span class="w"> </span>tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
</code></pre></div>
<h3 class="custom-heading" id="code-quality">Code Quality<a class="headerlink" href="#code-quality" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-16-1" id="__codelineno-16-1" name="__codelineno-16-1"></a><span class="c1"># Format code</span>
<a href="#__codelineno-16-2" id="__codelineno-16-2" name="__codelineno-16-2"></a>black<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-3" id="__codelineno-16-3" name="__codelineno-16-3"></a>
<a href="#__codelineno-16-4" id="__codelineno-16-4" name="__codelineno-16-4"></a><span class="c1"># Lint code</span>
<a href="#__codelineno-16-5" id="__codelineno-16-5" name="__codelineno-16-5"></a>ruff<span class="w"> </span>check<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-6" id="__codelineno-16-6" name="__codelineno-16-6"></a>
<a href="#__codelineno-16-7" id="__codelineno-16-7" name="__codelineno-16-7"></a><span class="c1"># Type check</span>
<a href="#__codelineno-16-8" id="__codelineno-16-8" name="__codelineno-16-8"></a>mypy<span class="w"> </span>src
</code></pre></div>
<h2 class="custom-heading" id="contributing">Contributing<a class="headerlink" href="#contributing" title="Permanent link">¶</a></h2>
<p>Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.</p>
<ol>
<li>Fork the repository</li>
<li>Create your feature branch (<code>git checkout -b feature/AmazingFeature</code>)</li>
<li>Commit your changes (<code>git commit -m 'Add some AmazingFeature'</code>)</li>
<li>Push to the branch (<code>git push origin feature/AmazingFeature</code>)</li>
<li>Open a Pull Request</li>
</ol>
<h2 class="custom-heading" id="license">License<a class="headerlink" href="#license" title="Permanent link">¶</a></h2>
<p>This project is licensed under the MIT License - see the <a href="LICENSE">LICENSE</a> file for details.</p>
<h2 class="custom-heading" id="support">Support<a class="headerlink" href="#support" title="Permanent link">¶</a></h2>
<ul>
<li>📧 Email: you@example.com</li>
<li>🐛 Issues: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/issues">GitHub Issues</a></li>
<li>💬 Discussions: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions">GitHub Discussions</a></li>
</ul>
</div>

</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/tests/test_cli.py
# Language: python

import tempfile
from pathlib import Path
from unittest.mock import patch
import pytest
from mkdocs_output_as_input.cli import (
    extract_frontmatter,
    main,
    process_file,
    process_html,
)

class TestCLI:
    """Test cases for CLI functionality."""
    def test_extract_frontmatter_with_frontmatter((self)):
        """Test extracting YAML frontmatter from content."""
    def test_extract_frontmatter_without_frontmatter((self)):
        """Test extracting from content without frontmatter."""
    def test_extract_frontmatter_invalid_yaml((self)):
        """Test handling invalid YAML frontmatter."""
    def test_process_html_basic((self)):
        """Test basic HTML processing."""
    def test_process_html_custom_element_and_tag((self)):
        """Test processing with custom element and tag."""
    def test_process_html_element_not_found((self)):
        """Test handling when element not found."""
    def test_process_html_preserve_links((self)):
        """Test preserving relative links."""
    def test_process_html_minify((self)):
        """Test HTML minification."""
    def test_process_html_prettify((self)):
        """Test HTML prettification."""
    def test_process_file_basic((self, tmp_path)):
        """Test basic file processing."""
    def test_process_file_with_frontmatter((self, tmp_path)):
        """Test processing with frontmatter from corresponding .md file."""
    def test_process_file_no_frontmatter((self, tmp_path)):
        """Test processing without frontmatter."""
    def test_process_file_creates_output_dir((self, tmp_path)):
        """Test that output directory is created if needed."""
    def test_cli_process_command((self, tmp_path)):
        """Test CLI process command."""
    def test_cli_custom_options((self, tmp_path)):
        """Test CLI with custom options."""
    def test_cli_mutually_exclusive_options((self, tmp_path)):
        """Test that minify and prettify are mutually exclusive."""
    def test_cli_no_command((self)):
        """Test CLI with no command shows help."""
    def test_cli_file_not_found((self, tmp_path)):
        """Test CLI with non-existent input file."""

def test_extract_frontmatter_with_frontmatter((self)):
    """Test extracting YAML frontmatter from content."""

def test_extract_frontmatter_without_frontmatter((self)):
    """Test extracting from content without frontmatter."""

def test_extract_frontmatter_invalid_yaml((self)):
    """Test handling invalid YAML frontmatter."""

def test_process_html_basic((self)):
    """Test basic HTML processing."""

def test_process_html_custom_element_and_tag((self)):
    """Test processing with custom element and tag."""

def test_process_html_element_not_found((self)):
    """Test handling when element not found."""

def test_process_html_preserve_links((self)):
    """Test preserving relative links."""

def test_process_html_minify((self)):
    """Test HTML minification."""

def test_process_html_prettify((self)):
    """Test HTML prettification."""

def test_process_file_basic((self, tmp_path)):
    """Test basic file processing."""

def test_process_file_with_frontmatter((self, tmp_path)):
    """Test processing with frontmatter from corresponding .md file."""

def test_process_file_no_frontmatter((self, tmp_path)):
    """Test processing without frontmatter."""

def test_process_file_creates_output_dir((self, tmp_path)):
    """Test that output directory is created if needed."""

def test_cli_process_command((self, tmp_path)):
    """Test CLI process command."""

def test_cli_custom_options((self, tmp_path)):
    """Test CLI with custom options."""

def test_cli_mutually_exclusive_options((self, tmp_path)):
    """Test that minify and prettify are mutually exclusive."""

def test_cli_no_command((self)):
    """Test CLI with no command shows help."""

def test_cli_file_not_found((self, tmp_path)):
    """Test CLI with non-existent input file."""


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/tests/test_plugin.py
# Language: python

import tempfile
from pathlib import Path
from unittest.mock import Mock
import pytest
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

class TestOutputAsInputPlugin:
    """Test cases for OutputAsInputPlugin."""
    def test_default_config((self, plugin)):
        """Test plugin with default configuration."""
    def test_on_config_stores_paths((self, plugin, mkdocs_config)):
        """Test that on_config stores site and docs directories."""
    def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing source content and frontmatter."""
    def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing content without frontmatter."""
    def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
        """Test creating cousin files after build."""
    def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
        """Test handling missing HTML output."""
    def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
        """Test handling HTML without target element."""
    def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
        """Test with custom configuration options."""
    def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test handling invalid YAML frontmatter."""
    def test_file_read_error((self, plugin, mkdocs_config)):
        """Test handling file read errors."""
    def test_on_post_build_no_docs_dir((self, plugin)):
        """Test handling when docs_dir is None."""
    def test_process_file_no_site_dir((self, plugin, temp_dir)):
        """Test handling when site_dir is None."""
    def test_include_frontmatter_option((self, plugin, mkdocs_config, temp_dir)):
        """Test include_frontmatter configuration option."""
    def test_preserve_links_option((self, plugin, mkdocs_config, temp_dir)):
        """Test preserve_links configuration option."""
    def test_multiple_selectors((self, plugin, mkdocs_config, temp_dir)):
        """Test extraction of multiple selectors."""
    def test_css_selectors((self, plugin, mkdocs_config, temp_dir)):
        """Test CSS selector support."""
    def test_minify_option((self, plugin, mkdocs_config, temp_dir)):
        """Test minify option."""
    def test_prettify_option((self, plugin, mkdocs_config, temp_dir)):
        """Test prettify option."""
    def test_mutually_exclusive_options((self, plugin, mkdocs_config)):
        """Test that minify and prettify are mutually exclusive."""

def plugin((self)):
    """Create a plugin instance."""

def temp_dir((self)):
    """Create a temporary directory."""

def mkdocs_config((self, temp_dir)):
    """Create a mock MkDocs config."""

def test_default_config((self, plugin)):
    """Test plugin with default configuration."""

def test_on_config_stores_paths((self, plugin, mkdocs_config)):
    """Test that on_config stores site and docs directories."""

def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing source content and frontmatter."""

def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing content without frontmatter."""

def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
    """Test creating cousin files after build."""

def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
    """Test handling missing HTML output."""

def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
    """Test handling HTML without target element."""

def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
    """Test with custom configuration options."""

def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test handling invalid YAML frontmatter."""

def test_file_read_error((self, plugin, mkdocs_config)):
    """Test handling file read errors."""

def test_on_post_build_no_docs_dir((self, plugin)):
    """Test handling when docs_dir is None."""

def test_process_file_no_site_dir((self, plugin, temp_dir)):
    """Test handling when site_dir is None."""

def test_include_frontmatter_option((self, plugin, mkdocs_config, temp_dir)):
    """Test include_frontmatter configuration option."""

def test_preserve_links_option((self, plugin, mkdocs_config, temp_dir)):
    """Test preserve_links configuration option."""

def test_multiple_selectors((self, plugin, mkdocs_config, temp_dir)):
    """Test extraction of multiple selectors."""

def test_css_selectors((self, plugin, mkdocs_config, temp_dir)):
    """Test CSS selector support."""

def test_minify_option((self, plugin, mkdocs_config, temp_dir)):
    """Test minify option."""

def test_prettify_option((self, plugin, mkdocs_config, temp_dir)):
    """Test prettify option."""

def test_mutually_exclusive_options((self, plugin, mkdocs_config)):
    """Test that minify and prettify are mutually exclusive."""


</documents>
</document_content>
</document>

<document index="19">
<source>mkdocs.yml</source>
<document_content>
---
markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.superfences
  - pymdownx.snippets
  - admonition
  - pymdownx.details
  - pymdownx.tabbed:
      alternate_style: true
  - toc:
      permalink: true
nav:
  - Home: index.md
  - Getting Started: getting-started.md
  - Configuration: configuration.md
  - Examples: examples.md
  - API Reference: api.md
plugins:
  - search
  - output-as-input:
      stage_dir: stage
      verbose: true
  - mkdocstrings:
      handlers:
        python:
          options:
            show_source: true
repo_name: vexy-mkdocs-output-as-input
repo_url: https://github.com/vexyart/vexy-mkdocs-output-as-input
# this_file: more/vexy-mkdocs-output-as-input-refactored/mkdocs.yml
site_name: MkDocs Output as Input Plugin
site_url: https://vexyart.github.io/vexy-mkdocs-output-as-input/
theme:
  features:
    - navigation.sections
    - navigation.expand
    - navigation.top
    - search.suggest
    - search.highlight
    - content.code.copy
  name: material
  palette:
    - accent: indigo
      primary: indigo
      scheme: default
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    - accent: indigo
      primary: indigo
      scheme: slate
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
</document_content>
</document>

<document index="20">
<source>pyproject.toml</source>
<document_content>
# this_file: more/mkdocs-plugins/vexy-mkdocs-output-as-input/pyproject.toml

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "vexy-mkdocs-output-as-input"
dynamic = ["version"]
description = "MkDocs plugin that captures HTML output and creates cousin Markdown files with original frontmatter"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
maintainers = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
keywords = ["mkdocs", "plugin", "documentation", "html", "markdown", "postprocessing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: MkDocs",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
    "mkdocs>=1.6.0",
    "beautifulsoup4>=4.12.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "black>=23.7.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "types-pyyaml>=6.0.0",
    "types-beautifulsoup4>=4.12.0",
]
docs = [
    "vexy-mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Documentation = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Repository = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Issues = "https://github.com/vexyart/vexy-mkdocs-output-as-input/issues"
Changelog = "https://github.com/vexyart/vexy-mkdocs-output-as-input/blob/main/CHANGELOG.md"

[project.entry-points."mkdocs.plugins"]
output-as-input = "mkdocs_output_as_input.plugin:OutputAsInputPlugin"

[project.scripts]
mkdocs-output-as-input = "mkdocs_output_as_input.cli:main"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/mkdocs_output_as_input"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/CHANGELOG.md",
]

[tool.ruff]
line-length = 100
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

[tool.black]
line-length = 100
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "mkdocs.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/mkdocs_output_as_input"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 90
</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/__init__.py
# Language: python

from mkdocs_output_as_input.plugin import OutputAsInputPlugin
from mkdocs_output_as_input._version import __version__


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/cli.py
# Language: python

import argparse
import logging
import sys
from pathlib import Path
from typing import Any, Dict, Optional
import yaml
from bs4 import BeautifulSoup

def setup_logging((verbose: bool = False)) -> None:
    """Set up logging configuration."""

def extract_frontmatter((content: str)) -> tuple[Dict[str, Any], str]:
    """Extract YAML frontmatter from Markdown content."""

def process_html((
    html_content: str,
    html_element: str | list[str] = "main",
    target_tag: str = "article",
    preserve_links: bool = False,
    minify: bool = False,
    prettify: bool = False,
)) -> Optional[str]:
    """Process HTML content and extract specified element."""

def process_file((
    input_path: Path,
    output_path: Path,
    html_element: str | list[str] = "main",
    target_tag: str = "article",
    include_frontmatter: bool = True,
    preserve_links: bool = False,
    minify: bool = False,
    prettify: bool = False,
)) -> None:
    """Process a single file."""

def main(()) -> int:
    """Main CLI entry point."""


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/plugin.py
# Language: python

import logging
import re
from pathlib import Path
from typing import Any, Dict, Optional
import yaml
from bs4 import BeautifulSoup
from mkdocs.config import config_options
from mkdocs.plugins import BasePlugin
from mkdocs.structure.pages import Page

class OutputAsInputPlugin(B, a, s, e, P, l, u, g, i, n):
    """MkDocs plugin that captures HTML output and creates cousin Markdown files."""
    def __init__((self)) -> None:
        """Initialize the plugin."""
    def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
        """Store site and docs directories and validate configuration."""
    def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
        """Capture source Markdown content and frontmatter."""
    def on_post_build((self, config: dict[str, Any])) -> None:
        """After build, process all HTML files and create cousin Markdowns."""
    def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
        """Process a single file: extract HTML and create cousin Markdown."""

def __init__((self)) -> None:
    """Initialize the plugin."""

def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
    """Store site and docs directories and validate configuration."""

def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
    """Capture source Markdown content and frontmatter."""

def on_post_build((self, config: dict[str, Any])) -> None:
    """After build, process all HTML files and create cousin Markdowns."""

def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
    """Process a single file: extract HTML and create cousin Markdown."""


<document index="21">
<source>stage/README.md</source>
<document_content>
---
author: Vexy
code_count: 17
date: 2025-01-14
description: A plugin that captures HTML output and creates cousin Markdown files
has_code: true
pipeline_version: '1.0'
processed: true
source: mkdocs-output-as-input
tags:
- mkdocs
- plugin
- documentation
- pipeline
title: MkDocs Output as Input Plugin
version: 1.0.0
---


<div class="md-content__inner md-typeset">
<h1 class="custom-heading" id="vexy-mkdocs-output-as-input">vexy-mkdocs-output-as-input<a class="headerlink" href="#vexy-mkdocs-output-as-input" title="Permanent link">¶</a></h1>
<p><a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="PyPI version" src="https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg"/></a>
<a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml"><img alt="CI" src="https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg"/></a>
<a href="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input"><img alt="codecov" src="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg"/></a>
<a href="https://opensource.org/licenses/MIT"><img alt="License: MIT" src="https://img.shields.io/badge/License-MIT-yellow.svg"/></a>
<a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="Python versions" src="https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg"/></a></p>
<p>A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.</p>
<h2 class="custom-heading" id="features">Features<a class="headerlink" href="#features" title="Permanent link">¶</a></h2>
<p>This plugin enables powerful post-processing workflows by:</p>
<ol>
<li>✅ Preserving your original Markdown structure and frontmatter</li>
<li>✅ Capturing the fully-rendered HTML output from MkDocs</li>
<li>✅ Creating new Markdown files that combine original metadata with processed HTML</li>
<li>✅ Enabling further processing by other static site generators</li>
</ol>
<h2 class="custom-heading" id="installation">Installation<a class="headerlink" href="#installation" title="Permanent link">¶</a></h2>
<p>Install from PyPI:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-0-1" id="__codelineno-0-1" name="__codelineno-0-1"></a>uv<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>--system<span class="w"> </span>--upgrade<span class="w"> </span>vexy-mkdocs-output-as-input
</code></pre></div>
<p>Or install from source:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-1-1" id="__codelineno-1-1" name="__codelineno-1-1"></a>pip<span class="w"> </span>install<span class="w"> </span>git+https://github.com/vexyart/vexy-mkdocs-output-as-input
</code></pre></div>
<h2 class="custom-heading" id="quick-start">Quick Start<a class="headerlink" href="#quick-start" title="Permanent link">¶</a></h2>
<p>Add the plugin to your <code>mkdocs.yml</code>:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-2-1" id="__codelineno-2-1" name="__codelineno-2-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-2-2" id="__codelineno-2-2" name="__codelineno-2-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span><span class="w">  </span><span class="c1"># Other plugins</span>
<a href="#__codelineno-2-3" id="__codelineno-2-3" name="__codelineno-2-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<p>Build your site:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-3-1" id="__codelineno-3-1" name="__codelineno-3-1"></a>mkdocs<span class="w"> </span>build
</code></pre></div>
<p>Find your processed files in the <code>stage/</code> directory (relative to your MkDocs project root).</p>
<h2 class="custom-heading" id="configuration">Configuration<a class="headerlink" href="#configuration" title="Permanent link">¶</a></h2>
<p>All configuration options with their defaults:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-4-1" id="__codelineno-4-1" name="__codelineno-4-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-4-2" id="__codelineno-4-2" name="__codelineno-4-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-4-3" id="__codelineno-4-3" name="__codelineno-4-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">stage</span><span class="w">          </span><span class="c1"># Output directory name (default: 'stage')</span>
<a href="#__codelineno-4-4" id="__codelineno-4-4" name="__codelineno-4-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span><span class="w">        </span><span class="c1"># HTML element to extract (default: 'main')</span>
<a href="#__codelineno-4-5" id="__codelineno-4-5" name="__codelineno-4-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span><span class="w">       </span><span class="c1"># Tag to use in output (default: 'article')</span>
<a href="#__codelineno-4-6" id="__codelineno-4-6" name="__codelineno-4-6"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">false</span><span class="w">            </span><span class="c1"># Enable verbose logging (default: false)</span>
</code></pre></div>
<h3 class="custom-heading" id="options-explained">Options Explained<a class="headerlink" href="#options-explained" title="Permanent link">¶</a></h3>
<table>
<thead>
<tr>
<th>Option</th>
<th>Type</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>stage_dir</code></td>
<td>string</td>
<td><code>"stage"</code></td>
<td>Directory name for output files (relative to project root)</td>
</tr>
<tr>
<td><code>html_element</code></td>
<td>string</td>
<td><code>"main"</code></td>
<td>CSS selector for the HTML element to extract</td>
</tr>
<tr>
<td><code>target_tag</code></td>
<td>string</td>
<td><code>"article"</code></td>
<td>HTML tag to use in the output (replaces extracted element's tag)</td>
</tr>
<tr>
<td><code>verbose</code></td>
<td>boolean</td>
<td><code>false</code></td>
<td>Enable detailed logging for debugging</td>
</tr>
</tbody>
</table>
<h2 class="custom-heading" id="how-it-works">How It Works<a class="headerlink" href="#how-it-works" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="input-process-output">Input → Process → Output<a class="headerlink" href="#input-process-output" title="Permanent link">¶</a></h3>
<ol>
<li>
<p><strong>Input</strong>: Your source Markdown with frontmatter
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-5-1" id="__codelineno-5-1" name="__codelineno-5-1"></a>---
<a href="#__codelineno-5-2" id="__codelineno-5-2" name="__codelineno-5-2"></a>title: My Page
<a href="#__codelineno-5-3" id="__codelineno-5-3" name="__codelineno-5-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-5-4" id="__codelineno-5-4" name="__codelineno-5-4"></a><span class="gu">---</span>
<a href="#__codelineno-5-5" id="__codelineno-5-5" name="__codelineno-5-5"></a>
<a href="#__codelineno-5-6" id="__codelineno-5-6" name="__codelineno-5-6"></a><span class="gh"># My Page</span>
<a href="#__codelineno-5-7" id="__codelineno-5-7" name="__codelineno-5-7"></a>
<a href="#__codelineno-5-8" id="__codelineno-5-8" name="__codelineno-5-8"></a>This is my content with <span class="gs">**markdown**</span>.
</code></pre></div></p>
</li>
<li>
<p><strong>MkDocs Processing</strong>: Renders to HTML as usual
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-6-1" id="__codelineno-6-1" name="__codelineno-6-1"></a><span class="p">&lt;</span><span class="nt">main</span> <span class="na">class</span><span class="o">=</span><span class="s">"md-content"</span><span class="p">&gt;</span>
<a href="#__codelineno-6-2" id="__codelineno-6-2" name="__codelineno-6-2"></a>  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>My Page<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<a href="#__codelineno-6-3" id="__codelineno-6-3" name="__codelineno-6-3"></a>  <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>This is my content with <span class="p">&lt;</span><span class="nt">strong</span><span class="p">&gt;</span>markdown<span class="p">&lt;/</span><span class="nt">strong</span><span class="p">&gt;</span>.<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<a href="#__codelineno-6-4" id="__codelineno-6-4" name="__codelineno-6-4"></a><span class="p">&lt;/</span><span class="nt">main</span><span class="p">&gt;</span>
</code></pre></div></p>
</li>
<li>
<p><strong>Output</strong>: Cousin file with preserved frontmatter + extracted HTML
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-7-1" id="__codelineno-7-1" name="__codelineno-7-1"></a>---
<a href="#__codelineno-7-2" id="__codelineno-7-2" name="__codelineno-7-2"></a>title: My Page
<a href="#__codelineno-7-3" id="__codelineno-7-3" name="__codelineno-7-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-7-4" id="__codelineno-7-4" name="__codelineno-7-4"></a><span class="gu">---</span>
<a href="#__codelineno-7-5" id="__codelineno-7-5" name="__codelineno-7-5"></a>
<a href="#__codelineno-7-6" id="__codelineno-7-6" name="__codelineno-7-6"></a>&lt;article class="md-content"&gt;
<a href="#__codelineno-7-7" id="__codelineno-7-7" name="__codelineno-7-7"></a>  &lt;h1&gt;My Page&lt;/h1&gt;
<a href="#__codelineno-7-8" id="__codelineno-7-8" name="__codelineno-7-8"></a>  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;
<a href="#__codelineno-7-9" id="__codelineno-7-9" name="__codelineno-7-9"></a>&lt;/article&gt;
</code></pre></div></p>
</li>
</ol>
<h2 class="custom-heading" id="use-cases">Use Cases<a class="headerlink" href="#use-cases" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="multi-stage-documentation-pipeline">🔄 Multi-Stage Documentation Pipeline<a class="headerlink" href="#multi-stage-documentation-pipeline" title="Permanent link">¶</a></h3>
<p>Process documentation through MkDocs first, then feed to another SSG:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-8-1" id="__codelineno-8-1" name="__codelineno-8-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-8-2" id="__codelineno-8-2" name="__codelineno-8-2"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-8-3" id="__codelineno-8-3" name="__codelineno-8-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-8-4" id="__codelineno-8-4" name="__codelineno-8-4"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">hugo/content</span>
<a href="#__codelineno-8-5" id="__codelineno-8-5" name="__codelineno-8-5"></a>
<a href="#__codelineno-8-6" id="__codelineno-8-6" name="__codelineno-8-6"></a><span class="c1"># Then run:</span>
<a href="#__codelineno-8-7" id="__codelineno-8-7" name="__codelineno-8-7"></a><span class="c1"># mkdocs build &amp;&amp; hugo build</span>
</code></pre></div>
<h3 class="custom-heading" id="content-extraction">📝 Content Extraction<a class="headerlink" href="#content-extraction" title="Permanent link">¶</a></h3>
<p>Extract just the article content without theme wrapper:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-9-1" id="__codelineno-9-1" name="__codelineno-9-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-9-2" id="__codelineno-9-2" name="__codelineno-9-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-9-3" id="__codelineno-9-3" name="__codelineno-9-3"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span>
<a href="#__codelineno-9-4" id="__codelineno-9-4" name="__codelineno-9-4"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">div</span>
</code></pre></div>
<h3 class="custom-heading" id="custom-post-processing">🎨 Custom Post-Processing<a class="headerlink" href="#custom-post-processing" title="Permanent link">¶</a></h3>
<p>Preserve MkDocs rendering while preparing for custom templates:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-10-1" id="__codelineno-10-1" name="__codelineno-10-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-10-2" id="__codelineno-10-2" name="__codelineno-10-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-10-3" id="__codelineno-10-3" name="__codelineno-10-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">_includes</span>
<a href="#__codelineno-10-4" id="__codelineno-10-4" name="__codelineno-10-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-10-5" id="__codelineno-10-5" name="__codelineno-10-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">section</span>
</code></pre></div>
<h2 class="custom-heading" id="examples">Examples<a class="headerlink" href="#examples" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="basic-example">Basic Example<a class="headerlink" href="#basic-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-11-1" id="__codelineno-11-1" name="__codelineno-11-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-11-2" id="__codelineno-11-2" name="__codelineno-11-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-11-3" id="__codelineno-11-3" name="__codelineno-11-3"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-11-4" id="__codelineno-11-4" name="__codelineno-11-4"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<h3 class="custom-heading" id="advanced-example">Advanced Example<a class="headerlink" href="#advanced-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-12-1" id="__codelineno-12-1" name="__codelineno-12-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-12-2" id="__codelineno-12-2" name="__codelineno-12-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-12-3" id="__codelineno-12-3" name="__codelineno-12-3"></a><span class="nt">theme</span><span class="p">:</span>
<a href="#__codelineno-12-4" id="__codelineno-12-4" name="__codelineno-12-4"></a><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">material</span>
<a href="#__codelineno-12-5" id="__codelineno-12-5" name="__codelineno-12-5"></a>
<a href="#__codelineno-12-6" id="__codelineno-12-6" name="__codelineno-12-6"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-12-7" id="__codelineno-12-7" name="__codelineno-12-7"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span>
<a href="#__codelineno-12-8" id="__codelineno-12-8" name="__codelineno-12-8"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-12-9" id="__codelineno-12-9" name="__codelineno-12-9"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">processed</span>
<a href="#__codelineno-12-10" id="__codelineno-12-10" name="__codelineno-12-10"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article.md-content__inner</span>
<a href="#__codelineno-12-11" id="__codelineno-12-11" name="__codelineno-12-11"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-12-12" id="__codelineno-12-12" name="__codelineno-12-12"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">true</span>
<a href="#__codelineno-12-13" id="__codelineno-12-13" name="__codelineno-12-13"></a>
<a href="#__codelineno-12-14" id="__codelineno-12-14" name="__codelineno-12-14"></a><span class="c1"># Process specific content area from Material theme</span>
</code></pre></div>
<h3 class="custom-heading" id="integration-example">Integration Example<a class="headerlink" href="#integration-example" title="Permanent link">¶</a></h3>
<p>Using with other tools in a documentation pipeline:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-13-1" id="__codelineno-13-1" name="__codelineno-13-1"></a><span class="ch">#!/bin/bash</span>
<a href="#__codelineno-13-2" id="__codelineno-13-2" name="__codelineno-13-2"></a><span class="c1"># build.sh</span>
<a href="#__codelineno-13-3" id="__codelineno-13-3" name="__codelineno-13-3"></a>
<a href="#__codelineno-13-4" id="__codelineno-13-4" name="__codelineno-13-4"></a><span class="c1"># Stage 1: Build with MkDocs + plugins</span>
<a href="#__codelineno-13-5" id="__codelineno-13-5" name="__codelineno-13-5"></a>mkdocs<span class="w"> </span>build
<a href="#__codelineno-13-6" id="__codelineno-13-6" name="__codelineno-13-6"></a>
<a href="#__codelineno-13-7" id="__codelineno-13-7" name="__codelineno-13-7"></a><span class="c1"># Stage 2: Process staged output</span>
<a href="#__codelineno-13-8" id="__codelineno-13-8" name="__codelineno-13-8"></a>python<span class="w"> </span>post_process.py<span class="w"> </span>stage/
<a href="#__codelineno-13-9" id="__codelineno-13-9" name="__codelineno-13-9"></a>
<a href="#__codelineno-13-10" id="__codelineno-13-10" name="__codelineno-13-10"></a><span class="c1"># Stage 3: Build final site</span>
<a href="#__codelineno-13-11" id="__codelineno-13-11" name="__codelineno-13-11"></a>hugo<span class="w"> </span>--contentDir<span class="o">=</span>stage/
</code></pre></div>
<h2 class="custom-heading" id="development">Development<a class="headerlink" href="#development" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="setup-development-environment">Setup Development Environment<a class="headerlink" href="#setup-development-environment" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-14-1" id="__codelineno-14-1" name="__codelineno-14-1"></a><span class="c1"># Clone the repository</span>
<a href="#__codelineno-14-2" id="__codelineno-14-2" name="__codelineno-14-2"></a>git<span class="w"> </span>clone<span class="w"> </span>https://github.com/vexyart/vexy-mkdocs-output-as-input
<a href="#__codelineno-14-3" id="__codelineno-14-3" name="__codelineno-14-3"></a><span class="nb">cd</span><span class="w"> </span>vexy-mkdocs-output-as-input
<a href="#__codelineno-14-4" id="__codelineno-14-4" name="__codelineno-14-4"></a>
<a href="#__codelineno-14-5" id="__codelineno-14-5" name="__codelineno-14-5"></a><span class="c1"># Create virtual environment</span>
<a href="#__codelineno-14-6" id="__codelineno-14-6" name="__codelineno-14-6"></a>python<span class="w"> </span>-m<span class="w"> </span>venv<span class="w"> </span>venv
<a href="#__codelineno-14-7" id="__codelineno-14-7" name="__codelineno-14-7"></a><span class="nb">source</span><span class="w"> </span>venv/bin/activate<span class="w">  </span><span class="c1"># On Windows: venv\Scripts\activate</span>
<a href="#__codelineno-14-8" id="__codelineno-14-8" name="__codelineno-14-8"></a>
<a href="#__codelineno-14-9" id="__codelineno-14-9" name="__codelineno-14-9"></a><span class="c1"># Install in development mode</span>
<a href="#__codelineno-14-10" id="__codelineno-14-10" name="__codelineno-14-10"></a>pip<span class="w"> </span>install<span class="w"> </span>-e<span class="w"> </span>.<span class="o">[</span>dev<span class="o">]</span>
<a href="#__codelineno-14-11" id="__codelineno-14-11" name="__codelineno-14-11"></a>
<a href="#__codelineno-14-12" id="__codelineno-14-12" name="__codelineno-14-12"></a><span class="c1"># Install pre-commit hooks</span>
<a href="#__codelineno-14-13" id="__codelineno-14-13" name="__codelineno-14-13"></a>pre-commit<span class="w"> </span>install
</code></pre></div>
<h3 class="custom-heading" id="running-tests">Running Tests<a class="headerlink" href="#running-tests" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-15-1" id="__codelineno-15-1" name="__codelineno-15-1"></a><span class="c1"># Run all tests</span>
<a href="#__codelineno-15-2" id="__codelineno-15-2" name="__codelineno-15-2"></a>pytest
<a href="#__codelineno-15-3" id="__codelineno-15-3" name="__codelineno-15-3"></a>
<a href="#__codelineno-15-4" id="__codelineno-15-4" name="__codelineno-15-4"></a><span class="c1"># Run with coverage</span>
<a href="#__codelineno-15-5" id="__codelineno-15-5" name="__codelineno-15-5"></a>pytest<span class="w"> </span>--cov<span class="o">=</span>mkdocs_output_as_input<span class="w"> </span>--cov-report<span class="o">=</span>html
<a href="#__codelineno-15-6" id="__codelineno-15-6" name="__codelineno-15-6"></a>
<a href="#__codelineno-15-7" id="__codelineno-15-7" name="__codelineno-15-7"></a><span class="c1"># Run specific test</span>
<a href="#__codelineno-15-8" id="__codelineno-15-8" name="__codelineno-15-8"></a>pytest<span class="w"> </span>tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
</code></pre></div>
<h3 class="custom-heading" id="code-quality">Code Quality<a class="headerlink" href="#code-quality" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-16-1" id="__codelineno-16-1" name="__codelineno-16-1"></a><span class="c1"># Format code</span>
<a href="#__codelineno-16-2" id="__codelineno-16-2" name="__codelineno-16-2"></a>black<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-3" id="__codelineno-16-3" name="__codelineno-16-3"></a>
<a href="#__codelineno-16-4" id="__codelineno-16-4" name="__codelineno-16-4"></a><span class="c1"># Lint code</span>
<a href="#__codelineno-16-5" id="__codelineno-16-5" name="__codelineno-16-5"></a>ruff<span class="w"> </span>check<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-6" id="__codelineno-16-6" name="__codelineno-16-6"></a>
<a href="#__codelineno-16-7" id="__codelineno-16-7" name="__codelineno-16-7"></a><span class="c1"># Type check</span>
<a href="#__codelineno-16-8" id="__codelineno-16-8" name="__codelineno-16-8"></a>mypy<span class="w"> </span>src
</code></pre></div>
<h2 class="custom-heading" id="contributing">Contributing<a class="headerlink" href="#contributing" title="Permanent link">¶</a></h2>
<p>Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.</p>
<ol>
<li>Fork the repository</li>
<li>Create your feature branch (<code>git checkout -b feature/AmazingFeature</code>)</li>
<li>Commit your changes (<code>git commit -m 'Add some AmazingFeature'</code>)</li>
<li>Push to the branch (<code>git push origin feature/AmazingFeature</code>)</li>
<li>Open a Pull Request</li>
</ol>
<h2 class="custom-heading" id="license">License<a class="headerlink" href="#license" title="Permanent link">¶</a></h2>
<p>This project is licensed under the MIT License - see the <a href="LICENSE">LICENSE</a> file for details.</p>
<h2 class="custom-heading" id="support">Support<a class="headerlink" href="#support" title="Permanent link">¶</a></h2>
<ul>
<li>📧 Email: you@example.com</li>
<li>🐛 Issues: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/issues">GitHub Issues</a></li>
<li>💬 Discussions: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions">GitHub Discussions</a></li>
</ul>
</div>

</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/tests/test_cli.py
# Language: python

import tempfile
from pathlib import Path
from unittest.mock import patch
import pytest
from mkdocs_output_as_input.cli import (
    extract_frontmatter,
    main,
    process_file,
    process_html,
)

class TestCLI:
    """Test cases for CLI functionality."""
    def test_extract_frontmatter_with_frontmatter((self)):
        """Test extracting YAML frontmatter from content."""
    def test_extract_frontmatter_without_frontmatter((self)):
        """Test extracting from content without frontmatter."""
    def test_extract_frontmatter_invalid_yaml((self)):
        """Test handling invalid YAML frontmatter."""
    def test_process_html_basic((self)):
        """Test basic HTML processing."""
    def test_process_html_custom_element_and_tag((self)):
        """Test processing with custom element and tag."""
    def test_process_html_element_not_found((self)):
        """Test handling when element not found."""
    def test_process_html_preserve_links((self)):
        """Test preserving relative links."""
    def test_process_html_minify((self)):
        """Test HTML minification."""
    def test_process_html_prettify((self)):
        """Test HTML prettification."""
    def test_process_file_basic((self, tmp_path)):
        """Test basic file processing."""
    def test_process_file_with_frontmatter((self, tmp_path)):
        """Test processing with frontmatter from corresponding .md file."""
    def test_process_file_no_frontmatter((self, tmp_path)):
        """Test processing without frontmatter."""
    def test_process_file_creates_output_dir((self, tmp_path)):
        """Test that output directory is created if needed."""
    def test_cli_process_command((self, tmp_path)):
        """Test CLI process command."""
    def test_cli_custom_options((self, tmp_path)):
        """Test CLI with custom options."""
    def test_cli_mutually_exclusive_options((self, tmp_path)):
        """Test that minify and prettify are mutually exclusive."""
    def test_cli_no_command((self)):
        """Test CLI with no command shows help."""
    def test_cli_file_not_found((self, tmp_path)):
        """Test CLI with non-existent input file."""

def test_extract_frontmatter_with_frontmatter((self)):
    """Test extracting YAML frontmatter from content."""

def test_extract_frontmatter_without_frontmatter((self)):
    """Test extracting from content without frontmatter."""

def test_extract_frontmatter_invalid_yaml((self)):
    """Test handling invalid YAML frontmatter."""

def test_process_html_basic((self)):
    """Test basic HTML processing."""

def test_process_html_custom_element_and_tag((self)):
    """Test processing with custom element and tag."""

def test_process_html_element_not_found((self)):
    """Test handling when element not found."""

def test_process_html_preserve_links((self)):
    """Test preserving relative links."""

def test_process_html_minify((self)):
    """Test HTML minification."""

def test_process_html_prettify((self)):
    """Test HTML prettification."""

def test_process_file_basic((self, tmp_path)):
    """Test basic file processing."""

def test_process_file_with_frontmatter((self, tmp_path)):
    """Test processing with frontmatter from corresponding .md file."""

def test_process_file_no_frontmatter((self, tmp_path)):
    """Test processing without frontmatter."""

def test_process_file_creates_output_dir((self, tmp_path)):
    """Test that output directory is created if needed."""

def test_cli_process_command((self, tmp_path)):
    """Test CLI process command."""

def test_cli_custom_options((self, tmp_path)):
    """Test CLI with custom options."""

def test_cli_mutually_exclusive_options((self, tmp_path)):
    """Test that minify and prettify are mutually exclusive."""

def test_cli_no_command((self)):
    """Test CLI with no command shows help."""

def test_cli_file_not_found((self, tmp_path)):
    """Test CLI with non-existent input file."""


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/tests/test_plugin.py
# Language: python

import tempfile
from pathlib import Path
from unittest.mock import Mock
import pytest
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

class TestOutputAsInputPlugin:
    """Test cases for OutputAsInputPlugin."""
    def test_default_config((self, plugin)):
        """Test plugin with default configuration."""
    def test_on_config_stores_paths((self, plugin, mkdocs_config)):
        """Test that on_config stores site and docs directories."""
    def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing source content and frontmatter."""
    def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing content without frontmatter."""
    def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
        """Test creating cousin files after build."""
    def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
        """Test handling missing HTML output."""
    def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
        """Test handling HTML without target element."""
    def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
        """Test with custom configuration options."""
    def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test handling invalid YAML frontmatter."""
    def test_file_read_error((self, plugin, mkdocs_config)):
        """Test handling file read errors."""
    def test_on_post_build_no_docs_dir((self, plugin)):
        """Test handling when docs_dir is None."""
    def test_process_file_no_site_dir((self, plugin, temp_dir)):
        """Test handling when site_dir is None."""
    def test_include_frontmatter_option((self, plugin, mkdocs_config, temp_dir)):
        """Test include_frontmatter configuration option."""
    def test_preserve_links_option((self, plugin, mkdocs_config, temp_dir)):
        """Test preserve_links configuration option."""
    def test_multiple_selectors((self, plugin, mkdocs_config, temp_dir)):
        """Test extraction of multiple selectors."""
    def test_css_selectors((self, plugin, mkdocs_config, temp_dir)):
        """Test CSS selector support."""
    def test_minify_option((self, plugin, mkdocs_config, temp_dir)):
        """Test minify option."""
    def test_prettify_option((self, plugin, mkdocs_config, temp_dir)):
        """Test prettify option."""
    def test_mutually_exclusive_options((self, plugin, mkdocs_config)):
        """Test that minify and prettify are mutually exclusive."""

def plugin((self)):
    """Create a plugin instance."""

def temp_dir((self)):
    """Create a temporary directory."""

def mkdocs_config((self, temp_dir)):
    """Create a mock MkDocs config."""

def test_default_config((self, plugin)):
    """Test plugin with default configuration."""

def test_on_config_stores_paths((self, plugin, mkdocs_config)):
    """Test that on_config stores site and docs directories."""

def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing source content and frontmatter."""

def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing content without frontmatter."""

def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
    """Test creating cousin files after build."""

def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
    """Test handling missing HTML output."""

def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
    """Test handling HTML without target element."""

def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
    """Test with custom configuration options."""

def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test handling invalid YAML frontmatter."""

def test_file_read_error((self, plugin, mkdocs_config)):
    """Test handling file read errors."""

def test_on_post_build_no_docs_dir((self, plugin)):
    """Test handling when docs_dir is None."""

def test_process_file_no_site_dir((self, plugin, temp_dir)):
    """Test handling when site_dir is None."""

def test_include_frontmatter_option((self, plugin, mkdocs_config, temp_dir)):
    """Test include_frontmatter configuration option."""

def test_preserve_links_option((self, plugin, mkdocs_config, temp_dir)):
    """Test preserve_links configuration option."""

def test_multiple_selectors((self, plugin, mkdocs_config, temp_dir)):
    """Test extraction of multiple selectors."""

def test_css_selectors((self, plugin, mkdocs_config, temp_dir)):
    """Test CSS selector support."""

def test_minify_option((self, plugin, mkdocs_config, temp_dir)):
    """Test minify option."""

def test_prettify_option((self, plugin, mkdocs_config, temp_dir)):
    """Test prettify option."""

def test_mutually_exclusive_options((self, plugin, mkdocs_config)):
    """Test that minify and prettify are mutually exclusive."""


</documents>
</document_content>
</document>

<document index="18">
<source>mkdocs.yml</source>
<document_content>
---
markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.superfences
  - pymdownx.snippets
  - admonition
  - pymdownx.details
  - pymdownx.tabbed:
      alternate_style: true
  - toc:
      permalink: true
nav:
  - Home: index.md
  - Getting Started: getting-started.md
  - Configuration: configuration.md
  - Examples: examples.md
  - API Reference: api.md
plugins:
  - search
  - output-as-input:
      stage_dir: stage
      verbose: true
  - mkdocstrings:
      handlers:
        python:
          options:
            show_source: true
repo_name: vexy-mkdocs-output-as-input
repo_url: https://github.com/vexyart/vexy-mkdocs-output-as-input
# this_file: more/vexy-mkdocs-output-as-input-refactored/mkdocs.yml
site_name: MkDocs Output as Input Plugin
site_url: https://vexyart.github.io/vexy-mkdocs-output-as-input/
theme:
  features:
    - navigation.sections
    - navigation.expand
    - navigation.top
    - search.suggest
    - search.highlight
    - content.code.copy
  name: material
  palette:
    - accent: indigo
      primary: indigo
      scheme: default
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    - accent: indigo
      primary: indigo
      scheme: slate
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
</document_content>
</document>

<document index="19">
<source>pyproject.toml</source>
<document_content>
# this_file: more/mkdocs-plugins/vexy-mkdocs-output-as-input/pyproject.toml

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "vexy-mkdocs-output-as-input"
dynamic = ["version"]
description = "MkDocs plugin that captures HTML output and creates cousin Markdown files with original frontmatter"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
maintainers = [
    {name = "Vexy Lines Team", email = "help@vexy.art"},
]
keywords = ["mkdocs", "plugin", "documentation", "html", "markdown", "postprocessing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: MkDocs",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
    "mkdocs>=1.6.0",
    "beautifulsoup4>=4.12.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "black>=23.7.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "types-pyyaml>=6.0.0",
    "types-beautifulsoup4>=4.12.0",
]
docs = [
    "vexy-mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Documentation = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Repository = "https://github.com/vexyart/vexy-mkdocs-output-as-input"
Issues = "https://github.com/vexyart/vexy-mkdocs-output-as-input/issues"
Changelog = "https://github.com/vexyart/vexy-mkdocs-output-as-input/blob/main/CHANGELOG.md"

[project.entry-points."mkdocs.plugins"]
output-as-input = "mkdocs_output_as_input.plugin:OutputAsInputPlugin"

[project.scripts]
mkdocs-output-as-input = "mkdocs_output_as_input.cli:main"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/mkdocs_output_as_input"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/CHANGELOG.md",
]

[tool.ruff]
line-length = 100
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

[tool.black]
line-length = 100
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "mkdocs.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/mkdocs_output_as_input"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 90
</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/__init__.py
# Language: python

from mkdocs_output_as_input.plugin import OutputAsInputPlugin
from mkdocs_output_as_input._version import __version__


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/cli.py
# Language: python

import argparse
import logging
import sys
from pathlib import Path
from typing import Any, Dict, Optional
import yaml
from bs4 import BeautifulSoup

def setup_logging((verbose: bool = False)) -> None:
    """Set up logging configuration."""

def extract_frontmatter((content: str)) -> tuple[Dict[str, Any], str]:
    """Extract YAML frontmatter from Markdown content."""

def process_html((
    html_content: str,
    html_element: str | list[str] = "main",
    target_tag: str = "article",
    preserve_links: bool = False,
    minify: bool = False,
    prettify: bool = False,
)) -> Optional[str]:
    """Process HTML content and extract specified element."""

def process_file((
    input_path: Path,
    output_path: Path,
    html_element: str | list[str] = "main",
    target_tag: str = "article",
    include_frontmatter: bool = True,
    preserve_links: bool = False,
    minify: bool = False,
    prettify: bool = False,
)) -> None:
    """Process a single file."""

def main(()) -> int:
    """Main CLI entry point."""


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/src/mkdocs_output_as_input/plugin.py
# Language: python

import logging
import re
from pathlib import Path
from typing import Any, Dict, Optional
import yaml
from bs4 import BeautifulSoup
from mkdocs.config import config_options
from mkdocs.plugins import BasePlugin
from mkdocs.structure.pages import Page

class OutputAsInputPlugin(B, a, s, e, P, l, u, g, i, n):
    """MkDocs plugin that captures HTML output and creates cousin Markdown files."""
    def __init__((self)) -> None:
        """Initialize the plugin."""
    def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
        """Store site and docs directories and validate configuration."""
    def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
        """Capture source Markdown content and frontmatter."""
    def on_post_build((self, config: dict[str, Any])) -> None:
        """After build, process all HTML files and create cousin Markdowns."""
    def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
        """Process a single file: extract HTML and create cousin Markdown."""

def __init__((self)) -> None:
    """Initialize the plugin."""

def on_config((self, config: dict[str, Any])) -> dict[str, Any]:
    """Store site and docs directories and validate configuration."""

def on_page_read_source((self, page: Page, config: dict[str, Any])) -> Optional[str]:
    """Capture source Markdown content and frontmatter."""

def on_post_build((self, config: dict[str, Any])) -> None:
    """After build, process all HTML files and create cousin Markdowns."""

def _process_file((self, src_path: str, file_info: dict[str, Any], stage_dir: Path)) -> None:
    """Process a single file: extract HTML and create cousin Markdown."""


<document index="20">
<source>stage/README.md</source>
<document_content>
---
author: Vexy
code_count: 17
date: 2025-01-14
description: A plugin that captures HTML output and creates cousin Markdown files
has_code: true
pipeline_version: '1.0'
processed: true
source: mkdocs-output-as-input
tags:
- mkdocs
- plugin
- documentation
- pipeline
title: MkDocs Output as Input Plugin
version: 1.0.0
---


<div class="md-content__inner md-typeset">
<h1 class="custom-heading" id="vexy-mkdocs-output-as-input">vexy-mkdocs-output-as-input<a class="headerlink" href="#vexy-mkdocs-output-as-input" title="Permanent link">¶</a></h1>
<p><a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="PyPI version" src="https://badge.fury.io/py/vexy-mkdocs-output-as-input.svg"/></a>
<a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/actions/workflows/ci.yml"><img alt="CI" src="https://github.com/vexyart/vexy-mkdocs-output-as-input/workflows/CI/badge.svg"/></a>
<a href="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input"><img alt="codecov" src="https://codecov.io/gh/vexyart/vexy-mkdocs-output-as-input/branch/main/graph/badge.svg"/></a>
<a href="https://opensource.org/licenses/MIT"><img alt="License: MIT" src="https://img.shields.io/badge/License-MIT-yellow.svg"/></a>
<a href="https://pypi.org/project/vexy-mkdocs-output-as-input/"><img alt="Python versions" src="https://img.shields.io/pypi/pyversions/vexy-mkdocs-output-as-input.svg"/></a></p>
<p>A MkDocs plugin that captures HTML output and creates "cousin" Markdown files with original frontmatter and extracted HTML content.</p>
<h2 class="custom-heading" id="features">Features<a class="headerlink" href="#features" title="Permanent link">¶</a></h2>
<p>This plugin enables powerful post-processing workflows by:</p>
<ol>
<li>✅ Preserving your original Markdown structure and frontmatter</li>
<li>✅ Capturing the fully-rendered HTML output from MkDocs</li>
<li>✅ Creating new Markdown files that combine original metadata with processed HTML</li>
<li>✅ Enabling further processing by other static site generators</li>
</ol>
<h2 class="custom-heading" id="installation">Installation<a class="headerlink" href="#installation" title="Permanent link">¶</a></h2>
<p>Install from PyPI:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-0-1" id="__codelineno-0-1" name="__codelineno-0-1"></a>uv<span class="w"> </span>pip<span class="w"> </span>install<span class="w"> </span>--system<span class="w"> </span>--upgrade<span class="w"> </span>vexy-mkdocs-output-as-input
</code></pre></div>
<p>Or install from source:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-1-1" id="__codelineno-1-1" name="__codelineno-1-1"></a>pip<span class="w"> </span>install<span class="w"> </span>git+https://github.com/vexyart/vexy-mkdocs-output-as-input
</code></pre></div>
<h2 class="custom-heading" id="quick-start">Quick Start<a class="headerlink" href="#quick-start" title="Permanent link">¶</a></h2>
<p>Add the plugin to your <code>mkdocs.yml</code>:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-2-1" id="__codelineno-2-1" name="__codelineno-2-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-2-2" id="__codelineno-2-2" name="__codelineno-2-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span><span class="w">  </span><span class="c1"># Other plugins</span>
<a href="#__codelineno-2-3" id="__codelineno-2-3" name="__codelineno-2-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<p>Build your site:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-3-1" id="__codelineno-3-1" name="__codelineno-3-1"></a>mkdocs<span class="w"> </span>build
</code></pre></div>
<p>Find your processed files in the <code>stage/</code> directory (relative to your MkDocs project root).</p>
<h2 class="custom-heading" id="configuration">Configuration<a class="headerlink" href="#configuration" title="Permanent link">¶</a></h2>
<p>All configuration options with their defaults:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-4-1" id="__codelineno-4-1" name="__codelineno-4-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-4-2" id="__codelineno-4-2" name="__codelineno-4-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-4-3" id="__codelineno-4-3" name="__codelineno-4-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">stage</span><span class="w">          </span><span class="c1"># Output directory name (default: 'stage')</span>
<a href="#__codelineno-4-4" id="__codelineno-4-4" name="__codelineno-4-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span><span class="w">        </span><span class="c1"># HTML element to extract (default: 'main')</span>
<a href="#__codelineno-4-5" id="__codelineno-4-5" name="__codelineno-4-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span><span class="w">       </span><span class="c1"># Tag to use in output (default: 'article')</span>
<a href="#__codelineno-4-6" id="__codelineno-4-6" name="__codelineno-4-6"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">false</span><span class="w">            </span><span class="c1"># Enable verbose logging (default: false)</span>
</code></pre></div>
<h3 class="custom-heading" id="options-explained">Options Explained<a class="headerlink" href="#options-explained" title="Permanent link">¶</a></h3>
<table>
<thead>
<tr>
<th>Option</th>
<th>Type</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>stage_dir</code></td>
<td>string</td>
<td><code>"stage"</code></td>
<td>Directory name for output files (relative to project root)</td>
</tr>
<tr>
<td><code>html_element</code></td>
<td>string</td>
<td><code>"main"</code></td>
<td>CSS selector for the HTML element to extract</td>
</tr>
<tr>
<td><code>target_tag</code></td>
<td>string</td>
<td><code>"article"</code></td>
<td>HTML tag to use in the output (replaces extracted element's tag)</td>
</tr>
<tr>
<td><code>verbose</code></td>
<td>boolean</td>
<td><code>false</code></td>
<td>Enable detailed logging for debugging</td>
</tr>
</tbody>
</table>
<h2 class="custom-heading" id="how-it-works">How It Works<a class="headerlink" href="#how-it-works" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="input-process-output">Input → Process → Output<a class="headerlink" href="#input-process-output" title="Permanent link">¶</a></h3>
<ol>
<li>
<p><strong>Input</strong>: Your source Markdown with frontmatter
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-5-1" id="__codelineno-5-1" name="__codelineno-5-1"></a>---
<a href="#__codelineno-5-2" id="__codelineno-5-2" name="__codelineno-5-2"></a>title: My Page
<a href="#__codelineno-5-3" id="__codelineno-5-3" name="__codelineno-5-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-5-4" id="__codelineno-5-4" name="__codelineno-5-4"></a><span class="gu">---</span>
<a href="#__codelineno-5-5" id="__codelineno-5-5" name="__codelineno-5-5"></a>
<a href="#__codelineno-5-6" id="__codelineno-5-6" name="__codelineno-5-6"></a><span class="gh"># My Page</span>
<a href="#__codelineno-5-7" id="__codelineno-5-7" name="__codelineno-5-7"></a>
<a href="#__codelineno-5-8" id="__codelineno-5-8" name="__codelineno-5-8"></a>This is my content with <span class="gs">**markdown**</span>.
</code></pre></div></p>
</li>
<li>
<p><strong>MkDocs Processing</strong>: Renders to HTML as usual
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-6-1" id="__codelineno-6-1" name="__codelineno-6-1"></a><span class="p">&lt;</span><span class="nt">main</span> <span class="na">class</span><span class="o">=</span><span class="s">"md-content"</span><span class="p">&gt;</span>
<a href="#__codelineno-6-2" id="__codelineno-6-2" name="__codelineno-6-2"></a>  <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>My Page<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<a href="#__codelineno-6-3" id="__codelineno-6-3" name="__codelineno-6-3"></a>  <span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>This is my content with <span class="p">&lt;</span><span class="nt">strong</span><span class="p">&gt;</span>markdown<span class="p">&lt;/</span><span class="nt">strong</span><span class="p">&gt;</span>.<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<a href="#__codelineno-6-4" id="__codelineno-6-4" name="__codelineno-6-4"></a><span class="p">&lt;/</span><span class="nt">main</span><span class="p">&gt;</span>
</code></pre></div></p>
</li>
<li>
<p><strong>Output</strong>: Cousin file with preserved frontmatter + extracted HTML
   <div class="highlight"><pre><span></span><code><a href="#__codelineno-7-1" id="__codelineno-7-1" name="__codelineno-7-1"></a>---
<a href="#__codelineno-7-2" id="__codelineno-7-2" name="__codelineno-7-2"></a>title: My Page
<a href="#__codelineno-7-3" id="__codelineno-7-3" name="__codelineno-7-3"></a><span class="gu">author: Jane Doe</span>
<a href="#__codelineno-7-4" id="__codelineno-7-4" name="__codelineno-7-4"></a><span class="gu">---</span>
<a href="#__codelineno-7-5" id="__codelineno-7-5" name="__codelineno-7-5"></a>
<a href="#__codelineno-7-6" id="__codelineno-7-6" name="__codelineno-7-6"></a>&lt;article class="md-content"&gt;
<a href="#__codelineno-7-7" id="__codelineno-7-7" name="__codelineno-7-7"></a>  &lt;h1&gt;My Page&lt;/h1&gt;
<a href="#__codelineno-7-8" id="__codelineno-7-8" name="__codelineno-7-8"></a>  &lt;p&gt;This is my content with &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;
<a href="#__codelineno-7-9" id="__codelineno-7-9" name="__codelineno-7-9"></a>&lt;/article&gt;
</code></pre></div></p>
</li>
</ol>
<h2 class="custom-heading" id="use-cases">Use Cases<a class="headerlink" href="#use-cases" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="multi-stage-documentation-pipeline">🔄 Multi-Stage Documentation Pipeline<a class="headerlink" href="#multi-stage-documentation-pipeline" title="Permanent link">¶</a></h3>
<p>Process documentation through MkDocs first, then feed to another SSG:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-8-1" id="__codelineno-8-1" name="__codelineno-8-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-8-2" id="__codelineno-8-2" name="__codelineno-8-2"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-8-3" id="__codelineno-8-3" name="__codelineno-8-3"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-8-4" id="__codelineno-8-4" name="__codelineno-8-4"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">hugo/content</span>
<a href="#__codelineno-8-5" id="__codelineno-8-5" name="__codelineno-8-5"></a>
<a href="#__codelineno-8-6" id="__codelineno-8-6" name="__codelineno-8-6"></a><span class="c1"># Then run:</span>
<a href="#__codelineno-8-7" id="__codelineno-8-7" name="__codelineno-8-7"></a><span class="c1"># mkdocs build &amp;&amp; hugo build</span>
</code></pre></div>
<h3 class="custom-heading" id="content-extraction">📝 Content Extraction<a class="headerlink" href="#content-extraction" title="Permanent link">¶</a></h3>
<p>Extract just the article content without theme wrapper:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-9-1" id="__codelineno-9-1" name="__codelineno-9-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-9-2" id="__codelineno-9-2" name="__codelineno-9-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-9-3" id="__codelineno-9-3" name="__codelineno-9-3"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article</span>
<a href="#__codelineno-9-4" id="__codelineno-9-4" name="__codelineno-9-4"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">div</span>
</code></pre></div>
<h3 class="custom-heading" id="custom-post-processing">🎨 Custom Post-Processing<a class="headerlink" href="#custom-post-processing" title="Permanent link">¶</a></h3>
<p>Preserve MkDocs rendering while preparing for custom templates:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-10-1" id="__codelineno-10-1" name="__codelineno-10-1"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-10-2" id="__codelineno-10-2" name="__codelineno-10-2"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-10-3" id="__codelineno-10-3" name="__codelineno-10-3"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">_includes</span>
<a href="#__codelineno-10-4" id="__codelineno-10-4" name="__codelineno-10-4"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-10-5" id="__codelineno-10-5" name="__codelineno-10-5"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">section</span>
</code></pre></div>
<h2 class="custom-heading" id="examples">Examples<a class="headerlink" href="#examples" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="basic-example">Basic Example<a class="headerlink" href="#basic-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-11-1" id="__codelineno-11-1" name="__codelineno-11-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-11-2" id="__codelineno-11-2" name="__codelineno-11-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-11-3" id="__codelineno-11-3" name="__codelineno-11-3"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-11-4" id="__codelineno-11-4" name="__codelineno-11-4"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">output-as-input</span>
</code></pre></div>
<h3 class="custom-heading" id="advanced-example">Advanced Example<a class="headerlink" href="#advanced-example" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-12-1" id="__codelineno-12-1" name="__codelineno-12-1"></a><span class="c1"># mkdocs.yml</span>
<a href="#__codelineno-12-2" id="__codelineno-12-2" name="__codelineno-12-2"></a><span class="nt">site_name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">My Documentation</span>
<a href="#__codelineno-12-3" id="__codelineno-12-3" name="__codelineno-12-3"></a><span class="nt">theme</span><span class="p">:</span>
<a href="#__codelineno-12-4" id="__codelineno-12-4" name="__codelineno-12-4"></a><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">material</span>
<a href="#__codelineno-12-5" id="__codelineno-12-5" name="__codelineno-12-5"></a>
<a href="#__codelineno-12-6" id="__codelineno-12-6" name="__codelineno-12-6"></a><span class="nt">plugins</span><span class="p">:</span>
<a href="#__codelineno-12-7" id="__codelineno-12-7" name="__codelineno-12-7"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">search</span>
<a href="#__codelineno-12-8" id="__codelineno-12-8" name="__codelineno-12-8"></a><span class="w">  </span><span class="p p-Indicator">-</span><span class="w"> </span><span class="nt">output-as-input</span><span class="p">:</span>
<a href="#__codelineno-12-9" id="__codelineno-12-9" name="__codelineno-12-9"></a><span class="w">      </span><span class="nt">stage_dir</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">processed</span>
<a href="#__codelineno-12-10" id="__codelineno-12-10" name="__codelineno-12-10"></a><span class="w">      </span><span class="nt">html_element</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">article.md-content__inner</span>
<a href="#__codelineno-12-11" id="__codelineno-12-11" name="__codelineno-12-11"></a><span class="w">      </span><span class="nt">target_tag</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">main</span>
<a href="#__codelineno-12-12" id="__codelineno-12-12" name="__codelineno-12-12"></a><span class="w">      </span><span class="nt">verbose</span><span class="p">:</span><span class="w"> </span><span class="l l-Scalar l-Scalar-Plain">true</span>
<a href="#__codelineno-12-13" id="__codelineno-12-13" name="__codelineno-12-13"></a>
<a href="#__codelineno-12-14" id="__codelineno-12-14" name="__codelineno-12-14"></a><span class="c1"># Process specific content area from Material theme</span>
</code></pre></div>
<h3 class="custom-heading" id="integration-example">Integration Example<a class="headerlink" href="#integration-example" title="Permanent link">¶</a></h3>
<p>Using with other tools in a documentation pipeline:</p>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-13-1" id="__codelineno-13-1" name="__codelineno-13-1"></a><span class="ch">#!/bin/bash</span>
<a href="#__codelineno-13-2" id="__codelineno-13-2" name="__codelineno-13-2"></a><span class="c1"># build.sh</span>
<a href="#__codelineno-13-3" id="__codelineno-13-3" name="__codelineno-13-3"></a>
<a href="#__codelineno-13-4" id="__codelineno-13-4" name="__codelineno-13-4"></a><span class="c1"># Stage 1: Build with MkDocs + plugins</span>
<a href="#__codelineno-13-5" id="__codelineno-13-5" name="__codelineno-13-5"></a>mkdocs<span class="w"> </span>build
<a href="#__codelineno-13-6" id="__codelineno-13-6" name="__codelineno-13-6"></a>
<a href="#__codelineno-13-7" id="__codelineno-13-7" name="__codelineno-13-7"></a><span class="c1"># Stage 2: Process staged output</span>
<a href="#__codelineno-13-8" id="__codelineno-13-8" name="__codelineno-13-8"></a>python<span class="w"> </span>post_process.py<span class="w"> </span>stage/
<a href="#__codelineno-13-9" id="__codelineno-13-9" name="__codelineno-13-9"></a>
<a href="#__codelineno-13-10" id="__codelineno-13-10" name="__codelineno-13-10"></a><span class="c1"># Stage 3: Build final site</span>
<a href="#__codelineno-13-11" id="__codelineno-13-11" name="__codelineno-13-11"></a>hugo<span class="w"> </span>--contentDir<span class="o">=</span>stage/
</code></pre></div>
<h2 class="custom-heading" id="development">Development<a class="headerlink" href="#development" title="Permanent link">¶</a></h2>
<h3 class="custom-heading" id="setup-development-environment">Setup Development Environment<a class="headerlink" href="#setup-development-environment" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-14-1" id="__codelineno-14-1" name="__codelineno-14-1"></a><span class="c1"># Clone the repository</span>
<a href="#__codelineno-14-2" id="__codelineno-14-2" name="__codelineno-14-2"></a>git<span class="w"> </span>clone<span class="w"> </span>https://github.com/vexyart/vexy-mkdocs-output-as-input
<a href="#__codelineno-14-3" id="__codelineno-14-3" name="__codelineno-14-3"></a><span class="nb">cd</span><span class="w"> </span>vexy-mkdocs-output-as-input
<a href="#__codelineno-14-4" id="__codelineno-14-4" name="__codelineno-14-4"></a>
<a href="#__codelineno-14-5" id="__codelineno-14-5" name="__codelineno-14-5"></a><span class="c1"># Create virtual environment</span>
<a href="#__codelineno-14-6" id="__codelineno-14-6" name="__codelineno-14-6"></a>python<span class="w"> </span>-m<span class="w"> </span>venv<span class="w"> </span>venv
<a href="#__codelineno-14-7" id="__codelineno-14-7" name="__codelineno-14-7"></a><span class="nb">source</span><span class="w"> </span>venv/bin/activate<span class="w">  </span><span class="c1"># On Windows: venv\Scripts\activate</span>
<a href="#__codelineno-14-8" id="__codelineno-14-8" name="__codelineno-14-8"></a>
<a href="#__codelineno-14-9" id="__codelineno-14-9" name="__codelineno-14-9"></a><span class="c1"># Install in development mode</span>
<a href="#__codelineno-14-10" id="__codelineno-14-10" name="__codelineno-14-10"></a>pip<span class="w"> </span>install<span class="w"> </span>-e<span class="w"> </span>.<span class="o">[</span>dev<span class="o">]</span>
<a href="#__codelineno-14-11" id="__codelineno-14-11" name="__codelineno-14-11"></a>
<a href="#__codelineno-14-12" id="__codelineno-14-12" name="__codelineno-14-12"></a><span class="c1"># Install pre-commit hooks</span>
<a href="#__codelineno-14-13" id="__codelineno-14-13" name="__codelineno-14-13"></a>pre-commit<span class="w"> </span>install
</code></pre></div>
<h3 class="custom-heading" id="running-tests">Running Tests<a class="headerlink" href="#running-tests" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-15-1" id="__codelineno-15-1" name="__codelineno-15-1"></a><span class="c1"># Run all tests</span>
<a href="#__codelineno-15-2" id="__codelineno-15-2" name="__codelineno-15-2"></a>pytest
<a href="#__codelineno-15-3" id="__codelineno-15-3" name="__codelineno-15-3"></a>
<a href="#__codelineno-15-4" id="__codelineno-15-4" name="__codelineno-15-4"></a><span class="c1"># Run with coverage</span>
<a href="#__codelineno-15-5" id="__codelineno-15-5" name="__codelineno-15-5"></a>pytest<span class="w"> </span>--cov<span class="o">=</span>mkdocs_output_as_input<span class="w"> </span>--cov-report<span class="o">=</span>html
<a href="#__codelineno-15-6" id="__codelineno-15-6" name="__codelineno-15-6"></a>
<a href="#__codelineno-15-7" id="__codelineno-15-7" name="__codelineno-15-7"></a><span class="c1"># Run specific test</span>
<a href="#__codelineno-15-8" id="__codelineno-15-8" name="__codelineno-15-8"></a>pytest<span class="w"> </span>tests/test_plugin.py::TestOutputAsInputPlugin::test_default_config
</code></pre></div>
<h3 class="custom-heading" id="code-quality">Code Quality<a class="headerlink" href="#code-quality" title="Permanent link">¶</a></h3>
<div class="highlight"><pre><span></span><code><a href="#__codelineno-16-1" id="__codelineno-16-1" name="__codelineno-16-1"></a><span class="c1"># Format code</span>
<a href="#__codelineno-16-2" id="__codelineno-16-2" name="__codelineno-16-2"></a>black<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-3" id="__codelineno-16-3" name="__codelineno-16-3"></a>
<a href="#__codelineno-16-4" id="__codelineno-16-4" name="__codelineno-16-4"></a><span class="c1"># Lint code</span>
<a href="#__codelineno-16-5" id="__codelineno-16-5" name="__codelineno-16-5"></a>ruff<span class="w"> </span>check<span class="w"> </span>src<span class="w"> </span>tests
<a href="#__codelineno-16-6" id="__codelineno-16-6" name="__codelineno-16-6"></a>
<a href="#__codelineno-16-7" id="__codelineno-16-7" name="__codelineno-16-7"></a><span class="c1"># Type check</span>
<a href="#__codelineno-16-8" id="__codelineno-16-8" name="__codelineno-16-8"></a>mypy<span class="w"> </span>src
</code></pre></div>
<h2 class="custom-heading" id="contributing">Contributing<a class="headerlink" href="#contributing" title="Permanent link">¶</a></h2>
<p>Contributions are welcome! Please feel free to submit a Pull Request. For major changes, please open an issue first to discuss what you would like to change.</p>
<ol>
<li>Fork the repository</li>
<li>Create your feature branch (<code>git checkout -b feature/AmazingFeature</code>)</li>
<li>Commit your changes (<code>git commit -m 'Add some AmazingFeature'</code>)</li>
<li>Push to the branch (<code>git push origin feature/AmazingFeature</code>)</li>
<li>Open a Pull Request</li>
</ol>
<h2 class="custom-heading" id="license">License<a class="headerlink" href="#license" title="Permanent link">¶</a></h2>
<p>This project is licensed under the MIT License - see the <a href="LICENSE">LICENSE</a> file for details.</p>
<h2 class="custom-heading" id="support">Support<a class="headerlink" href="#support" title="Permanent link">¶</a></h2>
<ul>
<li>📧 Email: you@example.com</li>
<li>🐛 Issues: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/issues">GitHub Issues</a></li>
<li>💬 Discussions: <a href="https://github.com/vexyart/vexy-mkdocs-output-as-input/discussions">GitHub Discussions</a></li>
</ul>
</div>

</document_content>
</document>

# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/tests/test_cli.py
# Language: python

import tempfile
from pathlib import Path
from unittest.mock import patch
import pytest
from mkdocs_output_as_input.cli import (
    extract_frontmatter,
    main,
    process_file,
    process_html,
)

class TestCLI:
    """Test cases for CLI functionality."""
    def test_extract_frontmatter_with_frontmatter((self)):
        """Test extracting YAML frontmatter from content."""
    def test_extract_frontmatter_without_frontmatter((self)):
        """Test extracting from content without frontmatter."""
    def test_extract_frontmatter_invalid_yaml((self)):
        """Test handling invalid YAML frontmatter."""
    def test_process_html_basic((self)):
        """Test basic HTML processing."""
    def test_process_html_custom_element_and_tag((self)):
        """Test processing with custom element and tag."""
    def test_process_html_element_not_found((self)):
        """Test handling when element not found."""
    def test_process_html_preserve_links((self)):
        """Test preserving relative links."""
    def test_process_html_minify((self)):
        """Test HTML minification."""
    def test_process_html_prettify((self)):
        """Test HTML prettification."""
    def test_process_file_basic((self, tmp_path)):
        """Test basic file processing."""
    def test_process_file_with_frontmatter((self, tmp_path)):
        """Test processing with frontmatter from corresponding .md file."""
    def test_process_file_no_frontmatter((self, tmp_path)):
        """Test processing without frontmatter."""
    def test_process_file_creates_output_dir((self, tmp_path)):
        """Test that output directory is created if needed."""
    def test_cli_process_command((self, tmp_path)):
        """Test CLI process command."""
    def test_cli_custom_options((self, tmp_path)):
        """Test CLI with custom options."""
    def test_cli_mutually_exclusive_options((self, tmp_path)):
        """Test that minify and prettify are mutually exclusive."""
    def test_cli_no_command((self)):
        """Test CLI with no command shows help."""
    def test_cli_file_not_found((self, tmp_path)):
        """Test CLI with non-existent input file."""

def test_extract_frontmatter_with_frontmatter((self)):
    """Test extracting YAML frontmatter from content."""

def test_extract_frontmatter_without_frontmatter((self)):
    """Test extracting from content without frontmatter."""

def test_extract_frontmatter_invalid_yaml((self)):
    """Test handling invalid YAML frontmatter."""

def test_process_html_basic((self)):
    """Test basic HTML processing."""

def test_process_html_custom_element_and_tag((self)):
    """Test processing with custom element and tag."""

def test_process_html_element_not_found((self)):
    """Test handling when element not found."""

def test_process_html_preserve_links((self)):
    """Test preserving relative links."""

def test_process_html_minify((self)):
    """Test HTML minification."""

def test_process_html_prettify((self)):
    """Test HTML prettification."""

def test_process_file_basic((self, tmp_path)):
    """Test basic file processing."""

def test_process_file_with_frontmatter((self, tmp_path)):
    """Test processing with frontmatter from corresponding .md file."""

def test_process_file_no_frontmatter((self, tmp_path)):
    """Test processing without frontmatter."""

def test_process_file_creates_output_dir((self, tmp_path)):
    """Test that output directory is created if needed."""

def test_cli_process_command((self, tmp_path)):
    """Test CLI process command."""

def test_cli_custom_options((self, tmp_path)):
    """Test CLI with custom options."""

def test_cli_mutually_exclusive_options((self, tmp_path)):
    """Test that minify and prettify are mutually exclusive."""

def test_cli_no_command((self)):
    """Test CLI with no command shows help."""

def test_cli_file_not_found((self, tmp_path)):
    """Test CLI with non-existent input file."""


# File: /Users/adam/Developer/vcs/github.vexyart/vexy-mkdocs-output-as-input/tests/test_plugin.py
# Language: python

import tempfile
from pathlib import Path
from unittest.mock import Mock
import pytest
from mkdocs_output_as_input.plugin import OutputAsInputPlugin

class TestOutputAsInputPlugin:
    """Test cases for OutputAsInputPlugin."""
    def test_default_config((self, plugin)):
        """Test plugin with default configuration."""
    def test_on_config_stores_paths((self, plugin, mkdocs_config)):
        """Test that on_config stores site and docs directories."""
    def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing source content and frontmatter."""
    def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test capturing content without frontmatter."""
    def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
        """Test creating cousin files after build."""
    def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
        """Test handling missing HTML output."""
    def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
        """Test handling HTML without target element."""
    def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
        """Test with custom configuration options."""
    def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
        """Test handling invalid YAML frontmatter."""
    def test_file_read_error((self, plugin, mkdocs_config)):
        """Test handling file read errors."""
    def test_on_post_build_no_docs_dir((self, plugin)):
        """Test handling when docs_dir is None."""
    def test_process_file_no_site_dir((self, plugin, temp_dir)):
        """Test handling when site_dir is None."""
    def test_include_frontmatter_option((self, plugin, mkdocs_config, temp_dir)):
        """Test include_frontmatter configuration option."""
    def test_preserve_links_option((self, plugin, mkdocs_config, temp_dir)):
        """Test preserve_links configuration option."""
    def test_multiple_selectors((self, plugin, mkdocs_config, temp_dir)):
        """Test extraction of multiple selectors."""
    def test_css_selectors((self, plugin, mkdocs_config, temp_dir)):
        """Test CSS selector support."""
    def test_minify_option((self, plugin, mkdocs_config, temp_dir)):
        """Test minify option."""
    def test_prettify_option((self, plugin, mkdocs_config, temp_dir)):
        """Test prettify option."""
    def test_mutually_exclusive_options((self, plugin, mkdocs_config)):
        """Test that minify and prettify are mutually exclusive."""

def plugin((self)):
    """Create a plugin instance."""

def temp_dir((self)):
    """Create a temporary directory."""

def mkdocs_config((self, temp_dir)):
    """Create a mock MkDocs config."""

def test_default_config((self, plugin)):
    """Test plugin with default configuration."""

def test_on_config_stores_paths((self, plugin, mkdocs_config)):
    """Test that on_config stores site and docs directories."""

def test_on_page_read_source_captures_content((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing source content and frontmatter."""

def test_on_page_read_source_no_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test capturing content without frontmatter."""

def test_on_post_build_creates_cousin_files((self, plugin, mkdocs_config, temp_dir)):
    """Test creating cousin files after build."""

def test_on_post_build_missing_html((self, plugin, mkdocs_config, temp_dir)):
    """Test handling missing HTML output."""

def test_on_post_build_missing_element((self, plugin, mkdocs_config, temp_dir)):
    """Test handling HTML without target element."""

def test_custom_config_options((self, plugin, mkdocs_config, temp_dir)):
    """Test with custom configuration options."""

def test_invalid_yaml_frontmatter((self, plugin, mkdocs_config, temp_dir)):
    """Test handling invalid YAML frontmatter."""

def test_file_read_error((self, plugin, mkdocs_config)):
    """Test handling file read errors."""

def test_on_post_build_no_docs_dir((self, plugin)):
    """Test handling when docs_dir is None."""

def test_process_file_no_site_dir((self, plugin, temp_dir)):
    """Test handling when site_dir is None."""

def test_include_frontmatter_option((self, plugin, mkdocs_config, temp_dir)):
    """Test include_frontmatter configuration option."""

def test_preserve_links_option((self, plugin, mkdocs_config, temp_dir)):
    """Test preserve_links configuration option."""

def test_multiple_selectors((self, plugin, mkdocs_config, temp_dir)):
    """Test extraction of multiple selectors."""

def test_css_selectors((self, plugin, mkdocs_config, temp_dir)):
    """Test CSS selector support."""

def test_minify_option((self, plugin, mkdocs_config, temp_dir)):
    """Test minify option."""

def test_prettify_option((self, plugin, mkdocs_config, temp_dir)):
    """Test prettify option."""

def test_mutually_exclusive_options((self, plugin, mkdocs_config)):
    """Test that minify and prettify are mutually exclusive."""


</documents>